package com.neurix.hris.transaksi.payroll.bo.impl;

import com.neurix.akuntansi.master.mappingJurnal.dao.MappingJurnalDao;
import com.neurix.akuntansi.master.mappingJurnal.model.ImMappingJurnalEntity;
import com.neurix.akuntansi.transaksi.billingSystem.bo.BillingSystemBo;
import com.neurix.akuntansi.transaksi.billingSystem.bo.impl.BillingSystemBoImpl;
import com.neurix.akuntansi.transaksi.billingSystem.model.MappingDetail;
import com.neurix.akuntansi.transaksi.jurnal.model.ItJurnalEntity;
import com.neurix.authorization.company.dao.BranchDao;
import com.neurix.authorization.company.dao.CompanyDao;
import com.neurix.authorization.company.model.ImBranches;
import com.neurix.authorization.company.model.ImCompany;
import com.neurix.common.constant.CommonConstant;
import com.neurix.common.exception.GeneralBOException;
import com.neurix.common.exception.GenerateBoLog;
import com.neurix.common.util.CommonUtil;
import com.neurix.hris.master.mappingpersengaji.dao.MappingPersenGajiDao;
import com.neurix.hris.master.mappingpersengaji.model.ImHrisMappingPersenGaji;
import com.neurix.hris.master.mappingpersengaji.model.MappingPersenGaji;
import com.neurix.hris.transaksi.absensi.dao.AbsensiPegawaiDao;
import com.neurix.hris.transaksi.absensi.model.AbsensiPegawai;
import com.neurix.hris.transaksi.absensi.model.AbsensiPegawaiEntity;
import com.neurix.hris.transaksi.payroll.bo.PayrollBo;
import com.neurix.hris.transaksi.payroll.dao.*;
import com.neurix.hris.transaksi.payroll.model.*;
import org.apache.log4j.Logger;
import org.hibernate.HibernateException;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.*;
import java.util.stream.Collectors;

/**
 * Created by IntelliJ IDEA.
 * User: gondok
 * Updated by Ferdi, 01-12-2020
 * Date: 06/09/17
 * Time: 13:55
 * To change this template use File | Settings | File Templates.
 */
//public class PayrollBoImpl extends ModulePayroll implements PayrollBo {
public class PayrollBoImpl extends BillingSystemBoImpl implements PayrollBo {

    protected static transient Logger logger = Logger.getLogger(PayrollBoImpl.class);
    private PayrollHeaderDao payrollHeaderDao;
    private PayrollDao payrollDao;
    private PayrollPphDao payrollPphDao;
    private MappingPersenGajiDao mappingPersenGajiDao;
    private BranchDao branchDao;
    private CompanyDao companyDao;
    private AbsensiPegawaiDao absensiPegawaiDao;

    private MappingJurnalDao mappingJurnalDao;

    @Override
    public void setMappingJurnalDao(MappingJurnalDao mappingJurnalDao) {
        this.mappingJurnalDao = mappingJurnalDao;
    }

    //updated by ferdi, 01-12-2020
    private PayrollTempDao payrollTempDao;
    private PayrollPphTempDao payrollPphTempDao;

//    private BillingSystemBo billingSystemBoProxy;
//
//    public void setBillingSystemBoProxy(BillingSystemBo billingSystemBoProxy) {
//        this.billingSystemBoProxy = billingSystemBoProxy;
//    }

    public void setPayrollPphDao(PayrollPphDao payrollPphDao) {
        this.payrollPphDao = payrollPphDao;
    }

    public void setPayrollHeaderDao(PayrollHeaderDao payrollHeaderDao) {
        this.payrollHeaderDao = payrollHeaderDao;
    }

    public void setMappingPersenGajiDao(MappingPersenGajiDao mappingPersenGajiDao) {
        this.mappingPersenGajiDao = mappingPersenGajiDao;
    }

    public void setAbsensiPegawaiDao(AbsensiPegawaiDao absensiPegawaiDao) {
        this.absensiPegawaiDao = absensiPegawaiDao;
    }

    public void setCompanyDao(CompanyDao companyDao) {
        this.companyDao = companyDao;
    }
    public void setBranchDao(BranchDao branchDao) {
        this.branchDao = branchDao;
    }
    public void setPayrollDao(PayrollDao payrollDao) {
        this.payrollDao = payrollDao;
    }

    public void setPayrollTempDao(PayrollTempDao payrollTempDao) {
        this.payrollTempDao = payrollTempDao;
    }

    public void setPayrollPphTempDao(PayrollPphTempDao payrollPphTempDao) {
        this.payrollPphTempDao = payrollPphTempDao;
    }

    //updated by ferdi, 01-12-2020, to get payrollId
    @Override
    public ItHrisPayrollEntity getPayrollById(String payrollId) throws GeneralBOException {

        logger.info("[PayrollBoImpl.getPayrollById] start process >>>");

        ItHrisPayrollEntity result = new ItHrisPayrollEntity();
        try {
            // Get data from database by ID
            result = payrollDao.getById("payrollId",payrollId);
        } catch (HibernateException e) {
            logger.error("[PayrollBoImpl.getPayrollById] Error, " + e.getMessage());
            throw new GeneralBOException("Found problem when searching payroll id, please inform to your admin...," + e.getMessage());
        }

        logger.info("[PayrollBoImpl.getPayrollById] end process <<<");

        return result;
    }

    //updated by ferdi, 01-12-2020, untuk get list of absensi pegawai
    @Override
    public List<AbsensiPegawai> getListAbsensiLembur(PegawaiPayroll bean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.getListAbsensiLembur] start process >>>");

        List<AbsensiPegawai> absensiPegawaiList = new ArrayList();
        List<AbsensiPegawaiEntity> absensiPegawaiEntityList = null;
        BigDecimal biayaLembur = new BigDecimal(0);
        Date tglAwalLembur = null;
        Date tglAkhirLembur = null;
        String sTglAwalLembur = null;
        String sTglAkhirLembur = null;
        ImCompany company = null;

        String nip = bean.getNip();
        String branchId = bean.getBranchId();
        String periodePayroll = bean.getPeriodePayroll();
        String tahunPayroll = bean.getTahunPayroll();

        try {
            company = companyDao.getCompanyInfo("Y");
        } catch (HibernateException e) {
            logger.error("[PayrollBoImpl.getListAbsensiLembur] Error, " + e.getMessage());
            throw new GeneralBOException("[PayrollBoImpl.getListAbsensiLembur] Found problem when get company data, please inform to your admin...," + e.getMessage());
        }

        if (company.getPayrollTanggalLemburAwal() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAwal()) &&
                company.getPayrollTanggalLemburAkhir() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAkhir())) {

            String tanggalLemburAwal = company.getPayrollTanggalLemburAwal();
            String tanggalLemburAkhir = company.getPayrollTanggalLemburAkhir();

            int bulanGaji = Integer.parseInt(periodePayroll);
            int bulanGajiSebelumnya = bulanGaji - 1;

            if (bulanGajiSebelumnya == 0) {

                bulanGajiSebelumnya = 12;
                int tahunGaji = Integer.parseInt(tahunPayroll);
                int tahunGajiSebelumnya = tahunGaji - 1;

                String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                String stThnGajiSebelumnya = String.valueOf(tahunGajiSebelumnya);
                sTglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(stThnGajiSebelumnya);
                sTglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                tglAwalLembur = CommonUtil.convertStringToDate(sTglAwalLembur);
                tglAkhirLembur = CommonUtil.convertStringToDate(sTglAkhirLembur);

            } else {

                String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                sTglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(tahunPayroll);
                sTglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                tglAwalLembur = CommonUtil.convertStringToDate(sTglAwalLembur);
                tglAkhirLembur = CommonUtil.convertStringToDate(sTglAkhirLembur);

            }

        } else {
            logger.error("[PayrollBoImpl.getListAbsensiLembur] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company.");
            throw new GeneralBOException("[PayrollBoImpl.getListAbsensiLembur] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company, please info to your admin...");
        }

        absensiPegawaiEntityList = absensiPegawaiDao.getDataLembur(nip,branchId,tglAwalLembur,tglAkhirLembur);

        if(absensiPegawaiEntityList.size() > 0){
            for(AbsensiPegawaiEntity absensiPegawaiEntity : absensiPegawaiEntityList){
                AbsensiPegawai absensiPegawai = new AbsensiPegawai();
                absensiPegawai.setNip(absensiPegawaiEntity.getNip());
                absensiPegawai.setBranchId(absensiPegawaiEntity.getBranchId());
                absensiPegawai.setTanggal(absensiPegawaiEntity.getTanggal());
                absensiPegawai.setStTanggal(CommonUtil.simpleDateFormat(absensiPegawaiEntity.getTanggal()));
                absensiPegawai.setJamMasuk(absensiPegawaiEntity.getJamMasuk());
                absensiPegawai.setJamKeluar(absensiPegawaiEntity.getJamKeluar());
                absensiPegawai.setLamaLembur(absensiPegawaiEntity.getLamaLembur());
                absensiPegawai.setJamLembur(absensiPegawaiEntity.getJamLembur());
                absensiPegawai.setBiayaLembur(absensiPegawaiEntity.getBiayaLembur());
                absensiPegawai.setStBiayaLembur(CommonUtil.numbericFormat(BigDecimal.valueOf(absensiPegawaiEntity.getBiayaLembur()), "###,###"));
                biayaLembur = biayaLembur.add(BigDecimal.valueOf(absensiPegawaiEntity.getBiayaLembur()));
                absensiPegawai.setJumlahLembur(CommonUtil.numbericFormat(biayaLembur, "###,###"));
                absensiPegawaiList.add(absensiPegawai);
            }
        }

        logger.info("[PayrollBoImpl.getListAbsensiLembur] end process <<<");

        return absensiPegawaiList;
    }

    //updated by ferdi, 01-12-2020, untuk copy data dari pagawai payroll ke it payroll temp
    private ItHrisPayrollTempEntity copyDataInitialPegawaiPayrollToPayrollTemp(PegawaiPayroll pegawaiPayroll, String createdWho, String periodePayroll, String tahunPayroll, String action) throws GeneralBOException {

        logger.info("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] start process >>>");

        ItHrisPayrollTempEntity itHrisPayrollTempEntity = new ItHrisPayrollTempEntity();
        String idPayrollTemp = null;

        if ("C".equalsIgnoreCase(action)) { //jika create

            try {
                idPayrollTemp = payrollTempDao.getNextPayrollTempId(periodePayroll, tahunPayroll);
                itHrisPayrollTempEntity.setPayrollTempId(idPayrollTemp);

                pegawaiPayroll.setPayrollId(idPayrollTemp);

            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Found problem when get sequence payroll temp, please inform to your admin...," + e.getMessage());
            }

        } else { //jika update

            String tipePayroll = pegawaiPayroll.getTipePayroll();
            String branchId = pegawaiPayroll.getBranchId();
            String nip = pegawaiPayroll.getNip();

            Map hsCriteria = new HashMap<>();
            hsCriteria.put("bulan", periodePayroll);
            hsCriteria.put("tahun", tahunPayroll);
            hsCriteria.put("tipe_payroll", tipePayroll);
            hsCriteria.put("branch_id", branchId);
            hsCriteria.put("nip", nip);
            List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

            try {
                payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
            }

            if (!payrollTempEntityList.isEmpty()) {

                itHrisPayrollTempEntity = payrollTempEntityList.get(0);

            } else {

                logger.error("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Tidak Ditemukan nip pada periode-tahun gaji yang masih dalam proses.");
                throw new GeneralBOException("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Tidak Ditemukan nip pada periode-tahun gaji yang masih dalam proses., please info to your admin...");

            }

        }

        itHrisPayrollTempEntity.setTipePayroll(pegawaiPayroll.getTipePayroll());
        itHrisPayrollTempEntity.setBulan(pegawaiPayroll.getPeriodePayroll());
        itHrisPayrollTempEntity.setTahun(pegawaiPayroll.getTahunPayroll());
        itHrisPayrollTempEntity.setTahunSkalaGaji(pegawaiPayroll.getTahunSkalaGaji());
        itHrisPayrollTempEntity.setTanggalAwalLembur(pegawaiPayroll.getTanggalAwalLembur());
        itHrisPayrollTempEntity.setTanggalAkhirLembur(pegawaiPayroll.getTanggalAkhirLembur());

        itHrisPayrollTempEntity.setNip(pegawaiPayroll.getNip());
        itHrisPayrollTempEntity.setNipLama(pegawaiPayroll.getNipLama());
        itHrisPayrollTempEntity.setGelar(pegawaiPayroll.getGelar());
        itHrisPayrollTempEntity.setNamaPegawai(pegawaiPayroll.getNamaPegawai());
        itHrisPayrollTempEntity.setBranchId(pegawaiPayroll.getBranchId());
        itHrisPayrollTempEntity.setBranchName(pegawaiPayroll.getBranchName());
        itHrisPayrollTempEntity.setDepartmentId(pegawaiPayroll.getDivisiId());
        itHrisPayrollTempEntity.setDepartmentName(pegawaiPayroll.getDivisiName());
        itHrisPayrollTempEntity.setSubDivisi(pegawaiPayroll.getSubDivisiId());
        itHrisPayrollTempEntity.setSubDivisiName(pegawaiPayroll.getSubDivisiName());
        itHrisPayrollTempEntity.setKelompokPositionId(pegawaiPayroll.getKelompokPosisiId());
        itHrisPayrollTempEntity.setKelompokPositionName(pegawaiPayroll.getKelompokPosisiName());
        itHrisPayrollTempEntity.setGolonganId(pegawaiPayroll.getGolonganId());
        itHrisPayrollTempEntity.setGolonganName(pegawaiPayroll.getGolonganName());

        itHrisPayrollTempEntity.setGolonganDapen(pegawaiPayroll.getGolonganDapen());
        itHrisPayrollTempEntity.setGradeLevel(pegawaiPayroll.getGradeLevel() );

        itHrisPayrollTempEntity.setMasaKerjaGol(pegawaiPayroll.getiMasaKerjaGol());

        itHrisPayrollTempEntity.setTipePegawaiId(pegawaiPayroll.getTipePegawai());
        itHrisPayrollTempEntity.setTipePegawaiName(pegawaiPayroll.getTipePegawaiName());
        itHrisPayrollTempEntity.setStatusPegawaiId(pegawaiPayroll.getStatusPegawai());
        itHrisPayrollTempEntity.setStatusPegawaiName(pegawaiPayroll.getStatusPegawaiName());
        itHrisPayrollTempEntity.setJenisPegawaiId(pegawaiPayroll.getJenisPegawai());
        itHrisPayrollTempEntity.setJenisPegawaiName(pegawaiPayroll.getJenisPegawaiName());

        itHrisPayrollTempEntity.setPositionId(pegawaiPayroll.getPosisiId());
        itHrisPayrollTempEntity.setPositionName(pegawaiPayroll.getPosisiName());
        itHrisPayrollTempEntity.setProfesiId(pegawaiPayroll.getProfesiId());
        itHrisPayrollTempEntity.setProfesiName(pegawaiPayroll.getProfesiName());

        itHrisPayrollTempEntity.setDapenId(pegawaiPayroll.getDanaPensiun());
        itHrisPayrollTempEntity.setDapenName(pegawaiPayroll.getDanaPensiunName());

        itHrisPayrollTempEntity.setPersenDapenKary(pegawaiPayroll.getPersenDapenKaryNilai());
        itHrisPayrollTempEntity.setPersenDapenPers(pegawaiPayroll.getPersenDapenPershNilai());

        itHrisPayrollTempEntity.setGajiPensiun(pegawaiPayroll.getGajiPensiunNilai());
        itHrisPayrollTempEntity.setGajiPokok(pegawaiPayroll.getGajiPokokNilai());
        itHrisPayrollTempEntity.setTunjunganSankhus(pegawaiPayroll.getSantunanKhususNilai());
        itHrisPayrollTempEntity.setTunjanganPerumahan(pegawaiPayroll.getTunjRumahNilai());
        itHrisPayrollTempEntity.setTunjanganListrik(pegawaiPayroll.getTunjListrikNilai());
        itHrisPayrollTempEntity.setTunjanganAir(pegawaiPayroll.getTunjAirNilai());
        itHrisPayrollTempEntity.setTunjanganBbm(pegawaiPayroll.getTunjBbmNilai());
        itHrisPayrollTempEntity.setTunjanganJabatanStruktural(pegawaiPayroll.getTunjJabatanNilai());
        itHrisPayrollTempEntity.setTunjanganStruktural(pegawaiPayroll.getTunjStrukturalNilai());
        itHrisPayrollTempEntity.setTunjanganFungsional(pegawaiPayroll.getTunjFungsionalNilai());
        itHrisPayrollTempEntity.setTunjanganTambahan(pegawaiPayroll.getTunjTambahanNilai());
        itHrisPayrollTempEntity.setGajiPensiun(pegawaiPayroll.getGajiPensiunNilai());
        itHrisPayrollTempEntity.setIuranDapenPers(pegawaiPayroll.getIuranDapenPershNilai());
        itHrisPayrollTempEntity.setIuranDapenKary(pegawaiPayroll.getIuranDapenKaryNilai());

        itHrisPayrollTempEntity.setTunjanganDapen(pegawaiPayroll.getTunjanganDapenNilai());
        itHrisPayrollTempEntity.setTunjanganPph(pegawaiPayroll.getTunjanganPphNilai());
        itHrisPayrollTempEntity.setPphGaji(pegawaiPayroll.getPphGajiNilai());

        itHrisPayrollTempEntity.setPeralihanGapok(pegawaiPayroll.getTunjPeralihanGapokNilai());
        itHrisPayrollTempEntity.setPeralihanSankhus(pegawaiPayroll.getTunjPeralihanSankhusNilai());
        itHrisPayrollTempEntity.setPeralihanTunjangan(pegawaiPayroll.getTunjPeralihanTunjNilai());

        itHrisPayrollTempEntity.setTunjanganKomunikasi(pegawaiPayroll.getTunjKomunikasiNilai());
        itHrisPayrollTempEntity.setTunjanganPemondokan(pegawaiPayroll.getTunjPemondokanNilai());
        itHrisPayrollTempEntity.setTunjanganLembur(pegawaiPayroll.getTunjLemburNilai());
        itHrisPayrollTempEntity.setTunjanganSupervisi(pegawaiPayroll.getTunjSupervisiNilai());
        itHrisPayrollTempEntity.setTunjanganLokal(pegawaiPayroll.getTunjLokalNilai());
        itHrisPayrollTempEntity.setTunjanganSiaga(pegawaiPayroll.getTunjSiagaNilai());

        itHrisPayrollTempEntity.setIuranKopkar(pegawaiPayroll.getKopkarNilai());
        itHrisPayrollTempEntity.setIuranSp(pegawaiPayroll.getIuranSpNilai());
        itHrisPayrollTempEntity.setIuranPiikb(pegawaiPayroll.getIuranPiikbNilai());
        itHrisPayrollTempEntity.setIuranBankMandiri(pegawaiPayroll.getBankMandiriNilai());
        itHrisPayrollTempEntity.setIuranBankBri(pegawaiPayroll.getBankBriNilai());
        itHrisPayrollTempEntity.setIuranInfaq(pegawaiPayroll.getInfaqNilai());
        itHrisPayrollTempEntity.setIuranPerkesDanObat(pegawaiPayroll.getPerkesDanObatNilai());
        itHrisPayrollTempEntity.setIuranListrik(pegawaiPayroll.getListrikNilai());
        itHrisPayrollTempEntity.setIuranProfesi(pegawaiPayroll.getIuranProfesiNilai());
        itHrisPayrollTempEntity.setIuranPotonganLain(pegawaiPayroll.getPotonganLainNilai());
        itHrisPayrollTempEntity.setTotalPotonganLain(pegawaiPayroll.getTotalPotonganLainNilai());

        itHrisPayrollTempEntity.setMinBpjsKs(pegawaiPayroll.getMinBpjsKsNilai());
        itHrisPayrollTempEntity.setMaxBpjsKs(pegawaiPayroll.getMaxBpjsKsNilai());

        itHrisPayrollTempEntity.setPersenBpjsKsKary(pegawaiPayroll.getPersenBpjsKsKaryNilai());
        itHrisPayrollTempEntity.setPersenBpjsKsPers(pegawaiPayroll.getPersenBpjsKsPershNilai());

        itHrisPayrollTempEntity.setMinBpjsTk(pegawaiPayroll.getMinBpjsTkNilai());
        itHrisPayrollTempEntity.setMaxBpjsTk(pegawaiPayroll.getMaxBpjsTkNilai());

        itHrisPayrollTempEntity.setPersenBpjsTkIuranKary(pegawaiPayroll.getPersenBpjsTkIuranKaryNilai());
        itHrisPayrollTempEntity.setPersenBpjsTkJpkKary(pegawaiPayroll.getPersenBpjsTkJpkKaryNilai());

        itHrisPayrollTempEntity.setPersenBpjsTkJkkPers(pegawaiPayroll.getPersenBpjsTkJkkPershNilai());
        itHrisPayrollTempEntity.setPersenBpjsTkJhtPers(pegawaiPayroll.getPersenBpjsTkJhtPershNilai());
        itHrisPayrollTempEntity.setPersenBpjsTkJkmPers(pegawaiPayroll.getPersenBpjsTkJkmPershNilai());
        itHrisPayrollTempEntity.setPersenBpjsTkJpkPers(pegawaiPayroll.getPersenBpjsTkJpkPershNilai());

        itHrisPayrollTempEntity.setStatusKeluarga(pegawaiPayroll.getStatusKeluarga());
        itHrisPayrollTempEntity.setJumlahAnak(pegawaiPayroll.getJumlahAnak());

        itHrisPayrollTempEntity.setJumlahAnakDitanggung(pegawaiPayroll.getJumlahAnakDitanggung());

        itHrisPayrollTempEntity.setNpwp(pegawaiPayroll.getNpwpPegawai());
        itHrisPayrollTempEntity.setNoRekBank(pegawaiPayroll.getNoRekBank());
        itHrisPayrollTempEntity.setNamaBank(pegawaiPayroll.getNamaBank());

        itHrisPayrollTempEntity.setTanggalAktif(pegawaiPayroll.getTanggalAktif());
        itHrisPayrollTempEntity.setTanggalAkhirKontrak(pegawaiPayroll.getTanggalAkhirKontrak());
        itHrisPayrollTempEntity.setTanggalPraPensiun(pegawaiPayroll.getTanggalPraPensiun());
        itHrisPayrollTempEntity.setTanggalPensiun(pegawaiPayroll.getTanggalPensiun());
        itHrisPayrollTempEntity.setTanggalKeluar(pegawaiPayroll.getTanggalKeluar());

        itHrisPayrollTempEntity.setKodering(pegawaiPayroll.getKodering());
        itHrisPayrollTempEntity.setGender(pegawaiPayroll.getGender());

        itHrisPayrollTempEntity.setUmr(pegawaiPayroll.getUmrNilai());
        itHrisPayrollTempEntity.setMultifikator(pegawaiPayroll.getMultifikatorNilai());

        itHrisPayrollTempEntity.setDasarBpjsKs(pegawaiPayroll.getDasarPerhitunganBpjsKsNilai());
        itHrisPayrollTempEntity.setDasarBpjsTk(pegawaiPayroll.getDasarPerhitunganBpjsTkNilai());

        itHrisPayrollTempEntity.setPtkpPegawai(pegawaiPayroll.getPtkpPegawaiNilai());

        itHrisPayrollTempEntity.setIuranBpjsKsKary(pegawaiPayroll.getIuranBpjsKsKaryNilai());
        itHrisPayrollTempEntity.setIuranBpjsKsPers(pegawaiPayroll.getIuranBpjsKsPersNilai());

        itHrisPayrollTempEntity.setIuranBpjsTkKary(pegawaiPayroll.getIuranBpjsTkKaryNilai());
        itHrisPayrollTempEntity.setJpkBpjsTkKary(pegawaiPayroll.getJpkBpjsTkKaryNilai());
        itHrisPayrollTempEntity.setJkkBpjsTkPers(pegawaiPayroll.getJkkBpjsTkPershNilai());
        itHrisPayrollTempEntity.setJhtBpjsTkPers(pegawaiPayroll.getJhtBpjsTkPershNilai());
        itHrisPayrollTempEntity.setJkmBpjsTkPers(pegawaiPayroll.getJkmBpjsTkPershNilai());
        itHrisPayrollTempEntity.setJpkBpjsTkPers(pegawaiPayroll.getJpkBpjsTkPershNilai());

        itHrisPayrollTempEntity.setThp(pegawaiPayroll.getThpNilai());
        itHrisPayrollTempEntity.setGajiKotor(pegawaiPayroll.getGajiKotorNilai());
        itHrisPayrollTempEntity.setGajiBersih(pegawaiPayroll.getGajiBersihNilai());
        itHrisPayrollTempEntity.setTotalA(pegawaiPayroll.getComponentANilai());
        itHrisPayrollTempEntity.setTotalB(pegawaiPayroll.getComponentBNilai());
        itHrisPayrollTempEntity.setTotalC(pegawaiPayroll.getComponentCNilai());
        itHrisPayrollTempEntity.setTotalRlab(pegawaiPayroll.getTotalRLABNilai());
        itHrisPayrollTempEntity.setTunjanganBpjsKs(pegawaiPayroll.getTunjanganBpjsKsNilai());
        itHrisPayrollTempEntity.setTunjanganBpjsTk(pegawaiPayroll.getTunjanganBpjsTkNilai());
        itHrisPayrollTempEntity.setTunjanganPeralihan(pegawaiPayroll.getTotalTunjPeralihanNilai());
        itHrisPayrollTempEntity.setTunjanganLain(pegawaiPayroll.getTunjanganLainNilai());

        itHrisPayrollTempEntity.setTotalIuranBpjsTkKary(pegawaiPayroll.getTotalIuranBpjsTkKaryNilai());
        itHrisPayrollTempEntity.setTotalIuranBpjsTkPers(pegawaiPayroll.getTotalIuranBpjsTkPersNilai());

        itHrisPayrollTempEntity.setFlag("Y");
        itHrisPayrollTempEntity.setAction(action);

        if ("C".equalsIgnoreCase(action)) {

            itHrisPayrollTempEntity.setCreatedWho(createdWho);
            itHrisPayrollTempEntity.setCreatedDate(CommonUtil.getCurrentDateTimes());

        }

        itHrisPayrollTempEntity.setLastUpdateWho(createdWho);
        itHrisPayrollTempEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());


        ItHrisPayrollPphTempEntity itHrisPayrollPphTempEntity = new ItHrisPayrollPphTempEntity();

        PayrollPph payrollPph = pegawaiPayroll.getPayrollPph();

        if ("C".equalsIgnoreCase(action)) { //jika create

            try {
                String idPayrollPphTemp = payrollPphTempDao.getNextPayrollPphTempId(periodePayroll, tahunPayroll);
                itHrisPayrollPphTempEntity.setPphTempId(idPayrollPphTemp);
                itHrisPayrollPphTempEntity.setPayrollTempId(idPayrollTemp);

                payrollPph.setPphId(idPayrollPphTemp);
                payrollPph.setPayrollId(idPayrollTemp);

            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] Found problem when get sequence pph temp, please inform to your admin...," + e.getMessage());
            }

        } else { //jika update

            Set<ItHrisPayrollPphTempEntity> setOfItHrisPayrollPphTempEntities = itHrisPayrollTempEntity.getItHrisPayrollPphTemp();
            List<ItHrisPayrollPphTempEntity> listOfItHrisPayrollPphTempEntities = new ArrayList<>();
            setOfItHrisPayrollPphTempEntities.stream()
                    .forEachOrdered(listOfItHrisPayrollPphTempEntities::add);
            itHrisPayrollPphTempEntity = (ItHrisPayrollPphTempEntity) listOfItHrisPayrollPphTempEntities.get(0);
        }

        itHrisPayrollPphTempEntity.setPkp(payrollPph.getPkpNilai());
        itHrisPayrollPphTempEntity.setPphGaji(payrollPph.getPphGajiNilai());
        itHrisPayrollPphTempEntity.setTunjPph(payrollPph.getTunjanganPphNilaiBulan());
        itHrisPayrollPphTempEntity.setBruto(payrollPph.getBrutoNilai());
        itHrisPayrollPphTempEntity.setReduce(payrollPph.getReduceNilai());

        itHrisPayrollPphTempEntity.setNip(payrollPph.getNip());
        itHrisPayrollPphTempEntity.setBulan(payrollPph.getBulan());
        itHrisPayrollPphTempEntity.setTahun(payrollPph.getTahun());
        itHrisPayrollPphTempEntity.setPtkp(payrollPph.getPtkpNilai());
        itHrisPayrollPphTempEntity.setNetto(payrollPph.getNettoNilai());
        itHrisPayrollPphTempEntity.setBiayaJabatan(payrollPph.getBiayaJabatanNilai());
        itHrisPayrollPphTempEntity.setHutangPphSetahun(payrollPph.getHutangPphNilai());
        itHrisPayrollPphTempEntity.setSelisihPphSetahun(payrollPph.getSelisihPphNilai());

        itHrisPayrollPphTempEntity.setGaji(payrollPph.getGajiNilai());
        itHrisPayrollPphTempEntity.setSankhus(payrollPph.getSankhusNilai());
        itHrisPayrollPphTempEntity.setTunjJabatan(payrollPph.getTunjanganJabatanStrukturalNilai());
        itHrisPayrollPphTempEntity.setTunjStruktural(payrollPph.getTunjanganStrukturalNilai());
        itHrisPayrollPphTempEntity.setTunjFungsional(payrollPph.getTunjanganStrategisNilai());
        itHrisPayrollPphTempEntity.setTunjPeralihan(payrollPph.getTunjanganPeralihanNilai());
        itHrisPayrollPphTempEntity.setTotalTunjLain(payrollPph.getTotalTunjanganLainNilai());
        itHrisPayrollPphTempEntity.setTunjTambahan(payrollPph.getTunjanganTambahanNilai());
        itHrisPayrollPphTempEntity.setPemondokan(payrollPph.getPemondokanNilai());
        itHrisPayrollPphTempEntity.setKomunikasi(payrollPph.getKomunikasiNilai());
        itHrisPayrollPphTempEntity.setTotalRlab(payrollPph.getTotalRlabNilai());
        itHrisPayrollPphTempEntity.setIuranPegawai(payrollPph.getIuranPegawaiNilai());
        itHrisPayrollPphTempEntity.setLembur(payrollPph.getTunjanganLemburNilai());
        itHrisPayrollPphTempEntity.setTunjPensiun(payrollPph.getTunjanganPensiunNilai());
        itHrisPayrollPphTempEntity.setBpjsKs(payrollPph.getBpjsKsNilai());
        itHrisPayrollPphTempEntity.setBpjsTk(payrollPph.getBpjsTkNilai());

        itHrisPayrollPphTempEntity.setBonus(payrollPph.getIncomeTidakTetapNilai());

        itHrisPayrollPphTempEntity.setFlag("Y");
        itHrisPayrollPphTempEntity.setAction(action);

        itHrisPayrollPphTempEntity.setLastUpdateWho(createdWho);
        itHrisPayrollPphTempEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());

        if ("C".equalsIgnoreCase(action)) {

            itHrisPayrollPphTempEntity.setCreatedWho(createdWho);
            itHrisPayrollPphTempEntity.setCreatedDate(CommonUtil.getCurrentDateTimes());

            Set<ItHrisPayrollPphTempEntity> setOfItHrisPayrollPphTempEntities = new HashSet<ItHrisPayrollPphTempEntity>();
            setOfItHrisPayrollPphTempEntities.add(itHrisPayrollPphTempEntity);
            itHrisPayrollTempEntity.setItHrisPayrollPphTemp(setOfItHrisPayrollPphTempEntities);

        }

        logger.info("[PayrollBoImpl.copyDataInitialPegawaiPayrollToPayrollTemp] end process <<<");

        return itHrisPayrollTempEntity;
    }

    //updated by ferdi, 01-12-2020, untuk copy data dari it payroll temp ke it payroll
    private ItHrisPayrollEntity copyDataItPayrollTempToItPayroll(ItHrisPayrollTempEntity itHrisPayrollTempEntity, String periodePayroll,String tahunPayroll, String createdWho) throws GeneralBOException {

        logger.info("[PayrollBoImpl.copyDataItPayrollTempToItPayroll] start process >>>");

        ItHrisPayrollEntity itHrisPayrollEntity = new ItHrisPayrollEntity();
        String idPayroll = null;
        try {
            idPayroll = payrollDao.getNextPayrollId(periodePayroll,tahunPayroll);
            itHrisPayrollEntity.setPayrollId(idPayroll);
        } catch (HibernateException e) {
            logger.error("[PayrollBoImpl.copyDataItPayrollTempToItPayroll] Error, " + e.getMessage());
            throw new GeneralBOException("[PayrollBoImpl.copyDataItPayrollTempToItPayroll] Found problem when get sequence payroll, please inform to your admin...," + e.getMessage());
        }

        itHrisPayrollEntity.setPayrollHeaderId(itHrisPayrollTempEntity.getPayrollHeaderId());
        itHrisPayrollEntity.setTipePayroll(itHrisPayrollTempEntity.getTipePayroll());
        itHrisPayrollEntity.setBulan(itHrisPayrollTempEntity.getBulan());
        itHrisPayrollEntity.setTahun(itHrisPayrollTempEntity.getTahun());
        itHrisPayrollEntity.setTahunSkalaGaji(itHrisPayrollTempEntity.getTahunSkalaGaji());
        itHrisPayrollEntity.setTanggalAwalLembur(itHrisPayrollTempEntity.getTanggalAwalLembur());
        itHrisPayrollEntity.setTanggalAkhirLembur(itHrisPayrollTempEntity.getTanggalAkhirLembur());

        itHrisPayrollEntity.setNip(itHrisPayrollTempEntity.getNip());
        itHrisPayrollEntity.setNipLama(itHrisPayrollTempEntity.getNipLama());
        itHrisPayrollEntity.setGelar(itHrisPayrollTempEntity.getGelar());
        itHrisPayrollEntity.setNamaPegawai(itHrisPayrollTempEntity.getNamaPegawai());
        itHrisPayrollEntity.setBranchId(itHrisPayrollTempEntity.getBranchId());
        itHrisPayrollEntity.setBranchName(itHrisPayrollTempEntity.getBranchName());
        itHrisPayrollEntity.setDepartmentId(itHrisPayrollTempEntity.getDepartmentId());
        itHrisPayrollEntity.setDepartmentName(itHrisPayrollTempEntity.getDepartmentName());
        itHrisPayrollEntity.setSubDivisi(itHrisPayrollTempEntity.getSubDivisi());
        itHrisPayrollEntity.setSubDivisiName(itHrisPayrollTempEntity.getSubDivisiName());
        itHrisPayrollEntity.setKelompokPositionId(itHrisPayrollTempEntity.getKelompokPositionId());
        itHrisPayrollEntity.setKelompokPositionName(itHrisPayrollTempEntity.getKelompokPositionName());
        itHrisPayrollEntity.setGolonganId(itHrisPayrollTempEntity.getGolonganId());
        itHrisPayrollEntity.setGolonganName(itHrisPayrollTempEntity.getGolonganName());

        itHrisPayrollEntity.setGolonganDapen(itHrisPayrollTempEntity.getGolonganDapen());
        itHrisPayrollEntity.setGradeLevel(itHrisPayrollTempEntity.getGradeLevel() );

        itHrisPayrollEntity.setMasaKerjaGol(itHrisPayrollTempEntity.getMasaKerjaGol());

        itHrisPayrollEntity.setTipePegawaiId(itHrisPayrollTempEntity.getTipePegawaiId());
        itHrisPayrollEntity.setTipePegawaiName(itHrisPayrollTempEntity.getTipePegawaiName());
        itHrisPayrollEntity.setStatusPegawaiId(itHrisPayrollTempEntity.getStatusPegawaiId());
        itHrisPayrollEntity.setStatusPegawaiName(itHrisPayrollTempEntity.getStatusPegawaiName());
        itHrisPayrollEntity.setJenisPegawaiId(itHrisPayrollTempEntity.getJenisPegawaiId());
        itHrisPayrollEntity.setJenisPegawaiName(itHrisPayrollTempEntity.getJenisPegawaiName());

        itHrisPayrollEntity.setPositionId(itHrisPayrollTempEntity.getPositionId());
        itHrisPayrollEntity.setPositionName(itHrisPayrollTempEntity.getPositionName());
        itHrisPayrollEntity.setProfesiId(itHrisPayrollTempEntity.getProfesiId());
        itHrisPayrollEntity.setProfesiName(itHrisPayrollTempEntity.getProfesiName());

        itHrisPayrollEntity.setDapenId(itHrisPayrollTempEntity.getDapenId());
        itHrisPayrollEntity.setDapenName(itHrisPayrollTempEntity.getDapenName());

        itHrisPayrollEntity.setPersenDapenKary(itHrisPayrollTempEntity.getPersenDapenKary());
        itHrisPayrollEntity.setPersenDapenPers(itHrisPayrollTempEntity.getPersenDapenPers());

        itHrisPayrollEntity.setGajiPensiun(itHrisPayrollTempEntity.getGajiPensiun());

        itHrisPayrollEntity.setGajiPokok(itHrisPayrollTempEntity.getGajiPokok());
        itHrisPayrollEntity.setTunjunganSankhus(itHrisPayrollTempEntity.getTunjunganSankhus());
        itHrisPayrollEntity.setTunjanganPerumahan(itHrisPayrollTempEntity.getTunjanganPerumahan());
        itHrisPayrollEntity.setTunjanganListrik(itHrisPayrollTempEntity.getTunjanganListrik());
        itHrisPayrollEntity.setTunjanganAir(itHrisPayrollTempEntity.getTunjanganAir());
        itHrisPayrollEntity.setTunjanganBbm(itHrisPayrollTempEntity.getTunjanganBbm());
        itHrisPayrollEntity.setTunjanganJabatanStruktural(itHrisPayrollTempEntity.getTunjanganJabatanStruktural());
        itHrisPayrollEntity.setTunjanganStruktural(itHrisPayrollTempEntity.getTunjanganStruktural());
        itHrisPayrollEntity.setTunjanganFungsional(itHrisPayrollTempEntity.getTunjanganFungsional());
        itHrisPayrollEntity.setTunjanganTambahan(itHrisPayrollTempEntity.getTunjanganTambahan());
        itHrisPayrollEntity.setGajiPensiun(itHrisPayrollTempEntity.getGajiPensiun());
        itHrisPayrollEntity.setIuranDapenPers(itHrisPayrollTempEntity.getIuranDapenPers());
        itHrisPayrollEntity.setIuranDapenKary(itHrisPayrollTempEntity.getIuranDapenKary());

        itHrisPayrollEntity.setTunjanganDapen(itHrisPayrollTempEntity.getTunjanganDapen());
        itHrisPayrollEntity.setTunjanganPph(itHrisPayrollTempEntity.getTunjanganPph());
        itHrisPayrollEntity.setPphGaji(itHrisPayrollTempEntity.getPphGaji());

        itHrisPayrollEntity.setPeralihanGapok(itHrisPayrollTempEntity.getPeralihanGapok());
        itHrisPayrollEntity.setPeralihanSankhus(itHrisPayrollTempEntity.getPeralihanSankhus());
        itHrisPayrollEntity.setPeralihanTunjangan(itHrisPayrollTempEntity.getPeralihanTunjangan());

        itHrisPayrollEntity.setTunjanganKomunikasi(itHrisPayrollTempEntity.getTunjanganKomunikasi());
        itHrisPayrollEntity.setTunjanganPemondokan(itHrisPayrollTempEntity.getTunjanganPemondokan());
        itHrisPayrollEntity.setTunjanganLembur(itHrisPayrollTempEntity.getTunjanganLembur());
        itHrisPayrollEntity.setTunjanganSupervisi(itHrisPayrollTempEntity.getTunjanganSupervisi());
        itHrisPayrollEntity.setTunjanganLokal(itHrisPayrollTempEntity.getTunjanganLokal());
        itHrisPayrollEntity.setTunjanganSiaga(itHrisPayrollTempEntity.getTunjanganSiaga());

        itHrisPayrollEntity.setIuranKopkar(itHrisPayrollTempEntity.getIuranKopkar());

        itHrisPayrollEntity.setIuranSp(itHrisPayrollTempEntity.getIuranSp());
        itHrisPayrollEntity.setIuranPiikb(itHrisPayrollTempEntity.getIuranPiikb());
        itHrisPayrollEntity.setIuranBankMandiri(itHrisPayrollTempEntity.getIuranBankMandiri());
        itHrisPayrollEntity.setIuranBankBri(itHrisPayrollTempEntity.getIuranBankBri());
        itHrisPayrollEntity.setIuranInfaq(itHrisPayrollTempEntity.getIuranInfaq());
        itHrisPayrollEntity.setIuranPerkesDanObat(itHrisPayrollTempEntity.getIuranPerkesDanObat());
        itHrisPayrollEntity.setIuranListrik(itHrisPayrollTempEntity.getIuranListrik());
        itHrisPayrollEntity.setIuranProfesi(itHrisPayrollTempEntity.getIuranProfesi());
        itHrisPayrollEntity.setIuranPotonganLain(itHrisPayrollTempEntity.getIuranPotonganLain());

        itHrisPayrollEntity.setMinBpjsKs(itHrisPayrollTempEntity.getMinBpjsKs());
        itHrisPayrollEntity.setMaxBpjsKs(itHrisPayrollTempEntity.getMaxBpjsKs());

        itHrisPayrollEntity.setPersenBpjsKsKary(itHrisPayrollTempEntity.getPersenBpjsKsKary());
        itHrisPayrollEntity.setPersenBpjsKsPers(itHrisPayrollTempEntity.getPersenBpjsKsPers());

        itHrisPayrollEntity.setMinBpjsTk(itHrisPayrollTempEntity.getMinBpjsTk());
        itHrisPayrollEntity.setMinBpjsTk(itHrisPayrollTempEntity.getMinBpjsTk());

        itHrisPayrollEntity.setPersenBpjsTkIuranKary(itHrisPayrollTempEntity.getPersenBpjsTkIuranKary());
        itHrisPayrollEntity.setPersenBpjsTkJpkKary(itHrisPayrollTempEntity.getPersenBpjsTkJpkKary());

        itHrisPayrollEntity.setPersenBpjsTkJkkPers(itHrisPayrollTempEntity.getPersenBpjsTkJkkPers());
        itHrisPayrollEntity.setPersenBpjsTkJhtPers(itHrisPayrollTempEntity.getPersenBpjsTkJhtPers());
        itHrisPayrollEntity.setPersenBpjsTkJkmPers(itHrisPayrollTempEntity.getPersenBpjsTkJkmPers());
        itHrisPayrollEntity.setPersenBpjsTkJpkPers(itHrisPayrollTempEntity.getPersenBpjsTkJpkPers());

        itHrisPayrollEntity.setStatusKeluarga(itHrisPayrollTempEntity.getStatusKeluarga());
        itHrisPayrollEntity.setJumlahAnak(itHrisPayrollTempEntity.getJumlahAnak());

        itHrisPayrollEntity.setJumlahAnakDitanggung(itHrisPayrollTempEntity.getJumlahAnakDitanggung());

        itHrisPayrollEntity.setNpwp(itHrisPayrollTempEntity.getNpwp());
        itHrisPayrollEntity.setNoRekBank(itHrisPayrollTempEntity.getNoRekBank());
        itHrisPayrollEntity.setNamaBank(itHrisPayrollTempEntity.getNamaBank());

        itHrisPayrollEntity.setTanggalAktif(itHrisPayrollTempEntity.getTanggalAktif());
        itHrisPayrollEntity.setTanggalAkhirKontrak(itHrisPayrollTempEntity.getTanggalAkhirKontrak());
        itHrisPayrollEntity.setTanggalPraPensiun(itHrisPayrollTempEntity.getTanggalPraPensiun());
        itHrisPayrollEntity.setTanggalPensiun(itHrisPayrollTempEntity.getTanggalPensiun());
        itHrisPayrollEntity.setTanggalKeluar(itHrisPayrollTempEntity.getTanggalKeluar());

        itHrisPayrollEntity.setKodering(itHrisPayrollTempEntity.getKodering());
        itHrisPayrollEntity.setGender(itHrisPayrollTempEntity.getGender());

        itHrisPayrollEntity.setUmr(itHrisPayrollTempEntity.getUmr());
        itHrisPayrollEntity.setMultifikator(itHrisPayrollTempEntity.getMultifikator());

        itHrisPayrollEntity.setDasarBpjsKs(itHrisPayrollTempEntity.getDasarBpjsKs());
        itHrisPayrollEntity.setDasarBpjsTk(itHrisPayrollTempEntity.getDasarBpjsTk());

        itHrisPayrollEntity.setPtkpPegawai(itHrisPayrollTempEntity.getPtkpPegawai());

        itHrisPayrollEntity.setIuranBpjsKsKary(itHrisPayrollTempEntity.getIuranBpjsKsKary());
        itHrisPayrollEntity.setIuranBpjsKsPers(itHrisPayrollTempEntity.getIuranBpjsKsPers());

        itHrisPayrollEntity.setIuranBpjsTkKary(itHrisPayrollTempEntity.getIuranBpjsTkKary());
        itHrisPayrollEntity.setJpkBpjsTkKary(itHrisPayrollTempEntity.getJpkBpjsTkKary());
        itHrisPayrollEntity.setJkkBpjsTkPers(itHrisPayrollTempEntity.getJkkBpjsTkPers());
        itHrisPayrollEntity.setJhtBpjsTkPers(itHrisPayrollTempEntity.getJhtBpjsTkPers());
        itHrisPayrollEntity.setJkmBpjsTkPers(itHrisPayrollTempEntity.getJkmBpjsTkPers());
        itHrisPayrollEntity.setJpkBpjsTkPers(itHrisPayrollTempEntity.getJpkBpjsTkPers());

        itHrisPayrollEntity.setThp(itHrisPayrollTempEntity.getThp());
        itHrisPayrollEntity.setGajiKotor(itHrisPayrollTempEntity.getGajiKotor());
        itHrisPayrollEntity.setGajiBersih(itHrisPayrollTempEntity.getGajiBersih());

        itHrisPayrollEntity.setTotalA(itHrisPayrollTempEntity.getTotalA());
        itHrisPayrollEntity.setTotalB(itHrisPayrollTempEntity.getTotalB());
        itHrisPayrollEntity.setTotalC(itHrisPayrollTempEntity.getTotalC());
        itHrisPayrollEntity.setTotalRlab(itHrisPayrollTempEntity.getTotalRlab());
        itHrisPayrollEntity.setTunjanganBpjsKs(itHrisPayrollTempEntity.getTunjanganBpjsKs());
        itHrisPayrollEntity.setTunjanganBpjsTk(itHrisPayrollTempEntity.getTunjanganBpjsTk());
        itHrisPayrollEntity.setTunjanganPeralihan(itHrisPayrollTempEntity.getTunjanganPeralihan());
        itHrisPayrollEntity.setTunjanganLain(itHrisPayrollTempEntity.getTunjanganLain());

        itHrisPayrollEntity.setTotalIuranBpjsTkKary(itHrisPayrollTempEntity.getTotalIuranBpjsTkKary());
        itHrisPayrollEntity.setTotalIuranBpjsTkPers(itHrisPayrollTempEntity.getTotalIuranBpjsTkPers());

        itHrisPayrollEntity.setFlag("Y");
        itHrisPayrollEntity.setAction("C");
        itHrisPayrollEntity.setCreatedWho(createdWho);
        itHrisPayrollEntity.setCreatedDate(CommonUtil.getCurrentDateTimes());
        itHrisPayrollEntity.setLastUpdateWho(createdWho);
        itHrisPayrollEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());

        ItHrisPayrollPphEntity itHrisPayrollPphEntity = new ItHrisPayrollPphEntity();

        try {
            String idPayrollPph = payrollPphDao.getNextPayrollPphId(periodePayroll, tahunPayroll);
            itHrisPayrollPphEntity.setPphId(idPayrollPph);
        } catch (HibernateException e) {
            logger.error("[PayrollBoImpl.copyDataItPayrollTempToItPayroll] Error, " + e.getMessage());
            throw new GeneralBOException("[PayrollBoImpl.copyDataItPayrollTempToItPayroll] Found problem when get sequence pph , please inform to your admin...," + e.getMessage());
        }

        Set<ItHrisPayrollPphTempEntity> setOItHrisPayrollPphTempEntities = itHrisPayrollTempEntity.getItHrisPayrollPphTemp();
        ItHrisPayrollPphTempEntity itHrisPayrollPphTempEntity = (ItHrisPayrollPphTempEntity) setOItHrisPayrollPphTempEntities.iterator().next();

        itHrisPayrollPphEntity.setPayrollId(idPayroll);
        itHrisPayrollPphEntity.setPkp(itHrisPayrollPphTempEntity.getPkp());
        itHrisPayrollPphEntity.setPphGaji(itHrisPayrollPphTempEntity.getPphGaji());
        itHrisPayrollPphEntity.setTunjPph(itHrisPayrollPphTempEntity.getTunjPph());
        itHrisPayrollPphEntity.setBruto(itHrisPayrollPphTempEntity.getBruto());
        itHrisPayrollPphEntity.setReduce(itHrisPayrollPphTempEntity.getReduce());

        itHrisPayrollPphEntity.setNip(itHrisPayrollPphTempEntity.getNip());
        itHrisPayrollPphEntity.setBulan(itHrisPayrollPphTempEntity.getBulan());
        itHrisPayrollPphEntity.setTahun(itHrisPayrollPphTempEntity.getTahun());
        itHrisPayrollPphEntity.setPtkp(itHrisPayrollPphTempEntity.getPtkp());
        itHrisPayrollPphEntity.setNetto(itHrisPayrollPphTempEntity.getNetto());
        itHrisPayrollPphEntity.setBiayaJabatan(itHrisPayrollPphTempEntity.getBiayaJabatan());
        itHrisPayrollPphEntity.setHutangPphSetahun(itHrisPayrollPphTempEntity.getHutangPphSetahun());

        itHrisPayrollPphEntity.setGaji(itHrisPayrollPphTempEntity.getGaji());
        itHrisPayrollPphEntity.setSankhus(itHrisPayrollPphTempEntity.getSankhus());
        itHrisPayrollPphEntity.setTunjJabatan(itHrisPayrollPphTempEntity.getTunjJabatan());
        itHrisPayrollPphEntity.setTunjStruktural(itHrisPayrollPphTempEntity.getTunjStruktural());
        itHrisPayrollPphEntity.setTunjFungsional(itHrisPayrollPphTempEntity.getTunjFungsional());
        itHrisPayrollPphEntity.setTunjPeralihan(itHrisPayrollPphTempEntity.getTunjPeralihan());
        itHrisPayrollPphEntity.setTotalTunjLain(itHrisPayrollPphTempEntity.getTotalTunjLain());
        itHrisPayrollPphEntity.setTunjTambahan(itHrisPayrollPphTempEntity.getTunjTambahan());
        itHrisPayrollPphEntity.setPemondokan(itHrisPayrollPphTempEntity.getPemondokan());
        itHrisPayrollPphEntity.setKomunikasi(itHrisPayrollPphTempEntity.getKomunikasi());
        itHrisPayrollPphEntity.setTotalRlab(itHrisPayrollPphTempEntity.getTotalRlab());
        itHrisPayrollPphEntity.setIuranPegawai(itHrisPayrollPphTempEntity.getIuranPegawai());
        itHrisPayrollPphEntity.setLembur(itHrisPayrollPphTempEntity.getLembur());
        itHrisPayrollPphEntity.setTunjPensiun(itHrisPayrollPphTempEntity.getTunjPensiun());
        itHrisPayrollPphEntity.setBpjsKs(itHrisPayrollPphTempEntity.getBpjsKs());
        itHrisPayrollPphEntity.setBpjsTk(itHrisPayrollPphTempEntity.getBpjsTk());

        itHrisPayrollPphEntity.setBonus(itHrisPayrollPphTempEntity.getBonus());

        itHrisPayrollPphEntity.setFlag("Y");
        itHrisPayrollPphEntity.setAction("C");

        itHrisPayrollPphEntity.setLastUpdateWho(createdWho);
        itHrisPayrollPphEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());

        itHrisPayrollPphEntity.setCreatedWho(createdWho);
        itHrisPayrollPphEntity.setCreatedDate(CommonUtil.getCurrentDateTimes());

        Set<ItHrisPayrollPphEntity> setOfItHrisPayrollPphEntities = new HashSet<ItHrisPayrollPphEntity>();
        setOfItHrisPayrollPphEntities.add(itHrisPayrollPphEntity);
        itHrisPayrollEntity.setItHrisPayrollPph(setOfItHrisPayrollPphEntities);

        logger.info("[PayrollBoImpl.copyDataItPayrollTempToItPayroll] end process <<<");

        return itHrisPayrollEntity;
    }

    //updated by ferdi, 01-12-2020, untuk copy data dari it payroll temp ke pagawai payroll
    private PegawaiPayroll copyDataPayrollTempToPegawaiPayroll(ItHrisPayrollTempEntity itHrisPayrollTempEntity) throws GeneralBOException {

        logger.info("[PayrollBoImpl.copyDataTempToPegawaiPayroll] start process >>>");

        PegawaiPayroll pegawaiPayroll = new PegawaiPayroll();

        pegawaiPayroll.setPayrollId(itHrisPayrollTempEntity.getPayrollTempId());
        pegawaiPayroll.setTipePayroll(itHrisPayrollTempEntity.getTipePayroll());
        pegawaiPayroll.setPeriodePayroll(itHrisPayrollTempEntity.getBulan());
        pegawaiPayroll.setTahunPayroll(itHrisPayrollTempEntity.getTahun());
        pegawaiPayroll.setTahunSkalaGaji(itHrisPayrollTempEntity.getTahunSkalaGaji());
        pegawaiPayroll.setTanggalAwalLembur(itHrisPayrollTempEntity.getTanggalAwalLembur());
        pegawaiPayroll.setTanggalAkhirLembur(itHrisPayrollTempEntity.getTanggalAkhirLembur());

        pegawaiPayroll.setNip(itHrisPayrollTempEntity.getNip());
        pegawaiPayroll.setNipLama(itHrisPayrollTempEntity.getNipLama());
        pegawaiPayroll.setGelar(itHrisPayrollTempEntity.getGelar());
        pegawaiPayroll.setNamaPegawai(itHrisPayrollTempEntity.getNamaPegawai());
        pegawaiPayroll.setBranchId(itHrisPayrollTempEntity.getBranchId());
        pegawaiPayroll.setBranchName(itHrisPayrollTempEntity.getBranchName());
        pegawaiPayroll.setDivisiId(itHrisPayrollTempEntity.getDepartmentId());
        pegawaiPayroll.setDivisiName(itHrisPayrollTempEntity.getDepartmentName());
        pegawaiPayroll.setSubDivisiId(itHrisPayrollTempEntity.getSubDivisi());
        pegawaiPayroll.setSubDivisiName(itHrisPayrollTempEntity.getSubDivisiName());
        pegawaiPayroll.setKelompokPosisiId(itHrisPayrollTempEntity.getKelompokPositionId());
        pegawaiPayroll.setKelompokPosisiName(itHrisPayrollTempEntity.getKelompokPositionName());
        pegawaiPayroll.setGolonganId(itHrisPayrollTempEntity.getGolonganId());
        pegawaiPayroll.setGolonganName(itHrisPayrollTempEntity.getGolonganName());

        pegawaiPayroll.setGolonganDapen(itHrisPayrollTempEntity.getGolonganDapen());
        pegawaiPayroll.setGradeLevel(itHrisPayrollTempEntity.getGradeLevel());

        pegawaiPayroll.setiMasaKerjaGol(itHrisPayrollTempEntity.getMasaKerjaGol());
        pegawaiPayroll.setMasaKerjaGol(String.valueOf(pegawaiPayroll.getiMasaKerjaGol()));

        pegawaiPayroll.setTipePegawai(itHrisPayrollTempEntity.getTipePegawaiId());
        pegawaiPayroll.setTipePegawaiName(itHrisPayrollTempEntity.getTipePegawaiName());
        pegawaiPayroll.setStatusPegawai(itHrisPayrollTempEntity.getStatusPegawaiId());
        pegawaiPayroll.setStatusPegawaiName(itHrisPayrollTempEntity.getStatusPegawaiName());
        pegawaiPayroll.setJenisPegawai(itHrisPayrollTempEntity.getJenisPegawaiId());
        pegawaiPayroll.setJenisPegawaiName(itHrisPayrollTempEntity.getJenisPegawaiName());

        pegawaiPayroll.setPosisiId(itHrisPayrollTempEntity.getPositionId());
        pegawaiPayroll.setPosisiName(itHrisPayrollTempEntity.getPositionName());
        pegawaiPayroll.setProfesiId(itHrisPayrollTempEntity.getProfesiId());
        pegawaiPayroll.setProfesiName(itHrisPayrollTempEntity.getProfesiName());

        pegawaiPayroll.setDanaPensiun(itHrisPayrollTempEntity.getDapenId());
        pegawaiPayroll.setDanaPensiunName(itHrisPayrollTempEntity.getDapenName());

        pegawaiPayroll.setPersenDapenKaryNilai(itHrisPayrollTempEntity.getPersenDapenKary());
        pegawaiPayroll.setPersenDapenPershNilai(itHrisPayrollTempEntity.getPersenDapenPers());

        pegawaiPayroll.setPersenDapenKary(pegawaiPayroll.getPersenDapenKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenDapenKaryNilai(),"###,###") : "");
        pegawaiPayroll.setPersenDapenPersh(pegawaiPayroll.getPersenDapenPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenDapenPershNilai(),"###,###") : "");

        pegawaiPayroll.setGajiPensiunNilai(itHrisPayrollTempEntity.getGajiPensiun());
        pegawaiPayroll.setGajiPokokNilai(itHrisPayrollTempEntity.getGajiPokok());
        pegawaiPayroll.setSantunanKhususNilai(itHrisPayrollTempEntity.getTunjunganSankhus());
        pegawaiPayroll.setTunjRumahNilai(itHrisPayrollTempEntity.getTunjanganPerumahan());
        pegawaiPayroll.setTunjListrikNilai(itHrisPayrollTempEntity.getTunjanganListrik());
        pegawaiPayroll.setTunjAirNilai(itHrisPayrollTempEntity.getTunjanganAir());
        pegawaiPayroll.setTunjBbmNilai(itHrisPayrollTempEntity.getTunjanganBbm());
        pegawaiPayroll.setTunjJabatanNilai(itHrisPayrollTempEntity.getTunjanganJabatanStruktural());
        pegawaiPayroll.setTunjStrukturalNilai(itHrisPayrollTempEntity.getTunjanganStruktural());
        pegawaiPayroll.setTunjFungsionalNilai(itHrisPayrollTempEntity.getTunjanganFungsional());
        pegawaiPayroll.setTunjTambahanNilai(itHrisPayrollTempEntity.getTunjanganTambahan());
        pegawaiPayroll.setGajiPensiunNilai(itHrisPayrollTempEntity.getGajiPensiun());
        pegawaiPayroll.setIuranDapenPershNilai(itHrisPayrollTempEntity.getIuranDapenPers());
        pegawaiPayroll.setIuranDapenKaryNilai(itHrisPayrollTempEntity.getIuranDapenKary());

        pegawaiPayroll.setGajiPensiun(pegawaiPayroll.getGajiPensiunNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getGajiPensiunNilai(),"###,###") : "");
        pegawaiPayroll.setGajiPokok(pegawaiPayroll.getGajiPokokNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getGajiPokokNilai(),"###,###") : "");
        pegawaiPayroll.setSantunanKhusus(pegawaiPayroll.getSantunanKhususNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getSantunanKhususNilai(),"###,###") : "");
        pegawaiPayroll.setTunjRumah(pegawaiPayroll.getTunjRumahNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjRumahNilai(),"###,###") : "");
        pegawaiPayroll.setTunjListrik(pegawaiPayroll.getTunjListrikNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjListrikNilai(),"###,###") : "");
        pegawaiPayroll.setTunjAir(pegawaiPayroll.getTunjAirNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjAirNilai(),"###,###") : "");
        pegawaiPayroll.setTunjBbm(pegawaiPayroll.getTunjBbmNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjBbmNilai(),"###,###") : "");
        pegawaiPayroll.setTunjJabatan(pegawaiPayroll.getTunjJabatanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjJabatanNilai(),"###,###") : "");
        pegawaiPayroll.setTunjStruktural(pegawaiPayroll.getTunjStrukturalNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjStrukturalNilai(),"###,###") : "");
        pegawaiPayroll.setTunjFungsional(pegawaiPayroll.getTunjFungsionalNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjFungsionalNilai(),"###,###") : "");
        pegawaiPayroll.setTunjTambahan(pegawaiPayroll.getTunjTambahanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjTambahanNilai(),"###,###") : "");
        pegawaiPayroll.setGajiPensiun(pegawaiPayroll.getGajiPensiunNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getGajiPensiunNilai(),"###,###") : "");
        pegawaiPayroll.setIuranDapenPersh(pegawaiPayroll.getIuranDapenPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranDapenPershNilai(),"###,###") : "");
        pegawaiPayroll.setIuranDapenKary(pegawaiPayroll.getIuranDapenKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranDapenKaryNilai(),"###,###") : "");

        pegawaiPayroll.setTunjanganDapenNilai(itHrisPayrollTempEntity.getTunjanganDapen());
        pegawaiPayroll.setTunjanganPphNilai(itHrisPayrollTempEntity.getTunjanganPph());
        pegawaiPayroll.setPphGajiNilai(itHrisPayrollTempEntity.getPphGaji());

        pegawaiPayroll.setTunjanganDapen(pegawaiPayroll.getTunjanganDapenNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganDapenNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganPph(pegawaiPayroll.getTunjanganPphNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganPphNilai(),"###,###") : "");
        pegawaiPayroll.setPphGaji(pegawaiPayroll.getPphGajiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPphGajiNilai(),"###,###") : "");

        pegawaiPayroll.setTunjPeralihanGapokNilai(itHrisPayrollTempEntity.getPeralihanGapok());
        pegawaiPayroll.setTunjPeralihanSankhusNilai(itHrisPayrollTempEntity.getPeralihanSankhus());
        pegawaiPayroll.setTunjPeralihanTunjNilai(itHrisPayrollTempEntity.getPeralihanTunjangan());

        pegawaiPayroll.setTunjPeralihanGapok(pegawaiPayroll.getTunjPeralihanGapokNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPeralihanGapokNilai(),"###,###") : "");
        pegawaiPayroll.setTunjPeralihanSankhus(pegawaiPayroll.getTunjPeralihanSankhusNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPeralihanSankhusNilai(),"###,###") : "");
        pegawaiPayroll.setTunjPeralihanTunj(pegawaiPayroll.getTunjPeralihanTunjNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPeralihanTunjNilai(),"###,###") : "");

        pegawaiPayroll.setTunjKomunikasiNilai(itHrisPayrollTempEntity.getTunjanganKomunikasi());
        pegawaiPayroll.setTunjPemondokanNilai(itHrisPayrollTempEntity.getTunjanganPemondokan());
        pegawaiPayroll.setTunjLemburNilai(itHrisPayrollTempEntity.getTunjanganLembur());
        pegawaiPayroll.setTunjSupervisiNilai(itHrisPayrollTempEntity.getTunjanganSupervisi());
        pegawaiPayroll.setTunjLokalNilai(itHrisPayrollTempEntity.getTunjanganLokal());
        pegawaiPayroll.setTunjSiagaNilai(itHrisPayrollTempEntity.getTunjanganSiaga());

        pegawaiPayroll.setTunjKomunikasi(pegawaiPayroll.getTunjKomunikasiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjKomunikasiNilai(),"###,###") : "");
        pegawaiPayroll.setTunjPemondokan(pegawaiPayroll.getTunjPemondokanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPemondokanNilai(),"###,###") : "");
        pegawaiPayroll.setTunjLembur(pegawaiPayroll.getTunjLemburNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjLemburNilai(),"###,###") : "");
        pegawaiPayroll.setTunjSupervisi(pegawaiPayroll.getTunjSupervisiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjSupervisiNilai(),"###,###") : "");
        pegawaiPayroll.setTunjLokal(pegawaiPayroll.getTunjLokalNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjLokalNilai(),"###,###") : "");
        pegawaiPayroll.setTunjSiaga(pegawaiPayroll.getTunjSiagaNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjSiagaNilai(),"###,###") : "");

        pegawaiPayroll.setKopkarNilai(itHrisPayrollTempEntity.getIuranKopkar());
        pegawaiPayroll.setKopkar(pegawaiPayroll.getKopkarNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getKopkarNilai(),"###,###") : "");

        pegawaiPayroll.setIuranSpNilai(itHrisPayrollTempEntity.getIuranSp());
        pegawaiPayroll.setIuranPiikbNilai(itHrisPayrollTempEntity.getIuranPiikb());
        pegawaiPayroll.setBankMandiriNilai(itHrisPayrollTempEntity.getIuranBankMandiri());
        pegawaiPayroll.setBankBriNilai(itHrisPayrollTempEntity.getIuranBankBri());
        pegawaiPayroll.setInfaqNilai(itHrisPayrollTempEntity.getIuranInfaq());
        pegawaiPayroll.setPerkesDanObatNilai(itHrisPayrollTempEntity.getIuranPerkesDanObat());
        pegawaiPayroll.setListrikNilai(itHrisPayrollTempEntity.getIuranListrik());
        pegawaiPayroll.setIuranProfesiNilai(itHrisPayrollTempEntity.getIuranProfesi());
        pegawaiPayroll.setPotonganLainNilai(itHrisPayrollTempEntity.getIuranPotonganLain());
        pegawaiPayroll.setTotalPotonganLainNilai(itHrisPayrollTempEntity.getTotalPotonganLain());

        pegawaiPayroll.setIuranSp(pegawaiPayroll.getIuranSpNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranSpNilai(),"###,###") : "");
        pegawaiPayroll.setIuranPiikb(pegawaiPayroll.getIuranPiikbNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranPiikbNilai(),"###,###") : "");
        pegawaiPayroll.setBankMandiri(pegawaiPayroll.getBankMandiriNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getBankMandiriNilai(),"###,###") : "");
        pegawaiPayroll.setBankBri(pegawaiPayroll.getBankBriNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getBankBriNilai(),"###,###") : "");
        pegawaiPayroll.setInfaq(pegawaiPayroll.getInfaqNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getInfaqNilai(),"###,###") : "");
        pegawaiPayroll.setPerkesDanObat(pegawaiPayroll.getPerkesDanObatNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPerkesDanObatNilai(),"###,###") : "");
        pegawaiPayroll.setListrik(pegawaiPayroll.getListrikNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getListrikNilai(),"###,###") : "");
        pegawaiPayroll.setIuranProfesi(pegawaiPayroll.getIuranProfesiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranProfesiNilai(),"###,###") : "");
        pegawaiPayroll.setPotonganLain(pegawaiPayroll.getPotonganLainNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPotonganLainNilai(),"###,###") : "");
        pegawaiPayroll.setTotalPotonganLain(pegawaiPayroll.getTotalPotonganLainNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalPotonganLainNilai(),"###,###") : "");

        pegawaiPayroll.setMinBpjsKsNilai(itHrisPayrollTempEntity.getMinBpjsKs());
        pegawaiPayroll.setMaxBpjsKsNilai(itHrisPayrollTempEntity.getMaxBpjsKs());

        pegawaiPayroll.setMinBpjsKs(pegawaiPayroll.getMinBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMinBpjsKsNilai(),"###,###") : "");
        pegawaiPayroll.setMaxBpjsKs(pegawaiPayroll.getMaxBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMaxBpjsKsNilai(),"###,###") : "");

        pegawaiPayroll.setPersenBpjsKsKaryNilai(itHrisPayrollTempEntity.getPersenBpjsKsKary());
        pegawaiPayroll.setPersenBpjsKsPershNilai(itHrisPayrollTempEntity.getPersenBpjsKsPers());

        pegawaiPayroll.setPersenBpjsKsKary(pegawaiPayroll.getPersenBpjsKsKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsKsKaryNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsKsPersh(pegawaiPayroll.getPersenBpjsKsPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsKsPershNilai(),"###,###") : "");

        pegawaiPayroll.setMinBpjsTkNilai(itHrisPayrollTempEntity.getMinBpjsTk());
        pegawaiPayroll.setMaxBpjsTkNilai(itHrisPayrollTempEntity.getMaxBpjsTk());

        pegawaiPayroll.setMinBpjsTk(pegawaiPayroll.getMinBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMinBpjsTkNilai(),"###,###") : "");
        pegawaiPayroll.setMaxBpjsTk(pegawaiPayroll.getMaxBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMaxBpjsTkNilai(),"###,###") : "");

        pegawaiPayroll.setPersenBpjsTkIuranKaryNilai(itHrisPayrollTempEntity.getPersenBpjsTkIuranKary());
        pegawaiPayroll.setPersenBpjsTkJpkKaryNilai(itHrisPayrollTempEntity.getPersenBpjsTkJpkKary());

        pegawaiPayroll.setPersenBpjsTkIuranKary(pegawaiPayroll.getPersenBpjsTkIuranKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkIuranKaryNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJpkKary(pegawaiPayroll.getPersenBpjsTkJpkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJpkKaryNilai(),"###,###") : "");

        pegawaiPayroll.setPersenBpjsTkJkkPershNilai(itHrisPayrollTempEntity.getPersenBpjsTkJkkPers());
        pegawaiPayroll.setPersenBpjsTkJhtPershNilai(itHrisPayrollTempEntity.getPersenBpjsTkJhtPers());
        pegawaiPayroll.setPersenBpjsTkJkmPershNilai(itHrisPayrollTempEntity.getPersenBpjsTkJkmPers());
        pegawaiPayroll.setPersenBpjsTkJpkPershNilai(itHrisPayrollTempEntity.getPersenBpjsTkJpkPers());

        pegawaiPayroll.setPersenBpjsTkJkkPersh(pegawaiPayroll.getPersenBpjsTkJkkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJkkPershNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJhtPersh(pegawaiPayroll.getPersenBpjsTkJhtPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJhtPershNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJkmPersh(pegawaiPayroll.getPersenBpjsTkJkmPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJkmPershNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJpkPersh(pegawaiPayroll.getPersenBpjsTkJpkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJpkPershNilai(),"###,###") : "");

        pegawaiPayroll.setStatusKeluarga(itHrisPayrollTempEntity.getStatusKeluarga());
        pegawaiPayroll.setJumlahAnak(itHrisPayrollTempEntity.getJumlahAnak());

        pegawaiPayroll.setJumlahAnakDitanggung(itHrisPayrollTempEntity.getJumlahAnakDitanggung());

        pegawaiPayroll.setNpwpPegawai(itHrisPayrollTempEntity.getNpwp());
        pegawaiPayroll.setNoRekBank(itHrisPayrollTempEntity.getNoRekBank());
        pegawaiPayroll.setNamaBank(itHrisPayrollTempEntity.getNamaBank());

        pegawaiPayroll.setTanggalAktif(itHrisPayrollTempEntity.getTanggalAktif());
        pegawaiPayroll.setTanggalAkhirKontrak(itHrisPayrollTempEntity.getTanggalAkhirKontrak());
        pegawaiPayroll.setTanggalPraPensiun(itHrisPayrollTempEntity.getTanggalPraPensiun());
        pegawaiPayroll.setTanggalPensiun(itHrisPayrollTempEntity.getTanggalPensiun());
        pegawaiPayroll.setTanggalKeluar(itHrisPayrollTempEntity.getTanggalKeluar());

        pegawaiPayroll.setStTanggalAktif(pegawaiPayroll.getTanggalAktif()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalAktif()) : "");
        pegawaiPayroll.setStTanggalAkhirKontrak(pegawaiPayroll.getTanggalAkhirKontrak()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalAkhirKontrak()) : "");
        pegawaiPayroll.setStTanggalPraPensiun(pegawaiPayroll.getTanggalPraPensiun()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalPraPensiun()) : "");
        pegawaiPayroll.setStTanggalPensiun(pegawaiPayroll.getTanggalPensiun()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalPensiun()) : "");
        pegawaiPayroll.setStTanggalKeluar(pegawaiPayroll.getTanggalKeluar()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalKeluar()) : "");

        pegawaiPayroll.setKodering(itHrisPayrollTempEntity.getKodering());
        pegawaiPayroll.setGender(itHrisPayrollTempEntity.getGender());

        pegawaiPayroll.setUmrNilai(itHrisPayrollTempEntity.getUmr());
        pegawaiPayroll.setUmr(pegawaiPayroll.getUmrNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getUmrNilai(),"###,###") : "");

        pegawaiPayroll.setMultifikatorNilai(itHrisPayrollTempEntity.getMultifikator());
        pegawaiPayroll.setMultifikator(pegawaiPayroll.getMultifikatorNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMultifikatorNilai(),"###,###") : "");

        pegawaiPayroll.setDasarPerhitunganBpjsKsNilai(itHrisPayrollTempEntity.getDasarBpjsKs());
        pegawaiPayroll.setDasarPerhitunganBpjsTkNilai(itHrisPayrollTempEntity.getDasarBpjsTk());

        pegawaiPayroll.setDasarPerhitunganBpjsKs(pegawaiPayroll.getDasarPerhitunganBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getDasarPerhitunganBpjsKsNilai(),"###,###") : "");
        pegawaiPayroll.setDasarPerhitunganBpjsTk(pegawaiPayroll.getDasarPerhitunganBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getDasarPerhitunganBpjsTkNilai(),"###,###") : "");

        pegawaiPayroll.setPtkpPegawaiNilai(itHrisPayrollTempEntity.getPtkpPegawai());
        pegawaiPayroll.setPtkpPegawai(pegawaiPayroll.getPtkpPegawaiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPtkpPegawaiNilai(),"###,###") : "");

        pegawaiPayroll.setIuranBpjsKsKaryNilai(itHrisPayrollTempEntity.getIuranBpjsKsKary());
        pegawaiPayroll.setIuranBpjsKsPersNilai(itHrisPayrollTempEntity.getIuranBpjsKsPers());

        pegawaiPayroll.setIuranBpjsKsKary(pegawaiPayroll.getIuranBpjsKsKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranBpjsKsKaryNilai(),"###,###") : "");
        pegawaiPayroll.setIuranBpjsKsPers(pegawaiPayroll.getIuranBpjsKsPersNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranBpjsKsPersNilai(),"###,###") : "");

        pegawaiPayroll.setIuranBpjsTkKaryNilai(itHrisPayrollTempEntity.getIuranBpjsTkKary());
        pegawaiPayroll.setJpkBpjsTkKaryNilai(itHrisPayrollTempEntity.getJpkBpjsTkKary());
        pegawaiPayroll.setJkkBpjsTkPershNilai(itHrisPayrollTempEntity.getJkkBpjsTkPers());
        pegawaiPayroll.setJhtBpjsTkPershNilai(itHrisPayrollTempEntity.getJhtBpjsTkPers());
        pegawaiPayroll.setJkmBpjsTkPershNilai(itHrisPayrollTempEntity.getJkmBpjsTkPers());
        pegawaiPayroll.setJpkBpjsTkPershNilai(itHrisPayrollTempEntity.getJpkBpjsTkPers());

        pegawaiPayroll.setIuranBpjsTkKary(pegawaiPayroll.getIuranBpjsTkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranBpjsTkKaryNilai(),"###,###") : "");
        pegawaiPayroll.setJpkBpjsTkKary(pegawaiPayroll.getJpkBpjsTkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJpkBpjsTkKaryNilai(),"###,###") : "");
        pegawaiPayroll.setJkkBpjsTkPersh(pegawaiPayroll.getJkkBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJkkBpjsTkPershNilai(),"###,###") : "");
        pegawaiPayroll.setJhtBpjsTkPersh(pegawaiPayroll.getJhtBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJhtBpjsTkPershNilai(),"###,###") : "");
        pegawaiPayroll.setJkmBpjsTkPersh(pegawaiPayroll.getJkmBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJkmBpjsTkPershNilai(),"###,###") : "");
        pegawaiPayroll.setJpkBpjsTkPersh(pegawaiPayroll.getJpkBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJpkBpjsTkPershNilai(),"###,###") : "");

        pegawaiPayroll.setThpNilai(itHrisPayrollTempEntity.getThp());
        pegawaiPayroll.setGajiKotorNilai(itHrisPayrollTempEntity.getGajiKotor());
        pegawaiPayroll.setGajiBersihNilai(itHrisPayrollTempEntity.getGajiBersih());

        pegawaiPayroll.setComponentANilai(itHrisPayrollTempEntity.getTotalA());
        pegawaiPayroll.setComponentBNilai(itHrisPayrollTempEntity.getTotalB());
        pegawaiPayroll.setComponentCNilai(itHrisPayrollTempEntity.getTotalC());
        pegawaiPayroll.setTotalRLABNilai(itHrisPayrollTempEntity.getTotalRlab());
        pegawaiPayroll.setTunjanganBpjsKsNilai(itHrisPayrollTempEntity.getTunjanganBpjsKs());
        pegawaiPayroll.setTunjanganBpjsTkNilai(itHrisPayrollTempEntity.getTunjanganBpjsTk());
        pegawaiPayroll.setTotalTunjPeralihanNilai(itHrisPayrollTempEntity.getTunjanganPeralihan());
        pegawaiPayroll.setTunjanganLainNilai(itHrisPayrollTempEntity.getTunjanganLain());

        pegawaiPayroll.setThp(pegawaiPayroll.getThpNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getThpNilai(),"###,###") : "");
        pegawaiPayroll.setGajiBersih(pegawaiPayroll.getGajiBersihNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getGajiBersihNilai(),"###,###") : "");
        pegawaiPayroll.setComponentA(pegawaiPayroll.getComponentANilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getComponentANilai(),"###,###") : "");
        pegawaiPayroll.setComponentB(pegawaiPayroll.getComponentBNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getComponentBNilai(),"###,###") : "");
        pegawaiPayroll.setComponentC(pegawaiPayroll.getComponentCNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getComponentCNilai(),"###,###") : "");
        pegawaiPayroll.setTotalRLAB(pegawaiPayroll.getTotalRLABNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalRLABNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganBpjsKs(pegawaiPayroll.getTunjanganBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganBpjsKsNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganBpjsTk(pegawaiPayroll.getTunjanganBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganBpjsTkNilai(),"###,###") : "");
        pegawaiPayroll.setTotalTunjPeralihan(pegawaiPayroll.getTotalTunjPeralihanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalTunjPeralihanNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganLain(pegawaiPayroll.getTunjanganLainNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganLainNilai(),"###,###") : "");

        pegawaiPayroll.setTotalIuranBpjsTkKaryNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkKary());
        pegawaiPayroll.setTotalIuranBpjsTkPersNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkPers());

        pegawaiPayroll.setTotalIuranBpjsTkKary(pegawaiPayroll.getTotalIuranBpjsTkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalIuranBpjsTkKaryNilai(),"###,###") : "");
        pegawaiPayroll.setTotalIuranBpjsTkPers(pegawaiPayroll.getTotalIuranBpjsTkPersNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalIuranBpjsTkPersNilai(),"###,###") : "");

        Set<ItHrisPayrollPphTempEntity> itHrisPayrollPphTempEntitySet = itHrisPayrollTempEntity.getItHrisPayrollPphTemp();

        if (!itHrisPayrollPphTempEntitySet.isEmpty()) {

            ItHrisPayrollPphTempEntity itHrisPayrollPphTempEntity = itHrisPayrollPphTempEntitySet.iterator().next();

            PayrollPph payrollPph = new PayrollPph();

            payrollPph.setPphId(itHrisPayrollPphTempEntity.getPphTempId());
            payrollPph.setPkpNilai(itHrisPayrollPphTempEntity.getPkp());
            payrollPph.setPphGajiNilai(itHrisPayrollPphTempEntity.getPphGaji());
            payrollPph.setTunjanganPphNilaiBulan(itHrisPayrollPphTempEntity.getTunjPph());
            payrollPph.setBrutoNilai(itHrisPayrollPphTempEntity.getBruto());
            payrollPph.setReduceNilai(itHrisPayrollPphTempEntity.getReduce());

            payrollPph.setPkp(payrollPph.getPkpNilai() != null ? CommonUtil.numbericFormat(payrollPph.getPkpNilai(),"###,###") : "");
            payrollPph.setPphGaji(payrollPph.getPphGajiNilai() != null ? CommonUtil.numbericFormat(payrollPph.getPphGajiNilai(),"###,###") : "");
            payrollPph.setBruto(payrollPph.getBrutoNilai() != null ? CommonUtil.numbericFormat(payrollPph.getBrutoNilai(),"###,###") : "");
            payrollPph.setTunjanganPphBulan(payrollPph.getTunjanganPphNilaiBulan() != null ? CommonUtil.numbericFormat(payrollPph.getTunjanganPphNilaiBulan(),"###,###") : "");

            payrollPph.setNip(itHrisPayrollPphTempEntity.getNip());
            payrollPph.setBulan(itHrisPayrollPphTempEntity.getBulan());
            payrollPph.setTahun(itHrisPayrollPphTempEntity.getTahun());
            payrollPph.setPtkpNilai(itHrisPayrollPphTempEntity.getPtkp());
            payrollPph.setNettoNilai(itHrisPayrollPphTempEntity.getNetto());
            payrollPph.setBiayaJabatanNilai(itHrisPayrollPphTempEntity.getBiayaJabatan());
            payrollPph.setHutangPphNilai(itHrisPayrollPphTempEntity.getHutangPphSetahun());
            payrollPph.setSelisihPphNilai(itHrisPayrollPphTempEntity.getSelisihPphSetahun());

            payrollPph.setHutangPph(payrollPph.getHutangPphNilai() != null ? CommonUtil.numbericFormat(payrollPph.getHutangPphNilai(),"###,###") : "");
            payrollPph.setSelisihPph(payrollPph.getSelisihPphNilai() != null ? CommonUtil.numbericFormat(payrollPph.getSelisihPphNilai(),"###,###") : "");

            payrollPph.setGajiNilai(itHrisPayrollPphTempEntity.getGaji());
            payrollPph.setSankhusNilai(itHrisPayrollPphTempEntity.getSankhus());
            payrollPph.setTunjanganJabatanStrukturalNilai(itHrisPayrollPphTempEntity.getTunjJabatan());
            payrollPph.setTunjanganStrukturalNilai(itHrisPayrollPphTempEntity.getTunjStruktural());
            payrollPph.setTunjanganStrategisNilai(itHrisPayrollPphTempEntity.getTunjFungsional());
            payrollPph.setTunjanganPeralihanNilai(itHrisPayrollPphTempEntity.getTunjPeralihan());
            payrollPph.setTotalTunjanganLainNilai(itHrisPayrollPphTempEntity.getTotalTunjLain());
            payrollPph.setTunjanganTambahanNilai(itHrisPayrollPphTempEntity.getTunjTambahan());
            payrollPph.setPemondokanNilai(itHrisPayrollPphTempEntity.getPemondokan());
            payrollPph.setKomunikasiNilai(itHrisPayrollPphTempEntity.getKomunikasi());
            payrollPph.setTotalRlabNilai(itHrisPayrollPphTempEntity.getTotalRlab());
            payrollPph.setIuranPegawaiNilai(itHrisPayrollPphTempEntity.getIuranPegawai());
            payrollPph.setTunjanganLemburNilai(itHrisPayrollPphTempEntity.getLembur());
            payrollPph.setTunjanganPensiunNilai(itHrisPayrollPphTempEntity.getTunjPensiun());
            payrollPph.setBpjsKsNilai(itHrisPayrollPphTempEntity.getBpjsKs());
            payrollPph.setBpjsTkNilai(itHrisPayrollPphTempEntity.getBpjsTk());

            payrollPph.setIncomeTidakTetapNilai(itHrisPayrollPphTempEntity.getBonus());

            pegawaiPayroll.setPayrollPph(payrollPph);
        }

        logger.info("[PayrollBoImpl.copyDataTempToPegawaiPayroll] end process <<<");

        return pegawaiPayroll;
    }

    //updated by ferdi, 01-12-2020, untuk copy data dari it payroll ke pagawai payroll
    private PegawaiPayroll copyDataPayrollToPegawaiPayroll(ItHrisPayrollEntity itHrisPayrollEntity) throws GeneralBOException {

        logger.info("[PayrollBoImpl.copyDataPayrollToPegawaiPayroll] start process >>>");

        PegawaiPayroll pegawaiPayroll = new PegawaiPayroll();

        pegawaiPayroll.setPayrollHeaderId(itHrisPayrollEntity.getPayrollHeaderId());
        pegawaiPayroll.setPayrollId(itHrisPayrollEntity.getPayrollId());
        pegawaiPayroll.setTipePayroll(itHrisPayrollEntity.getTipePayroll());
        pegawaiPayroll.setPeriodePayroll(itHrisPayrollEntity.getBulan());
        pegawaiPayroll.setTahunPayroll(itHrisPayrollEntity.getTahun());
        pegawaiPayroll.setTahunSkalaGaji(itHrisPayrollEntity.getTahunSkalaGaji());
        pegawaiPayroll.setTanggalAwalLembur(itHrisPayrollEntity.getTanggalAwalLembur());
        pegawaiPayroll.setTanggalAkhirLembur(itHrisPayrollEntity.getTanggalAkhirLembur());

        pegawaiPayroll.setNip(itHrisPayrollEntity.getNip());
        pegawaiPayroll.setNipLama(itHrisPayrollEntity.getNipLama());
        pegawaiPayroll.setGelar(itHrisPayrollEntity.getGelar());
        pegawaiPayroll.setNamaPegawai(itHrisPayrollEntity.getNamaPegawai());
        pegawaiPayroll.setBranchId(itHrisPayrollEntity.getBranchId());
        pegawaiPayroll.setBranchName(itHrisPayrollEntity.getBranchName());
        pegawaiPayroll.setDivisiId(itHrisPayrollEntity.getDepartmentId());
        pegawaiPayroll.setDivisiName(itHrisPayrollEntity.getDepartmentName());
        pegawaiPayroll.setSubDivisiId(itHrisPayrollEntity.getSubDivisi());
        pegawaiPayroll.setSubDivisiName(itHrisPayrollEntity.getSubDivisiName());
        pegawaiPayroll.setKelompokPosisiId(itHrisPayrollEntity.getKelompokPositionId());
        pegawaiPayroll.setKelompokPosisiName(itHrisPayrollEntity.getKelompokPositionName());
        pegawaiPayroll.setGolonganId(itHrisPayrollEntity.getGolonganId());
        pegawaiPayroll.setGolonganName(itHrisPayrollEntity.getGolonganName());

        pegawaiPayroll.setGolonganDapen(itHrisPayrollEntity.getGolonganDapen());
        pegawaiPayroll.setGradeLevel(itHrisPayrollEntity.getGradeLevel());

        pegawaiPayroll.setiMasaKerjaGol(itHrisPayrollEntity.getMasaKerjaGol());
        pegawaiPayroll.setMasaKerjaGol(String.valueOf(pegawaiPayroll.getiMasaKerjaGol()));

        pegawaiPayroll.setTipePegawai(itHrisPayrollEntity.getTipePegawaiId());
        pegawaiPayroll.setTipePegawaiName(itHrisPayrollEntity.getTipePegawaiName());
        pegawaiPayroll.setStatusPegawai(itHrisPayrollEntity.getStatusPegawaiId());
        pegawaiPayroll.setStatusPegawaiName(itHrisPayrollEntity.getStatusPegawaiName());
        pegawaiPayroll.setJenisPegawai(itHrisPayrollEntity.getJenisPegawaiId());
        pegawaiPayroll.setJenisPegawaiName(itHrisPayrollEntity.getJenisPegawaiName());

        pegawaiPayroll.setPosisiId(itHrisPayrollEntity.getPositionId());
        pegawaiPayroll.setPosisiName(itHrisPayrollEntity.getPositionName());
        pegawaiPayroll.setProfesiId(itHrisPayrollEntity.getProfesiId());
        pegawaiPayroll.setProfesiName(itHrisPayrollEntity.getProfesiName());

        pegawaiPayroll.setDanaPensiun(itHrisPayrollEntity.getDapenId());
        pegawaiPayroll.setDanaPensiunName(itHrisPayrollEntity.getDapenName());

        pegawaiPayroll.setPersenDapenKaryNilai(itHrisPayrollEntity.getPersenDapenKary());
        pegawaiPayroll.setPersenDapenPershNilai(itHrisPayrollEntity.getPersenDapenPers());

        pegawaiPayroll.setPersenDapenKary(pegawaiPayroll.getPersenDapenKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenDapenKaryNilai(),"###,###") : "");
        pegawaiPayroll.setPersenDapenPersh(pegawaiPayroll.getPersenDapenPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenDapenPershNilai(),"###,###") : "");

        pegawaiPayroll.setGajiPensiunNilai(itHrisPayrollEntity.getGajiPensiun());
        pegawaiPayroll.setGajiPokokNilai(itHrisPayrollEntity.getGajiPokok());
        pegawaiPayroll.setSantunanKhususNilai(itHrisPayrollEntity.getTunjunganSankhus());
        pegawaiPayroll.setTunjRumahNilai(itHrisPayrollEntity.getTunjanganPerumahan());
        pegawaiPayroll.setTunjListrikNilai(itHrisPayrollEntity.getTunjanganListrik());
        pegawaiPayroll.setTunjAirNilai(itHrisPayrollEntity.getTunjanganAir());
        pegawaiPayroll.setTunjBbmNilai(itHrisPayrollEntity.getTunjanganBbm());
        pegawaiPayroll.setTunjJabatanNilai(itHrisPayrollEntity.getTunjanganJabatanStruktural());
        pegawaiPayroll.setTunjStrukturalNilai(itHrisPayrollEntity.getTunjanganStruktural());
        pegawaiPayroll.setTunjFungsionalNilai(itHrisPayrollEntity.getTunjanganFungsional());
        pegawaiPayroll.setTunjTambahanNilai(itHrisPayrollEntity.getTunjanganTambahan());
        pegawaiPayroll.setGajiPensiunNilai(itHrisPayrollEntity.getGajiPensiun());
        pegawaiPayroll.setIuranDapenPershNilai(itHrisPayrollEntity.getIuranDapenPers());
        pegawaiPayroll.setIuranDapenKaryNilai(itHrisPayrollEntity.getIuranDapenKary());

        pegawaiPayroll.setGajiPensiun(pegawaiPayroll.getGajiPensiunNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getGajiPensiunNilai(),"###,###") : "");
        pegawaiPayroll.setGajiPokok(pegawaiPayroll.getGajiPokokNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getGajiPokokNilai(),"###,###") : "");
        pegawaiPayroll.setSantunanKhusus(pegawaiPayroll.getSantunanKhususNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getSantunanKhususNilai(),"###,###") : "");
        pegawaiPayroll.setTunjRumah(pegawaiPayroll.getTunjRumahNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjRumahNilai(),"###,###") : "");
        pegawaiPayroll.setTunjListrik(pegawaiPayroll.getTunjListrikNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjListrikNilai(),"###,###") : "");
        pegawaiPayroll.setTunjAir(pegawaiPayroll.getTunjAirNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjAirNilai(),"###,###") : "");
        pegawaiPayroll.setTunjBbm(pegawaiPayroll.getTunjBbmNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjBbmNilai(),"###,###") : "");
        pegawaiPayroll.setTunjJabatan(pegawaiPayroll.getTunjJabatanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjJabatanNilai(),"###,###") : "");
        pegawaiPayroll.setTunjStruktural(pegawaiPayroll.getTunjStrukturalNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjStrukturalNilai(),"###,###") : "");
        pegawaiPayroll.setTunjFungsional(pegawaiPayroll.getTunjFungsionalNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjFungsionalNilai(),"###,###") : "");
        pegawaiPayroll.setTunjTambahan(pegawaiPayroll.getTunjTambahanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjTambahanNilai(),"###,###") : "");
        pegawaiPayroll.setGajiPensiun(pegawaiPayroll.getGajiPensiunNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getGajiPensiunNilai(),"###,###") : "");
        pegawaiPayroll.setIuranDapenPersh(pegawaiPayroll.getIuranDapenPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranDapenPershNilai(),"###,###") : "");
        pegawaiPayroll.setIuranDapenKary(pegawaiPayroll.getIuranDapenKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranDapenKaryNilai(),"###,###") : "");

        pegawaiPayroll.setTunjanganDapenNilai(itHrisPayrollEntity.getTunjanganDapen());
        pegawaiPayroll.setTunjanganPphNilai(itHrisPayrollEntity.getTunjanganPph());
        pegawaiPayroll.setPphGajiNilai(itHrisPayrollEntity.getPphGaji());

        pegawaiPayroll.setTunjanganDapen(pegawaiPayroll.getTunjanganDapenNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganDapenNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganPph(pegawaiPayroll.getTunjanganPphNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganPphNilai(),"###,###") : "");
        pegawaiPayroll.setPphGaji(pegawaiPayroll.getPphGajiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPphGajiNilai(),"###,###") : "");

        pegawaiPayroll.setTunjPeralihanGapokNilai(itHrisPayrollEntity.getPeralihanGapok());
        pegawaiPayroll.setTunjPeralihanSankhusNilai(itHrisPayrollEntity.getPeralihanSankhus());
        pegawaiPayroll.setTunjPeralihanTunjNilai(itHrisPayrollEntity.getPeralihanTunjangan());

        pegawaiPayroll.setTunjPeralihanGapok(pegawaiPayroll.getTunjPeralihanGapokNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPeralihanGapokNilai(),"###,###") : "");
        pegawaiPayroll.setTunjPeralihanSankhus(pegawaiPayroll.getTunjPeralihanSankhusNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPeralihanSankhusNilai(),"###,###") : "");
        pegawaiPayroll.setTunjPeralihanTunj(pegawaiPayroll.getTunjPeralihanTunjNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPeralihanTunjNilai(),"###,###") : "");

        pegawaiPayroll.setTunjKomunikasiNilai(itHrisPayrollEntity.getTunjanganKomunikasi());
        pegawaiPayroll.setTunjPemondokanNilai(itHrisPayrollEntity.getTunjanganPemondokan());
        pegawaiPayroll.setTunjLemburNilai(itHrisPayrollEntity.getTunjanganLembur());
        pegawaiPayroll.setTunjSupervisiNilai(itHrisPayrollEntity.getTunjanganSupervisi());
        pegawaiPayroll.setTunjLokalNilai(itHrisPayrollEntity.getTunjanganLokal());
        pegawaiPayroll.setTunjSiagaNilai(itHrisPayrollEntity.getTunjanganSiaga());

        pegawaiPayroll.setTunjKomunikasi(pegawaiPayroll.getTunjKomunikasiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjKomunikasiNilai(),"###,###") : "");
        pegawaiPayroll.setTunjPemondokan(pegawaiPayroll.getTunjPemondokanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjPemondokanNilai(),"###,###") : "");
        pegawaiPayroll.setTunjLembur(pegawaiPayroll.getTunjLemburNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjLemburNilai(),"###,###") : "");
        pegawaiPayroll.setTunjSupervisi(pegawaiPayroll.getTunjSupervisiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjSupervisiNilai(),"###,###") : "");
        pegawaiPayroll.setTunjLokal(pegawaiPayroll.getTunjLokalNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjLokalNilai(),"###,###") : "");
        pegawaiPayroll.setTunjSiaga(pegawaiPayroll.getTunjSiagaNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjSiagaNilai(),"###,###") : "");

        pegawaiPayroll.setKopkarNilai(itHrisPayrollEntity.getIuranKopkar());
        pegawaiPayroll.setKopkar(pegawaiPayroll.getKopkarNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getKopkarNilai(),"###,###") : "");

        pegawaiPayroll.setIuranSpNilai(itHrisPayrollEntity.getIuranSp());
        pegawaiPayroll.setIuranPiikbNilai(itHrisPayrollEntity.getIuranPiikb());
        pegawaiPayroll.setBankMandiriNilai(itHrisPayrollEntity.getIuranBankMandiri());
        pegawaiPayroll.setBankBriNilai(itHrisPayrollEntity.getIuranBankBri());
        pegawaiPayroll.setInfaqNilai(itHrisPayrollEntity.getIuranInfaq());
        pegawaiPayroll.setPerkesDanObatNilai(itHrisPayrollEntity.getIuranPerkesDanObat());
        pegawaiPayroll.setListrikNilai(itHrisPayrollEntity.getIuranListrik());
        pegawaiPayroll.setIuranProfesiNilai(itHrisPayrollEntity.getIuranProfesi());
        pegawaiPayroll.setPotonganLainNilai(itHrisPayrollEntity.getIuranPotonganLain());

        pegawaiPayroll.setIuranSp(pegawaiPayroll.getIuranSpNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranSpNilai(),"###,###") : "");
        pegawaiPayroll.setIuranPiikb(pegawaiPayroll.getIuranPiikbNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranPiikbNilai(),"###,###") : "");
        pegawaiPayroll.setBankMandiri(pegawaiPayroll.getBankMandiriNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getBankMandiriNilai(),"###,###") : "");
        pegawaiPayroll.setBankBri(pegawaiPayroll.getBankBriNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getBankBriNilai(),"###,###") : "");
        pegawaiPayroll.setInfaq(pegawaiPayroll.getInfaqNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getInfaqNilai(),"###,###") : "");
        pegawaiPayroll.setPerkesDanObat(pegawaiPayroll.getPerkesDanObatNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPerkesDanObatNilai(),"###,###") : "");
        pegawaiPayroll.setListrik(pegawaiPayroll.getListrikNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getListrikNilai(),"###,###") : "");
        pegawaiPayroll.setIuranProfesi(pegawaiPayroll.getIuranProfesiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranProfesiNilai(),"###,###") : "");
        pegawaiPayroll.setPotonganLain(pegawaiPayroll.getPotonganLainNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPotonganLainNilai(),"###,###") : "");

        pegawaiPayroll.setMinBpjsKsNilai(itHrisPayrollEntity.getMinBpjsKs());
        pegawaiPayroll.setMaxBpjsKsNilai(itHrisPayrollEntity.getMaxBpjsKs());

        pegawaiPayroll.setMinBpjsKs(pegawaiPayroll.getMinBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMinBpjsKsNilai(),"###,###") : "");
        pegawaiPayroll.setMaxBpjsKs(pegawaiPayroll.getMaxBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMaxBpjsKsNilai(),"###,###") : "");

        pegawaiPayroll.setPersenBpjsKsKaryNilai(itHrisPayrollEntity.getPersenBpjsKsKary());
        pegawaiPayroll.setPersenBpjsKsPershNilai(itHrisPayrollEntity.getPersenBpjsKsPers());

        pegawaiPayroll.setPersenBpjsKsKary(pegawaiPayroll.getPersenBpjsKsKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsKsKaryNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsKsPersh(pegawaiPayroll.getPersenBpjsKsPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsKsPershNilai(),"###,###") : "");

        pegawaiPayroll.setMinBpjsTkNilai(itHrisPayrollEntity.getMinBpjsTk());
        pegawaiPayroll.setMaxBpjsTkNilai(itHrisPayrollEntity.getMaxBpjsTk());

        pegawaiPayroll.setMinBpjsTk(pegawaiPayroll.getMinBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMinBpjsTkNilai(),"###,###") : "");
        pegawaiPayroll.setMaxBpjsTk(pegawaiPayroll.getMaxBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMaxBpjsTkNilai(),"###,###") : "");

        pegawaiPayroll.setPersenBpjsTkIuranKaryNilai(itHrisPayrollEntity.getPersenBpjsTkIuranKary());
        pegawaiPayroll.setPersenBpjsTkJpkKaryNilai(itHrisPayrollEntity.getPersenBpjsTkJpkKary());

        pegawaiPayroll.setPersenBpjsTkIuranKary(pegawaiPayroll.getPersenBpjsTkIuranKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkIuranKaryNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJpkKary(pegawaiPayroll.getPersenBpjsTkJpkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJpkKaryNilai(),"###,###") : "");

        pegawaiPayroll.setPersenBpjsTkJkkPershNilai(itHrisPayrollEntity.getPersenBpjsTkJkkPers());
        pegawaiPayroll.setPersenBpjsTkJhtPershNilai(itHrisPayrollEntity.getPersenBpjsTkJhtPers());
        pegawaiPayroll.setPersenBpjsTkJkmPershNilai(itHrisPayrollEntity.getPersenBpjsTkJkmPers());
        pegawaiPayroll.setPersenBpjsTkJpkPershNilai(itHrisPayrollEntity.getPersenBpjsTkJpkPers());

        pegawaiPayroll.setPersenBpjsTkJkkPersh(pegawaiPayroll.getPersenBpjsTkJkkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJkkPershNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJhtPersh(pegawaiPayroll.getPersenBpjsTkJhtPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJhtPershNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJkmPersh(pegawaiPayroll.getPersenBpjsTkJkmPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJkmPershNilai(),"###,###") : "");
        pegawaiPayroll.setPersenBpjsTkJpkPersh(pegawaiPayroll.getPersenBpjsTkJpkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPersenBpjsTkJpkPershNilai(),"###,###") : "");

        pegawaiPayroll.setStatusKeluarga(itHrisPayrollEntity.getStatusKeluarga());
        pegawaiPayroll.setJumlahAnak(itHrisPayrollEntity.getJumlahAnak());

        pegawaiPayroll.setJumlahAnakDitanggung(itHrisPayrollEntity.getJumlahAnakDitanggung());

        pegawaiPayroll.setNpwpPegawai(itHrisPayrollEntity.getNpwp());
        pegawaiPayroll.setNoRekBank(itHrisPayrollEntity.getNoRekBank());
        pegawaiPayroll.setNamaBank(itHrisPayrollEntity.getNamaBank());

        pegawaiPayroll.setTanggalAktif(itHrisPayrollEntity.getTanggalAktif());
        pegawaiPayroll.setTanggalAkhirKontrak(itHrisPayrollEntity.getTanggalAkhirKontrak());
        pegawaiPayroll.setTanggalPraPensiun(itHrisPayrollEntity.getTanggalPraPensiun());
        pegawaiPayroll.setTanggalPensiun(itHrisPayrollEntity.getTanggalPensiun());
        pegawaiPayroll.setTanggalKeluar(itHrisPayrollEntity.getTanggalKeluar());

        pegawaiPayroll.setStTanggalAktif(pegawaiPayroll.getTanggalAktif()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalAktif()) : "");
        pegawaiPayroll.setStTanggalAkhirKontrak(pegawaiPayroll.getTanggalAkhirKontrak()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalAkhirKontrak()) : "");
        pegawaiPayroll.setStTanggalPraPensiun(pegawaiPayroll.getTanggalPraPensiun()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalPraPensiun()) : "");
        pegawaiPayroll.setStTanggalPensiun(pegawaiPayroll.getTanggalPensiun()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalPensiun()) : "");
        pegawaiPayroll.setStTanggalKeluar(pegawaiPayroll.getTanggalKeluar()!=null ? CommonUtil.simpleDateFormat(pegawaiPayroll.getTanggalKeluar()) : "");

        pegawaiPayroll.setKodering(itHrisPayrollEntity.getKodering());
        pegawaiPayroll.setGender(itHrisPayrollEntity.getGender());

        pegawaiPayroll.setUmrNilai(itHrisPayrollEntity.getUmr());
        pegawaiPayroll.setUmr(pegawaiPayroll.getUmrNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getUmrNilai(),"###,###") : "");

        pegawaiPayroll.setMultifikatorNilai(itHrisPayrollEntity.getMultifikator());
        pegawaiPayroll.setMultifikator(pegawaiPayroll.getMultifikatorNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getMultifikatorNilai(),"###,###") : "");

        pegawaiPayroll.setDasarPerhitunganBpjsKsNilai(itHrisPayrollEntity.getDasarBpjsKs());
        pegawaiPayroll.setDasarPerhitunganBpjsTkNilai(itHrisPayrollEntity.getDasarBpjsTk());

        pegawaiPayroll.setDasarPerhitunganBpjsKs(pegawaiPayroll.getDasarPerhitunganBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getDasarPerhitunganBpjsKsNilai(),"###,###") : "");
        pegawaiPayroll.setDasarPerhitunganBpjsTk(pegawaiPayroll.getDasarPerhitunganBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getDasarPerhitunganBpjsTkNilai(),"###,###") : "");

        pegawaiPayroll.setPtkpPegawaiNilai(itHrisPayrollEntity.getPtkpPegawai());
        pegawaiPayroll.setPtkpPegawai(pegawaiPayroll.getPtkpPegawaiNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getPtkpPegawaiNilai(),"###,###") : "");

        pegawaiPayroll.setIuranBpjsKsKaryNilai(itHrisPayrollEntity.getIuranBpjsKsKary());
        pegawaiPayroll.setIuranBpjsKsPersNilai(itHrisPayrollEntity.getIuranBpjsKsPers());

        pegawaiPayroll.setIuranBpjsKsKary(pegawaiPayroll.getIuranBpjsKsKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranBpjsKsKaryNilai(),"###,###") : "");
        pegawaiPayroll.setIuranBpjsKsPers(pegawaiPayroll.getIuranBpjsKsPersNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranBpjsKsPersNilai(),"###,###") : "");

        pegawaiPayroll.setIuranBpjsTkKaryNilai(itHrisPayrollEntity.getIuranBpjsTkKary());
        pegawaiPayroll.setJpkBpjsTkKaryNilai(itHrisPayrollEntity.getJpkBpjsTkKary());
        pegawaiPayroll.setJkkBpjsTkPershNilai(itHrisPayrollEntity.getJkkBpjsTkPers());
        pegawaiPayroll.setJhtBpjsTkPershNilai(itHrisPayrollEntity.getJhtBpjsTkPers());
        pegawaiPayroll.setJkmBpjsTkPershNilai(itHrisPayrollEntity.getJkmBpjsTkPers());
        pegawaiPayroll.setJpkBpjsTkPershNilai(itHrisPayrollEntity.getJpkBpjsTkPers());

        pegawaiPayroll.setIuranBpjsTkKary(pegawaiPayroll.getIuranBpjsTkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getIuranBpjsTkKaryNilai(),"###,###") : "");
        pegawaiPayroll.setJpkBpjsTkKary(pegawaiPayroll.getJpkBpjsTkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJpkBpjsTkKaryNilai(),"###,###") : "");
        pegawaiPayroll.setJkkBpjsTkPersh(pegawaiPayroll.getJkkBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJkkBpjsTkPershNilai(),"###,###") : "");
        pegawaiPayroll.setJhtBpjsTkPersh(pegawaiPayroll.getJhtBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJhtBpjsTkPershNilai(),"###,###") : "");
        pegawaiPayroll.setJkmBpjsTkPersh(pegawaiPayroll.getJkmBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJkmBpjsTkPershNilai(),"###,###") : "");
        pegawaiPayroll.setJpkBpjsTkPersh(pegawaiPayroll.getJpkBpjsTkPershNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getJpkBpjsTkPershNilai(),"###,###") : "");

        pegawaiPayroll.setThpNilai(itHrisPayrollEntity.getThp());
        pegawaiPayroll.setGajiKotorNilai(itHrisPayrollEntity.getGajiKotor());
        pegawaiPayroll.setGajiBersihNilai(itHrisPayrollEntity.getGajiBersih());

        pegawaiPayroll.setComponentANilai(itHrisPayrollEntity.getTotalA());
        pegawaiPayroll.setComponentBNilai(itHrisPayrollEntity.getTotalB());
        pegawaiPayroll.setComponentCNilai(itHrisPayrollEntity.getTotalC());
        pegawaiPayroll.setTotalRLABNilai(itHrisPayrollEntity.getTotalRlab());
        pegawaiPayroll.setTunjanganBpjsKsNilai(itHrisPayrollEntity.getTunjanganBpjsKs());
        pegawaiPayroll.setTunjanganBpjsTkNilai(itHrisPayrollEntity.getTunjanganBpjsTk());
        pegawaiPayroll.setTotalTunjPeralihanNilai(itHrisPayrollEntity.getTunjanganPeralihan());
        pegawaiPayroll.setTunjanganLainNilai(itHrisPayrollEntity.getTunjanganLain());

        pegawaiPayroll.setThp(pegawaiPayroll.getThpNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getThpNilai(),"###,###") : "");
        pegawaiPayroll.setComponentA(pegawaiPayroll.getComponentANilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getComponentANilai(),"###,###") : "");
        pegawaiPayroll.setComponentB(pegawaiPayroll.getComponentBNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getComponentBNilai(),"###,###") : "");
        pegawaiPayroll.setComponentC(pegawaiPayroll.getComponentCNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getComponentCNilai(),"###,###") : "");
        pegawaiPayroll.setTotalRLAB(pegawaiPayroll.getTotalRLABNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalRLABNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganBpjsKs(pegawaiPayroll.getTunjanganBpjsKsNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganBpjsKsNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganBpjsTk(pegawaiPayroll.getTunjanganBpjsTkNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganBpjsTkNilai(),"###,###") : "");
        pegawaiPayroll.setTotalTunjPeralihan(pegawaiPayroll.getTotalTunjPeralihanNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalTunjPeralihanNilai(),"###,###") : "");
        pegawaiPayroll.setTunjanganLain(pegawaiPayroll.getTunjanganLainNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTunjanganLainNilai(),"###,###") : "");

        pegawaiPayroll.setTotalIuranBpjsTkKaryNilai(itHrisPayrollEntity.getTotalIuranBpjsTkKary());
        pegawaiPayroll.setTotalIuranBpjsTkPersNilai(itHrisPayrollEntity.getTotalIuranBpjsTkPers());

        pegawaiPayroll.setTotalIuranBpjsTkKary(pegawaiPayroll.getTotalIuranBpjsTkKaryNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalIuranBpjsTkKaryNilai(),"###,###") : "");
        pegawaiPayroll.setTotalIuranBpjsTkPers(pegawaiPayroll.getTotalIuranBpjsTkPersNilai() != null ? CommonUtil.numbericFormat(pegawaiPayroll.getTotalIuranBpjsTkPersNilai(),"###,###") : "");

        Set<ItHrisPayrollPphEntity> itHrisPayrollPphEntitySet = itHrisPayrollEntity.getItHrisPayrollPph();

        if (!itHrisPayrollPphEntitySet.isEmpty()) {

            ItHrisPayrollPphEntity itHrisPayrollPphEntity = itHrisPayrollPphEntitySet.iterator().next();

            PayrollPph payrollPph = new PayrollPph();

            payrollPph.setPphId(itHrisPayrollPphEntity.getPphId());
            payrollPph.setPkpNilai(itHrisPayrollPphEntity.getPkp());
            payrollPph.setPphGajiNilai(itHrisPayrollPphEntity.getPphGaji());
            payrollPph.setTunjanganPphNilaiBulan(itHrisPayrollPphEntity.getTunjPph());
            payrollPph.setBrutoNilai(itHrisPayrollPphEntity.getBruto());
            payrollPph.setReduceNilai(itHrisPayrollPphEntity.getReduce());

            payrollPph.setPkp(payrollPph.getPkpNilai() != null ? CommonUtil.numbericFormat(payrollPph.getPkpNilai(),"###,###") : "");
            payrollPph.setPphGaji(payrollPph.getPphGajiNilai() != null ? CommonUtil.numbericFormat(payrollPph.getPphGajiNilai(),"###,###") : "");
            payrollPph.setBruto(payrollPph.getBrutoNilai() != null ? CommonUtil.numbericFormat(payrollPph.getBrutoNilai(),"###,###") : "");
            payrollPph.setTunjanganPphBulan(payrollPph.getTunjanganPphNilaiBulan() != null ? CommonUtil.numbericFormat(payrollPph.getTunjanganPphNilaiBulan(),"###,###") : "");

            payrollPph.setNip(itHrisPayrollPphEntity.getNip());
            payrollPph.setBulan(itHrisPayrollPphEntity.getBulan());
            payrollPph.setTahun(itHrisPayrollPphEntity.getTahun());
            payrollPph.setPtkpNilai(itHrisPayrollPphEntity.getPtkp());
            payrollPph.setNettoNilai(itHrisPayrollPphEntity.getNetto());
            payrollPph.setBiayaJabatanNilai(itHrisPayrollPphEntity.getBiayaJabatan());
            payrollPph.setHutangPphNilai(itHrisPayrollPphEntity.getHutangPphSetahun());
            payrollPph.setSelisihPphNilai(itHrisPayrollPphEntity.getSelisihPphSetahun());

            payrollPph.setHutangPph(payrollPph.getHutangPphNilai() != null ? CommonUtil.numbericFormat(payrollPph.getHutangPphNilai(),"###,###") : "");
            payrollPph.setSelisihPph(payrollPph.getSelisihPphNilai() != null ? CommonUtil.numbericFormat(payrollPph.getSelisihPphNilai(),"###,###") : "");

            payrollPph.setGajiNilai(itHrisPayrollPphEntity.getGaji());
            payrollPph.setSankhusNilai(itHrisPayrollPphEntity.getSankhus());
            payrollPph.setTunjanganJabatanStrukturalNilai(itHrisPayrollPphEntity.getTunjJabatan());
            payrollPph.setTunjanganStrukturalNilai(itHrisPayrollPphEntity.getTunjStruktural());
            payrollPph.setTunjanganStrategisNilai(itHrisPayrollPphEntity.getTunjFungsional());
            payrollPph.setTunjanganPeralihanNilai(itHrisPayrollPphEntity.getTunjPeralihan());
            payrollPph.setTotalTunjanganLainNilai(itHrisPayrollPphEntity.getTotalTunjLain());
            payrollPph.setTunjanganTambahanNilai(itHrisPayrollPphEntity.getTunjTambahan());
            payrollPph.setPemondokanNilai(itHrisPayrollPphEntity.getPemondokan());
            payrollPph.setKomunikasiNilai(itHrisPayrollPphEntity.getKomunikasi());
            payrollPph.setTotalRlabNilai(itHrisPayrollPphEntity.getTotalRlab());
            payrollPph.setIuranPegawaiNilai(itHrisPayrollPphEntity.getIuranPegawai());
            payrollPph.setTunjanganLemburNilai(itHrisPayrollPphEntity.getLembur());
            payrollPph.setTunjanganPensiunNilai(itHrisPayrollPphEntity.getTunjPensiun());
            payrollPph.setBpjsKsNilai(itHrisPayrollPphEntity.getBpjsKs());
            payrollPph.setBpjsTkNilai(itHrisPayrollPphEntity.getBpjsTk());

            payrollPph.setIncomeTidakTetapNilai(itHrisPayrollPphEntity.getBonus());

            pegawaiPayroll.setPayrollPph(payrollPph);
        }

        logger.info("[PayrollBoImpl.copyDataPayrollToPegawaiPayroll] end process <<<");

        return pegawaiPayroll;
    }

    //updated by ferdi, 01-12-2020, untuk copy data dari refresh initial pegawai payroll to existing pegawai payroll
    private void copyRefreshInitialPegawaiPayroll(PegawaiPayroll existingPegawaiPayroll, PegawaiPayroll refreshInitPegawaiPayroll) throws GeneralBOException {

        logger.info("[PayrollBoImpl.copyRefreshInitialPegawaiPayroll] start process >>>");

        existingPegawaiPayroll.setTahunSkalaGaji(refreshInitPegawaiPayroll.getTahunSkalaGaji());
        existingPegawaiPayroll.setTanggalAwalLembur(refreshInitPegawaiPayroll.getTanggalAwalLembur());
        existingPegawaiPayroll.setTanggalAkhirLembur(refreshInitPegawaiPayroll.getTanggalAkhirLembur());

        existingPegawaiPayroll.setNipLama(refreshInitPegawaiPayroll.getNipLama());
        existingPegawaiPayroll.setGelar(refreshInitPegawaiPayroll.getGelar());
        existingPegawaiPayroll.setNamaPegawai(refreshInitPegawaiPayroll.getNamaPegawai());
        existingPegawaiPayroll.setBranchId(refreshInitPegawaiPayroll.getBranchId());
        existingPegawaiPayroll.setBranchName(refreshInitPegawaiPayroll.getBranchName());
        existingPegawaiPayroll.setDivisiId(refreshInitPegawaiPayroll.getDivisiId());
        existingPegawaiPayroll.setDivisiName(refreshInitPegawaiPayroll.getDivisiName());
        existingPegawaiPayroll.setSubDivisiId(refreshInitPegawaiPayroll.getSubDivisiId());
        existingPegawaiPayroll.setSubDivisiName(refreshInitPegawaiPayroll.getSubDivisiName());
        existingPegawaiPayroll.setKelompokPosisiId(refreshInitPegawaiPayroll.getKelompokPosisiId());
        existingPegawaiPayroll.setKelompokPosisiName(refreshInitPegawaiPayroll.getKelompokPosisiName());
        existingPegawaiPayroll.setGolonganId(refreshInitPegawaiPayroll.getGolonganId());
        existingPegawaiPayroll.setGolonganName(refreshInitPegawaiPayroll.getGolonganName());

        existingPegawaiPayroll.setGolonganDapen(refreshInitPegawaiPayroll.getGolonganDapen());
        existingPegawaiPayroll.setGradeLevel(refreshInitPegawaiPayroll.getGradeLevel());

        existingPegawaiPayroll.setiMasaKerjaGol(refreshInitPegawaiPayroll.getiMasaKerjaGol());
        existingPegawaiPayroll.setMasaKerjaGol(String.valueOf(refreshInitPegawaiPayroll.getiMasaKerjaGol()));

        existingPegawaiPayroll.setTipePegawai(refreshInitPegawaiPayroll.getTipePegawai());
        existingPegawaiPayroll.setTipePegawaiName(refreshInitPegawaiPayroll.getTipePegawaiName());
        existingPegawaiPayroll.setStatusPegawai(refreshInitPegawaiPayroll.getStatusPegawai());
        existingPegawaiPayroll.setStatusPegawaiName(refreshInitPegawaiPayroll.getStatusPegawaiName());
        existingPegawaiPayroll.setJenisPegawai(refreshInitPegawaiPayroll.getJenisPegawai());
        existingPegawaiPayroll.setJenisPegawaiName(refreshInitPegawaiPayroll.getJenisPegawaiName());

        existingPegawaiPayroll.setPosisiId(refreshInitPegawaiPayroll.getPosisiId());
        existingPegawaiPayroll.setPosisiName(refreshInitPegawaiPayroll.getPosisiName());
        existingPegawaiPayroll.setProfesiId(refreshInitPegawaiPayroll.getProfesiId());
        existingPegawaiPayroll.setProfesiName(refreshInitPegawaiPayroll.getProfesiName());

        existingPegawaiPayroll.setDanaPensiun(refreshInitPegawaiPayroll.getDanaPensiun());
        existingPegawaiPayroll.setDanaPensiunName(refreshInitPegawaiPayroll.getDanaPensiunName());

        existingPegawaiPayroll.setPersenDapenKaryNilai(refreshInitPegawaiPayroll.getPersenDapenKaryNilai());
        existingPegawaiPayroll.setPersenDapenPershNilai(refreshInitPegawaiPayroll.getPersenDapenPershNilai());

        existingPegawaiPayroll.setPersenDapenKary(existingPegawaiPayroll.getPersenDapenKaryNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenDapenKaryNilai(),"###,###") : "");
        existingPegawaiPayroll.setPersenDapenPersh(existingPegawaiPayroll.getPersenDapenPershNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenDapenPershNilai(),"###,###") : "");

        existingPegawaiPayroll.setGajiPensiunNilai(refreshInitPegawaiPayroll.getGajiPensiunNilai());
        existingPegawaiPayroll.setGajiPokokNilai(refreshInitPegawaiPayroll.getGajiPokokNilai());
        existingPegawaiPayroll.setSantunanKhususNilai(refreshInitPegawaiPayroll.getSantunanKhususNilai());
        existingPegawaiPayroll.setTunjRumahNilai(refreshInitPegawaiPayroll.getTunjRumahNilai());
        existingPegawaiPayroll.setTunjListrikNilai(refreshInitPegawaiPayroll.getTunjListrikNilai());
        existingPegawaiPayroll.setTunjAirNilai(refreshInitPegawaiPayroll.getTunjAirNilai());
        existingPegawaiPayroll.setTunjBbmNilai(refreshInitPegawaiPayroll.getTunjBbmNilai());
        existingPegawaiPayroll.setTunjJabatanNilai(refreshInitPegawaiPayroll.getTunjJabatanNilai());
        existingPegawaiPayroll.setTunjStrukturalNilai(refreshInitPegawaiPayroll.getTunjStrukturalNilai());
        existingPegawaiPayroll.setTunjFungsionalNilai(refreshInitPegawaiPayroll.getTunjFungsionalNilai());
        existingPegawaiPayroll.setTunjTambahanNilai(refreshInitPegawaiPayroll.getTunjTambahanNilai());
        existingPegawaiPayroll.setGajiPensiunNilai(refreshInitPegawaiPayroll.getGajiPensiunNilai());
        existingPegawaiPayroll.setIuranDapenPershNilai(refreshInitPegawaiPayroll.getIuranDapenPershNilai());
        existingPegawaiPayroll.setIuranDapenKaryNilai(refreshInitPegawaiPayroll.getIuranDapenKaryNilai());

        existingPegawaiPayroll.setGajiPensiun(existingPegawaiPayroll.getGajiPensiunNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getGajiPensiunNilai(),"###,###") : "");
        existingPegawaiPayroll.setSantunanKhusus(existingPegawaiPayroll.getSantunanKhususNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getSantunanKhususNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjRumah(existingPegawaiPayroll.getTunjRumahNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjRumahNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjListrik(existingPegawaiPayroll.getTunjListrikNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjListrikNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjAir(existingPegawaiPayroll.getTunjAirNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjAirNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjBbm(existingPegawaiPayroll.getTunjBbmNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjBbmNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjJabatan(existingPegawaiPayroll.getTunjJabatanNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjJabatanNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjStruktural(existingPegawaiPayroll.getTunjStrukturalNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjStrukturalNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjFungsional(existingPegawaiPayroll.getTunjFungsionalNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjFungsionalNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjTambahan(existingPegawaiPayroll.getTunjTambahanNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjTambahanNilai(),"###,###") : "");
        existingPegawaiPayroll.setGajiPensiun(existingPegawaiPayroll.getGajiPensiunNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getGajiPensiunNilai(),"###,###") : "");
        existingPegawaiPayroll.setIuranDapenPersh(existingPegawaiPayroll.getIuranDapenPershNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getIuranDapenPershNilai(),"###,###") : "");
        existingPegawaiPayroll.setIuranDapenKary(existingPegawaiPayroll.getIuranDapenKaryNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getIuranDapenKaryNilai(),"###,###") : "");

        existingPegawaiPayroll.setTunjanganDapenNilai(refreshInitPegawaiPayroll.getTunjanganDapenNilai());
        existingPegawaiPayroll.setTunjanganDapen(existingPegawaiPayroll.getTunjanganDapenNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjanganDapenNilai(),"###,###") : "");

        existingPegawaiPayroll.setTunjPeralihanGapokNilai(refreshInitPegawaiPayroll.getTunjPeralihanGapokNilai());
        existingPegawaiPayroll.setTunjPeralihanSankhusNilai(refreshInitPegawaiPayroll.getTunjPeralihanSankhusNilai());
        existingPegawaiPayroll.setTunjPeralihanTunjNilai(refreshInitPegawaiPayroll.getTunjPeralihanTunjNilai());

        existingPegawaiPayroll.setTunjPeralihanGapok(existingPegawaiPayroll.getTunjPeralihanGapokNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjPeralihanGapokNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjPeralihanSankhus(existingPegawaiPayroll.getTunjPeralihanSankhusNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjPeralihanSankhusNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjPeralihanTunj(existingPegawaiPayroll.getTunjPeralihanTunjNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjPeralihanTunjNilai(),"###,###") : "");

        existingPegawaiPayroll.setTunjKomunikasiNilai(refreshInitPegawaiPayroll.getTunjKomunikasiNilai());
        existingPegawaiPayroll.setTunjPemondokanNilai(refreshInitPegawaiPayroll.getTunjPemondokanNilai());
        existingPegawaiPayroll.setTunjLemburNilai(refreshInitPegawaiPayroll.getTunjLemburNilai());
        existingPegawaiPayroll.setTunjSupervisiNilai(refreshInitPegawaiPayroll.getTunjSupervisiNilai());
        existingPegawaiPayroll.setTunjLokalNilai(refreshInitPegawaiPayroll.getTunjLokalNilai());
        existingPegawaiPayroll.setTunjSiagaNilai(refreshInitPegawaiPayroll.getTunjSiagaNilai());

        existingPegawaiPayroll.setTunjKomunikasi(existingPegawaiPayroll.getTunjKomunikasiNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjKomunikasiNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjPemondokan(existingPegawaiPayroll.getTunjPemondokanNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjPemondokanNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjLembur(existingPegawaiPayroll.getTunjLemburNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjLemburNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjSupervisi(existingPegawaiPayroll.getTunjSupervisiNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjSupervisiNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjLokal(existingPegawaiPayroll.getTunjLokalNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjLokalNilai(),"###,###") : "");
        existingPegawaiPayroll.setTunjSiaga(existingPegawaiPayroll.getTunjSiagaNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getTunjSiagaNilai(),"###,###") : "");

        existingPegawaiPayroll.setMinBpjsKsNilai(refreshInitPegawaiPayroll.getMinBpjsKsNilai());
        existingPegawaiPayroll.setMaxBpjsKsNilai(refreshInitPegawaiPayroll.getMaxBpjsKsNilai());

        existingPegawaiPayroll.setMinBpjsKs(existingPegawaiPayroll.getMinBpjsKsNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getMinBpjsKsNilai(),"###,###") : "");
        existingPegawaiPayroll.setMaxBpjsKs(existingPegawaiPayroll.getMaxBpjsKsNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getMaxBpjsKsNilai(),"###,###") : "");

        existingPegawaiPayroll.setPersenBpjsKsKaryNilai(refreshInitPegawaiPayroll.getPersenBpjsKsKaryNilai());
        existingPegawaiPayroll.setPersenBpjsKsPershNilai(refreshInitPegawaiPayroll.getPersenBpjsKsPershNilai());

        existingPegawaiPayroll.setPersenBpjsKsKary(existingPegawaiPayroll.getPersenBpjsKsKaryNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsKsKaryNilai(),"###,###") : "");
        existingPegawaiPayroll.setPersenBpjsKsPersh(existingPegawaiPayroll.getPersenBpjsKsPershNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsKsPershNilai(),"###,###") : "");

        existingPegawaiPayroll.setMinBpjsTkNilai(refreshInitPegawaiPayroll.getMinBpjsTkNilai());
        existingPegawaiPayroll.setMaxBpjsTkNilai(refreshInitPegawaiPayroll.getMaxBpjsTkNilai());

        existingPegawaiPayroll.setMinBpjsTk(existingPegawaiPayroll.getMinBpjsTkNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getMinBpjsTkNilai(),"###,###") : "");
        existingPegawaiPayroll.setMaxBpjsTk(existingPegawaiPayroll.getMaxBpjsTkNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getMaxBpjsTkNilai(),"###,###") : "");

        existingPegawaiPayroll.setPersenBpjsTkIuranKaryNilai(refreshInitPegawaiPayroll.getPersenBpjsTkIuranKaryNilai());
        existingPegawaiPayroll.setPersenBpjsTkJpkKaryNilai(refreshInitPegawaiPayroll.getPersenBpjsTkJpkKaryNilai());

        existingPegawaiPayroll.setPersenBpjsTkIuranKary(existingPegawaiPayroll.getPersenBpjsTkIuranKaryNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsTkIuranKaryNilai(),"###,###") : "");
        existingPegawaiPayroll.setPersenBpjsTkJpkKary(existingPegawaiPayroll.getPersenBpjsTkJpkKaryNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsTkJpkKaryNilai(),"###,###") : "");

        existingPegawaiPayroll.setPersenBpjsTkJkkPershNilai(refreshInitPegawaiPayroll.getPersenBpjsTkJkkPershNilai());
        existingPegawaiPayroll.setPersenBpjsTkJhtPershNilai(refreshInitPegawaiPayroll.getPersenBpjsTkJhtPershNilai());
        existingPegawaiPayroll.setPersenBpjsTkJkmPershNilai(refreshInitPegawaiPayroll.getPersenBpjsTkJkmPershNilai());
        existingPegawaiPayroll.setPersenBpjsTkJpkPershNilai(refreshInitPegawaiPayroll.getPersenBpjsTkJpkPershNilai());

        existingPegawaiPayroll.setPersenBpjsTkJkkPersh(existingPegawaiPayroll.getPersenBpjsTkJkkPershNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsTkJkkPershNilai(),"###,###") : "");
        existingPegawaiPayroll.setPersenBpjsTkJhtPersh(existingPegawaiPayroll.getPersenBpjsTkJhtPershNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsTkJhtPershNilai(),"###,###") : "");
        existingPegawaiPayroll.setPersenBpjsTkJkmPersh(existingPegawaiPayroll.getPersenBpjsTkJkmPershNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsTkJkmPershNilai(),"###,###") : "");
        existingPegawaiPayroll.setPersenBpjsTkJpkPersh(existingPegawaiPayroll.getPersenBpjsTkJpkPershNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPersenBpjsTkJpkPershNilai(),"###,###") : "");

        existingPegawaiPayroll.setStatusKeluarga(refreshInitPegawaiPayroll.getStatusKeluarga());
        existingPegawaiPayroll.setJumlahAnak(refreshInitPegawaiPayroll.getJumlahAnak());

        existingPegawaiPayroll.setJumlahAnakDitanggung(refreshInitPegawaiPayroll.getJumlahAnakDitanggung());

        existingPegawaiPayroll.setNpwpPegawai(refreshInitPegawaiPayroll.getNpwpPegawai());
        existingPegawaiPayroll.setNoRekBank(refreshInitPegawaiPayroll.getNoRekBank());
        existingPegawaiPayroll.setNamaBank(refreshInitPegawaiPayroll.getNamaBank());
        existingPegawaiPayroll.setNoBpjsKs(refreshInitPegawaiPayroll.getNoBpjsKs());
        existingPegawaiPayroll.setNoBpjsTk(refreshInitPegawaiPayroll.getNoBpjsTk());

        existingPegawaiPayroll.setTanggalAktif(refreshInitPegawaiPayroll.getTanggalAktif());
        existingPegawaiPayroll.setTanggalAkhirKontrak(refreshInitPegawaiPayroll.getTanggalAkhirKontrak());
        existingPegawaiPayroll.setTanggalPraPensiun(refreshInitPegawaiPayroll.getTanggalPraPensiun());
        existingPegawaiPayroll.setTanggalPensiun(refreshInitPegawaiPayroll.getTanggalPensiun());
        existingPegawaiPayroll.setTanggalKeluar(refreshInitPegawaiPayroll.getTanggalKeluar());

        existingPegawaiPayroll.setStTanggalAktif(existingPegawaiPayroll.getTanggalAktif()!=null ? CommonUtil.simpleDateFormat(existingPegawaiPayroll.getTanggalAktif()) : "");
        existingPegawaiPayroll.setStTanggalAkhirKontrak(existingPegawaiPayroll.getTanggalAkhirKontrak()!=null ? CommonUtil.simpleDateFormat(existingPegawaiPayroll.getTanggalAkhirKontrak()) : "");
        existingPegawaiPayroll.setStTanggalPraPensiun(existingPegawaiPayroll.getTanggalPraPensiun()!=null ? CommonUtil.simpleDateFormat(existingPegawaiPayroll.getTanggalPraPensiun()) : "");
        existingPegawaiPayroll.setStTanggalPensiun(existingPegawaiPayroll.getTanggalPensiun()!=null ? CommonUtil.simpleDateFormat(existingPegawaiPayroll.getTanggalPensiun()) : "");
        existingPegawaiPayroll.setStTanggalKeluar(existingPegawaiPayroll.getTanggalKeluar()!=null ? CommonUtil.simpleDateFormat(existingPegawaiPayroll.getTanggalKeluar()) : "");

        existingPegawaiPayroll.setKodering(refreshInitPegawaiPayroll.getKodering());
        existingPegawaiPayroll.setGender(refreshInitPegawaiPayroll.getGender());

        existingPegawaiPayroll.setUmrNilai(refreshInitPegawaiPayroll.getUmrNilai());
        existingPegawaiPayroll.setMultifikatorNilai(refreshInitPegawaiPayroll.getMultifikatorNilai());

        existingPegawaiPayroll.setPtkpPegawaiNilai(refreshInitPegawaiPayroll.getPtkpPegawaiNilai());

        existingPegawaiPayroll.setUmr(existingPegawaiPayroll.getUmrNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getUmrNilai(),"###,###") : "");
        existingPegawaiPayroll.setMultifikator(existingPegawaiPayroll.getMultifikatorNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getMultifikatorNilai(),"###,###") : "");
        existingPegawaiPayroll.setPtkpPegawai(existingPegawaiPayroll.getPtkpPegawaiNilai() != null ? CommonUtil.numbericFormat(existingPegawaiPayroll.getPtkpPegawaiNilai(),"###,###") : "");

        logger.info("[PayrollBoImpl.copyRefreshInitialPegawaiPayroll] end process <<<");

    }

    //updated by ferdi, 01-12-2020, untuk refreshing initial data pegawai payroll, re-calculate gaji dan pph, dan copy data dari pagawai payroll ke it payroll temp
    private ItHrisPayrollTempEntity refreshInitialPegawaiPayrollTemp(PegawaiPayroll refreshInitialPegawaiPayroll,
                                                                     PegawaiPayroll itemPegawaiPayroll,
                                                                     List<MappingPersenGaji> listOfMappingPersenGaji,
                                                                     BigDecimal paramBiayaJabatan,
                                                                     BigDecimal persenBiayaJabatan,
                                                                     String createdWho,
                                                                     String periodePayroll,
                                                                     String tahunPayroll) {

        logger.info("[PayrollBoImpl.refreshInitialPegawaiPayrollTemp] start process >>>");

        if ("plt".equalsIgnoreCase(itemPegawaiPayroll.getJenisPegawai())) { //jika jenis pegawai = plt

            List<MappingPersenGaji> filterdMappingPersenGaji = listOfMappingPersenGaji.stream().filter(
                    p -> p.getNamaMappingPersenGaji().equalsIgnoreCase("plt")
            ).collect(Collectors.toList());

            //mapping ke model mapping persen gaji
            itemPegawaiPayroll.setListOfMappingPersenGaji(filterdMappingPersenGaji);

        } else if ("pjs".equalsIgnoreCase(itemPegawaiPayroll.getJenisPegawai())) { //jika jenis pegawai = pjs

            List<MappingPersenGaji> filterdMappingPersenGaji = listOfMappingPersenGaji.stream().filter(
                    p -> p.getNamaMappingPersenGaji().equalsIgnoreCase("pjs")
            ).collect(Collectors.toList());

            //mapping ke model mapping persen gaji
            itemPegawaiPayroll.setListOfMappingPersenGaji(filterdMappingPersenGaji);

        } else if ("percobaan".equalsIgnoreCase(itemPegawaiPayroll.getJenisPegawai())) { //jika jenis pegawai = percobaan

            List<MappingPersenGaji> filterdMappingPersenGaji = listOfMappingPersenGaji.stream().filter(
                    p -> p.getNamaMappingPersenGaji().equalsIgnoreCase("percobaan")
            ).collect(Collectors.toList());

            //mapping ke model mapping persen gaji
            itemPegawaiPayroll.setListOfMappingPersenGaji(filterdMappingPersenGaji);

        }

        //set biaya jabatan dan persen biaya jabatan
        itemPegawaiPayroll.setBiayaJabatanNilai(paramBiayaJabatan);
        itemPegawaiPayroll.setPersenBiayaJabatan(persenBiayaJabatan);

        //set refresh updated param to exixting pegawai payroll
        copyRefreshInitialPegawaiPayroll(itemPegawaiPayroll,refreshInitialPegawaiPayroll);

        //set recalculate dasar perhitungan bpjs
        itemPegawaiPayroll.recalculateDasarBpjs();

        //set calculate based on multifikator
        itemPegawaiPayroll.calculateBasedMultifikator();

        //lakukan perhitungan payroll dan pph

        if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(itemPegawaiPayroll.getTipePayroll())) { //jika payroll bulanan (rutin)

            itemPegawaiPayroll.calculatePrePayroll();

            if (CommonConstant.BULAN_12.equalsIgnoreCase(periodePayroll)) {

                itemPegawaiPayroll.calculatePPHAnnual();

            } else {

                itemPegawaiPayroll.calculatePPH();

            }

            itemPegawaiPayroll.calculatePostPayroll();

        } else { //jika pendapatan tidak rutin

            itemPegawaiPayroll.calculatePreNonRutinPayroll();
            itemPegawaiPayroll.calculateNonRutinPPH();
            itemPegawaiPayroll.calculatePostNonRutinPayroll();
        }

        ItHrisPayrollTempEntity itPayrollTemp = copyDataInitialPegawaiPayrollToPayrollTemp(itemPegawaiPayroll,createdWho,periodePayroll,tahunPayroll,"U");

        logger.info("[PayrollBoImpl.refreshInitialPegawaiPayrollTemp] end process <<<");

        return itPayrollTemp;
    }

    //updated by ferdi, 01-12-2020, untuk initial mapping persen gaji, calculate gaji dan pph, dan copy data dari pagawai payroll ke it payroll temp
    private List<ItHrisPayrollTempEntity> initialListPegawaiPayrollTemp(List<PegawaiPayroll> listOfInitialPayroll,
                                                                        List<MappingPersenGaji> listOfMappingPersenGaji,
                                                                        BigDecimal paramBiayaJabatan,
                                                                        BigDecimal persenBiayaJabatan,
                                                                        String createdWho,
                                                                        String periodePayroll,
                                                                        String tahunPayroll) {

        logger.info("[PayrollBoImpl.initialListPegawaiPayrollTemp] start process >>>");

        List<ItHrisPayrollTempEntity> listOfItPayrollTemp = new ArrayList<>();

        for (PegawaiPayroll itemPegawaiPayroll : listOfInitialPayroll) {

            if ("plt".equalsIgnoreCase(itemPegawaiPayroll.getJenisPegawai())) { //jika jenis pegawai = plt

                List<MappingPersenGaji> filterdMappingPersenGaji = listOfMappingPersenGaji.stream().filter(
                        p -> p.getNamaMappingPersenGaji().equalsIgnoreCase("plt")
                ).collect(Collectors.toList());

                //mapping ke model mapping persen gaji
                itemPegawaiPayroll.setListOfMappingPersenGaji(filterdMappingPersenGaji);

            } else if ("pjs".equalsIgnoreCase(itemPegawaiPayroll.getJenisPegawai())) { //jika jenis pegawai = pjs

                List<MappingPersenGaji> filterdMappingPersenGaji = listOfMappingPersenGaji.stream().filter(
                        p -> p.getNamaMappingPersenGaji().equalsIgnoreCase("pjs")
                ).collect(Collectors.toList());

                //mapping ke model mapping persen gaji
                itemPegawaiPayroll.setListOfMappingPersenGaji(filterdMappingPersenGaji);

            } else if ("percobaan".equalsIgnoreCase(itemPegawaiPayroll.getJenisPegawai())) { //jika jenis pegawai = percobaan

                List<MappingPersenGaji> filterdMappingPersenGaji = listOfMappingPersenGaji.stream().filter(
                        p -> p.getNamaMappingPersenGaji().equalsIgnoreCase("percobaan")
                ).collect(Collectors.toList());

                //mapping ke model mapping persen gaji
                itemPegawaiPayroll.setListOfMappingPersenGaji(filterdMappingPersenGaji);

            }

            //set biaya jabatan dan persen biaya jabatan
            itemPegawaiPayroll.setBiayaJabatanNilai(paramBiayaJabatan);
            itemPegawaiPayroll.setPersenBiayaJabatan(persenBiayaJabatan);

            //set calculate based on multifikator
            itemPegawaiPayroll.calculateBasedMultifikator();

            //lakukan perhitungan payroll dan pph

            if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(itemPegawaiPayroll.getTipePayroll())) { //jika payroll bulanan (rutin)

                itemPegawaiPayroll.calculatePrePayroll();

                if (CommonConstant.BULAN_12.equalsIgnoreCase(periodePayroll)) {

                    itemPegawaiPayroll.calculatePPHAnnual();

                } else {

                    itemPegawaiPayroll.calculatePPH();

                }

                itemPegawaiPayroll.calculatePostPayroll();

            } else { //jika pendapatan tidak rutin

                itemPegawaiPayroll.calculatePreNonRutinPayroll();
                itemPegawaiPayroll.calculateNonRutinPPH();
                itemPegawaiPayroll.calculatePostNonRutinPayroll();
            }

            ItHrisPayrollTempEntity itPayrollTempEntity = copyDataInitialPegawaiPayrollToPayrollTemp(itemPegawaiPayroll,createdWho,periodePayroll,tahunPayroll,"C");
            listOfItPayrollTemp.add(itPayrollTempEntity);

        }

        logger.info("[PayrollBoImpl.initialListPegawaiPayrollTemp] end process <<<");

        return listOfItPayrollTemp;
    }

    private List<PegawaiPayroll> sortingListPegawaiPayroll(List<PegawaiPayroll> listOfInitialPayroll) {

        logger.info("[PayrollBoImpl.sortingListPegawaiPayroll] start process >>>");

        List<PegawaiPayroll> listOfSortedInitialPayroll = new ArrayList<>();

        //sorting list of pegawai for displaying tag, BOC/BOD, Pegawai Tetap (berdasarkan 'Pejabat Utama','Pejabat Madya', 'Pejabat Muda', 'Staff') , PKWT
        List<PegawaiPayroll> filterPegawaiPayrollBOC = listOfInitialPayroll.stream().filter(
                p -> p.getTipePegawai().equalsIgnoreCase(CommonConstant.TIPE_PEGAWAI_BOC)
        ).collect(Collectors.toList());

        filterPegawaiPayrollBOC.stream()
                .forEachOrdered(listOfSortedInitialPayroll::add);

        List<PegawaiPayroll> filterPegawaiPayrollBOD = listOfInitialPayroll.stream().filter(
                p -> p.getTipePegawai().equalsIgnoreCase(CommonConstant.TIPE_PEGAWAI_BOD)
        ).collect(Collectors.toList());

        List<PegawaiPayroll> filterSortPegawaiPayrollBOD = filterPegawaiPayrollBOD.stream().sorted(Comparator.comparing(PegawaiPayroll::getNip)).collect(Collectors.toList());

        filterSortPegawaiPayrollBOD.stream()
                .forEachOrdered(listOfSortedInitialPayroll::add);

        List<PegawaiPayroll> filterPegawaiPayrollTetap = listOfInitialPayroll.stream().filter(
                p -> p.getTipePegawai().equalsIgnoreCase(CommonConstant.TIPE_PEGAWAI_TETAP)
        ).collect(Collectors.toList());

        List<PegawaiPayroll> filterPegawaiPayrollTetapUtama = filterPegawaiPayrollTetap.stream().filter(
                p -> p.getKelompokPosisiId().equalsIgnoreCase(CommonConstant.KELOMPOK_ID_PEJABAT_UTAMA)
        ).collect(Collectors.toList());

        filterPegawaiPayrollTetapUtama.stream()
                .forEachOrdered(listOfSortedInitialPayroll::add);

        List<PegawaiPayroll> filterPegawaiPayrollTetapMadya = filterPegawaiPayrollTetap.stream().filter(
                p -> p.getKelompokPosisiId().equalsIgnoreCase(CommonConstant.KELOMPOK_ID_PEJABAT_MADYA)
        ).collect(Collectors.toList());

        filterPegawaiPayrollTetapMadya.stream()
                .forEachOrdered(listOfSortedInitialPayroll::add);

        List<PegawaiPayroll> filterPegawaiPayrollTetapMuda = filterPegawaiPayrollTetap.stream().filter(
                p -> p.getKelompokPosisiId().equalsIgnoreCase(CommonConstant.KELOMPOK_ID_PEJABAT_MUDA)
        ).collect(Collectors.toList());

        filterPegawaiPayrollTetapMuda.stream()
                .forEachOrdered(listOfSortedInitialPayroll::add);

        List<PegawaiPayroll> filterPegawaiPayrollTetapStaff = filterPegawaiPayrollTetap.stream().filter(
                p -> p.getKelompokPosisiId().equalsIgnoreCase(CommonConstant.KELOMPOK_ID_STAFF)
        ).collect(Collectors.toList());

        filterPegawaiPayrollTetapStaff.stream()
                .forEachOrdered(listOfSortedInitialPayroll::add);

        List<PegawaiPayroll> filterPegawaiPayrollPKWT = listOfInitialPayroll.stream().filter(
                p -> p.getTipePegawai().equalsIgnoreCase(CommonConstant.TIPE_PEGAWAI_TIDAK_TETAP)
        ).collect(Collectors.toList());

        filterPegawaiPayrollPKWT.stream()
                .forEachOrdered(listOfSortedInitialPayroll::add);

        logger.info("[PayrollBoImpl.sortingListPegawaiPayroll] end process <<<");

        return listOfSortedInitialPayroll;
    }


    //updated by ferdi, 01-12-2020, proses rebuild perhitungan gaji
    @Override
    public List<PegawaiPayroll> saveInitialCalculatePayroll(PayrollHeader payrollHeaderBean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.saveInitialCalculatePayroll] start process >>>");

        List<PegawaiPayroll> listOfInitialPayroll = new ArrayList<>();
        List<PegawaiPayroll> listOfSortedInitialPayroll = new ArrayList<>();

        if (payrollHeaderBean != null) {

            //get tipe gaji
            String tipePayroll = payrollHeaderBean.getTipePayroll();
            String periodePayroll = payrollHeaderBean.getBulan();
            String tahunPayroll = payrollHeaderBean.getTahun();
            String periodePayrollSebelumnya = null;
            String tahunPayrollSebelumnya = null;
            String branchId = payrollHeaderBean.getBranchId();
            String tahunSkalaPayroll = null;
            String tanggalLemburAwal = null;
            String tanggalLemburAkhir = null;
            String tglAwalLembur = null;
            String tglAkhirLembur = null;
            BigDecimal paramBiayaJabatan = null;
            BigDecimal persenBiayaJabatan = null;
            List<MappingPersenGaji> listOfMappingPersenGaji = new ArrayList<MappingPersenGaji>();
            String createdWho = payrollHeaderBean.getCreatedWho();
            ImCompany company = null;

            //checking periode dan tahun gaji tsb jika masih dalam proses di table it_hris_payroll_temp maka akan throws message bahwa belum rampung di proses

            Map hsCriteria = new HashMap<>();
            hsCriteria.put("bulan", periodePayroll);
            hsCriteria.put("tahun", tahunPayroll);
            hsCriteria.put("tipe_payroll", tipePayroll);
            hsCriteria.put("branch_id", branchId);
            List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

            try {
                payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
            }

            if (payrollTempEntityList.isEmpty()) {

                //checking jika pernah di generate periode dan tahun gaji di table it_hris_payroll maka akan di throws message bahwa sudah pernah di proses

                hsCriteria = new HashMap<>();
                hsCriteria.put("bulan", periodePayroll);
                hsCriteria.put("tahun", tahunPayroll);
                hsCriteria.put("tipe_payroll", tipePayroll);
                hsCriteria.put("branch_id", branchId);
                hsCriteria.put("flag", "Y");
                hsCriteria.put("aproval_flag", "Y");
                List<ItHrisPayrollEntity> payrollEntityList = new ArrayList<>();

                try {
                    payrollEntityList = payrollDao.getByCriteria(hsCriteria);
                } catch (HibernateException e) {
                    logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                    throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
                }

                if (payrollEntityList.isEmpty()) {

                    //get data param global dari im_company ( tanggal awal lembur dan tanggal akhir lembur ) dan tahun skala gaji

                    try {
                        company = companyDao.getCompanyInfo("Y");
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when get company data, please inform to your admin...," + e.getMessage());
                    }

                    if (company.getPeriodeGaji() != null && !"".equalsIgnoreCase(company.getPeriodeGaji())) {

                        tahunSkalaPayroll = company.getPeriodeGaji();
                    } else {
                        logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Tidak ditemukan periode gaji pada master Company.");
                        throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Tidak ditemukan periode gaji pada master Company, please info to your admin...");
                    }

                    if (company.getPayrollTanggalLemburAwal() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAwal()) &&
                            company.getPayrollTanggalLemburAkhir() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAkhir())) {

                        tanggalLemburAwal = company.getPayrollTanggalLemburAwal();
                        tanggalLemburAkhir = company.getPayrollTanggalLemburAkhir();

                        int bulanGaji = Integer.parseInt(periodePayroll);
                        int bulanGajiSebelumnya = bulanGaji - 1;

                        if (bulanGajiSebelumnya == 0) {

                            bulanGajiSebelumnya = 12;
                            int tahunGaji = Integer.parseInt(tahunPayroll);
                            int tahunGajiSebelumnya = tahunGaji - 1;

                            String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                            String stThnGajiSebelumnya = String.valueOf(tahunGajiSebelumnya);
                            tglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(stThnGajiSebelumnya);
                            tglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                            periodePayrollSebelumnya = stBlnGajiSebelumnya;
                            tahunPayrollSebelumnya = stThnGajiSebelumnya;

                        } else {

                            String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                            tglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(tahunPayroll);
                            tglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                            periodePayrollSebelumnya = stBlnGajiSebelumnya;
                            tahunPayrollSebelumnya = tahunPayroll;

                        }

                    } else {
                        logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company.");
                        throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company, please info to your admin...");
                    }

                    if (company.getBiayaJabatan() != null && company.getBiayaJabatanPersentase() != null) {

                        paramBiayaJabatan = company.getBiayaJabatan();
                        persenBiayaJabatan = company.getBiayaJabatanPersentase();

                    } else {
                        logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Tidak ditemukan parameter biaya jabatan dan atau persen biaya jabatan pada master Company.");
                        throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll]  Tidak ditemukan parameter biaya jabatan dan atau persen biaya jabatan pada master Company, please info to your admin...");
                    }

                    //get data mapping persen gaji
//                    List<ImHrisMappingPersenGaji> mappingPersenGajiList = mappingPersenGajiDao.getAllActive();
                    //RAKA==>method diatas tidak ada, saya terjemahkan sendiri
                    Map criteria = new HashMap();
                    criteria.put("flag", "Y");
                    List<ImHrisMappingPersenGaji> mappingPersenGajiList = mappingPersenGajiDao.getByCriteria(criteria);

                    for (ImHrisMappingPersenGaji imHrisMappingPersenGaji : mappingPersenGajiList) {
                        MappingPersenGaji mappingPersenGaji = new MappingPersenGaji();
                        mappingPersenGaji.setNamaMappingPersenGaji(imHrisMappingPersenGaji.getNamaMappingPersenGaji());
                        mappingPersenGaji.setJenisGaji(imHrisMappingPersenGaji.getJenisGaji());
                        mappingPersenGaji.setPresentase(imHrisMappingPersenGaji.getPresentase());
                        listOfMappingPersenGaji.add(mappingPersenGaji);
                    }

                    //get data payroll berdasarkan tipe gaji
                    List<ItHrisPayrollTempEntity> listOfItPayrollTemp = new ArrayList<>();

                    if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { // payroll/gaji bulanan

                        try {
                            // Get data initial payroll bulanan  from database
                            listOfInitialPayroll = payrollDao.getInitialDataPayrollBulanan(branchId, periodePayroll, tahunPayroll, periodePayrollSebelumnya, tahunPayrollSebelumnya, tahunSkalaPayroll, tglAwalLembur, tglAkhirLembur);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when get initial data payroll bulanan, please inform to your admin...," + e.getMessage());
                        }

                        //jika periode gaji bulan 12, di ambil data pph periode 1-11
                        if (CommonConstant.BULAN_12.equalsIgnoreCase(periodePayroll)) {

                            List<PayrollPph> listOfInitialPphUntilNov = new ArrayList<>();
                            try {
                                // Get data pph payroll bulan 1-11  from database
                                listOfInitialPphUntilNov = payrollPphDao.getInitialDataPphPayrollUntilNov(branchId,tahunPayroll);
                            } catch (HibernateException e) {
                                logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                                throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when get initial data pph payroll sampai bulan nov, please inform to your admin...," + e.getMessage());
                            }

                            //untuk copy data list pph s.d nov ke initial pagawai payroll
                            for (PegawaiPayroll itemPegawaiPayroll : listOfInitialPayroll) {

                                List<PayrollPph> filterPayrollPphUntilNOv = listOfInitialPphUntilNov.stream().filter(
                                        p -> p.getNip().equalsIgnoreCase(itemPegawaiPayroll.getNip())
                                ).collect(Collectors.toList());

                                //mapping ke model mapping persen gaji
                                itemPegawaiPayroll.setListOfPphUntilNov(filterPayrollPphUntilNOv);

                            }

                        }

                        //perhitungan gaji dan pph, selanjutnya di copy data ke it_payroll_temp
                        listOfItPayrollTemp = initialListPegawaiPayrollTemp(listOfInitialPayroll, listOfMappingPersenGaji, paramBiayaJabatan, persenBiayaJabatan, createdWho, periodePayroll, tahunPayroll);

                    } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_CUTI_TAHUNAN.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_CUTI_PANJANG.equalsIgnoreCase(tipePayroll)) { // THR/Insentif/Jasop / Cuti Panjang / Cuti Tahunan

                        try {
                            // Get data initial income non rutin  from database
                            listOfInitialPayroll = payrollDao.getInitialDataIncomeNonRutin(branchId, periodePayroll, tahunPayroll, tahunSkalaPayroll, tipePayroll);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when get initial data income non rutin, please inform to your admin...," + e.getMessage());
                        }

                        //perhitungan income non rutin dan pph, selanjutnya di copy data ke it_payroll_temp
                        listOfItPayrollTemp = initialListPegawaiPayrollTemp(listOfInitialPayroll, listOfMappingPersenGaji, paramBiayaJabatan, persenBiayaJabatan, createdWho, periodePayroll, tahunPayroll);

                    }

                    //save to table it_hris_payroll_header

                    ItHrisPayrollHeaderEntity itHrisPayrollHeaderEntity = new ItHrisPayrollHeaderEntity();
                    String idPayrollHeader = null;
                    try {
                        idPayrollHeader = payrollHeaderDao.getNextPayrollHeaderId(periodePayroll,tahunPayroll);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when get sequence payroll header, please inform to your admin...," + e.getMessage());
                    }

                    itHrisPayrollHeaderEntity.setPayrollHeaderId(idPayrollHeader);
                    itHrisPayrollHeaderEntity.setTipePayroll(tipePayroll);
                    itHrisPayrollHeaderEntity.setBranchId(branchId);
                    itHrisPayrollHeaderEntity.setBulan(periodePayroll);
                    itHrisPayrollHeaderEntity.setTahun(tahunPayroll);
                    itHrisPayrollHeaderEntity.setAction("C");
                    itHrisPayrollHeaderEntity.setFlag("Y");
                    itHrisPayrollHeaderEntity.setCreatedDate(CommonUtil.getCurrentDateTimes());
                    itHrisPayrollHeaderEntity.setCreatedWho(createdWho);
                    itHrisPayrollHeaderEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());
                    itHrisPayrollHeaderEntity.setLastUpdateWho(createdWho);

                    try {
                        payrollHeaderDao.addAndSave(itHrisPayrollHeaderEntity);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when save payroll header, please inform to your admin...," + e.getMessage());
                    }

                    //save to table it_hris_payroll_temp dan it_hris_payroll_pph_temp

                    for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : listOfItPayrollTemp) {

                        itHrisPayrollTempEntity.setPayrollHeaderId(idPayrollHeader);

                        try {
                            payrollTempDao.addAndSave(itHrisPayrollTempEntity);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Found problem when save payroll temp/pph temp, please inform to your admin...," + e.getMessage());
                        }

                    }

                    //sorting pegawai payroll based on BOC-BOD-Peg.Tetap-PKWT
                    listOfSortedInitialPayroll = sortingListPegawaiPayroll(listOfInitialPayroll);

                } else {

                    logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Ditemukan periode-tahun gaji yang sudah di proses.");
                    throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Ditemukan periode-tahun gaji yang sudah di proses., please info to your admin...");

                }

            } else {

                logger.error("[PayrollBoImpl.saveInitialCalculatePayroll] Ditemukan periode-tahun gaji yang masih dalam proses.Silakan edit.");
                throw new GeneralBOException("[PayrollBoImpl.saveInitialCalculatePayroll] Ditemukan periode-tahun gaji yang masih dalam proses.Silakan edit., please info to your admin...");

            }
        }

        logger.info("[PayrollBoImpl.saveInitialCalculatePayroll] end process <<<");

        //kirim data pegawai payroll ke depan untuk ditampilkan data ke ui
        return listOfSortedInitialPayroll;

    }

    //updated by ferdi, 01-12-2020, save approval sdm YES ke table payroll header
    @Override
    public void saveApprovalSdmPayroll(PayrollHeader payrollHeaderBean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.saveApprovalSdmPayroll] start process >>>");

        if (payrollHeaderBean != null) {

            //get tipe gaji
            String tipePayroll = payrollHeaderBean.getTipePayroll();
            String periodePayroll = payrollHeaderBean.getBulan();
            String tahunPayroll = payrollHeaderBean.getTahun();
            String branchId = payrollHeaderBean.getBranchId();
            String payrollHeaderId = payrollHeaderBean.getPayrollHeaderId();
            String createdWho = payrollHeaderBean.getCreatedWho();

            //checking periode dan tahun gaji tsb jika masih dalam proses di table it_hris_payroll_temp maka akan throws message bahwa belum rampung di proses

            Map hsCriteria = new HashMap<>();
            hsCriteria.put("bulan", periodePayroll);
            hsCriteria.put("tahun", tahunPayroll);
            hsCriteria.put("tipe_payroll", tipePayroll);
            hsCriteria.put("branch_id", branchId);
            hsCriteria.put("payroll_header_id", payrollHeaderId);
            List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

            try {
                payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.saveApprovalSdmPayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.saveApprovalSdmPayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
            }

            if (!payrollTempEntityList.isEmpty()) {

                //update it_hris_payroll_header, approval_sdm = Y

                ItHrisPayrollHeaderEntity itHrisPayrollHeaderEntity = new ItHrisPayrollHeaderEntity();
                try {
                    itHrisPayrollHeaderEntity = payrollHeaderDao.getDataView(payrollHeaderId);
                } catch (HibernateException e) {
                    logger.error("[PayrollBoImpl.saveApprovalSdmPayroll] Error, " + e.getMessage());
                    throw new GeneralBOException("[PayrollBoImpl.saveApprovalSdmPayroll] Found problem when get payroll header data, please inform to your admin...," + e.getMessage());
                }

                if (itHrisPayrollHeaderEntity!=null) {

                    itHrisPayrollHeaderEntity.setAction("U");
                    itHrisPayrollHeaderEntity.setApprovalSdmFlag("Y");
                    itHrisPayrollHeaderEntity.setApprovalSdmName(createdWho);
                    itHrisPayrollHeaderEntity.setApprovalSdmDate(CommonUtil.getCurrentDateTimes());
                    itHrisPayrollHeaderEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());
                    itHrisPayrollHeaderEntity.setLastUpdateWho(createdWho);

                    try {
                        payrollHeaderDao.updateAndSave(itHrisPayrollHeaderEntity);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.saveApprovalSdmPayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.saveApprovalSdmPayroll] Found problem when save update payroll header set approval sdm YES, please inform to your admin...," + e.getMessage());
                    }

                } else {

                    logger.error("[PayrollBoImpl.saveApprovalSdmPayroll] Tidak ditemukan payroll Header yang bisa di-proses.");
                    throw new GeneralBOException("[PayrollBoImpl.saveApprovalSdmPayroll] Tidak ditemukan payroll Header yang bisa di-proses.., please info to your admin...");

                }

            } else {

                logger.error("[PayrollBoImpl.saveApprovalSdmPayroll] Tidak ditemukan periode-tahun gaji yang masih dalam proses.");
                throw new GeneralBOException("[PayrollBoImpl.saveApprovalSdmPayroll] Tidak ditemukan periode-tahun gaji yang masih dalam proses., please info to your admin...");

            }
        }

        logger.info("[PayrollBoImpl.saveApprovalSdmPayroll] end process <<<");

    }

    //updated by ferdi, 01-12-2020, save edit proses each item pegawai berikut dengan reproses perhitungan gaji (refreshing intial data pegawai payroll jika ada param yang masih keliru)
    @Override
    public PegawaiPayroll saveEditItemCalculatePayroll(PegawaiPayroll pegawaiPayrollBean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.saveEditItemCalculatePayroll] start process >>>");

        if (pegawaiPayrollBean != null) {

            //get tipe gaji
            String tipePayroll = pegawaiPayrollBean.getTipePayroll();
            String periodePayroll = pegawaiPayrollBean.getPeriodePayroll();
            String tahunPayroll = pegawaiPayrollBean.getTahunPayroll();
            String branchId = pegawaiPayrollBean.getBranchId();
            String nip = pegawaiPayrollBean.getNip();
            String tahunSkalaPayroll = null;
            String tanggalLemburAwal = null;
            String tanggalLemburAkhir = null;
            String tglAwalLembur = null;
            String tglAkhirLembur = null;
            BigDecimal paramBiayaJabatan = null;
            BigDecimal persenBiayaJabatan = null;
            List<MappingPersenGaji> listOfMappingPersenGaji = new ArrayList<MappingPersenGaji>();
            String lastUpdateWho = pegawaiPayrollBean.getLastUpdateWho();
            ImCompany company = null;

            //checking nip, periode dan tahun gaji tsb jika masih dalam proses di table it_hris_payroll_temp maka akan throws message bahwa belum rampung di proses

            Map hsCriteria = new HashMap<>();
            hsCriteria.put("bulan", periodePayroll);
            hsCriteria.put("tahun", tahunPayroll);
            hsCriteria.put("tipe_payroll", tipePayroll);
            hsCriteria.put("branch_id", branchId);
            hsCriteria.put("nip", nip);
            List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

            try {
                payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
            }

            if (!payrollTempEntityList.isEmpty()) {

                //checking jika pernah di generate periode dan tahun gaji di table it_hris_payroll maka akan di throws message bahwa sudah pernah di proses

                hsCriteria = new HashMap<>();
                hsCriteria.put("bulan", periodePayroll);
                hsCriteria.put("tahun", tahunPayroll);
                hsCriteria.put("tipe_payroll", tipePayroll);
                hsCriteria.put("branch_id", branchId);
                hsCriteria.put("nip", nip);
                hsCriteria.put("flag", "Y");
                hsCriteria.put("aproval_flag", "Y");
                List<ItHrisPayrollEntity> payrollEntityList = new ArrayList<>();

                try {
                    payrollEntityList = payrollDao.getByCriteria(hsCriteria);
                } catch (HibernateException e) {
                    logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Error, " + e.getMessage());
                    throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
                }

                if (payrollEntityList.isEmpty()) {

                    //get data param global dari im_company ( tanggal awal lembur dan tanggal akhir lembur ) dan tahun skala gaji

                    try {
                        company = companyDao.getCompanyInfo("Y");
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Found problem when get company data, please inform to your admin...," + e.getMessage());
                    }

                    if (company.getPeriodeGaji() != null && !"".equalsIgnoreCase(company.getPeriodeGaji())) {

                        tahunSkalaPayroll = company.getPeriodeGaji();
                    } else {
                        logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Tidak ditemukan periode gaji pada master Company.");
                        throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Tidak ditemukan periode gaji pada master Company, please info to your admin...");
                    }

                    if (company.getPayrollTanggalLemburAwal() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAwal()) &&
                            company.getPayrollTanggalLemburAkhir() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAkhir())) {

                        tanggalLemburAwal = company.getPayrollTanggalLemburAwal();
                        tanggalLemburAkhir = company.getPayrollTanggalLemburAkhir();

                        int bulanGaji = Integer.parseInt(periodePayroll);
                        int bulanGajiSebelumnya = bulanGaji - 1;

                        if (bulanGajiSebelumnya == 0) {

                            bulanGajiSebelumnya = 12;
                            int tahunGaji = Integer.parseInt(tahunPayroll);
                            int tahunGajiSebelumnya = tahunGaji - 1;

                            String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                            String stThnGajiSebelumnya = String.valueOf(tahunGajiSebelumnya);
                            tglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(stThnGajiSebelumnya);
                            tglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                        } else {

                            String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                            tglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(tahunPayroll);
                            tglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                        }

                    } else {
                        logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company.");
                        throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company, please info to your admin...");
                    }

                    if (company.getBiayaJabatan() != null && company.getBiayaJabatanPersentase() != null) {

                        paramBiayaJabatan = company.getBiayaJabatan();
                        persenBiayaJabatan = company.getBiayaJabatanPersentase();

                    } else {
                        logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Tidak ditemukan parameter biaya jabatan dan atau persen biaya jabatan pada master Company.");
                        throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll]  Tidak ditemukan parameter biaya jabatan dan atau persen biaya jabatan pada master Company, please info to your admin...");
                    }

                    //get data mapping persen gaji
//                    List<ImHrisMappingPersenGaji> mappingPersenGajiList = mappingPersenGajiDao.getAllActive();
                    //RAKA==>method diatas tidak ada, saya terjemahkan sendiri
                    Map criteria = new HashMap();
                    criteria.put("flag", "Y");
                    List<ImHrisMappingPersenGaji> mappingPersenGajiList = mappingPersenGajiDao.getByCriteria(criteria);

                    for (ImHrisMappingPersenGaji imHrisMappingPersenGaji : mappingPersenGajiList) {
                        MappingPersenGaji mappingPersenGaji = new MappingPersenGaji();
                        mappingPersenGaji.setNamaMappingPersenGaji(imHrisMappingPersenGaji.getNamaMappingPersenGaji());
                        mappingPersenGaji.setJenisGaji(imHrisMappingPersenGaji.getJenisGaji());
                        mappingPersenGaji.setPresentase(imHrisMappingPersenGaji.getPresentase());
                        listOfMappingPersenGaji.add(mappingPersenGaji);
                    }

                    //get refresh data initial for pegawai payroll berdasarkan tipe gaji
                    PegawaiPayroll refreshInitialPegawaiPayroll = null;
                    boolean removedItemPegawaiPayroll = false;
                    ItHrisPayrollTempEntity itPayrollTemp = new ItHrisPayrollTempEntity();

                    if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { // payroll/gaji bulanan

                        try {
                            //get updated param payroll bulanan then setup to pegawai payroll
                            refreshInitialPegawaiPayroll = payrollDao.refreshInitialDataPayrollBulanan(nip, branchId, periodePayroll, tahunPayroll, tahunSkalaPayroll, tglAwalLembur, tglAkhirLembur);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Found problem when get refresh initial data payroll bulanan based on nip, please inform to your admin...," + e.getMessage());
                        }

                        //jika tidak muncul datanya maka data dgn nip lama di hilangkan dari temp
                        if (refreshInitialPegawaiPayroll== null)  removedItemPegawaiPayroll = true;

                        if (!removedItemPegawaiPayroll) {

                            //recalculate gaji dan pph, selanjutnya di copy data ke it_payroll_temp
                            itPayrollTemp = refreshInitialPegawaiPayrollTemp(refreshInitialPegawaiPayroll, pegawaiPayrollBean, listOfMappingPersenGaji, paramBiayaJabatan, persenBiayaJabatan, lastUpdateWho, periodePayroll, tahunPayroll);

                        }

                    } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_CUTI_TAHUNAN.equalsIgnoreCase(tipePayroll) ||
                            CommonConstant.CODE_CUTI_PANJANG.equalsIgnoreCase(tipePayroll)) { // THR/Insentif/Jasop / Cuti Panjang / Cuti Tahunan

                        try {
                            //get updated param income non rutin then setup to pegawai payroll
                            refreshInitialPegawaiPayroll = payrollDao.refreshInitialDataIncomeNonRutin(nip, branchId, periodePayroll, tahunPayroll, tahunSkalaPayroll, tipePayroll);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Found problem when get refresh initial data income non rutin, please inform to your admin...," + e.getMessage());
                        }

                        //jika tidak muncul datanya maka data dgn nip lama di hilangkan dari temp
                        if (refreshInitialPegawaiPayroll== null)  removedItemPegawaiPayroll = true;

                        if (!removedItemPegawaiPayroll) {

                            //recalculate income non rutin dan pph, selanjutnya di copy data ke it_payroll_temp
                            itPayrollTemp = refreshInitialPegawaiPayrollTemp(refreshInitialPegawaiPayroll, pegawaiPayrollBean, listOfMappingPersenGaji, paramBiayaJabatan, persenBiayaJabatan, lastUpdateWho, periodePayroll, tahunPayroll);
                        }
                    }

                    if (removedItemPegawaiPayroll) { //jika tidak ada datanya lagi, maka di remove dari table  it_hris_payroll_temp dan it_hris_payroll_pph_temp

                        itPayrollTemp = payrollTempEntityList.get(0);

                        //delete to table it_hris_payroll_temp dan it_hris_payroll_pph_temp

                        try {
                            payrollTempDao.deleteAndSave(itPayrollTemp);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Found problem when delete payroll temp/pph temp, please inform to your admin...," + e.getMessage());
                        }


                    } else { //save perubahan terakhir ke payroll temp dan pph temp

                        //save to table it_hris_payroll_temp dan it_hris_payroll_pph_temp

                        try {
                            payrollTempDao.updateAndSave(itPayrollTemp);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Found problem when save update payroll temp/pph temp, please inform to your admin...," + e.getMessage());
                        }

                    }

                } else {

                    logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Ditemukan nip pada periode-tahun gaji yang sudah di proses.");
                    throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Ditemukan nip periode-tahun gaji yang sudah di proses., please info to your admin...");

                }

            } else {

                logger.error("[PayrollBoImpl.saveEditItemCalculatePayroll] Tidak Ditemukan nip pada periode-tahun gaji yang masih dalam proses.");
                throw new GeneralBOException("[PayrollBoImpl.saveEditItemCalculatePayroll] Tidak Ditemukan nip pada periode-tahun gaji yang masih dalam proses., please info to your admin...");

            }
        }

        logger.info("[PayrollBoImpl.saveEditItemCalculatePayroll] end process <<<");

        //kirim hasil edit data pegawai payroll ke depan untuk ditampilkan data ke ui
        return pegawaiPayrollBean;

    }

    //updated by ferdi, 01-12-2020, refresh all pegawai payroll berikut dengan reproses perhitungan gaji
    @Override
    public List<PegawaiPayroll> refreshAllCalculatePayroll(PayrollHeader payrollHeaderBean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.refreshAllCalculatePayroll] start process >>>");

        List<PegawaiPayroll> listOfInitialPayroll = new ArrayList<>();
        List<PegawaiPayroll> listOfSortingIntiialPegawaiPayroll = new ArrayList<>();

        if (payrollHeaderBean != null) {

            //get tipe gaji
            String tipePayroll = payrollHeaderBean.getTipePayroll();
            String periodePayroll = payrollHeaderBean.getBulan();
            String tahunPayroll = payrollHeaderBean.getTahun();
            String payrollHeaderId = payrollHeaderBean.getPayrollHeaderId();
            String periodePayrollSebelumnya = null;
            String tahunPayrollSebelumnya = null;
            String branchId = payrollHeaderBean.getBranchId();
            String tahunSkalaPayroll = null;
            String tanggalLemburAwal = null;
            String tanggalLemburAkhir = null;
            String tglAwalLembur = null;
            String tglAkhirLembur = null;
            BigDecimal paramBiayaJabatan = null;
            BigDecimal persenBiayaJabatan = null;
            List<MappingPersenGaji> listOfMappingPersenGaji = new ArrayList<MappingPersenGaji>();
            String createdWho = payrollHeaderBean.getCreatedWho();
            ImCompany company = null;

            //checking periode dan tahun gaji tsb jika masih dalam proses di table it_hris_payroll_temp maka akan throws message bahwa belum rampung di proses

            Map hsCriteria = new HashMap<>();
            hsCriteria.put("bulan", periodePayroll);
            hsCriteria.put("tahun", tahunPayroll);
            hsCriteria.put("tipe_payroll", tipePayroll);
            hsCriteria.put("branch_id", branchId);
            hsCriteria.put("payroll_header_id", payrollHeaderId);
            List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

            try {
                payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
            }

            if (!payrollTempEntityList.isEmpty()) {

                //get payroll header id
                ItHrisPayrollTempEntity itemItHrisPayrollTempEntity = (ItHrisPayrollTempEntity) payrollTempEntityList.get(0);
                String idPayrollHeader = itemItHrisPayrollTempEntity.getPayrollHeaderId();

                //remove all payroll temp dan pph temp
                for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : payrollTempEntityList) {

                    try {
                        payrollTempDao.deleteAndSave(itHrisPayrollTempEntity);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Found problem when delete payroll temp/pph temp, please inform to your admin...," + e.getMessage());
                    }

                }

                //reproses get intial pegawai payroll
                //get data param global dari im_company ( tanggal awal lembur dan tanggal akhir lembur ) dan tahun skala gaji

                try {
                    company = companyDao.getCompanyInfo("Y");
                } catch (HibernateException e) {
                    logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Error, " + e.getMessage());
                    throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Found problem when get company data, please inform to your admin...," + e.getMessage());
                }

                if (company.getPeriodeGaji() != null && !"".equalsIgnoreCase(company.getPeriodeGaji())) {

                    tahunSkalaPayroll = company.getPeriodeGaji();
                } else {
                    logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Tidak ditemukan periode gaji pada master Company.");
                    throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Tidak ditemukan periode gaji pada master Company, please info to your admin...");
                }

                if (company.getPayrollTanggalLemburAwal() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAwal()) &&
                        company.getPayrollTanggalLemburAkhir() != null && !"".equalsIgnoreCase(company.getPayrollTanggalLemburAkhir())) {

                    tanggalLemburAwal = company.getPayrollTanggalLemburAwal();
                    tanggalLemburAkhir = company.getPayrollTanggalLemburAkhir();

                    int bulanGaji = Integer.parseInt(periodePayroll);
                    int bulanGajiSebelumnya = bulanGaji - 1;

                    if (bulanGajiSebelumnya == 0) {

                        bulanGajiSebelumnya = 12;
                        int tahunGaji = Integer.parseInt(tahunPayroll);
                        int tahunGajiSebelumnya = tahunGaji - 1;

                        String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                        String stThnGajiSebelumnya = String.valueOf(tahunGajiSebelumnya);
                        tglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(stThnGajiSebelumnya);
                        tglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                        periodePayrollSebelumnya = stBlnGajiSebelumnya;
                        tahunPayrollSebelumnya = stThnGajiSebelumnya;

                    } else {

                        String stBlnGajiSebelumnya = String.valueOf(bulanGajiSebelumnya);
                        tglAwalLembur = tanggalLemburAwal.concat("-").concat(stBlnGajiSebelumnya).concat("-").concat(tahunPayroll);
                        tglAkhirLembur = tanggalLemburAkhir.concat("-").concat(periodePayroll).concat("-").concat(tahunPayroll);

                        periodePayrollSebelumnya = stBlnGajiSebelumnya;
                        tahunPayrollSebelumnya = tahunPayroll;

                    }

                } else {
                    logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company.");
                    throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Tidak ditemukan tanggal lembur awal atau tanggal lembur akhir pada master Company, please info to your admin...");
                }

                if (company.getBiayaJabatan() != null && company.getBiayaJabatanPersentase() != null) {

                    paramBiayaJabatan = company.getBiayaJabatan();
                    persenBiayaJabatan = company.getBiayaJabatanPersentase();

                } else {
                    logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Tidak ditemukan parameter biaya jabatan dan atau persen biaya jabatan pada master Company.");
                    throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll]  Tidak ditemukan parameter biaya jabatan dan atau persen biaya jabatan pada master Company, please info to your admin...");
                }

                //get data mapping persen gaji
//                List<ImHrisMappingPersenGaji> mappingPersenGajiList = mappingPersenGajiDao.getAllActive();
                //RAKA==>method diatas tidak ada, saya terjemahkan sendiri
                Map criteria = new HashMap();
                criteria.put("flag", "Y");
                List<ImHrisMappingPersenGaji> mappingPersenGajiList = mappingPersenGajiDao.getByCriteria(criteria);

                for (ImHrisMappingPersenGaji imHrisMappingPersenGaji : mappingPersenGajiList) {
                    MappingPersenGaji mappingPersenGaji = new MappingPersenGaji();
                    mappingPersenGaji.setNamaMappingPersenGaji(imHrisMappingPersenGaji.getNamaMappingPersenGaji());
                    mappingPersenGaji.setJenisGaji(imHrisMappingPersenGaji.getJenisGaji());
                    mappingPersenGaji.setPresentase(imHrisMappingPersenGaji.getPresentase());
                    listOfMappingPersenGaji.add(mappingPersenGaji);
                }

                //get data payroll berdasarkan tipe gaji
                List<ItHrisPayrollTempEntity> listOfItPayrollTemp = new ArrayList<>();

                if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { // payroll/gaji bulanan

                    try {
                        // Get data initial payroll bulanan  from database
                        listOfInitialPayroll = payrollDao.getInitialDataPayrollBulanan(branchId, periodePayroll, tahunPayroll, periodePayrollSebelumnya, tahunPayrollSebelumnya, tahunSkalaPayroll, tglAwalLembur, tglAkhirLembur);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Found problem when get initial data payroll bulanan, please inform to your admin...," + e.getMessage());
                    }

                    //jika periode gaji bulan 12, di ambil data pph periode 1-11
                    if (CommonConstant.BULAN_12.equalsIgnoreCase(periodePayroll)) {

                        List<PayrollPph> listOfInitialPphUntilNov = new ArrayList<>();
                        try {
                            // Get data pph payroll bulan 1-11  from database
                            listOfInitialPphUntilNov = payrollPphDao.getInitialDataPphPayrollUntilNov(branchId,tahunPayroll);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Found problem when get initial data pph payroll sampai bulan nov, please inform to your admin...," + e.getMessage());
                        }

                        //untuk copy data list pph s.d nov ke initial pagawai payroll
                        for (PegawaiPayroll itemPegawaiPayroll : listOfInitialPayroll) {

                            List<PayrollPph> filterPayrollPphUntilNOv = listOfInitialPphUntilNov.stream().filter(
                                    p -> p.getNip().equalsIgnoreCase(itemPegawaiPayroll.getNip())
                            ).collect(Collectors.toList());

                            //mapping ke model mapping persen gaji
                            itemPegawaiPayroll.setListOfPphUntilNov(filterPayrollPphUntilNOv);

                        }

                    }

                    //perhitungan gaji dan pph, selanjutnya di copy data ke it_payroll_temp
                    listOfItPayrollTemp = initialListPegawaiPayrollTemp(listOfInitialPayroll, listOfMappingPersenGaji, paramBiayaJabatan, persenBiayaJabatan, createdWho, periodePayroll, tahunPayroll);

                } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll) ||
                        CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll) ||
                        CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll) ||
                        CommonConstant.CODE_CUTI_TAHUNAN.equalsIgnoreCase(tipePayroll) ||
                        CommonConstant.CODE_CUTI_PANJANG.equalsIgnoreCase(tipePayroll)) { // THR/Insentif/Jasop / Cuti Panjang / Cuti Tahunan

                    try {
                        // Get data initial income non rutin  from database
                        listOfInitialPayroll = payrollDao.getInitialDataIncomeNonRutin(branchId, periodePayroll, tahunPayroll, tahunSkalaPayroll, tipePayroll);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Found problem when get initial data income non rutin, please inform to your admin...," + e.getMessage());
                    }

                    //perhitungan income non rutin dan pph, selanjutnya di copy data ke it_payroll_temp
                    listOfItPayrollTemp = initialListPegawaiPayrollTemp(listOfInitialPayroll, listOfMappingPersenGaji, paramBiayaJabatan, persenBiayaJabatan, createdWho, periodePayroll, tahunPayroll);

                }

                //save to table it_hris_payroll_temp dan it_hris_payroll_pph_temp

                for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : listOfItPayrollTemp) {

                    itHrisPayrollTempEntity.setPayrollHeaderId(idPayrollHeader);

                    try {
                        payrollTempDao.addAndSave(itHrisPayrollTempEntity);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Found problem when save payroll temp/pph temp, please inform to your admin...," + e.getMessage());
                    }

                }

                //sorting pegawai payroll based on BOC-BOD-Peg.Tetap-PKWT
                listOfSortingIntiialPegawaiPayroll = sortingListPegawaiPayroll(listOfInitialPayroll);


            } else {

                logger.error("[PayrollBoImpl.refreshAllCalculatePayroll] Tidak Ditemukan periode-tahun gaji yang masih dalam proses.");
                throw new GeneralBOException("[PayrollBoImpl.refreshAllCalculatePayroll] Tidak Ditemukan periode-tahun gaji yang masih dalam proses., please info to your admin...");

            }
        }

        logger.info("[PayrollBoImpl.refreshAllCalculatePayroll] end process <<<");

        //kirim data pegawai payroll ke depan untuk ditampilkan data ke ui
        return listOfSortingIntiialPegawaiPayroll;
    }

    //updated by ferdi, 01-12-2020, edit all pegawai payroll untuk di cek perhitungan tiap pegawai
    @Override
    public List<PegawaiPayroll> editAllCalculatePayroll(PayrollHeader payrollHeaderBean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.editAllCalculatePayroll] start process >>>");

        List<PegawaiPayroll> listOfEditPegawaiPayroll = new ArrayList<>();
        List<PegawaiPayroll> listOfSortingEditPegawaiPayroll = new ArrayList<>();

        if (payrollHeaderBean != null) {

            //get tipe gaji
            String tipePayroll = payrollHeaderBean.getTipePayroll();
            String periodePayroll = payrollHeaderBean.getBulan();
            String tahunPayroll = payrollHeaderBean.getTahun();
            String branchId = payrollHeaderBean.getBranchId();
            String payrollHeaderId = payrollHeaderBean.getPayrollHeaderId();

            //checking periode dan tahun gaji tsb jika tidak ada dalam proses di table it_hris_payroll_temp maka akan throws message bahwa data tidak ditemukan

            Map hsCriteria = new HashMap<>();
            hsCriteria.put("bulan", periodePayroll);
            hsCriteria.put("tahun", tahunPayroll);
            hsCriteria.put("tipe_payroll", tipePayroll);
            hsCriteria.put("branch_id", branchId);
            hsCriteria.put("payroll_header_id", payrollHeaderId);
            List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

            try {
                payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.editAllCalculatePayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.editAllCalculatePayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
            }

            if (!payrollTempEntityList.isEmpty()) {

                for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : payrollTempEntityList) {

                    PegawaiPayroll pegawaiPayroll = copyDataPayrollTempToPegawaiPayroll(itHrisPayrollTempEntity);
                    pegawaiPayroll.setFlagPrint("N");
                    pegawaiPayroll.setFlagEdit("Y");

                    listOfEditPegawaiPayroll.add(pegawaiPayroll);
                }

                //sorting pegawai payroll based on BOC-BOD-Peg.Tetap-PKWT
                listOfSortingEditPegawaiPayroll = sortingListPegawaiPayroll(listOfEditPegawaiPayroll);

            } else {

                logger.error("[PayrollBoImpl.editAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang masih dalam proses.");
                throw new GeneralBOException("[PayrollBoImpl.editAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang masih dalam proses., please info to your admin...");

            }
        }

        logger.info("[PayrollBoImpl.editAllCalculatePayroll] end process <<<");

        //kirim data pegawai payroll ke depan untuk ditampilkan edit data ke ui

        return listOfSortingEditPegawaiPayroll;

    }

    //updated by ferdi, 01-12-2020, search payroll,
    // *) approval sdm untuk approval bagian sdm setelah menyetujui gaji ( setelah approval maka tidak bisa di edit / refresh lagi hanya view only )
    // *) approval aks untuk approval pengeluaran gaji maka langsung generate JKK dan jurnal keuangan (hanya view only)
    // *) jika approval aks = NO, maka bisa di edit atau di refresh kembali
    @Override
    public List<PayrollHeader> searchCalculatePayroll(PayrollHeader payrollHeaderBean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.searchCalculatePayroll] start process >>>");

        List<PayrollHeader> payrollHeaderlList = new ArrayList<>();

        if (payrollHeaderBean!=null) {

            //get tipe gaji
            String tipePayroll = payrollHeaderBean.getTipePayroll();
            String periodePayroll = payrollHeaderBean.getBulan();
            String tahunPayroll = payrollHeaderBean.getTahun();
            String branchId = payrollHeaderBean.getBranchId();
            String periodePayrollSd = payrollHeaderBean.getBulansd();
            String tahunPayrollSd = payrollHeaderBean.getTahunsd();

            try {
                //get search all payroll header based on tipe payroll, bulan, tahun
                payrollHeaderlList = payrollHeaderDao.getPayrollSearch(branchId,periodePayroll,tahunPayroll,periodePayrollSd,tahunPayrollSd,tipePayroll);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.searchCalculatePayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.searchCalculatePayroll] Found problem when searching data payroll all based tipe payroll, bulan, and tahun payroll, please inform to your admin...," + e.getMessage());
            }

            List<ImBranches> imBranchesList = new ArrayList<>();
            try {
                imBranchesList = branchDao.getAllBranch();
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.searchCalculatePayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.searchCalculatePayroll] Found problem when get branches, please inform to your admin...," + e.getMessage());
            }

            String branchName = null;
            if (!imBranchesList.isEmpty()) {

                List<ImBranches> filterdBranches = imBranchesList.stream().filter(
                        p -> p.getPrimaryKey().getId().contains(branchId)
                ).collect(Collectors.toList());

                ImBranches selectedImBranches = (ImBranches) filterdBranches.get(0);
                branchName = selectedImBranches.getBranchName();
            }

            for (PayrollHeader itemPayrollHeader : payrollHeaderlList) {

                itemPayrollHeader.setBranchName(branchName);

                if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { // payroll/gaji bulanan
                    itemPayrollHeader.setTipePayrollName("PAYROLL BULANAN");
                } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll)) { // thr
                    itemPayrollHeader.setTipePayrollName("TUNJ. HARI RAYA (THR)");
                } else if (CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll)) { // jasop
                    itemPayrollHeader.setTipePayrollName("TUNJ. JASA OPERASIONAL");
                } else if (CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll)) { // insentive
                    itemPayrollHeader.setTipePayrollName("TUNJ. INSENTIVE");
                } else if (CommonConstant.CODE_CUTI_PANJANG.equalsIgnoreCase(tipePayroll)) { // cuti panjang
                    itemPayrollHeader.setTipePayrollName("TUNJ. CUTI PANJANG");
                } else if (CommonConstant.CODE_CUTI_TAHUNAN.equalsIgnoreCase(tipePayroll)) { // cuti tahunan
                    itemPayrollHeader.setTipePayrollName("TUNJ. CUTI TAHUNAN");
                } else if (CommonConstant.CODE_PENSIUN.equalsIgnoreCase(tipePayroll)) { // pensiun
                    itemPayrollHeader.setTipePayrollName("TUNJ. PENSIUN");
                } else if (CommonConstant.CODE_RAPEL.equalsIgnoreCase(tipePayroll)) { // rapel
                    itemPayrollHeader.setTipePayrollName("TUNJ. RAPEL");
                } else if (CommonConstant.CODE_PMP.equalsIgnoreCase(tipePayroll)) { // PMP ( sebelum pensiun )
                    itemPayrollHeader.setTipePayrollName("TUNJ. PMP");
                }

                if ("Y".equalsIgnoreCase(itemPayrollHeader.getApprovalSdmFlag()) && "Y".equalsIgnoreCase(itemPayrollHeader.getApprovalAksFlag())) { //jika sudah di appproval aks dan sdm / posting maka tidak bisa di edit/refresh hanya view only

                    itemPayrollHeader.setFlagEdit(false);
                    itemPayrollHeader.setFlagRefresh(false);
                    itemPayrollHeader.setFlagView(true);
                    itemPayrollHeader.setFlagSlip(true);
                    itemPayrollHeader.setEnableApprovalSdm(false);
                    itemPayrollHeader.setEnableApprovalAks(false);
                    itemPayrollHeader.setStatusPayroll("Sudah Diproses Keu");

                } else if ("Y".equalsIgnoreCase(itemPayrollHeader.getApprovalSdmFlag()) && ("".equalsIgnoreCase(itemPayrollHeader.getApprovalAksFlag()) || itemPayrollHeader.getApprovalAksFlag()==null)) { //jika sudah di approval sdm dan belum di approval aks, maka tidak bisa di edit/refresh hanya view only

                    itemPayrollHeader.setFlagEdit(false);
                    itemPayrollHeader.setFlagRefresh(false);
                    itemPayrollHeader.setFlagView(true);
                    itemPayrollHeader.setFlagSlip(false);
                    itemPayrollHeader.setEnableApprovalSdm(false);
                    itemPayrollHeader.setEnableApprovalAks(true);
                    itemPayrollHeader.setStatusPayroll("Sudah diproses SDM");

                } else { // jika belum di approval sdm maka masih bisa di lakukan edit / refresh

                    itemPayrollHeader.setFlagEdit(true);
                    itemPayrollHeader.setFlagRefresh(true);
                    itemPayrollHeader.setFlagView(false);
                    itemPayrollHeader.setFlagSlip(false);
                    itemPayrollHeader.setEnableApprovalSdm(true);
                    itemPayrollHeader.setEnableApprovalAks(false);
                    itemPayrollHeader.setStatusPayroll("Sedang diproses SDM");

                }
            }

        }

        logger.info("[PayrollBoImpl.searchCalculatePayroll] start process >>>");

        return payrollHeaderlList;

    }

    //updated by ferdi, 01-12-2020, view payroll dan bisa print slip pegawai jika sudah di approval sdm atau approval aks
    @Override
    public List<PegawaiPayroll> viewAllCalculatePayroll(PayrollHeader payrollHeaderBean) throws GeneralBOException {
        logger.info("[PayrollBoImpl.viewAllCalculatePayroll] start process >>>");

        List<PegawaiPayroll> listOfViewPegawaiPayroll = new ArrayList<>();
        List<PegawaiPayroll> listOfSortingViewPegawaiPayroll = new ArrayList<>();

        if (payrollHeaderBean != null) {

            //get tipe gaji
            String tipePayroll = payrollHeaderBean.getTipePayroll();
            String periodePayroll = payrollHeaderBean.getBulan();
            String tahunPayroll = payrollHeaderBean.getTahun();
            String branchId = payrollHeaderBean.getBranchId();
            String payrollHeaderId = payrollHeaderBean.getPayrollHeaderId();

            String approvedSdm = payrollHeaderBean.getApprovalSdmFlag();
            String approvedAks = payrollHeaderBean.getApprovalAksFlag();

            //checking periode dan tahun gaji tsb jika sudah di approval sdm saja maka diambil di table it_hris_payroll_temp, dan jika sudah di approve sdm dan keu makan diambil di table it_hris_payroll maka bisa tampil view only, jika tidak maka akan throws message data tidak ditemukan


            Map hsCriteria = new HashMap<>();
            hsCriteria.put("bulan", periodePayroll);
            hsCriteria.put("tahun", tahunPayroll);
            hsCriteria.put("tipe_payroll", tipePayroll);
            hsCriteria.put("branch_id", branchId);
            hsCriteria.put("payroll_header_id", payrollHeaderId);

            if ("Y".equalsIgnoreCase(approvedSdm) && "Y".equalsIgnoreCase(approvedAks)) {

                List<ItHrisPayrollEntity> payrollEntityList = new ArrayList<>();

                try {
                    payrollEntityList = payrollDao.getByCriteria(hsCriteria);
                } catch (HibernateException e) {
                    logger.error("[PayrollBoImpl.viewAllCalculatePayroll] Error, " + e.getMessage());
                    throw new GeneralBOException("[PayrollBoImpl.viewAllCalculatePayroll] Found problem when get payroll data, please inform to your admin...," + e.getMessage());
                }

                if (!payrollEntityList.isEmpty()) {

                    for (ItHrisPayrollEntity itHrisPayrollEntity : payrollEntityList) {

                        PegawaiPayroll pegawaiPayroll = copyDataPayrollToPegawaiPayroll(itHrisPayrollEntity);
                        pegawaiPayroll.setFlagPrint("Y");
                        pegawaiPayroll.setFlagEdit("N");
                        listOfViewPegawaiPayroll.add(pegawaiPayroll);
                    }

                    //sorting pegawai payroll based on BOC-BOD-Peg.Tetap-PKWT
                    listOfSortingViewPegawaiPayroll = sortingListPegawaiPayroll(listOfViewPegawaiPayroll);

                } else {

                    logger.error("[PayrollBoImpl.viewAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang sudah di-proses.");
                    throw new GeneralBOException("[PayrollBoImpl.viewAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang sudah di-proses., please info to your admin...");

                }



            } else if ("Y".equalsIgnoreCase(approvedSdm)) {

                List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

                try {
                    payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
                } catch (HibernateException e) {
                    logger.error("[PayrollBoImpl.viewAllCalculatePayroll] Error, " + e.getMessage());
                    throw new GeneralBOException("[PayrollBoImpl.viewAllCalculatePayroll] Found problem when get payroll data, please inform to your admin...," + e.getMessage());
                }

                if (!payrollTempEntityList.isEmpty()) {

                    for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : payrollTempEntityList) {

                        PegawaiPayroll pegawaiPayroll = copyDataPayrollTempToPegawaiPayroll(itHrisPayrollTempEntity);
                        pegawaiPayroll.setFlagPrint("N");
                        pegawaiPayroll.setFlagEdit("N");
                        listOfViewPegawaiPayroll.add(pegawaiPayroll);
                    }

                    //sorting pegawai payroll based on BOC-BOD-Peg.Tetap-PKWT
                    listOfSortingViewPegawaiPayroll = sortingListPegawaiPayroll(listOfViewPegawaiPayroll);


                } else {

                    logger.error("[PayrollBoImpl.viewAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang sudah di-proses.");
                    throw new GeneralBOException("[PayrollBoImpl.viewAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang sudah di-proses., please info to your admin...");

                }

            } else {

                logger.error("[PayrollBoImpl.viewAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang sudah di-proses.");
                throw new GeneralBOException("[PayrollBoImpl.viewAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang sudah di-proses., please info to your admin...");

            }

        }

        logger.info("[PayrollBoImpl.viewAllCalculatePayroll] end process <<<");

        //kirim data pegawai payroll ke depan untuk ditampilkan edit data ke ui

        return listOfSortingViewPegawaiPayroll;
    }

    //updated by ferdi, 01-12-2020, save posting payroll ke billing, dan approval aks YES di payroll header
    @Override
    public void savePostingAllCalculatePayroll(PayrollHeader payrollHeaderBean) throws GeneralBOException {

        logger.info("[PayrollBoImpl.savePostingAllCalculatePayroll] start process >>>");

        if (payrollHeaderBean != null) {

            //get tipe gaji
            String tipePayroll = payrollHeaderBean.getTipePayroll();
            String periodePayroll = payrollHeaderBean.getBulan();
            String tahunPayroll = payrollHeaderBean.getTahun();
            String branchId = payrollHeaderBean.getBranchId();
            String payrollHeaderId = payrollHeaderBean.getPayrollHeaderId();
            String createdWho = payrollHeaderBean.getCreatedWho();
            String createdWhoId = CommonUtil.userIdLogin();
            String approvalAksFlag = payrollHeaderBean.getApprovalAksFlag();
            String keteranganAks = payrollHeaderBean.getKeteranganAks();

            ItHrisPayrollHeaderEntity itHrisPayrollHeaderEntity = new ItHrisPayrollHeaderEntity();
            try {
                itHrisPayrollHeaderEntity = payrollHeaderDao.getDataView(payrollHeaderId);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when get payroll header data, please inform to your admin...," + e.getMessage());
            }

            if (itHrisPayrollHeaderEntity!=null) {

                if ("Y".equalsIgnoreCase(approvalAksFlag)) {


                    //checking periode dan tahun gaji tsb jika masih dalam proses di table it_hris_payroll_temp maka akan throws message bahwa belum rampung di proses

                    Map hsCriteria = new HashMap<>();
                    hsCriteria.put("bulan", periodePayroll);
                    hsCriteria.put("tahun", tahunPayroll);
                    hsCriteria.put("tipe_payroll", tipePayroll);
                    hsCriteria.put("branch_id", branchId);
                    hsCriteria.put("payroll_header_id", payrollHeaderId);
                    List<ItHrisPayrollTempEntity> payrollTempEntityList = new ArrayList<>();

                    try {
                        payrollTempEntityList = payrollTempDao.getByCriteria(hsCriteria);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when get payroll temp data, please inform to your admin...," + e.getMessage());
                    }

                    if (!payrollTempEntityList.isEmpty()) {

                        //prepare data based on mapping jurnal (gaji)
                        String transId = null;
                        String ketPayroll = null;
                        if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { // payroll/gaji bulanan
                            transId = CommonConstant.TRANSAKSI_ID_PAYROLL_BULANAN;
                            ketPayroll = "PAYROLL BULANAN";
                        } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll)) { // thr
                            transId = CommonConstant.TRANSAKSI_ID_THR;
                            ketPayroll = "TUNJANGAN HARI RAYA (THR)";
                        } else if (CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll)) { // jasop
                            transId = CommonConstant.TRANSAKSI_ID_JASOP;
                            ketPayroll = "TUNJANGAN JASA OPERASIONAL";
                        } else if (CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll)) { // insentive
                            transId = CommonConstant.TRANSAKSI_ID_INSENTIVE;
                            ketPayroll = "TUNJANGAN INSENTIVE";
                        } else if (CommonConstant.CODE_CUTI_PANJANG.equalsIgnoreCase(tipePayroll)) { // cuti panjang
                            transId = CommonConstant.TRANSAKSI_ID_CUTI_PANJANG;
                            ketPayroll = "TUNJANGAN CUTI PANJANG";
                        } else if (CommonConstant.CODE_CUTI_TAHUNAN.equalsIgnoreCase(tipePayroll)) { // cuti tahunan
                            transId = CommonConstant.TRANSAKSI_ID_CUTI_TAHUNAN;
                            ketPayroll = "TUNJANGAN CUTI TAHUNAN";
                        } else if (CommonConstant.CODE_PENSIUN.equalsIgnoreCase(tipePayroll)) { // pensiun
                            transId = CommonConstant.TRANSAKSI_ID_PENSIUN;
                            ketPayroll = "TUNJANGAN PENSIUN";
                        } else if (CommonConstant.CODE_RAPEL.equalsIgnoreCase(tipePayroll)) { // rapel
                            transId = CommonConstant.TRANSAKSI_ID_RAPEL;
                            ketPayroll = "TUNJANGAN RAPEL";
                        } else if (CommonConstant.CODE_PMP.equalsIgnoreCase(tipePayroll)) { // PMP ( sebelum pensiun )
                            transId = CommonConstant.TRANSAKSI_ID_PMP;
                            ketPayroll = "TUNJANGAN PMP";
                        }


                        //get master id from branch
                        List<ImBranches> imBranchesList = new ArrayList<>();
                        try {
                            imBranchesList = branchDao.getListBranchById(branchId);
                        } catch (HibernateException e) {
                            logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when get branch, please inform to your admin...," + e.getMessage());
                        }

                        String masterIdForBranch = null;
                        if (!imBranchesList.isEmpty()) {
                            ImBranches selectedImBranches = (ImBranches) imBranchesList.get(0);
                            masterIdForBranch = selectedImBranches.getMasterId();
                        }

                        Map buildDataBasedMappingJurnal = setupDataBasedMappingJurnal(tipePayroll,masterIdForBranch,transId,payrollTempEntityList);

                        //pindahkan dari table temp ke permanen
                        for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : payrollTempEntityList) {

                            ItHrisPayrollEntity itHrisPayrollEntity = copyDataItPayrollTempToItPayroll(itHrisPayrollTempEntity,periodePayroll,tahunPayroll,createdWho);

                            //delete table payroll temp dan pph temp secara permanent
                            try {
                                payrollTempDao.deleteAndSave(itHrisPayrollTempEntity);
                            } catch (HibernateException e) {
                                logger.error("[PayrollBoImpl.saveAllCalculatePayroll] Error, " + e.getMessage());
                                throw new GeneralBOException("[PayrollBoImpl.saveAllCalculatePayroll] Found problem when deleting payroll temp/pph temp, please inform to your admin...," + e.getMessage());
                            }

                            //insert ke table payroll dan pph secara permanent
                            try {
                                payrollDao.addAndSave(itHrisPayrollEntity);
                            } catch (HibernateException e) {
                                logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                                throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when saving payroll / pph permanently, please inform to your admin...," + e.getMessage());
                            }

                        }

                        //prepare jurnal ke billing system

                        String catatanJurnal = "Pembayaran Payroll ( " + ketPayroll + " ) untuk periode :" + periodePayroll + "/" + tahunPayroll ;
                        buildDataBasedMappingJurnal.put("keterangan",catatanJurnal);
                        buildDataBasedMappingJurnal.put("user_id",createdWhoId);
                        buildDataBasedMappingJurnal.put("user_who",createdWho);

                        ItJurnalEntity itJurnalEntity = null;
                        try {
                            itJurnalEntity = prepareCreateJurnal(transId, buildDataBasedMappingJurnal, branchId, "Y");
                        } catch (GeneralBOException e) {
                            logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                            throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when preparing jurnal save payroll, please inform to your admin...," + e.getMessage());
                        }

                        //create jurnal

                        if (itJurnalEntity!=null) {

                            try {
                                jurnalDao.addAndSave(itJurnalEntity);
                            } catch (HibernateException e) {
                                logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                                throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when saving jurnal payroll, please info to your admin..." + e.getMessage());
                            }

                            String noJurnal = itJurnalEntity.getNoJurnal();

                            //update payroll header, approval aks = Y dan no jurnal
                            itHrisPayrollHeaderEntity.setNoJurnal(noJurnal);
                            itHrisPayrollHeaderEntity.setAction("U");
                            itHrisPayrollHeaderEntity.setApprovalAksFlag("Y");
                            itHrisPayrollHeaderEntity.setApprovalAksName(createdWho);
                            itHrisPayrollHeaderEntity.setKeteranganAks("Telah Approval Gaji.");
                            itHrisPayrollHeaderEntity.setApprovalAksDate(CommonUtil.getCurrentDateTimes());
                            itHrisPayrollHeaderEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());
                            itHrisPayrollHeaderEntity.setLastUpdateWho(createdWho);

                            try {
                                payrollHeaderDao.updateAndSave(itHrisPayrollHeaderEntity);
                            } catch (HibernateException e) {
                                logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                                throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when save update payroll header set approval sdm YES, dan no jurnal, please inform to your admin...," + e.getMessage());
                            }


                        } else {

                            logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Tidak ditemukan jurnal yang akan di buat.");
                            throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Tidak ditemukan jurnal yang akan di buat., please info to your admin...");

                        }

                    } else {

                        logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang masih dalam proses.");
                        throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Tidak ditemukan periode-tahun gaji yang masih dalam proses., please info to your admin...");

                    }

                } else { //jika tidak di approval aks, sehingga bisa di edit kembali oleh sdm

                    itHrisPayrollHeaderEntity.setAction("U");
                    itHrisPayrollHeaderEntity.setApprovalSdmFlag("N");
                    itHrisPayrollHeaderEntity.setApprovalAksFlag("N");
                    itHrisPayrollHeaderEntity.setApprovalAksName(createdWho);
                    itHrisPayrollHeaderEntity.setApprovalAksDate(CommonUtil.getCurrentDateTimes());
                    itHrisPayrollHeaderEntity.setKeteranganAks(keteranganAks);
                    itHrisPayrollHeaderEntity.setLastUpdate(CommonUtil.getCurrentDateTimes());
                    itHrisPayrollHeaderEntity.setLastUpdateWho(createdWho);

                    try {
                        payrollHeaderDao.updateAndSave(itHrisPayrollHeaderEntity);
                    } catch (HibernateException e) {
                        logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Error, " + e.getMessage());
                        throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Found problem when save update payroll header set approval sdm YES, please inform to your admin...," + e.getMessage());
                    }

                }

            } else {

                logger.error("[PayrollBoImpl.savePostingAllCalculatePayroll] Tidak ditemukan payroll Header yang bisa di-proses.");
                throw new GeneralBOException("[PayrollBoImpl.savePostingAllCalculatePayroll] Tidak ditemukan payroll Header yang bisa di-proses.., please info to your admin...");

            }

        }

        logger.info("[PayrollBoImpl.savePostingAllCalculatePayroll] end process <<<");
    }

    //untuk membuat map berdasarkan mapping jurnal dan tipe payroll
    private Map<String,List> setupDataBasedMappingJurnal(String tipePayroll, String masterId, String transId, List<ItHrisPayrollTempEntity> payrollTempEntityList) throws GeneralBOException {
        logger.info("[PayrollBoImpl.setupDataBasedMappingJurnal] start process >>>");

        Map<String,List> resultDataOfMappingJurnal = new HashMap();

        if (transId!=null) {

            //get mapping jurnal based trans id
            List<ImMappingJurnalEntity> mappingJurnal = null;
            try {
                mappingJurnal = mappingJurnalDao.getMappingByTransId(transId);
            } catch (HibernateException e) {
                logger.error("[PayrollBoImpl.setupDataBasedMappingJurnal] Error, " + e.getMessage());
                throw new GeneralBOException("[PayrollBoImpl.setupDataBasedMappingJurnal] Found problem when searching mapping jurnal, please info to your admin..." + e.getMessage());
            }

            if (mappingJurnal!=null) {

                List<MappingDetail> pphList = new ArrayList<>();

                List<MappingDetail> listOfIuranBpjsKs = new ArrayList<>();
                List<MappingDetail> listOfIuranBpjsTk = new ArrayList<>();
                List<MappingDetail> listOfIuranDapenbun = new ArrayList<>();
                List<MappingDetail> listOfIuranDplk = new ArrayList<>();
                List<MappingDetail> listOfIuranPotLain = new ArrayList<>();

                List<MappingDetail> listOfTunjTHR = new ArrayList<>();
                List<MappingDetail> listOfTunjInsentive = new ArrayList<>();
                List<MappingDetail> listOfTunjJasop = new ArrayList<>();

                //proses dekom
                BigDecimal sumOfDekom = setupDataDekom(tipePayroll, masterId, resultDataOfMappingJurnal, pphList, payrollTempEntityList, listOfIuranBpjsKs, listOfIuranBpjsTk);

                //proses direksi
                BigDecimal sumOfDireksi = setupDataDireksi(tipePayroll, masterId, resultDataOfMappingJurnal, pphList, payrollTempEntityList, listOfIuranBpjsKs, listOfIuranBpjsTk, listOfIuranDapenbun, listOfIuranDplk, listOfIuranPotLain);

                //proses pegawai tetap
                BigDecimal sumOfPegTetap = setupDataPegawaiTetap(tipePayroll, masterId, resultDataOfMappingJurnal, pphList, payrollTempEntityList, listOfIuranBpjsKs, listOfIuranBpjsTk, listOfIuranDapenbun, listOfIuranDplk, listOfIuranPotLain, listOfTunjTHR, listOfTunjInsentive, listOfTunjJasop );

                //proses pegawai tidak tetap
                BigDecimal sumOfPegTidakTetap = setupDataPegawaiTidakTetap(tipePayroll, masterId, resultDataOfMappingJurnal, pphList, payrollTempEntityList, listOfIuranBpjsKs, listOfIuranBpjsTk, listOfIuranPotLain, listOfTunjTHR, listOfTunjInsentive, listOfTunjJasop);

                BigDecimal pphGaji = new BigDecimal(0);
                BigDecimal sumOfPphGaji = sumOfListMappingDetail(pphList);
                pphGaji = pphGaji.add(sumOfPphGaji);

                BigDecimal iuranBpjsKs = new BigDecimal(0);
                BigDecimal sumOfIuranBpjsKs = sumOfListMappingDetail(listOfIuranBpjsKs);
                iuranBpjsKs = iuranBpjsKs.add(sumOfIuranBpjsKs);

                BigDecimal iuranBpjsTk = new BigDecimal(0);
                BigDecimal sumOfIuranBpjsTk = sumOfListMappingDetail(listOfIuranBpjsTk);
                iuranBpjsTk = iuranBpjsTk.add(sumOfIuranBpjsTk);

                BigDecimal iuranDapenbun = new BigDecimal(0);
                BigDecimal sumOfIuranDapenbun = sumOfListMappingDetail(listOfIuranDapenbun);
                iuranDapenbun = iuranDapenbun.add(sumOfIuranDapenbun);

                BigDecimal iuranDplk = new BigDecimal(0);
                BigDecimal sumOfIuranDplk = sumOfListMappingDetail(listOfIuranDplk);
                iuranDplk = iuranDplk.add(sumOfIuranDplk);

                BigDecimal iuranPotLain = new BigDecimal(0);
                BigDecimal sumOfIuranPotLain = sumOfListMappingDetail(listOfIuranPotLain);
                iuranPotLain = iuranPotLain.add(sumOfIuranPotLain);


                BigDecimal totalPot = new BigDecimal(0);
                totalPot = totalPot.add(iuranBpjsKs).add(iuranBpjsTk).add(iuranDapenbun).add(iuranDplk).add(iuranPotLain);

                BigDecimal kas = new BigDecimal(0);
                kas = sumOfDekom.add(sumOfDireksi).add(sumOfPegTetap).add(sumOfPegTidakTetap).subtract(pphGaji).subtract(totalPot);

                BigDecimal debit = new BigDecimal(0);
                debit = debit.add(sumOfDekom).add(sumOfDireksi).add(sumOfPegTetap).add(sumOfPegTidakTetap);

                BigDecimal kredit = new BigDecimal(0);
                kredit = kredit.add(kas).add(pphGaji).add(totalPot);

                if (debit.compareTo(kredit)!=0) {

                    logger.error("[PayrollBoImpl.setupDataBasedMappingJurnal] Tidak balance debit kredit payroll.");
                    throw new GeneralBOException("[PayrollBoImpl.setupDataBasedMappingJurnal] Tidak balance debit kredit payroll.");

                }

                MappingDetail kasDetail = new MappingDetail();
                kasDetail.setCoa(CommonConstant.COA_PAYROLL);
                kasDetail.setMetodeBayar(CommonConstant.METODE_TRANSFER);
                kasDetail.setNilai(kas);

                List<MappingDetail> listOfKas = new ArrayList<>();
                listOfKas.add(kasDetail);

                if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { //untuk payroll bulanan

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_PPH_GAJI, pphList);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_KAS, listOfKas);

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN, listOfIuranDapenbun);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK, listOfIuranDplk);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, listOfIuranBpjsKs);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, listOfIuranBpjsTk);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN, listOfIuranPotLain);


                } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll)) { //untuk THR

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_PPH, pphList);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_KAS, listOfKas);

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_HARI_RAYA, listOfTunjTHR);

                } else if (CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll)) { //untuk insentive

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_INSENTIVE_PPH, pphList);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_INSENTIVE_KAS, listOfKas);

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_INSENTIVE_TUNJ_INSENTIVE, listOfTunjInsentive);

                } else if (CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll)) { //untuk jasop

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_JASOP_PPH, pphList);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_JASOP_KAS, listOfKas);

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_JASOP_TUNJ_JASOP, listOfTunjJasop);

                } else if (CommonConstant.CODE_CUTI_PANJANG.equalsIgnoreCase(tipePayroll) || CommonConstant.CODE_CUTI_TAHUNAN.equalsIgnoreCase(tipePayroll)) { //untuk cuti panjang / tahunan

                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_CUTI_PPH, pphList);
                    resultDataOfMappingJurnal.put(CommonConstant.MAPPING_CUTI_KAS, listOfKas);

                }
            } else {

                logger.error("[PayrollBoImpl.setupDataBasedMappingJurnal] Tidak ditemukan mapping jurnal based trans id =" + transId);
                throw new GeneralBOException("[PayrollBoImpl.setupDataBasedMappingJurnal] Tidak ditemukan mapping jurnal based trans id =" + transId);

            }

        } else {

            logger.error("[PayrollBoImpl.setupDataBasedMappingJurnal] Tidak ditemukan trans id untuk proses setup data berdasarkan mapping jurnal.");
            throw new GeneralBOException("[PayrollBoImpl.setupDataBasedMappingJurnal] Tidak ditemukan trans id untuk proses setup data berdasarkan mapping jurnal, please info to your admin...");

        }

        logger.info("[PayrollBoImpl.setupDataBasedMappingJurnal] end process <<<");
        return resultDataOfMappingJurnal;
    }

    //setup data dewan komisaris (dekom) ke mapping jurnal
    // gaji -> gaji pokok
    // tunj.pph -> tunj. pph yang dari payroll yang ditanggung perusahaan
    // tunj.tranport dan komunikasi -> tunj. komunikasi
    // tunj.rumah -> tunj. rumah
    // tunj.pelaksanaan tugas -> jika ada perjalana dinas ( submodul sppd jika on ) diluar payroll
    // tunj.hari raya -> jika THR dimasukkan disini, dibuatkan multifikator sehingga bisa di buat fleksibel
    // tunj.cuti -> jika cuti dimasukkan ke sini ( untuk BOC tidak ada cuti ) jika ada bersifat manual di luar payroll
    // tunj.tantiem -> jika tantiem dimasukkan ke sini ( bersifat manual krn penentuan nya per tahun berbeda ) di luar payroll
    // tunj.asuransi -> jika ada asuransi jika unt boc (dimasukkan secara manual) diluar payroll
    // tunj.lain -> jika ada tunj bpjs ks / tk dimasukkan ke sini
    // titipan iuran bpjs ks -> jika ada potongan untuk bpjs ks
    // titipan iuran bpjs tk -> jika ada potongan untuk bpjs ks
    private BigDecimal setupDataDekom(String tipePayroll,
                                      String masterIdBranch,
                                      Map<String,List> resultDataOfMappingJurnal,
                                      List<MappingDetail> pphList,
                                      List<ItHrisPayrollTempEntity> payrollTempEntityList,
                                      List<MappingDetail> listOfIuranBpjsKs,
                                      List<MappingDetail> listOfIuranBpjsTk) {

        logger.info("[PayrollBoImpl.setupDataDecom] start process >>>");

        List<ItHrisPayrollTempEntity> filterdItHrisPayrollTempDekom = payrollTempEntityList.stream().filter(
                p -> p.getTipePegawaiId().contains(CommonConstant.TIPE_PEGAWAI_BOC)
        ).collect(Collectors.toList());

        BigDecimal sumOfAll = new BigDecimal(0);
        MappingDetail mappingDetail = null;

        if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { //untuk payroll bulanan

            List<MappingDetail> gajiDekomList = new ArrayList<>();
            List<MappingDetail> tunjPPHDekomList = new ArrayList<>();
            List<MappingDetail> tunjTransportKomDekomList = new ArrayList<>();
            List<MappingDetail> tunjRumahDekomList = new ArrayList<>();
            List<MappingDetail> tunjLainDekomList = new ArrayList<>();

            List<MappingDetail> iuranBpjsKsDekomList = new ArrayList<>();
            List<MappingDetail> iuranBpjsTkDekomList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempDekom) {

                if (itHrisPayrollTempEntity.getGajiPokok() != null && itHrisPayrollTempEntity.getGajiPokok().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getGajiPokok().setScale(0, BigDecimal.ROUND_HALF_UP));

                    gajiDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganKomunikasi() != null && itHrisPayrollTempEntity.getTunjanganKomunikasi().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganKomunikasi().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjTransportKomDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPerumahan() != null && itHrisPayrollTempEntity.getTunjanganPerumahan().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPerumahan().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjRumahDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsKs() != null && itHrisPayrollTempEntity.getTunjanganBpjsKs().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsKs().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjLainDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsTk() != null && itHrisPayrollTempEntity.getTunjanganBpjsTk().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsTk().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjLainDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsKary() != null && itHrisPayrollTempEntity.getIuranBpjsKsKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsPers() != null && itHrisPayrollTempEntity.getIuranBpjsKsPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkKary() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkPers() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkDekomList.add(mappingDetail);
                }


                //set pph gaji based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> gajiDekomListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHDekomListFiltered = new ArrayList<>();
            List<MappingDetail> tunjTransportKomDekomListFiltered = new ArrayList<>();
            List<MappingDetail> tunjRumahDekomListFiltered = new ArrayList<>();
            List<MappingDetail> tunjLainDekomListFiltered = new ArrayList<>();

            BigDecimal sumOfGaji = filterAndSumOfListMappingDetail(gajiDekomList,gajiDekomListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDekomList,tunjPPHDekomListFiltered);
            BigDecimal sumOfTransportKom = filterAndSumOfListMappingDetail(tunjTransportKomDekomList,tunjTransportKomDekomListFiltered);
            BigDecimal sumOfRumah = filterAndSumOfListMappingDetail(tunjRumahDekomList,tunjRumahDekomListFiltered);
            BigDecimal sumOfLain = filterAndSumOfListMappingDetail(tunjLainDekomList,tunjLainDekomListFiltered);
            sumOfAll = sumOfAll.add(sumOfGaji).add(sumOfTunjPPH).add(sumOfTransportKom).add(sumOfRumah).add(sumOfLain);

            //add based mapping jurnal
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_GAJI_DEKOM, gajiDekomListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_PPH_DEKOM, tunjPPHDekomListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_TRANSPORT_KOMUNIKASI_DEKOM, tunjTransportKomDekomListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_RUMAH_DEKOM, tunjRumahDekomListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_LAIN_DEKOM, tunjLainDekomListFiltered);


            listOfIuranBpjsKs.addAll(iuranBpjsKsDekomList);
            listOfIuranBpjsTk.addAll(iuranBpjsTkDekomList);

//            BigDecimal sumOfIuranBpjsKsDekom = sumOfListMappingDetail(iuranBpjsKsDekomList);
//            BigDecimal sumOfIuranBpjsTkDekom = sumOfListMappingDetail(iuranBpjsTkDekomList);
//
//            BigDecimal totalPotDekomNilai = new BigDecimal(0);
//            totalPotDekomNilai = totalPotDekomNilai.add(sumOfIuranBpjsKsDekom).add(sumOfIuranBpjsTkDekom);
//
//            totalPotDekom.add(totalPotDekomNilai);

//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsKs = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS);
//                lastListOfIuranBpjsKs.addAll(iuranBpjsKsDekomList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, lastListOfIuranBpjsKs);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsTk = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK);
//                lastListOfIuranBpjsTk.addAll(iuranBpjsTkDekomList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, lastListOfIuranBpjsTk);
//
//            }

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, iuranBpjsKsDekomList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, iuranBpjsTkDekomList);

        } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll)) { //untuk THR

            List<MappingDetail> tunjHariRayaDekomList = new ArrayList<>();
            List<MappingDetail> tunjPPHDekomList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempDekom) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjHariRayaDekomList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDekomList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjHariRayaDekomListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHDekomListFiltered = new ArrayList<>();

            BigDecimal sumOfTHR = filterAndSumOfListMappingDetail(tunjHariRayaDekomList,tunjHariRayaDekomListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDekomList,tunjPPHDekomListFiltered);

            sumOfAll = sumOfAll.add(sumOfTHR).add(sumOfTunjPPH);

            //add based mapping jurnal
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_HARI_RAYA_DEKOM, tunjHariRayaDekomListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_PPH_DEKOM, tunjPPHDekomListFiltered);

        }

        logger.info("[PayrollBoImpl.setupDataDecom] end process <<<");

        return sumOfAll;
    }

    //setup data dewan direksi (BOD) ke mapping jurnal
    // gaji -> gaji pokok
    // tunj.pph -> tunj. pph yang dari payroll yang ditanggung perusahaan
    // tunj.tranport dan komunikasi -> tunj. komunikasi
    // tunj.rumah -> tunj. rumah
    // tunj.pelaksanaan tugas -> jika ada perjalana dinas ( submodul sppd jika on ) diluar payroll
    // tunj.hari raya -> jika THR dimasukkan disini, dibuatkan multifikator sehingga bisa di buat fleksibel
    // tunj.cuti -> jika cuti dimasukkan ke sini ( untuk BOD tidak ada cuti ) jika ada bersifat manual di luar payroll
    // tunj.tantiem -> jika tantiem dimasukkan ke sini ( bersifat manual krn penentuan nya per tahun berbeda ) di luar payroll
    // tunj.asuransi -> jika ada asuransi jika unt boc (dimasukkan secara manual) diluar payroll
    // tunj.lain -> jika ada tunj bpjs ks / tk dimasukkan ke sini
    // titipan iuran dapenbun -> jika ada potongan iuran dapenbun
    // titipan iuran dplk -> jika ada potongan iuran dplk
    // titipan iuran bpjs ks -> jika ada potongan iuran bpjs ks
    // titipan iuran bpjs tk -> jika ada potongan iuran bpjs tk
    // titipan potongan karyawan -> jika ada potongan lain nya untuk direksi dimasukkan ke sini
    private BigDecimal setupDataDireksi(String tipePayroll,
                                        String masterIdBranch,
                                        Map<String,List> resultDataOfMappingJurnal,
                                        List<MappingDetail> pphList,
                                        List<ItHrisPayrollTempEntity> payrollTempEntityList,
                                        List<MappingDetail> listOfIuranBpjsKs,
                                        List<MappingDetail> listOfIuranBpjsTk,
                                        List<MappingDetail> listOfIuranDapenbun,
                                        List<MappingDetail> listOfIuranDplk,
                                        List<MappingDetail> listOfIuranPotLain) {

        logger.info("[PayrollBoImpl.setupDataDireksi] start process >>>");

        List<ItHrisPayrollTempEntity> filterdItHrisPayrollTempDireksi = payrollTempEntityList.stream().filter(
                p -> p.getTipePegawaiId().contains(CommonConstant.TIPE_PEGAWAI_BOD)
        ).collect(Collectors.toList());

        BigDecimal sumOfAll = new BigDecimal(0);
        MappingDetail mappingDetail = null;

        if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { //untuk payroll bulanan

            List<MappingDetail> gajiDireksiList = new ArrayList<>();
            List<MappingDetail> tunjPPHDireksiList = new ArrayList<>();
            List<MappingDetail> tunjTransportKomDireksiList = new ArrayList<>();
            List<MappingDetail> tunjRumahDireksiList = new ArrayList<>();
            List<MappingDetail> tunjLainDireksiList = new ArrayList<>();

            List<MappingDetail> iuranDapenbunDireksiList = new ArrayList<>();
            List<MappingDetail> iuranDplkDireksiList = new ArrayList<>();
            List<MappingDetail> iuranBpjsKsDireksiList = new ArrayList<>();
            List<MappingDetail> iuranBpjsTkDireksiList = new ArrayList<>();
            List<MappingDetail> iuranPotonganLainDireksiList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempDireksi) {

                if (itHrisPayrollTempEntity.getGajiPokok() != null && itHrisPayrollTempEntity.getGajiPokok().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getGajiPokok().setScale(0, BigDecimal.ROUND_HALF_UP));
                    gajiDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjPPHDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganKomunikasi() != null && itHrisPayrollTempEntity.getTunjanganKomunikasi().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganKomunikasi().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjTransportKomDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPerumahan() != null && itHrisPayrollTempEntity.getTunjanganPerumahan().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPerumahan().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjRumahDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsKs() != null && itHrisPayrollTempEntity.getTunjanganBpjsKs().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsKs().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsTk() != null && itHrisPayrollTempEntity.getTunjanganBpjsTk().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsTk().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsKary() != null && itHrisPayrollTempEntity.getIuranBpjsKsKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsPers() != null && itHrisPayrollTempEntity.getIuranBpjsKsPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkKary() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkPers() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranDapenKary() != null && itHrisPayrollTempEntity.getIuranDapenKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranDapenKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DAPENBUN)) { //jika dapen = dapenbun (DP02)
                        iuranDapenbunDireksiList.add(mappingDetail);
                    } else if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DPLK)) { //jika dapen = dplk (DP01)
                        iuranDplkDireksiList.add(mappingDetail);
                    }

                }

                if (itHrisPayrollTempEntity.getIuranDapenPers() != null && itHrisPayrollTempEntity.getIuranDapenPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranDapenPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DAPENBUN)) { //jika dapen = dapenbun (DP02)
                        iuranDapenbunDireksiList.add(mappingDetail);
                    } else if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DPLK)) { //jika dapen = dplk (DP01)
                        iuranDplkDireksiList.add(mappingDetail);
                    }

                }

                //untuk potongan lain-nya : iuran_kopkar,iuran_sp,iuran_piikb,iuran_bank_mandiri,iuran_bank_bri,iuran_infaq,iuran_perkes_dan_obat,iuran_listrik,iuran_profesi,iuran_potongan_lain
                if (itHrisPayrollTempEntity.getIuranKopkar() != null && itHrisPayrollTempEntity.getIuranKopkar().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranKopkar().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranSp() != null && itHrisPayrollTempEntity.getIuranSp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranSp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPiikb() != null && itHrisPayrollTempEntity.getIuranPiikb().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPiikb().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBankMandiri() != null && itHrisPayrollTempEntity.getIuranBankMandiri().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBankMandiri().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBankBri() != null && itHrisPayrollTempEntity.getIuranBankBri().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBankBri().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranInfaq() != null && itHrisPayrollTempEntity.getIuranInfaq().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranInfaq().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPerkesDanObat() != null && itHrisPayrollTempEntity.getIuranPerkesDanObat().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPerkesDanObat().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranListrik() != null && itHrisPayrollTempEntity.getIuranListrik().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranListrik().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranProfesi() != null && itHrisPayrollTempEntity.getIuranProfesi().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranProfesi().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPotonganLain() != null && itHrisPayrollTempEntity.getIuranPotonganLain().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPotonganLain().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainDireksiList.add(mappingDetail);
                }

                //set pph gaji based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));
                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> gajiDireksiListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHDireksiListFiltered = new ArrayList<>();
            List<MappingDetail> tunjTransportKomDireksiListFiltered = new ArrayList<>();
            List<MappingDetail> tunjRumahDireksiListFiltered = new ArrayList<>();
            List<MappingDetail> tunjLainDireksiListFiltered = new ArrayList<>();

            BigDecimal sumOfGaji = filterAndSumOfListMappingDetail(gajiDireksiList,gajiDireksiListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDireksiList,tunjPPHDireksiListFiltered);
            BigDecimal sumOfTransportKom = filterAndSumOfListMappingDetail(tunjTransportKomDireksiList,tunjTransportKomDireksiListFiltered);
            BigDecimal sumOfRumah = filterAndSumOfListMappingDetail(tunjRumahDireksiList,tunjRumahDireksiListFiltered);
            BigDecimal sumOfLain = filterAndSumOfListMappingDetail(tunjLainDireksiList,tunjLainDireksiListFiltered);
            sumOfAll = sumOfAll.add(sumOfGaji).add(sumOfTunjPPH).add(sumOfTransportKom).add(sumOfRumah).add(sumOfLain);

            //add based mapping jurnal
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_GAJI_DIREKSI, gajiDireksiListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_PPH_DIREKSI, tunjPPHDireksiListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_TRANSPORT_KOMUNIKASI_DIREKSI, tunjTransportKomDireksiListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_RUMAH_DIREKSI, tunjRumahDireksiListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_LAIN_DIREKSI, tunjLainDireksiListFiltered);

            listOfIuranBpjsKs.addAll(iuranBpjsKsDireksiList);
            listOfIuranBpjsTk.addAll(iuranBpjsTkDireksiList);
            listOfIuranDapenbun.addAll(iuranDapenbunDireksiList);
            listOfIuranDplk.addAll(iuranDplkDireksiList);
            listOfIuranPotLain.addAll(iuranPotonganLainDireksiList);

//            BigDecimal sumOfIuranDapenbunDireksi = sumOfListMappingDetail(iuranDapenbunDireksiList);
//            BigDecimal sumOfIuranDplkDireksi = sumOfListMappingDetail(iuranDplkDireksiList);
//            BigDecimal sumOfIuranBpjsKsDireksi = sumOfListMappingDetail(iuranBpjsKsDireksiList);
//            BigDecimal sumOfIuranBpjsTkDireksi = sumOfListMappingDetail(iuranBpjsTkDireksiList);
//            BigDecimal sumOfIuranPotLainDireksi = sumOfListMappingDetail(iuranPotonganLainDireksiList);
//
//            BigDecimal totalPotDireksiNilai = new BigDecimal(0);
//            totalPotDireksiNilai = totalPotDireksiNilai.add(sumOfIuranDapenbunDireksi).add(sumOfIuranDplkDireksi).add(sumOfIuranBpjsKsDireksi).add(sumOfIuranBpjsTkDireksi).add(sumOfIuranPotLainDireksi);
//
//            totalPotDireksi.add(totalPotDireksiNilai);

//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN)!=null) {
//
//                List<MappingDetail> lastListOfIuranDapenbun = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN);
//                lastListOfIuranDapenbun.addAll(iuranDapenbunDireksiList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN, lastListOfIuranDapenbun);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK)!=null) {
//
//                List<MappingDetail> lastListOfIuranDplk = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK);
//                lastListOfIuranDplk.addAll(iuranDplkDireksiList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK, lastListOfIuranDplk);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsKs = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS);
//                lastListOfIuranBpjsKs.addAll(iuranBpjsKsDireksiList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, lastListOfIuranBpjsKs);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsTk = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK);
//                lastListOfIuranBpjsTk.addAll(iuranBpjsTkDireksiList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, lastListOfIuranBpjsTk);
//
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN)!=null) {
//
//                List<MappingDetail> lastListOfIuranPotLain = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN);
//                lastListOfIuranPotLain.addAll(iuranPotonganLainDireksiList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN, lastListOfIuranPotLain);
//
//            }

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN, iuranDapenbunDireksiList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK, iuranDplkDireksiList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, iuranBpjsKsDireksiList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, iuranBpjsTkDireksiList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN, iuranPotonganLainDireksiList);

        } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll)) { //untuk THR

            List<MappingDetail> tunjHariRayaDireksiList = new ArrayList<>();
            List<MappingDetail> tunjPPHDireksiList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempDireksi) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjHariRayaDireksiList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDireksiList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjHariRayaDireksiListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHDireksiListFiltered = new ArrayList<>();

            BigDecimal sumOfTHR = filterAndSumOfListMappingDetail(tunjHariRayaDireksiList,tunjHariRayaDireksiListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDireksiList,tunjPPHDireksiListFiltered);

            sumOfAll = sumOfAll.add(sumOfTHR).add(sumOfTunjPPH);

            //add based mapping jurnal
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_HARI_RAYA_DIREKSI, tunjHariRayaDireksiListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_PPH_DIREKSI, tunjPPHDireksiListFiltered);


        }

        logger.info("[PayrollBoImpl.setupDataDireksi] end process <<<");

        return sumOfAll;
    }

    //setup data pegawai tetap ke mapping jurnal
    // gaji -> gaji pokok
    // tunj.jabatan -> tunj. jabatan struktural
    // tunj.struktural -> tunj. struktural
    // tunj.pajak -> tunj. pph yang dari payroll yang ditanggung perusahaan
    // tunj.RLAB -> tunj. rumah listrik air bbm (RLAB)
    // tunj.pensiun -> tunj. dapen
    // tunj.bpjs TK -> tunj. bpjs tk
    // tunj.bpjs KS -> tunj. bpjs ks
    // tunj.khusus -> tunj. sankhus
    // tunj.lembur -> tunj. lembur
    // tunj.peralihan -> tunj. peralihan(gapok+sankhus+tunj)
    // tunj.supervisi -> tunj.supervisi
    // tunj.fungsional -> tunj.fungsional
    // tunj.lainnya -> jika ada (tunj. siaga / tunj. lokasi)
    // tunj.pemondokan -> tunj. pemondokan
    // tunj.hari raya -> jika THR dimasukkan disini
    // uang.cuti -> jika cuti panjang atau tahunan dimasukkan ke sini
    // tunj.insentif -> jika insentif dimasukkan ke sini
    // tunj.jasa operasional -> jika jasop dimasukkan ke sini
    // titipan iuran dapenbun -> iuran dapenbun kary maupun persh
    // titipan iuran dplk -> iuran dapen dplk kary maupun persh
    // titipan iuran bpjs ks -> iuran bpjs ks kary maupun persh
    // titipan iuran bpjs tk -> iuran bpjs tk kary maupun persh
    // titipan potongan karyawan -> potongan lain nya diluar yg diatas seperti kopkar, bank dll.
    private BigDecimal setupDataPegawaiTetap(String tipePayroll,
                                             String masterIdBranch,
                                             Map<String,List> resultDataOfMappingJurnal,
                                             List<MappingDetail> pphList,
                                             List<ItHrisPayrollTempEntity> payrollTempEntityList,
                                             List<MappingDetail> listOfIuranBpjsKs,
                                             List<MappingDetail> listOfIuranBpjsTk,
                                             List<MappingDetail> listOfIuranDapenbun,
                                             List<MappingDetail> listOfIuranDplk,
                                             List<MappingDetail> listOfIuranPotLain,
                                             List<MappingDetail> listOfTunjTHR,
                                             List<MappingDetail> listOfTunjInsentive,
                                             List<MappingDetail> listOfTunjJasop) {

        logger.info("[PayrollBoImpl.setupDataPegawaiTetap] start process >>>");

        List<ItHrisPayrollTempEntity> filterdItHrisPayrollTempPegTetap = payrollTempEntityList.stream().filter(
                p -> p.getTipePegawaiId().contains(CommonConstant.TIPE_PEGAWAI_TETAP)
        ).collect(Collectors.toList());

        BigDecimal sumOfAll = new BigDecimal(0);
        MappingDetail mappingDetail = null;

        if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { //untuk payroll bulanan

            List<MappingDetail> gajiPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjJabatanPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjStrukturalPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPajakPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjRlabPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPensiunPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjBpjsTkPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjBpjsKsPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjKhususPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjLemburPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPeralihanPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjSupervisiPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjFungsionalPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjLainPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPemondokanPegTetapList = new ArrayList<>();

            List<MappingDetail> iuranDapenbunPegTetapList = new ArrayList<>();
            List<MappingDetail> iuranDplkPegTetapList = new ArrayList<>();
            List<MappingDetail> iuranBpjsKsPegTetapList = new ArrayList<>();
            List<MappingDetail> iuranBpjsTkPegTetapList = new ArrayList<>();
            List<MappingDetail> iuranPotonganLainPegTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTetap) {

                if (itHrisPayrollTempEntity.getGajiPokok() != null && itHrisPayrollTempEntity.getGajiPokok().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getGajiPokok().setScale(0, BigDecimal.ROUND_HALF_UP));
                    gajiPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganJabatanStruktural() != null && itHrisPayrollTempEntity.getTunjanganJabatanStruktural().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganJabatanStruktural().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjJabatanPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganStruktural() != null && itHrisPayrollTempEntity.getTunjanganStruktural().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganStruktural().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjStrukturalPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjPajakPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalRlab() != null && itHrisPayrollTempEntity.getTotalRlab().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalRlab().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjRlabPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganDapen() != null && itHrisPayrollTempEntity.getTunjanganDapen().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganDapen().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjPensiunPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsTk() != null && itHrisPayrollTempEntity.getTunjanganBpjsTk().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsTk().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjBpjsTkPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsKs() != null && itHrisPayrollTempEntity.getTunjanganBpjsKs().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsKs().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjBpjsKsPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjunganSankhus() != null && itHrisPayrollTempEntity.getTunjunganSankhus().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjunganSankhus().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjKhususPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganLembur() != null && itHrisPayrollTempEntity.getTunjanganLembur().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganLembur().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLemburPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPeralihan() != null && itHrisPayrollTempEntity.getTunjanganPeralihan().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPeralihan().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjPeralihanPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganSupervisi() != null && itHrisPayrollTempEntity.getTunjanganSupervisi().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganSupervisi().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjSupervisiPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganFungsional() != null && itHrisPayrollTempEntity.getTunjanganFungsional().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganFungsional().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjFungsionalPegTetapList.add(mappingDetail);
                }

                //tunj lainnya = tunj siaga / tunj lokasi
                if (itHrisPayrollTempEntity.getTunjanganSiaga() != null && itHrisPayrollTempEntity.getTunjanganSiaga().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganSiaga().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLainPegTetapList.add(mappingDetail);
                }
                if (itHrisPayrollTempEntity.getTunjanganLokal() != null && itHrisPayrollTempEntity.getTunjanganLokal().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganLokal().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPemondokan() != null && itHrisPayrollTempEntity.getTunjanganPemondokan().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPemondokan().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjPemondokanPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsKary() != null && itHrisPayrollTempEntity.getIuranBpjsKsKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsPers() != null && itHrisPayrollTempEntity.getIuranBpjsKsPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkKary() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkPers() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranDapenKary() != null && itHrisPayrollTempEntity.getIuranDapenKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranDapenKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DAPENBUN)) { //jika dapen = dapenbun (DP02)
                        iuranDapenbunPegTetapList.add(mappingDetail);
                    } else if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DPLK)) { //jika dapen = dplk (DP01)
                        iuranDplkPegTetapList.add(mappingDetail);
                    }

                }

                if (itHrisPayrollTempEntity.getIuranDapenPers() != null && itHrisPayrollTempEntity.getIuranDapenPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranDapenPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DAPENBUN)) { //jika dapen = dapenbun (DP02)
                        iuranDapenbunPegTetapList.add(mappingDetail);
                    } else if (itHrisPayrollTempEntity.getDapenId().equalsIgnoreCase(CommonConstant.TIPE_DPLK)) { //jika dapen = dplk (DP01)
                        iuranDplkPegTetapList.add(mappingDetail);
                    }

                }

                //untuk potongan lain-nya : iuran_kopkar,iuran_sp,iuran_piikb,iuran_bank_mandiri,iuran_bank_bri,iuran_infaq,iuran_perkes_dan_obat,iuran_listrik,iuran_profesi,iuran_potongan_lain
                if (itHrisPayrollTempEntity.getIuranKopkar() != null && itHrisPayrollTempEntity.getIuranKopkar().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranKopkar().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranSp() != null && itHrisPayrollTempEntity.getIuranSp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranSp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPiikb() != null && itHrisPayrollTempEntity.getIuranPiikb().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPiikb().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBankMandiri() != null && itHrisPayrollTempEntity.getIuranBankMandiri().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBankMandiri().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBankBri() != null && itHrisPayrollTempEntity.getIuranBankBri().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBankBri().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranInfaq() != null && itHrisPayrollTempEntity.getIuranInfaq().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranInfaq().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPerkesDanObat() != null && itHrisPayrollTempEntity.getIuranPerkesDanObat().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPerkesDanObat().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranListrik() != null && itHrisPayrollTempEntity.getIuranListrik().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranListrik().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranProfesi() != null && itHrisPayrollTempEntity.getIuranProfesi().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranProfesi().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPotonganLain() != null && itHrisPayrollTempEntity.getIuranPotonganLain().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPotonganLain().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTetapList.add(mappingDetail);
                }


                //set pph gaji based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));
                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> gajiPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjJabatanPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjStrukturalPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPajakPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjRlabPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPensiunPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjBpjsTkPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjBpjsKsPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjKhususPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjLemburPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPeralihanPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjSupervisiPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjFungsionalPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjLainPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPemondokanPegTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfGaji = filterAndSumOfListMappingDetail(gajiPegTetapList,gajiPegTetapListFiltered);
            BigDecimal sumOfTunjJabatan = filterAndSumOfListMappingDetail(tunjJabatanPegTetapList,tunjJabatanPegTetapListFiltered);
            BigDecimal sumOfTunjStruktural = filterAndSumOfListMappingDetail(tunjStrukturalPegTetapList,tunjStrukturalPegTetapListFiltered);
            BigDecimal sumOfTunjPajak = filterAndSumOfListMappingDetail(tunjPajakPegTetapList,tunjPajakPegTetapListFiltered);
            BigDecimal sumOfTunjRlab = filterAndSumOfListMappingDetail(tunjRlabPegTetapList,tunjRlabPegTetapListFiltered);
            BigDecimal sumOfTunjPensiun = filterAndSumOfListMappingDetail(tunjPensiunPegTetapList,tunjPensiunPegTetapListFiltered);
            BigDecimal sumOfBpjsTk = filterAndSumOfListMappingDetail(tunjBpjsTkPegTetapList,tunjBpjsTkPegTetapListFiltered);
            BigDecimal sumOfBpjsKs = filterAndSumOfListMappingDetail(tunjBpjsKsPegTetapList,tunjBpjsKsPegTetapListFiltered);
            BigDecimal sumOfKhusus = filterAndSumOfListMappingDetail(tunjKhususPegTetapList,tunjKhususPegTetapListFiltered);
            BigDecimal sumOfTunjLembur = filterAndSumOfListMappingDetail(tunjLemburPegTetapList,tunjLemburPegTetapListFiltered);
            BigDecimal sumOfTunjPeralihan = filterAndSumOfListMappingDetail(tunjPeralihanPegTetapList,tunjPeralihanPegTetapListFiltered);
            BigDecimal sumOfTunjSupervisi = filterAndSumOfListMappingDetail(tunjSupervisiPegTetapList,tunjSupervisiPegTetapListFiltered);
            BigDecimal sumOfTunjFungsional = filterAndSumOfListMappingDetail(tunjFungsionalPegTetapList,tunjFungsionalPegTetapListFiltered);
            BigDecimal sumOfTunjLain = filterAndSumOfListMappingDetail(tunjLainPegTetapList,tunjLainPegTetapListFiltered);
            BigDecimal sumOfTunjPemondokan = filterAndSumOfListMappingDetail(tunjPemondokanPegTetapList,tunjPemondokanPegTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfGaji)
                    .add(sumOfTunjJabatan)
                    .add(sumOfTunjStruktural)
                    .add(sumOfTunjPajak)
                    .add(sumOfTunjRlab)
                    .add(sumOfTunjPensiun)
                    .add(sumOfBpjsTk)
                    .add(sumOfBpjsKs)
                    .add(sumOfKhusus)
                    .add(sumOfTunjLembur)
                    .add(sumOfTunjPeralihan)
                    .add(sumOfTunjSupervisi)
                    .add(sumOfTunjFungsional)
                    .add(sumOfTunjLain)
                    .add(sumOfTunjPemondokan);

            //add based mapping jurnal
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_GAJI_KARY_TETAP, gajiPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_JABATAN_KARY_TETAP, tunjJabatanPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_STRUKTURAL_KARY_TETAP, tunjStrukturalPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_PAJAK_KARY_TETAP, tunjPajakPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_RLAB_KARY_TETAP, tunjRlabPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_PENSIUN_KARY_TETAP, tunjPensiunPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_BPJS_TK_KARY_TETAP, tunjBpjsTkPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_BPJS_KS_KARY_TETAP, tunjBpjsKsPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_KHUSUS_KARY_TETAP, tunjKhususPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_LEMBUR_KARY_TETAP, tunjLemburPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_PERALIHAN_KARY_TETAP, tunjPeralihanPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_SUPERVISI_KARY_TETAP, tunjSupervisiPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_FUNGSIONAL_KARY_TETAP, tunjFungsionalPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_PEMONDOKAN_KARY_TETAP, tunjPemondokanPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_LAIN_KARY_TETAP, tunjLainPegTetapListFiltered);

            listOfIuranBpjsKs.addAll(iuranBpjsKsPegTetapList);
            listOfIuranBpjsTk.addAll(iuranBpjsTkPegTetapList);
            listOfIuranDapenbun.addAll(iuranDapenbunPegTetapList);
            listOfIuranDplk.addAll(iuranDplkPegTetapList);
            listOfIuranPotLain.addAll(iuranPotonganLainPegTetapList);

//            BigDecimal sumOfIuranDapenbunPegTetap = sumOfListMappingDetail(iuranDapenbunPegTetapList);
//            BigDecimal sumOfIuranDplkPegTetap = sumOfListMappingDetail(iuranDplkPegTetapList);
//            BigDecimal sumOfIuranBpjsKsPegTetap = sumOfListMappingDetail(iuranBpjsKsPegTetapList);
//            BigDecimal sumOfIuranBpjsTkPegTetap = sumOfListMappingDetail(iuranBpjsTkPegTetapList);
//            BigDecimal sumOfIuranPotLainPegTetap = sumOfListMappingDetail(iuranPotonganLainPegTetapList);
//
//            BigDecimal totalPotPegTetapNilai = new BigDecimal(0);
//            totalPotPegTetapNilai = totalPotPegTetapNilai.add(sumOfIuranDapenbunPegTetap).add(sumOfIuranDplkPegTetap).add(sumOfIuranBpjsKsPegTetap).add(sumOfIuranBpjsTkPegTetap).add(sumOfIuranPotLainPegTetap);
//
//            totalPotPegTetap.add(totalPotPegTetapNilai);
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN)!=null) {
//
//                List<MappingDetail> lastListOfIuranDapenbun = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN);
//                lastListOfIuranDapenbun.addAll(iuranDapenbunPegTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN, lastListOfIuranDapenbun);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK)!=null) {
//
//                List<MappingDetail> lastListOfIuranDplk = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK);
//                lastListOfIuranDplk.addAll(iuranDplkPegTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK, lastListOfIuranDplk);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsKs = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS);
//                lastListOfIuranBpjsKs.addAll(iuranBpjsKsPegTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, lastListOfIuranBpjsKs);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsTk = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK);
//                lastListOfIuranBpjsTk.addAll(iuranBpjsTkPegTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, lastListOfIuranBpjsTk);
//
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN)!=null) {
//
//                List<MappingDetail> lastListOfIuranPotLain = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN);
//                lastListOfIuranPotLain.addAll(iuranPotonganLainPegTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN, lastListOfIuranPotLain);
//
//            }

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DAPENBUN, iuranDapenbunPegTetapList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_DPLK, iuranDplkPegTetapList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, iuranBpjsKsPegTetapList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, iuranBpjsTkPegTetapList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN, iuranPotonganLainPegTetapList);

        } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll)) { //untuk THR

            List<MappingDetail> tunjHariRayaPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPPHDPegTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTetap) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjHariRayaPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDPegTetapList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjHariRayaPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHPegTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfTHR = filterAndSumOfListMappingDetail(tunjHariRayaPegTetapList,tunjHariRayaPegTetapListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDPegTetapList,tunjPPHPegTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfTHR).add(sumOfTunjPPH);

            //add based mapping jurnal
            listOfTunjTHR.addAll(tunjHariRayaPegTetapListFiltered);

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_HARI_RAYA, tunjHariRayaPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_PPH_KARY_TETAP, tunjPPHPegTetapListFiltered);

        } else if (CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll)) { //untuk insentive

            List<MappingDetail> tunjInsentivePegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPPHDPegTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTetap) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjInsentivePegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDPegTetapList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjInsentivePegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHPegTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfInsentive = filterAndSumOfListMappingDetail(tunjInsentivePegTetapList,tunjInsentivePegTetapListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDPegTetapList,tunjPPHPegTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfInsentive).add(sumOfTunjPPH);

            //add based mapping jurnal
            listOfTunjInsentive.addAll(tunjInsentivePegTetapListFiltered);

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_INSENTIVE_TUNJ_INSENTIVE, tunjInsentivePegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_INSENTIVE_TUNJ_PPH_KARY_TETAP, tunjPPHPegTetapListFiltered);

        } else if (CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll)) { //untuk jasop

            List<MappingDetail> tunjJasopPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPPHDPegTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTetap) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjJasopPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDPegTetapList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjJasopPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHPegTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfJasop = filterAndSumOfListMappingDetail(tunjJasopPegTetapList,tunjJasopPegTetapListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDPegTetapList,tunjPPHPegTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfJasop).add(sumOfTunjPPH);

            //add based mapping jurnal
            listOfTunjJasop.addAll(tunjJasopPegTetapListFiltered);

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_JASOP_TUNJ_JASOP, tunjJasopPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_JASOP_TUNJ_PPH_KARY_TETAP, tunjPPHPegTetapListFiltered);


        } else if (CommonConstant.CODE_CUTI_PANJANG.equalsIgnoreCase(tipePayroll) || CommonConstant.CODE_CUTI_TAHUNAN.equalsIgnoreCase(tipePayroll)) { //untuk cuti panjang/tahunan

            List<MappingDetail> tunjCutiPegTetapList = new ArrayList<>();
            List<MappingDetail> tunjPPHDPegTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTetap) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjCutiPegTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDPegTetapList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjCutiPegTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHPegTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfCuti = filterAndSumOfListMappingDetail(tunjCutiPegTetapList,tunjCutiPegTetapListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDPegTetapList,tunjPPHPegTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfCuti).add(sumOfTunjPPH);

            //add based mapping jurnal
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_CUTI_UANG_CUTI, tunjCutiPegTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_CUTI_TUNJ_PPH_KARY_TETAP, tunjPPHPegTetapListFiltered);

        }

        logger.info("[PayrollBoImpl.setupDataPegawaiTetap] end process <<<");

        return sumOfAll;
    }

    //setup data pegawai tidak tetap ke mapping jurnal
    // gaji -> gaji pokok
    // tunj.fungsional -> tunj.fungsional
    // tunj.tambahan -> tunj.tambahan
    // tunj.pajak -> tunj. pph yang dari payroll yang ditanggung perusahaan
    // tunj.bpjs TK -> tunj. bpjs tk
    // tunj.bpjs KS -> tunj. bpjs ks
    // tunj.khusus -> tunj. sankhus
    // tunj.lembur -> tunj. lembur
    // tunj.lainnya -> jika ada (tunj.supevisi/tunj. siaga / tunj. lokasi)
    // tunj.hari raya -> jika THR dimasukkan disini
    // tunj.insentif -> jika insentif dimasukkan ke sini
    // tunj.jasa operasional -> jika jasop dimasukkan ke sini
    // titipan iuran dapenbun -> iuran dapenbun kary maupun persh
    // titipan iuran dplk -> iuran dapen dplk kary maupun persh
    // titipan iuran bpjs ks -> iuran bpjs ks kary maupun persh
    // titipan iuran bpjs tk -> iuran bpjs tk kary maupun persh
    // titipan potongan karyawan -> potongan lain nya diluar yg diatas seperti kopkar, bank dll.
    private BigDecimal setupDataPegawaiTidakTetap(String tipePayroll,
                                                  String masterIdBranch,
                                                  Map<String,List> resultDataOfMappingJurnal,
                                                  List<MappingDetail> pphList,
                                                  List<ItHrisPayrollTempEntity> payrollTempEntityList,
                                                  List<MappingDetail> listOfIuranBpjsKs,
                                                  List<MappingDetail> listOfIuranBpjsTk,
                                                  List<MappingDetail> listOfIuranPotLain,
                                                  List<MappingDetail> listOfTunjTHR,
                                                  List<MappingDetail> listOfTunjInsentive,
                                                  List<MappingDetail> listOfTunjJasop) {

        logger.info("[PayrollBoImpl.setupDataPegawaiTidakTetap] start process >>>");

        List<ItHrisPayrollTempEntity> filterdItHrisPayrollTempPegTidakTetap = payrollTempEntityList.stream().filter(
                p -> p.getTipePegawaiId().contains(CommonConstant.TIPE_PEGAWAI_TIDAK_TETAP)
        ).collect(Collectors.toList());

        BigDecimal sumOfAll = new BigDecimal(0);
        MappingDetail mappingDetail = null;

        if (CommonConstant.CODE_PAYROLL.equalsIgnoreCase(tipePayroll)) { //untuk payroll bulanan

            List<MappingDetail> gajiPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjFungsionalPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjTambahanPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjPajakPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjBpjsTkPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjBpjsKsPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjKhususPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjLemburPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjLainPegTidakTetapList = new ArrayList<>();

            List<MappingDetail> iuranBpjsKsPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> iuranBpjsTkPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> iuranPotonganLainPegTidakTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTidakTetap) {

                if (itHrisPayrollTempEntity.getGajiPokok() != null && itHrisPayrollTempEntity.getGajiPokok().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getGajiPokok().setScale(0, BigDecimal.ROUND_HALF_UP));
                    gajiPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganFungsional() != null && itHrisPayrollTempEntity.getTunjanganFungsional().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganFungsional().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjFungsionalPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganTambahan() != null && itHrisPayrollTempEntity.getTunjanganTambahan().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganTambahan().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjTambahanPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjPajakPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsTk() != null && itHrisPayrollTempEntity.getTunjanganBpjsTk().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsTk().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjBpjsTkPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganBpjsKs() != null && itHrisPayrollTempEntity.getTunjanganBpjsKs().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganBpjsKs().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjBpjsKsPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjunganSankhus() != null && itHrisPayrollTempEntity.getTunjunganSankhus().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjunganSankhus().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjKhususPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganLembur() != null && itHrisPayrollTempEntity.getTunjanganLembur().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganLembur().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLemburPegTidakTetapList.add(mappingDetail);
                }

                //tunj lainnya = tunj siaga / tunj lokasi / tunj supervisi
                if (itHrisPayrollTempEntity.getTunjanganSupervisi() != null && itHrisPayrollTempEntity.getTunjanganSupervisi().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganSupervisi().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLainPegTidakTetapList.add(mappingDetail);
                }
                if (itHrisPayrollTempEntity.getTunjanganSiaga() != null && itHrisPayrollTempEntity.getTunjanganSiaga().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganSiaga().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLainPegTidakTetapList.add(mappingDetail);
                }
                if (itHrisPayrollTempEntity.getTunjanganLokal() != null && itHrisPayrollTempEntity.getTunjanganLokal().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganLokal().setScale(0, BigDecimal.ROUND_HALF_UP));
                    tunjLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsKary() != null && itHrisPayrollTempEntity.getIuranBpjsKsKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBpjsKsPers() != null && itHrisPayrollTempEntity.getIuranBpjsKsPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBpjsKsPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsKsPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkKary() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkKary().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTotalIuranBpjsTkPers() != null && itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(masterIdBranch);
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTotalIuranBpjsTkPers().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranBpjsTkPegTidakTetapList.add(mappingDetail);
                }

                //untuk potongan lain-nya : iuran_kopkar,iuran_sp,iuran_piikb,iuran_bank_mandiri,iuran_bank_bri,iuran_infaq,iuran_perkes_dan_obat,iuran_listrik,iuran_profesi,iuran_potongan_lain
                if (itHrisPayrollTempEntity.getIuranKopkar() != null && itHrisPayrollTempEntity.getIuranKopkar().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranKopkar().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranSp() != null && itHrisPayrollTempEntity.getIuranSp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranSp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPiikb() != null && itHrisPayrollTempEntity.getIuranPiikb().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPiikb().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBankMandiri() != null && itHrisPayrollTempEntity.getIuranBankMandiri().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBankMandiri().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranBankBri() != null && itHrisPayrollTempEntity.getIuranBankBri().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranBankBri().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranInfaq() != null && itHrisPayrollTempEntity.getIuranInfaq().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranInfaq().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPerkesDanObat() != null && itHrisPayrollTempEntity.getIuranPerkesDanObat().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPerkesDanObat().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranListrik() != null && itHrisPayrollTempEntity.getIuranListrik().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranListrik().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranProfesi() != null && itHrisPayrollTempEntity.getIuranProfesi().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranProfesi().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getIuranPotonganLain() != null && itHrisPayrollTempEntity.getIuranPotonganLain().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getIuranPotonganLain().setScale(0, BigDecimal.ROUND_HALF_UP));

                    iuranPotonganLainPegTidakTetapList.add(mappingDetail);
                }


                //set pph gaji based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));
                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> gajiPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjFungsionalPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjTambahanPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPajakPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjBpjsTkPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjBpjsKsPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjKhususPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjLemburPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjLainPegTidakTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfGaji = filterAndSumOfListMappingDetail(gajiPegTidakTetapList,gajiPegTidakTetapListFiltered);
            BigDecimal sumOfTunjFungsional = filterAndSumOfListMappingDetail(tunjFungsionalPegTidakTetapList,tunjFungsionalPegTidakTetapListFiltered);
            BigDecimal sumOfTunjTambahan = filterAndSumOfListMappingDetail(tunjTambahanPegTidakTetapList,tunjTambahanPegTidakTetapListFiltered);
            BigDecimal sumOfTunjPajak = filterAndSumOfListMappingDetail(tunjPajakPegTidakTetapList,tunjPajakPegTidakTetapListFiltered);
            BigDecimal sumOfBpjsTk = filterAndSumOfListMappingDetail(tunjBpjsTkPegTidakTetapList,tunjBpjsTkPegTidakTetapListFiltered);
            BigDecimal sumOfBpjsKs = filterAndSumOfListMappingDetail(tunjBpjsKsPegTidakTetapList,tunjBpjsKsPegTidakTetapListFiltered);
            BigDecimal sumOfKhusus = filterAndSumOfListMappingDetail(tunjKhususPegTidakTetapList,tunjKhususPegTidakTetapListFiltered);
            BigDecimal sumOfTunjLembur = filterAndSumOfListMappingDetail(tunjLemburPegTidakTetapList,tunjLemburPegTidakTetapListFiltered);
            BigDecimal sumOfTunjLain = filterAndSumOfListMappingDetail(tunjLainPegTidakTetapList,tunjLainPegTidakTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfGaji)
                    .add(sumOfTunjFungsional)
                    .add(sumOfTunjTambahan)
                    .add(sumOfTunjPajak)
                    .add(sumOfBpjsTk)
                    .add(sumOfBpjsKs)
                    .add(sumOfKhusus)
                    .add(sumOfTunjLembur)
                    .add(sumOfTunjLain);

            //add based mapping jurnal
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_GAJI_KARY_TIDAK_TETAP, gajiPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_FUNGSIONAL_KARY_TIDAK_TETAP, tunjFungsionalPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_TAMBAHAN_KARY_TIDAK_TETAP, tunjTambahanPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_PAJAK_KARY_TIDAK_TETAP, tunjPajakPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_BPJS_TK_KARY_TIDAK_TETAP, tunjBpjsTkPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_BPJS_KS_KARY_TIDAK_TETAP, tunjBpjsKsPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_KHUSUS_KARY_TIDAK_TETAP, tunjKhususPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_LEMBUR_KARY_TIDAK_TETAP, tunjLemburPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_TUNJ_LAIN_KARY_TIDAK_TETAP, tunjLainPegTidakTetapListFiltered);

            listOfIuranBpjsKs.addAll(iuranBpjsKsPegTidakTetapList);
            listOfIuranBpjsTk.addAll(iuranBpjsTkPegTidakTetapList);
            listOfIuranPotLain.addAll(iuranPotonganLainPegTidakTetapList);

//            BigDecimal sumOfIuranBpjsKsPegTidakTetap = sumOfListMappingDetail(iuranBpjsKsPegTidakTetapList);
//            BigDecimal sumOfIuranBpjsTkPegTidakTetap = sumOfListMappingDetail(iuranBpjsTkPegTidakTetapList);
//            BigDecimal sumOfIuranPotLainPegTidakTetap = sumOfListMappingDetail(iuranPotonganLainPegTidakTetapList);
//
//            BigDecimal totalPotPegTidakTetapNilai = new BigDecimal(0);
//            totalPotPegTidakTetapNilai = totalPotPegTidakTetapNilai.add(sumOfIuranBpjsKsPegTidakTetap).add(sumOfIuranBpjsTkPegTidakTetap).add(sumOfIuranPotLainPegTidakTetap);
//
//            totalPotPegTidakTetap.add(totalPotPegTidakTetapNilai);
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsKs = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS);
//                lastListOfIuranBpjsKs.addAll(iuranBpjsKsPegTidakTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, lastListOfIuranBpjsKs);
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK)!=null) {
//
//                List<MappingDetail> lastListOfIuranBpjsTk = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK);
//                lastListOfIuranBpjsTk.addAll(iuranBpjsTkPegTidakTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, lastListOfIuranBpjsTk);
//
//            }
//
//            if (resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN)!=null) {
//
//                List<MappingDetail> lastListOfIuranPotLain = resultDataOfMappingJurnal.get(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN);
//                lastListOfIuranPotLain.addAll(iuranPotonganLainPegTidakTetapList);
//
//                resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN, lastListOfIuranPotLain);
//
//            }

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_KS, iuranBpjsKsPegTidakTetapList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_BPJS_TK, iuranBpjsTkPegTidakTetapList);
//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_PAYROLL_IURAN_KARYAWAN, iuranPotonganLainPegTidakTetapList);

        } else if (CommonConstant.CODE_THR.equalsIgnoreCase(tipePayroll)) { //untuk THR

            List<MappingDetail> tunjHariRayaPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjPPHDPegTidakTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTidakTetap) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjHariRayaPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDPegTidakTetapList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjHariRayaPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHPegTidakTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfTHR = filterAndSumOfListMappingDetail(tunjHariRayaPegTidakTetapList,tunjHariRayaPegTidakTetapListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDPegTidakTetapList,tunjPPHPegTidakTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfTHR).add(sumOfTunjPPH);

            //add based mapping jurnal
            listOfTunjTHR.addAll(tunjHariRayaPegTidakTetapListFiltered);

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_HARI_RAYA, tunjHariRayaPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_THR_TUNJ_PPH_KARY_TIDAK_TETAP, tunjPPHPegTidakTetapListFiltered);


        } else if (CommonConstant.CODE_INSENTIF.equalsIgnoreCase(tipePayroll)) { //untuk insentive

            List<MappingDetail> tunjInsentivePegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjPPHDPegTidakTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTidakTetap) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjInsentivePegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDPegTidakTetapList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjInsentivePegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHPegTidakTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfInsentive = filterAndSumOfListMappingDetail(tunjInsentivePegTidakTetapList,tunjInsentivePegTidakTetapListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDPegTidakTetapList,tunjPPHPegTidakTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfInsentive).add(sumOfTunjPPH);

            //add based mapping jurnal
            listOfTunjInsentive.addAll(tunjInsentivePegTidakTetapListFiltered);

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_INSENTIVE_TUNJ_INSENTIVE, tunjInsentivePegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_INSENTIVE_TUNJ_PPH_KARY_TIDAK_TETAP, tunjPPHPegTidakTetapListFiltered);

        } else if (CommonConstant.CODE_JASOP.equalsIgnoreCase(tipePayroll)) { //untuk jasop

            List<MappingDetail> tunjJasopPegTidakTetapList = new ArrayList<>();
            List<MappingDetail> tunjPPHDPegTidakTetapList = new ArrayList<>();

            for (ItHrisPayrollTempEntity itHrisPayrollTempEntity : filterdItHrisPayrollTempPegTidakTetap) {

                if (itHrisPayrollTempEntity.getThp() != null && itHrisPayrollTempEntity.getThp().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getThp().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjJasopPegTidakTetapList.add(mappingDetail);
                }

                if (itHrisPayrollTempEntity.getTunjanganPph() != null && itHrisPayrollTempEntity.getTunjanganPph().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setDivisiId(itHrisPayrollTempEntity.getKodering());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getTunjanganPph().setScale(0, BigDecimal.ROUND_HALF_UP));

                    tunjPPHDPegTidakTetapList.add(mappingDetail);
                }

                //set pph based master id = nip
                if (itHrisPayrollTempEntity.getPphGaji() != null && itHrisPayrollTempEntity.getPphGaji().compareTo(new BigDecimal(0)) > 0) {

                    mappingDetail = new MappingDetail();
                    mappingDetail.setMasterId(itHrisPayrollTempEntity.getNip());
                    mappingDetail.setNilai(itHrisPayrollTempEntity.getPphGaji().setScale(0, BigDecimal.ROUND_HALF_UP));

                    pphList.add(mappingDetail);
                }

            }

            //filter yang sama di merge
            List<MappingDetail> tunjJasopPegTidakTetapListFiltered = new ArrayList<>();
            List<MappingDetail> tunjPPHPegTidakTetapListFiltered = new ArrayList<>();

            BigDecimal sumOfJasop = filterAndSumOfListMappingDetail(tunjJasopPegTidakTetapList,tunjJasopPegTidakTetapListFiltered);
            BigDecimal sumOfTunjPPH = filterAndSumOfListMappingDetail(tunjPPHDPegTidakTetapList,tunjPPHPegTidakTetapListFiltered);

            sumOfAll = sumOfAll.add(sumOfJasop).add(sumOfTunjPPH);

            //add based mapping jurnal
            listOfTunjJasop.addAll(tunjJasopPegTidakTetapListFiltered);

//            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_JASOP_TUNJ_JASOP, tunjJasopPegTidakTetapListFiltered);
            resultDataOfMappingJurnal.put(CommonConstant.MAPPING_JASOP_TUNJ_PPH_KARY_TIDAK_TETAP, tunjPPHPegTidakTetapListFiltered);

        }

        logger.info("[PayrollBoImpl.setupDataPegawaiTidakTetap] end process <<<");

        return sumOfAll;
    }

    //untuk filter redundancy item and sum of all item
    private BigDecimal filterAndSumOfListMappingDetail(List<MappingDetail> listOfMappingDetail, List<MappingDetail> filterListOfMappingDetail) {
        logger.info("[PayrollBoImpl.filterAndSumOfListMappingDetail] start process >>>");

        BigDecimal result = new BigDecimal(0);
        for (MappingDetail mappingDetail : listOfMappingDetail) {

            List<MappingDetail> filteredMappingDetail = filterListOfMappingDetail.stream().filter(
                    p -> p.getDivisiId().equalsIgnoreCase(mappingDetail.getDivisiId())
            ).collect(Collectors.toList());

            if (!filteredMappingDetail.isEmpty()) {
                MappingDetail itemMappingDetail = filteredMappingDetail.get(0);
                BigDecimal itemMappingDetailNilai = itemMappingDetail.getNilai();
                BigDecimal mergeNilai = itemMappingDetailNilai.add(mappingDetail.getNilai());
                itemMappingDetail.setNilai(mergeNilai);
            } else {
                filterListOfMappingDetail.add(mappingDetail);
            }

            result = result.add(mappingDetail.getNilai());
        }

        //check sum and filter should be same
        BigDecimal resultFilter = new BigDecimal(0);
        for (MappingDetail checkMappingDetail : filterListOfMappingDetail) {
            resultFilter = resultFilter.add(checkMappingDetail.getNilai());
        }

        if (result.compareTo(resultFilter)!=0) {

            logger.error("[PayrollBoImpl.filterAndSumOfListMappingDetail] Jumlah filter untuk mapping detail tidak balance.");
            throw new GeneralBOException("[PayrollBoImpl.filterAndSumOfListMappingDetail] Jumlah filter untuk mapping detail tidak balance, please info to your admin...");

        }

        logger.info("[PayrollBoImpl.filterAndSumOfListMappingDetail] end process <<<");

        return result;
    }

    //untuk sum of all item
    private BigDecimal sumOfListMappingDetail(List<MappingDetail> listOfMappingDetail) {
        logger.info("[PayrollBoImpl.sumOfListMappingDetail] start process >>>");

        BigDecimal result = new BigDecimal(0);
        for (MappingDetail mappingDetail : listOfMappingDetail) {
            result = result.add(mappingDetail.getNilai());
        }

        logger.info("[PayrollBoImpl.sumOfListMappingDetail] end process <<<");

        return result;
    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public void saveDelete(Payroll bean) throws GeneralBOException {
//        logger.info("[saveDelete.saveDelete] start process >>>");
//
//        if (bean!=null) {
//
//            String payrollId = bean.getPayrollId();
//
//            ItPayrollEntity imPayrollEntity = null;
//
//            try {
//                // Get data from database by ID
//                imPayrollEntity = payrollDao.getById("payrollId", payrollId);
//            } catch (HibernateException e) {
//                logger.error("[PayrollBoImpl.saveDelete] Error, " + e.getMessage());
//                throw new GeneralBOException("Found problem when searching data alat by Kode alat, please inform to your admin...," + e.getMessage());
//            }
//
//            if (imPayrollEntity != null) {
//
//                // Modify from bean to entity serializable
//                imPayrollEntity.setPayrollId(bean.getPayrollId());
//                imPayrollEntity.setFlag(bean.getFlag());
//                imPayrollEntity.setAction(bean.getAction());
//                imPayrollEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                imPayrollEntity.setLastUpdate(bean.getLastUpdate());
//
//                try {
//                    // Delete (Edit) into database
//                    payrollDao.updateAndSave(imPayrollEntity);
//                } catch (HibernateException e) {
//                    logger.error("[PayrollBoImpl.saveDelete] Error, " + e.getMessage());
//                    throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//                }
//
//
//            } else {
//                logger.error("[PayrollBoImpl.saveDelete] Error, not found data Payroll with request id, please check again your data ...");
//                throw new GeneralBOException("Error, not found data Payroll with request id, please check again your data ...");
//
//            }
//        }
//        logger.info("[PayrollBoImpl.saveDelete] end process <<<");
//    }

    //uncomment by ferdi, 01 des 2020
    //--------------------------------------------------------------------------------------//
    //---------------------------------------JUBILEUM---------------------------------------//
    //--------------------------------------------------------------------------------------//

    //Perhitungan tanggal Jubileum + tanggal param beberapa Bulan sebelum jubileum dibayarkan
//    public PayrollJubileum payrollJubileum(String bulan, String tahun, String nip, String branchId, BigDecimal gaji, BigDecimal tunjUmk, BigDecimal tunjStruktural,
//                                           BigDecimal tunjPeralihan, BigDecimal tunjJabatanStruktural, String flagPayroll){
//        PayrollJubileum payrollJubileum = new PayrollJubileum();
//        DateTime tanggalPayroll = new DateTime(CommonUtil.convertToDate("01-" + bulan + "-" + tahun).getTime());
//
//        DateTime tanggalJubileum ;
//        DateTime tanggalJubileumMinusMo ;
//
//        tanggalJubileum = hitungJubileum(nip);
//        tanggalJubileumMinusMo = tanggalJubileum;
//
//        BigInteger companyBulan = BigInteger.valueOf(0);
//        BigDecimal faktorKali = BigDecimal.valueOf(0);
//
//        List<ImCompany> ImCompany = null;
//        ImCompany = companyDao.getBiayaJabatanPersentase();
//        if(ImCompany.size() > 0){
//            for(ImCompany company : ImCompany){
//                companyBulan = companyBulan.add(company.getBulanJubilium());
//            }
//        }
//
//        List<ImBranches> imBranches = null;
//        imBranches = branchDao.getListBranchById(branchId);
//        if(imBranches.size() > 0){
//            for(ImBranches imBranches1 : imBranches){
//                faktorKali = faktorKali.add(imBranches1.getFaktorJubileum());
//            }
//        }
//
//        tanggalJubileumMinusMo = tanggalJubileumMinusMo.minusMonths(companyBulan.intValue());
//        DateTime tanggalSekarang = new DateTime();
//        payrollJubileum.setFlagJubileum(false);
//
//        if(flagPayroll.equalsIgnoreCase("N")){
//            List<ItPayrollEntity> itPayrollEntity = payrollDao.getLastPayroll(nip);
//            if(itPayrollEntity.size() > 0){
//                for(ItPayrollEntity itPayrollEntity1: itPayrollEntity){
//                    if(itPayrollEntity1.getNip().equalsIgnoreCase(nip)){
//                        gaji = itPayrollEntity1.getGajiGolongan();
//                        tunjUmk = itPayrollEntity1.getTunjanganUmk();
//                        tunjStruktural = itPayrollEntity1.getTunjanganStruktural();
//                        tunjPeralihan = itPayrollEntity1.getTunjanganPeralihan();
//                        tunjJabatanStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                        break;
//                    }
//                }
//            }
//        }
//
//        BigDecimal besarJubileum = gaji.add(tunjUmk).add(tunjStruktural).add(tunjPeralihan).add(tunjJabatanStruktural);
//        BigDecimal totalJubileum = besarJubileum.multiply(BigDecimal.valueOf(Double.parseDouble(faktorKali.toString())));
//        BigDecimal pphJubileum = totalJubileum.multiply(BigDecimal.valueOf(15)).divide(BigDecimal.valueOf(100), 2, RoundingMode.HALF_UP);
//        BigDecimal nettoJubileum = totalJubileum.subtract(pphJubileum);
//
//        if(tanggalPayroll.compareTo(tanggalJubileumMinusMo) >= 0){
//            int stTahun = 0;
//            int stBulan = 0;
//            int hari = 0;
//            List<ItPayrollEntity> payrollEntityList = null;
//            payrollEntityList = payrollDao.cekJubileum(nip);
//            if(payrollEntityList.size() == 0){
//                payrollJubileum.setNip(nip);
//                payrollJubileum.setGajiGolonganNilai(gaji);
//                payrollJubileum.setTunjanganUmkNilai(tunjUmk);
//                payrollJubileum.setTunjanganStrukturalNilai(tunjStruktural);
//                payrollJubileum.setTunjanganPeralihanNilai(tunjPeralihan);
//                payrollJubileum.setTunjanganJabStrukturalNilai(tunjJabatanStruktural);
//                payrollJubileum.setBesarJubileumNilai(besarJubileum);
//                payrollJubileum.setTotalJubileumNilai(totalJubileum);
//                payrollJubileum.setPphJubileumNilai(pphJubileum);
//                payrollJubileum.setNettoJubileumNilai(nettoJubileum);
//
//                payrollJubileum.setGajiGolongan(CommonUtil.numbericFormat(gaji, "###,###"));
//                payrollJubileum.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//                payrollJubileum.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//                payrollJubileum.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//                payrollJubileum.setTunjanganJabStruktural(CommonUtil.numbericFormat(tunjJabatanStruktural, "###,###"));
//                payrollJubileum.setBesarJubileum(CommonUtil.numbericFormat(besarJubileum, "###,###"));
//                payrollJubileum.setTotalJubileum(CommonUtil.numbericFormat(totalJubileum, "###,###"));
//                payrollJubileum.setPphJubileum(CommonUtil.numbericFormat(pphJubileum, "###,###"));
//                payrollJubileum.setNettoJubileum(CommonUtil.numbericFormat(nettoJubileum, "###,###"));
//
//                payrollJubileum.setFlagJubileum(true);
//            }else{
//                payrollJubileum.setBesarJubileumNilai(BigDecimal.valueOf(0));
//                payrollJubileum.setTotalJubileumNilai(BigDecimal.valueOf(0));
//                payrollJubileum.setPphJubileumNilai(BigDecimal.valueOf(0));
//                payrollJubileum.setNettoJubileumNilai(BigDecimal.valueOf(0));
//            }
//            stTahun = tanggalJubileum.getYear();
//            stBulan = tanggalJubileum.getMonthOfYear();
//            hari = tanggalJubileum.getDayOfMonth();
//            payrollJubileum.setTanggalJubileum(hari + "-" + stBulan + "-" +stTahun);
//        }
//
//        return payrollJubileum;
//    }
//
//    //Perhitungan Tanggal Jubileum
//    private DateTime hitungJubileum(String nip){
//        BigInteger jumlahHari = BigInteger.valueOf(0) ;
//        BigInteger jumlahPkwt = BigInteger.valueOf(0) ;
//        BigInteger jumlahCuti = BigInteger.valueOf(0) ;
//        DateTime tglPkwtAwal = new DateTime();
//        DateTime tglPkwtAkhir = new DateTime();
//        Timestamp datePkwtAwal = null ;
//        Timestamp datePkwtAkhir = new Timestamp(Calendar.getInstance().getTime().getTime());
//        DateTime tanggalMasuk = new DateTime();
//        DateTime tanggalSekarang = new DateTime();
//
//        if(nip != null){
//            //Cek Apakah PKWT atau bukan, jika Y, maka hitung berapa lama user menjadi PKWT, digunakan tabel pegawai dan pegawai history
//            ImBiodataEntity imPegawai = biodataDao.getById("nip", nip);
//            if(imPegawai != null){
//                datePkwtAwal = new Timestamp(imPegawai.getTanggalAktif().getTime());
//                tanggalMasuk = new DateTime(datePkwtAwal.getTime());
//            }
//            List<ImBiodataHistoryEntity> imHrisTipePegawaiHistory;
//            try {
//                imHrisTipePegawaiHistory = biodataHistoryDao.getListPersonalPayroll(nip);
//            } catch (HibernateException e) {
//                logger.error("[PayrollBoImpl.getSearchSmkJabatanByCriteria] Error, " + e.getMessage());
//                throw new GeneralBOException("Found problem when searching data by criteria, please info to your admin..." + e.getMessage());
//            }
//
//            if(nip.equalsIgnoreCase("93-0207")){
//                int a = 0;
//            }
//            if(imHrisTipePegawaiHistory.size() > 0){
//                for(ImBiodataHistoryEntity imBiodataHistoryEntity : imHrisTipePegawaiHistory){
//                    if(imBiodataHistoryEntity.getTipePegawai().equalsIgnoreCase("TP03")){
//                        //Mengambil tanggal antara mulai PKWT sampai berakhir PKWT
//                        tglPkwtAwal = new DateTime(imBiodataHistoryEntity.getTanggalAktif());
//                        tglPkwtAkhir = new DateTime(CommonUtil.convertTimestampToDate(imBiodataHistoryEntity.getCreatedDate()));
//                    }
//                }
//            }
//
//            jumlahPkwt = BigInteger.valueOf(Days.daysBetween(tglPkwtAwal, tglPkwtAkhir).getDays());
//            jumlahPkwt = jumlahPkwt.divide(BigInteger.valueOf(2));
//
//            //Pengambilan Jumlah Hari Cuti selama menjadi pekerja di Perusahaan (Mulai tanggal aktif sampai dengan tanggal sekarang)
//            List<ItCutiPegawaiEntity> itCutiPegawaiEntities = cutiPegawaiDao.getDataCutiPegawai(nip, datePkwtAwal, datePkwtAkhir);
//            if(itCutiPegawaiEntities.size() > 0){
//                for(ItCutiPegawaiEntity itCutiPegawaiEntity : itCutiPegawaiEntities){
//                    jumlahCuti = jumlahCuti.add(itCutiPegawaiEntity.getLamaHariCuti());
//                }
//            }
//
//            //tanggalMasuk = tanggalMasuk.minusDays(jumlahCuti.intValue());
//            //tanggalMasuk = tanggalMasuk.plusDays(jumlahPkwt.intValue());
//            tanggalMasuk = tanggalMasuk.plusYears(25);
//        }
//        return tanggalMasuk;
//    }

    //--------------------------------------------------------------------------------------//
    //----------------------------------------END JUBILEUM----------------------------------//
    //--------------------------------------------------------------------------------------//

    //uncomment by ferdi, 01 des 2020
//    public BigDecimal calculatePphPengobatan(BigDecimal pengobatan, BigDecimal pkp){
//        BigDecimal pphObat = new BigDecimal(0);
//
//        if(pengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
//            if(pkp.compareTo(BigDecimal.valueOf(0)) <= 0){
//                pkp = BigDecimal.valueOf(0);
//            }
//
//            if(pkp.compareTo(BigDecimal.valueOf(50000000)) < 0){
//                pphObat = pengobatan.multiply(BigDecimal.valueOf(5)).divide(BigDecimal.valueOf(95), 2, RoundingMode.HALF_UP);
//            }else if(pkp.compareTo(BigDecimal.valueOf(50000000)) >= 0 && pkp.compareTo(BigDecimal.valueOf(250000000)) <= 0){
//                pphObat = pengobatan.multiply(BigDecimal.valueOf(15)).divide(BigDecimal.valueOf(85), 2, RoundingMode.HALF_UP);
//            }else if(pkp.compareTo(BigDecimal.valueOf(250000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(500000000)) <= 0){
//                pphObat = pengobatan.multiply(BigDecimal.valueOf(25)).divide(BigDecimal.valueOf(75), 2, RoundingMode.HALF_UP);
//            }else{
//                pphObat = pengobatan.multiply(BigDecimal.valueOf(30)).divide(BigDecimal.valueOf(70), 2, RoundingMode.HALF_UP);
//            }
//        }
//        return pphObat;
//    }

    //uncomment by ferdi, 01 des 2020
    //--------------------------------------------------------------------------------------//
    //---------------------------------------PPH GAJI---------------------------------------//
    //--------------------------------------------------------------------------------------//
//    public PayrollPph payrollPphGaji(String nip, String branchId, String bulanPayroll, String tahunPayroll, String gender,
//                                     String statusKeluarga, int jumlahAnak, String tipePegawai,
//                                     BigDecimal gaji, BigDecimal santunanKhusus, BigDecimal tunjStruktural,
//                                     BigDecimal tunjPeralihan, BigDecimal tunjJabatanStruktural, BigDecimal tunjFungsional, BigDecimal tunjTambahan, BigDecimal tunjLain,
//                                     String periodeBulan, String periodeTahun, String kelompokId){
//        PayrollPph payrollPph = new PayrollPph();
//
//        if (nip.equalsIgnoreCase("91-0138")){
//            int a = 0;
//        }
//        //Komisaris perkalian hutang pph sudah ditentukan dari Holding
//        BigDecimal persentaseHutangPph = new BigDecimal(0);
//        BigDecimal hutangPajak = new BigDecimal(0);
//        if(kelompokId.equalsIgnoreCase("KL00")){
//            ImBiodataEntity biodata = null;
//            biodata = biodataDao.getById("nip", nip);
//            persentaseHutangPph = biodata.getPersentasiHutangPph();
//        }
//
//        //semua dikalikan 12 (dalam 12 bulan / 1 Tahun)
//        double bulan = 12;
//
//
//
//        BigDecimal pphGaji = new BigDecimal(0);
//        //semua Komponen A dikali dengan 12
//        BigDecimal pphGajiGaji = gaji.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP) ;
//        BigDecimal pphSantunankhusus = santunanKhusus.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal pphGajiTunjStruktural = tunjStruktural.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal pphGajiTunjPeralihan = tunjPeralihan.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal pphGajiTunjJabStruktural = tunjJabatanStruktural.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal pphGajiTunjStrategis = tunjFungsional.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal pphGajiTunjLainLain = tunjLain.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal pphTunjTambahan = tunjTambahan.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        BigDecimal pphGajiTunjPph = new BigDecimal(0);
//        /*BigDecimal pphGajiThr = totalThr  ;
//        BigDecimal pphGajiJasprod = totalJasprod ;
//        BigDecimal pphGajiInsentif = totalJasprod ;*/
//
//        BigDecimal pphGajiPensiun = BigDecimal.valueOf(0);
//
//        /*BigDecimal pphGajiKaliLibilium = totalKaliJubileum ;
//        BigDecimal pphGajiRapel = totalRapel ;*/
//        BigDecimal pphGajiJkmJkk = new BigDecimal(0);
//
//        //PKWT tidak bayar iuran JKM JKK
//        if(tipePegawai != null){
//            if(!tipePegawai.equalsIgnoreCase("TP03")){
//                pphGajiJkmJkk = getIuranJkmJkk(gaji);
//            }
//        }
//
//        /*BigDecimal thr = new BigDecimal(0);
//        //digunakan jika mendapatkan thr, pendidikan jasprod pada bulan tersebut
//        if(pphGajiThr.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGajiThr = payrollAsumsiThr.getTotalThrNilai();
//            payrollPph.setAsumsiThr(payrollAsumsiThr.getTotalThr());
//            payrollPph.setAsumsiThrNilai(payrollAsumsiThr.getTotalThrNilai());
//
//            payrollPph.setThr(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###")); //PPh Thr
//            payrollPph.setThrNilai(BigDecimal.valueOf(0)); //PPh Thr Nilai
//            thr = payrollAsumsiThr.getTotalThrNilai();
//        }else{
//            payrollPph.setAsumsiThr(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//            payrollPph.setAsumsiThrNilai(BigDecimal.valueOf(0));
//
//            PayrollThr payrollAsumsiKurangThr = getAsumsiThr(nip, gaji, tunjUmk, tunjStruktural, tunjJabatanStruktural, tunjStrategis,
//                    BigDecimal.valueOf(0), tunjPeralihan, bulanPayroll, tahunPayroll, branchId);
//            pphGajiThr = pphGajiThr.subtract(payrollAsumsiKurangThr.getTotalThrNilai());
//
//            payrollPph.setThr(CommonUtil.numbericFormat(pphGajiThr, "###,###")); //PPh Thr
//            payrollPph.setThrNilai(pphGajiThr); //PPh Thr Nilai
//            thr = pphGajiThr;
//        }*/
//
//
//        /*BigDecimal jasprod = new BigDecimal(0);
//        if(pphGajiJasprod.compareTo(BigDecimal.valueOf(0)) <= 0){
//            int bulanBefore = Integer.valueOf(periodeBulan);
//            String strBulanBefore = "";
//            int tahunBefore = Integer.valueOf(periodeTahun);
//
//            bulanBefore -= 1 ;
//            if(bulanBefore == 0){
//                tahunBefore -= 1 ;
//                bulanBefore = 12 ;
//            }
//            if(bulanBefore < 10){
//                strBulanBefore = "0"+bulanBefore;
//            }else{
//                strBulanBefore = ""+ bulanBefore;
//            }
//
//            pphGajiJasprod = nilaiAsumsiJasprod ;
//
//            payrollPph.setAsumsiJasprod(CommonUtil.numbericFormat(pphGajiJasprod, "###,###"));
//            payrollPph.setAsumsiJasprodNilai(pphGajiJasprod);
//            payrollPph.setJasprod(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###")); //PPh Jasprod
//            payrollPph.setJasprodNilai(BigDecimal.valueOf(0)); //PPh Pensiun Nilai
//            jasprod = pphGajiJasprod;
//        }else{
//            payrollPph.setAsumsiJasprod(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//            payrollPph.setAsumsiJasprodNilai(BigDecimal.valueOf(0));
//
//            nilaiAsumsiJasprod = getAsumsiJasprod(nip, periodeBulan, periodeTahun, branchId);
//
//            //Khusus Kabid keatas mendapatkan Tunjangan Pph
//            if (kelompokId.equalsIgnoreCase("KL03") || kelompokId.equalsIgnoreCase("KL02") || kelompokId.equalsIgnoreCase("KL01") || kelompokId.equalsIgnoreCase("KL00")) {
//                pphGajiJasprod = new BigDecimal(0);
//            }else{
//                pphGajiJasprod = pphGajiJasprod.subtract(nilaiAsumsiJasprod);
//
//                payrollPph.setJasprod(CommonUtil.numbericFormat(pphGajiJasprod, "###,###")); //PPh Jasprod
//                payrollPph.setJasprodNilai(pphGajiJasprod); //PPh Pensiun Nilai
//                jasprod = pphGajiJasprod;
//            }
//        }*/
//
//        BigDecimal pphGajiBruto = hitungPphGajiBruto(pphGajiGaji, pphSantunankhusus, pphGajiTunjStruktural,
//                pphGajiTunjPeralihan, pphGajiTunjJabStruktural, pphGajiTunjStrategis,
//                pphGajiTunjPph, BigDecimal.valueOf(0),BigDecimal.valueOf(0),BigDecimal.valueOf(0),
//                BigDecimal.valueOf(0),BigDecimal.valueOf(0),BigDecimal.valueOf(0),BigDecimal.valueOf(0),
//                BigDecimal.valueOf(0) ,pphGajiJkmJkk, pphTunjTambahan) ;
//
//
//        BigDecimal pphGajiTotalBiayaPensiun = BigDecimal.valueOf(0);
//        /*BigDecimal pphGajiDanaPensiun = iuranPensiun.multiply(BigDecimal.valueOf(bulan));
//        BigDecimal pphGajiBpjsTk = iuranBpjsTk.multiply(BigDecimal.valueOf(bulan));
//        BigDecimal pphGajiBpjsPensiun = iuranBpjsPensiun.multiply(BigDecimal.valueOf(bulan));*/
//        BigDecimal pphGajiPtkp = BigDecimal.valueOf(0);
//
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//        if (kelompokId.equalsIgnoreCase("KL00")) {
//            pphGajiBiayaJabatan = new BigDecimal(0);
//            pphGajiTotalBiayaPensiun = new BigDecimal(0);
//            pphGajiPtkp = new BigDecimal(0);
//            /*pphGajiDanaPensiun = new BigDecimal(0);
//            pphGajiBpjsTk = new BigDecimal(0);
//            pphGajiBpjsPensiun = new BigDecimal(0);*/
//        }else{
//            /*pphGajiDanaPensiun = iuranPensiun.multiply(BigDecimal.valueOf(bulan));
//            pphGajiBpjsTk = iuranBpjsTk.multiply(BigDecimal.valueOf(bulan));
//            pphGajiBpjsPensiun = iuranBpjsPensiun.multiply(BigDecimal.valueOf(bulan));*/
//            pphGajiBiayaJabatan = getBiayaJabatan(pphGajiBruto).setScale(2, BigDecimal.ROUND_HALF_UP);
//
////            pphGajiTotalBiayaPensiun = pphGajiDanaPensiun.add(pphGajiBpjsTk).add(pphGajiBpjsPensiun);
//
//            pphGajiPtkp = getPtkp(statusKeluarga, jumlahAnak, gender);
//        }
//
//
//        BigDecimal pphGajiB = hitungPphGajiB(pphGajiBiayaJabatan, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        BigDecimal pphGajiPkp = new BigDecimal(0);
//        //Komisaris tidak dipotong ptkp dsb
//        if (kelompokId.equalsIgnoreCase("KL00")) {
//            pphGajiPkp = pphGajiBruto ;
//        }else{
//            pphGajiPkp = pphGajiBruto.subtract(pphGajiB).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//        }
//
//        BigDecimal tunjanganPphTahun = new BigDecimal(0);
//        BigDecimal tunjanganPphBulan = new BigDecimal(0);
//
//        //Khusus Kabid keatas mendapatkan Tunjangan Pph
//        if (kelompokId.equalsIgnoreCase("KL03") || kelompokId.equalsIgnoreCase("KL02") || kelompokId.equalsIgnoreCase("KL01") || kelompokId.equalsIgnoreCase("KL00")) {
//            //Komisaris tidak di grose up
//            if(persentaseHutangPph != null && persentaseHutangPph.compareTo(BigDecimal.valueOf(0)) > 0){
//            }else{
//                tunjanganPphTahun = hitungTunjanganPph(pphGajiPkp);
//            }
//
//            if(tunjanganPphTahun.compareTo(BigDecimal.valueOf(0)) <= 0){
//                tunjanganPphTahun = BigDecimal.valueOf(0);
//            }else{
//                pphGajiBruto = pphGajiBruto.add(tunjanganPphTahun);
//                if (kelompokId.equalsIgnoreCase("KL00")) {
//                    pphGajiPkp = pphGajiBruto ;
//                }else{
//                    pphGajiPkp = pphGajiBruto.subtract(pphGajiB).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//                }
//                //pph gaji tidak digunakan
//                tunjanganPphBulan = tunjanganPphTahun.divide(BigDecimal.valueOf(12), 2, BigDecimal.ROUND_HALF_UP);
//            }
//        }
//        //perhitungan pph bulan komisaris
//        if(persentaseHutangPph != null && persentaseHutangPph.compareTo(BigDecimal.valueOf(0)) > 0){
//            hutangPajak = pphGajiPkp.multiply(persentaseHutangPph).divide(BigDecimal.valueOf(100));
//            tunjanganPphBulan = hutangPajak.divide(BigDecimal.valueOf(12), 2, BigDecimal.ROUND_HALF_UP);
//        }else{
//            hutangPajak = hitungHutangPajak(pphGajiPkp);
//        }
//
//        pphGaji = hutangPajak.divide(BigDecimal.valueOf(12), 2, RoundingMode.HALF_UP) ;
//
//        if(pphGaji.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGaji = BigDecimal.valueOf(0);
//        }
//
//        payrollPph.setNip(nip); //set Nip, hanya digunakan untuk inisialisasi data pada sesssion
//        payrollPph.setGaji(CommonUtil.numbericFormat(pphGajiGaji, "###,###")); //PPh Gaji
//        payrollPph.setGajiNilai(pphGajiGaji); //PPh Gaji Nilai
//        payrollPph.setTunjanganUmk(CommonUtil.numbericFormat(pphSantunankhusus, "###,###")); //PPh Tunj Umk
//        payrollPph.setTunjanganUmkNilai(pphSantunankhusus); //PPh Tunj Umk Nilai
//        payrollPph.setTunjanganStruktural( CommonUtil.numbericFormat(pphGajiTunjStruktural, "###,###")); //PPh Tunj Struktural
//        payrollPph.setTunjanganStrukturalNilai(pphGajiTunjStruktural); //PPh Tunj Struktural Nilai
//        payrollPph.setTunjanganPeralihan(CommonUtil.numbericFormat(pphGajiTunjPeralihan, "###,###")); //PPh Tunj Peralihan
//        payrollPph.setTunjanganPeralihanNilai(pphGajiTunjPeralihan); //PPh Tunj Peralihan Nilai
//        payrollPph.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(pphGajiTunjJabStruktural, "###,###")); //PPh Tunj Jabatan Struktural
//        payrollPph.setTunjanganJabatanStrukturalNilai(pphGajiTunjJabStruktural); //PPh Tunj Jabatan Struktural Nilai
//        payrollPph.setTunjanganStrategis(CommonUtil.numbericFormat(pphGajiTunjStrategis, "###,###")); //PPh Tunj Strategis
//        payrollPph.setTunjanganStrategisNilai(pphGajiTunjStrategis); //PPh Tunj Jabatan Strategis Nilai
//        payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(tunjanganPphBulan, "###,###")); //PPh Tunj Pph
//        payrollPph.setTunjanganPphNilaiBulan(tunjanganPphBulan);
//        payrollPph.setTunjanganPphTahun(CommonUtil.numbericFormat(tunjanganPphTahun, "###,###")); //PPh Tunj Pph
//        payrollPph.setTunjanganPphNilaiTahun(tunjanganPphTahun);
//       /* payrollPph.setTunjanganLembur(CommonUtil.numbericFormat(pphGajiTunjLembur, "###,###")); //PPh Tunj Lembur
//        payrollPph.setTunjanganLemburNilai(pphGajiTunjLembur); //PPh Tunj Air Lembur Nilai*/
//        payrollPph.setTunjanganLainLain(CommonUtil.numbericFormat(pphGajiTunjLainLain, "###,###")); //PPh Tunj Lain Lain
//        payrollPph.setTunjanganLainLainNilai(pphGajiTunjLainLain); //PPh Tunj Lain Lain Nilai
//
//        //PPh pensiun tidak masuk pph Gaji
//        //payrollPph.setPensiun(CommonUtil.numbericFormat(pphGajiPensiun, "###,###")); //PPh Pensiun
//        //payrollPph.setPensiunNilai(pphGajiPensiun); //PPh Pensiun Nilai
//
//       /* payrollPph.setRapel(CommonUtil.numbericFormat(pphGajiRapel, "###,###")); //PPh Rapel
//        payrollPph.setRapelNilai(pphGajiRapel); //PPh Rapel Nilai
//        payrollPph.setJubileum(CommonUtil.numbericFormat(pphGajiKaliLibilium, "###,###")); //PPh Libilium
//        payrollPph.setJubileumNilai(pphGajiKaliLibilium); //PPh Libilium Nilai*/
//
//        /*payrollPph.setDanaPensiun(CommonUtil.numbericFormat(pphGajiDanaPensiun, "###,###")); //PPh Dana Pensiun
//        payrollPph.setDanaPensiunNilai(pphGajiDanaPensiun); //PPh Jkm Jkk Nilai
//        payrollPph.setBpjsJht(CommonUtil.numbericFormat(pphGajiBpjsTk, "###,###")); //PPh Bpjs JHT
//        payrollPph.setBpjsJhtNilai(pphGajiBpjsTk); //PPh Bpjs JHT Nilai
//        payrollPph.setBpjsPensiun(CommonUtil.numbericFormat(pphGajiBpjsPensiun, "###,###")); //PPh Bpjs Pensiun
//        payrollPph.setBpjsPensiunNilai(pphGajiBpjsPensiun); //PPh Bpjs Pensiun Nilai*/
//
//        payrollPph.setIuranJkmJkk(CommonUtil.numbericFormat(pphGajiJkmJkk, "###,###")); //PPh Jkm Jkk
//        payrollPph.setIuranJkmJkkNilai(pphGajiJkmJkk); //PPh Jkm Jkk Nilai
//        payrollPph.setBruto(CommonUtil.numbericFormat(pphGajiBruto, "###,###")); //PPh Bruto(A)
//        payrollPph.setBrutoNilai(pphGajiBruto); //PPh Bruto(A) Nilai
//
//        payrollPph.setBiayaJabatan(CommonUtil.numbericFormat(pphGajiBiayaJabatan, "###,###")); //PPh BiayaJabatan
//        payrollPph.setBiayaJabatanNilai(pphGajiBiayaJabatan); //PPh BiayaJabatan Nilai
//        payrollPph.setIuranPensiun(CommonUtil.numbericFormat(pphGajiTotalBiayaPensiun, "###,###")); //PPh iuranPensiun
//        payrollPph.setIuranPensiunNilai(pphGajiTotalBiayaPensiun); //PPh IuranPensiun Nilai
//        payrollPph.setPtkp(CommonUtil.numbericFormat(pphGajiPtkp, "###,###")); //PPh ptkp
//        payrollPph.setPtkpNilai(pphGajiPtkp); //PPh Ptkp Nilai
//        payrollPph.setJumlahB(CommonUtil.numbericFormat(pphGajiB, "###,###")); //PPh Jumlah B
//        payrollPph.setJumlahBNilai(pphGajiB); //PPh Jumlah B Nilai
//        payrollPph.setPkp(CommonUtil.numbericFormat(pphGajiPkp, "###,###")); //PPh PKP
//        payrollPph.setPkpNilai(pphGajiPkp); //PPh PKP Nilai
//        payrollPph.setHutangPph(CommonUtil.numbericFormat(hutangPajak, "###,###")); //PPh Hutang PPh
//        payrollPph.setHutangPphNilai(hutangPajak); //PPh Hutang PPh Nilai
//        payrollPph.setPphGaji(CommonUtil.numbericFormat(pphGaji, "###,###")); //PPh PPh Gaji
//        payrollPph.setPphGajiNilai(pphGaji); //PPh PPh Gaji Nilai
//
//        /*payrollPph.setKalkulasiThr(thr); //PPh PPh Gaji Nilai
//        payrollPph.setKalkulasiJasprod(jasprod); //PPh PPh Gaji Nilai*/
//
//        return payrollPph;
//    }

    //uncomment by ferdi, 01 des 2020
//    public PayrollPph payrollPphGaji2(String nip, String gender, String statusKeluarga, int jumlahAnak, String tipePegawai, String statusPegawai,
//                                      BigDecimal totalThr, BigDecimal totalPendidikan, BigDecimal totalJasprod, BigDecimal totalInsentif, BigDecimal totalRapel,
//                                      BigDecimal totalPensiun, BigDecimal totalKaliJubileum, BigDecimal asumsiThr, BigDecimal asumsiPendidikan, BigDecimal asumsiJasprod){
//        PayrollPph payrollPph = new PayrollPph();
//
//        //Citra kusuma
//        if(nip.equalsIgnoreCase("15-0425")){
//            int a = 0;
//        }
//
//        BigDecimal pphGaji = new BigDecimal(0);
//        //di nolkan, karena pengobatan mendapatkan perhitungan sendiri
//        //BigDecimal pphGajiTunjPengobatan = tunjPengobatan.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal pphGajiTunjPengobatan = BigDecimal.valueOf(0);
//        //BigDecimal pphGajiTunjPph = tunjPph.multiply(BigDecimal.valueOf(bulan)).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        //pph pensiun tidak dihitung pphnya ke komponen B
//        BigDecimal pphGajiPensiun = totalPensiun ;
//        //BigDecimal pphGajiPensiun = BigDecimal.valueOf(0);
//
//        BigDecimal pphGajiKaliLibilium = totalKaliJubileum ;
//        BigDecimal pphGajiRapel = totalRapel ;
//
//        // THR
//        BigDecimal thr = new BigDecimal(0);
//        //digunakan jika mendapatkan thr, pendidikan jasprod pada bulan tersebut
//        if(totalThr.compareTo(BigDecimal.valueOf(0)) <= 0){
//            //asumsi
//            payrollPph.setAsumsiThr(CommonUtil.numbericFormat(asumsiThr, "###,###"));
//            payrollPph.setAsumsiThrNilai(asumsiThr);
//
//            payrollPph.setThr(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###")); //PPh Thr
//            payrollPph.setThrNilai(BigDecimal.valueOf(0)); //PPh Thr Nilai
//            //thr = asumsiThr;
//        }else{
//            //realisasi
//            BigDecimal payrollAsumsiKurangThr = asumsiThr;
//            //totalThr = totalThr.subtract(payrollAsumsiKurangThr);
//
//            payrollPph.setThr(CommonUtil.numbericFormat(totalThr, "###,###")); //PPh Thr
//            payrollPph.setThrNilai(totalThr); //PPh Thr Nilai
//
//            //realisasi thr di kurangi asumsi thr yang sudah dibayarkan dibulan januari
//            thr = totalThr.subtract(asumsiThr);
//
//            payrollPph.setAsumsiThr(CommonUtil.numbericFormat(asumsiThr, "###,###"));
//            payrollPph.setAsumsiThrNilai(asumsiThr);
//            payrollPph.setThr(CommonUtil.numbericFormat(totalThr, "###,###")); //PPh Thr
//            payrollPph.setThrNilai(totalThr); //PPh Thr Nilai
//        }
//
//        // pendidikan
//        BigDecimal pendidikan = new BigDecimal(0);
//        if(totalPendidikan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            //asummsi
//            payrollPph.setAsumsiPendidikan(CommonUtil.numbericFormat(asumsiPendidikan, "###,###"));
//            payrollPph.setAsumsiPendidikanNilai(asumsiPendidikan);
//            payrollPph.setPendidikan(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###")); //PPh Pendidikan
//            payrollPph.setPendidikanNilai(BigDecimal.valueOf(0)); //PPh Pendidikan Nilai
//            //pendidikan = asumsiPendidikan;
//        }else{
//            //realisasi
//            payrollPph.setAsumsiPendidikan(CommonUtil.numbericFormat(asumsiPendidikan, "###,###"));
//            payrollPph.setAsumsiPendidikanNilai(asumsiPendidikan);
//
//            pendidikan = totalPendidikan.subtract(asumsiPendidikan);
//
//            BigDecimal payrollAsumsiKurangPendidikan = asumsiPendidikan;
//
//            if(totalPendidikan.compareTo(BigDecimal.valueOf(0)) < 0){
//                totalPendidikan = BigDecimal.valueOf(0);
//            }
//
//            payrollPph.setPendidikan(CommonUtil.numbericFormat(totalPendidikan, "###,###")); //PPh Pendidikan
//            payrollPph.setPendidikanNilai(totalPendidikan); //PPh Pendidikan Nilai
//        }
//
//        // insentif
//        payrollPph.setInsentif(CommonUtil.numbericFormat(totalInsentif, "###,###"));
//        payrollPph.setInsentifNilai(totalInsentif);
//
//        // jasprod
//        BigDecimal jasprod = new BigDecimal(0);
//        if(totalJasprod.compareTo(BigDecimal.valueOf(0)) <= 0){
//            //asumsi
//            payrollPph.setAsumsiJasprod(CommonUtil.numbericFormat(asumsiJasprod, "###,###"));
//            payrollPph.setAsumsiJasprodNilai(asumsiJasprod);
//            payrollPph.setJasprod(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###")); //PPh Jasprod
//            payrollPph.setJasprodNilai(BigDecimal.valueOf(0)); //PPh Pensiun Nilai
//            jasprod = totalJasprod;
//        }else{
//            //realisasi
//            payrollPph.setAsumsiJasprod(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//            payrollPph.setAsumsiJasprodNilai(BigDecimal.valueOf(0));
//
//            BigDecimal payrollAsumsiKurangJasprod = asumsiJasprod;
//            totalJasprod = totalJasprod.subtract(payrollAsumsiKurangJasprod);
//
//            if(totalJasprod.compareTo(BigDecimal.valueOf(0)) < 0){
//                totalJasprod = BigDecimal.valueOf(0);
//            }
//
//            payrollPph.setJasprod(CommonUtil.numbericFormat(totalJasprod, "###,###")); //PPh Jasprod
//            payrollPph.setJasprodNilai(totalJasprod); //PPh Pensiun Nilai
//            jasprod = totalJasprod;
//        }
//
//        // pph gaji bruto
//        BigDecimal pphGajiBruto = hitungPphGajiBruto(BigDecimal.valueOf(0),BigDecimal.valueOf(0),
//                BigDecimal.valueOf(0), BigDecimal.valueOf(0), BigDecimal.valueOf(0), BigDecimal.valueOf(0),
//                BigDecimal.valueOf(0), BigDecimal.valueOf(0), BigDecimal.valueOf(0), thr, jasprod,
//                totalInsentif, pphGajiPensiun, pphGajiKaliLibilium, pphGajiRapel, BigDecimal.valueOf(0),BigDecimal.valueOf(0)) ;
//
//        //Biaya Jabatan Hanya didapatkan oleh KS (Karyawan Staf)
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//
//        BigDecimal pphGajiTotalBiayaPensiun = BigDecimal.valueOf(0);
//        BigDecimal pphGajiDanaPensiun = BigDecimal.valueOf(0);
//        BigDecimal pphGajiBpjsTk = BigDecimal.valueOf(0);
//        BigDecimal pphGajiBpjsPensiun = BigDecimal.valueOf(0);
//        BigDecimal pphGajiPtkp = BigDecimal.valueOf(0);
//
//        pphGajiTotalBiayaPensiun = pphGajiDanaPensiun.add(pphGajiBpjsTk).add(pphGajiBpjsPensiun);
//
//        BigDecimal pphGajiB = hitungPphGajiB(pphGajiBiayaJabatan, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        BigDecimal pphGajiPkp = pphGajiBruto.subtract(pphGajiB).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//        BigDecimal hutangPajak = hitungHutangPajak(pphGajiPkp);
//        //pphGaji = hutangPajak.divide(BigDecimal.valueOf(12), 2, RoundingMode.HALF_UP) ;
//        pphGaji = hutangPajak ;
//
//        if(pphGaji.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGaji = BigDecimal.valueOf(0);
//        }
//
//        payrollPph.setNip(nip); //set Nip, hanya digunakan untuk inisialisasi data pada sesssion
//        payrollPph.setGaji("0"); //PPh Gaji
//        payrollPph.setGajiNilai(BigDecimal.valueOf(0)); //PPh Gaji Nilai
//        payrollPph.setTunjanganUmk("0"); //PPh Tunj Umk
//        payrollPph.setTunjanganUmkNilai(BigDecimal.valueOf(0)); //PPh Tunj Umk Nilai
//        payrollPph.setTunjanganStruktural("0"); //PPh Tunj Struktural
//        payrollPph.setTunjanganStrukturalNilai(BigDecimal.valueOf(0)); //PPh Tunj Struktural Nilai
//        payrollPph.setTunjanganPeralihan("0"); //PPh Tunj Peralihan
//        payrollPph.setTunjanganPeralihanNilai(BigDecimal.valueOf(0)); //PPh Tunj Peralihan Nilai
//        payrollPph.setTunjanganJabatanStruktural("0"); //PPh Tunj Jabatan Struktural
//        payrollPph.setTunjanganJabatanStrukturalNilai(BigDecimal.valueOf(0)); //PPh Tunj Jabatan Struktural Nilai
//        payrollPph.setTunjanganStrategis("0"); //PPh Tunj Strategis
//        payrollPph.setTunjanganStrategisNilai(BigDecimal.valueOf(0)); //PPh Tunj Jabatan Strategis Nilai
//        payrollPph.setTunjanganKompensasi("0"); //PPh Tunj Kompensasi
//        payrollPph.setTunjanganKompensasiNilai(BigDecimal.valueOf(0)); //PPh Tunj Jabatan Kompensasi Nilai
//        payrollPph.setTunjanganTransport("0"); //PPh Tunj Transport
//        payrollPph.setTunjanganTransportNilai(BigDecimal.valueOf(0)); //PPh Tunj Jabatan Transport Nilai
//        payrollPph.setTunjanganAirListrik("0"); //PPh Tunj Air Listrik
//        payrollPph.setTunjanganAirListrikNilai(BigDecimal.valueOf(0)); //PPh Tunj Air Listrik Nilai
//        payrollPph.setTunjanganPerumahan("0"); //PPh Tunj Perumahan
//        payrollPph.setTunjanganPerumahanNilai(BigDecimal.valueOf(0)); //PPh Tunj Air Perumahan Nilai
//        payrollPph.setTunjanganPengobatan("0"); //PPh Tunj Pengobatan
//        payrollPph.setTunjanganPengobatanNilai(pphGajiTunjPengobatan); //PPh Tunj Air Pengobatan Nilai
//        payrollPph.setTunjanganPphTahun("0"); //PPh Tunj Pph
//        payrollPph.setTunjanganPphNilaiTahun(BigDecimal.valueOf(0)); //PPh Tunj Air Pph Nilai
//        payrollPph.setTunjanganLembur("0"); //PPh Tunj Lembur
//        payrollPph.setTunjanganLemburNilai(BigDecimal.valueOf(0)); //PPh Tunj Air Lembur Nilai
//        payrollPph.setTunjanganLainLain("0"); //PPh Tunj Lain Lain
//        payrollPph.setTunjanganLainLainNilai(BigDecimal.valueOf(0)); //PPh Tunj Lain Lain Nilai
//
//        payrollPph.setPendidikan(CommonUtil.numbericFormat(totalPendidikan, "###,###")); //PPh Pendidikan
//        payrollPph.setPendidikanNilai(totalPendidikan); //PPh Pendidikan Nilai
//        payrollPph.setJasprod(CommonUtil.numbericFormat(totalJasprod, "###,###")); //PPh Jasprod
//        payrollPph.setJasprodNilai(totalJasprod); //PPh Pensiun Nilai
//
//        //PPh pensiun tidak masuk pph Gaji
//        payrollPph.setPensiun(CommonUtil.numbericFormat(pphGajiPensiun, "###,###")); //PPh Pensiun
//        payrollPph.setPensiunNilai(pphGajiPensiun); //PPh Pensiun Nilai
//
//        payrollPph.setRapel(CommonUtil.numbericFormat(pphGajiRapel, "###,###")); //PPh Rapel
//        payrollPph.setRapelNilai(pphGajiRapel); //PPh Rapel Nilai
//        payrollPph.setJubileum(CommonUtil.numbericFormat(pphGajiKaliLibilium, "###,###")); //PPh Libilium
//        payrollPph.setJubileumNilai(pphGajiKaliLibilium); //PPh Libilium Nilai
//        payrollPph.setPakaianDinas("0"); //PPh Pakaian Dinas
//        payrollPph.setPakaianDinasNilai(BigDecimal.valueOf(0)); //PPh Pakaian Dinas Nilai
//        payrollPph.setDanaPensiun(CommonUtil.numbericFormat(pphGajiDanaPensiun, "###,###")); //PPh Dana Pensiun
//        payrollPph.setDanaPensiunNilai(pphGajiDanaPensiun); //PPh Jkm Jkk Nilai
//        payrollPph.setBpjsJht(CommonUtil.numbericFormat(pphGajiBpjsTk, "###,###")); //PPh Bpjs JHT
//        payrollPph.setBpjsJhtNilai(pphGajiBpjsTk); //PPh Bpjs JHT Nilai
//        payrollPph.setBpjsPensiun(CommonUtil.numbericFormat(pphGajiBpjsPensiun, "###,###")); //PPh Bpjs Pensiun
//        payrollPph.setBpjsPensiunNilai(pphGajiBpjsPensiun); //PPh Bpjs Pensiun Nilai
//        payrollPph.setIuranJkmJkk("0"); //PPh Jkm Jkk
//        payrollPph.setIuranJkmJkkNilai(BigDecimal.valueOf(0)); //PPh Jkm Jkk Nilai
//        payrollPph.setBruto(CommonUtil.numbericFormat(pphGajiBruto, "###,###")); //PPh Bruto(A)
//        payrollPph.setBrutoNilai(pphGajiBruto); //PPh Bruto(A) Nilai
//
//        payrollPph.setBiayaJabatan(CommonUtil.numbericFormat(pphGajiBiayaJabatan, "###,###")); //PPh BiayaJabatan
//        payrollPph.setBiayaJabatanNilai(pphGajiBiayaJabatan); //PPh BiayaJabatan Nilai
//        payrollPph.setIuranPensiun(CommonUtil.numbericFormat(pphGajiTotalBiayaPensiun, "###,###")); //PPh iuranPensiun
//        payrollPph.setIuranPensiunNilai(pphGajiTotalBiayaPensiun); //PPh IuranPensiun Nilai
//        payrollPph.setPtkp(CommonUtil.numbericFormat(pphGajiPtkp, "###,###")); //PPh ptkp
//        payrollPph.setPtkpNilai(pphGajiPtkp); //PPh Ptkp Nilai
//        payrollPph.setJumlahB(CommonUtil.numbericFormat(pphGajiB, "###,###")); //PPh Jumlah B
//        payrollPph.setJumlahBNilai(pphGajiB); //PPh Jumlah B Nilai
//        payrollPph.setPkp(CommonUtil.numbericFormat(pphGajiPkp, "###,###")); //PPh PKP
//        payrollPph.setPkpNilai(pphGajiPkp); //PPh PKP Nilai
//        payrollPph.setHutangPph(CommonUtil.numbericFormat(hutangPajak, "###,###")); //PPh Hutang PPh
//        payrollPph.setHutangPphNilai(hutangPajak); //PPh Hutang PPh Nilai
//        payrollPph.setPphGaji(CommonUtil.numbericFormat(pphGaji, "###,###")); //PPh PPh Gaji
//        payrollPph.setPphGajiNilai(pphGaji); //PPh PPh Gaji Nilai
//
//        payrollPph.setTunjanganPphNilaiBulan(BigDecimal.valueOf(0));
//        return payrollPph;
//    }

    //--------------------------------------------------------------------------------------//
    //-------------------------------------END PPH GAJI-------------------------------------//
    //--------------------------------------------------------------------------------------//


    //--------------------------------------------------------------------------------------//
    //----------------------------------------JASPROD---------------------------------------//
    //--------------------------------------------------------------------------------------//

    //uncomment by ferdi, 01 des 2020
//    BigDecimal jasprodJumlahGajiFaktorNormal = new BigDecimal(0);
//    BigDecimal jasprodJumlahPerhitungan = new BigDecimal(0);
//    BigDecimal jumlahNilaiSmk = new BigDecimal(0);
//    public void calculateJasprod(String branchId, String nip, String tahun, java.sql.Date tanggalAktif){
//
//        if(nip.equalsIgnoreCase("92-0617")){
//            int a = 0;
//        }
//        int mk = 0;
//        BigDecimal perhitungan = new BigDecimal(0);
//        BigDecimal gajiFaktorNormal = new BigDecimal(0);
//        BigDecimal tambahan = new BigDecimal(0);
//        BigDecimal nilaiSmk = new BigDecimal(9.12);
//
//        // Mengambil nilai SMK
//        int tahunInt = Integer.parseInt(tahun);
//        int sebelumTahun = tahunInt - 1;
//        List<ItSmkEntity> itSmkEntities = new ArrayList<>();
//        try {
//            itSmkEntities = smkDao.getListSmkByNipPeriode(nip, sebelumTahun + "", branchId);
//        } catch (HibernateException e) {
//            logger.error("[PayrollBoImpl.getJasprod] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//        }
//        if(itSmkEntities.size() > 0){
//            for(ItSmkEntity itSmkEntity: itSmkEntities){
//                nilaiSmk = BigDecimal.valueOf(itSmkEntity.getGrandTotalNilaiPrestasi());
//                mk = itSmkEntity.getMasaKerjaGolongan();
//            }
//        }
//
//        // persen SMK
//        BigDecimal persenSmk = new BigDecimal(0);
//        List<ImSmkPersenSmkNilaiEntity> imSmkPersenSmkNilaiEntities = new ArrayList<>();
//        imSmkPersenSmkNilaiEntities = smkPersenSmkNilaiDao.getListPersen(branchId);
//        if(imSmkPersenSmkNilaiEntities.size() > 0){
//            for(ImSmkPersenSmkNilaiEntity imSmkPersenSmkNilaiEntity: imSmkPersenSmkNilaiEntities){
//                if(nilaiSmk.compareTo(imSmkPersenSmkNilaiEntity.getNilaiBawah()) >= 0 && nilaiSmk.compareTo(imSmkPersenSmkNilaiEntity.getNilaiAtas()) < 0){
//                    persenSmk = imSmkPersenSmkNilaiEntity.getNilai();
//                    break;
//                }
//            }
//        }
//
//        //Gaji untuk jasprod diambilkan dari bulan 12 1 thn sebelumnya
//        ItPayrollEntity itPayroll = null;
//        BigDecimal faktorKali = getJasprodFaktorKali(branchId, nip);
//        BigDecimal gaji = new BigDecimal(0);
//        BigDecimal tunjUmk = new BigDecimal(0);
//        BigDecimal tunjStruktural = new BigDecimal(0);
//        BigDecimal tunjJabStruktural = new BigDecimal(0);
//        BigDecimal tunjStrategis = new BigDecimal(0);
//        BigDecimal tunjPeralihan = new BigDecimal(0);
//        BigDecimal gajiBruto = new BigDecimal(0);
//        BigDecimal gajiMasaKerja = new BigDecimal(0);
//
//        String tahunBefore = (Integer.parseInt(tahun)-1) + "";
//        List<ItPayrollEntity> itPayrollEntity = null ;
//        itPayrollEntity = payrollDao.getLastPayroll(nip, "12", tahunBefore + "", branchId);
//        if(itPayrollEntity.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1 : itPayrollEntity){
//                gaji = itPayrollEntity1.getGajiGolongan();
//                tunjUmk = itPayrollEntity1.getTunjanganUmk();
//                tunjStruktural = itPayrollEntity1.getTunjanganStruktural();
//                tunjJabStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                tunjStrategis = itPayrollEntity1.getTunjanganStrategis();
//                tunjPeralihan = itPayrollEntity1.getTunjanganPeralihan(); //Tunj. Peralihan
//            }
//        }
//
//        if(mk < 1){
//            mk = 1;
//        }
//
//        gajiBruto = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjPeralihan).add(tunjStrategis);
//        gajiMasaKerja = gajiBruto.multiply(BigDecimal.valueOf(mk)).divide(BigDecimal.valueOf(12), BigDecimal.ROUND_HALF_UP);
//
//        gajiFaktorNormal = gajiMasaKerja.multiply(faktorKali);
//        perhitungan = gajiMasaKerja.multiply(faktorKali);
//        perhitungan = perhitungan.multiply(persenSmk).divide(BigDecimal.valueOf(100), BigDecimal.ROUND_HALF_UP);
//
//        jasprodJumlahGajiFaktorNormal = jasprodJumlahGajiFaktorNormal.add(gajiFaktorNormal);
//        jasprodJumlahPerhitungan = jasprodJumlahPerhitungan.add(perhitungan);
//        jumlahNilaiSmk = jumlahNilaiSmk.add(nilaiSmk) ;//
//        // .setScale(2, BigDecimal.ROUND_HALF_UP);
//    }

    // -------------------------------------------------------------------------------------//
    //------------------------------------END JASPROD---------------------------------------//
    //--------------------------------------------------------------------------------------//
    //uncomment by ferdi, 01 des 2020

//    public BigDecimal hitungIuranBpjs(BigDecimal dasarPerhitunganBpjs,Double percent){
//        BigDecimal hasil = new BigDecimal(0);
//        hasil = CommonUtil.percentage(dasarPerhitunganBpjs, BigDecimal.valueOf(percent));
//        return hasil;
//    }
//
//    public BigDecimal hitungIuranBpjsTk(BigDecimal dasar, String branchId,String jenis){
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal iuran = new BigDecimal(0);
//        BigDecimal jpk = new BigDecimal(0);
//        Integer greater, smaller;
//
////        Map hsCriteria = new HashMap<>();
////        hsCriteria.put("branch_id", branchId);
////        hsCriteria.put("flag", "Y");
////        bpjs = payrollBpjsDao.getByCriteria(hsCriteria);
////        bpjs = payrollBpjsDao.getById("branchId", branchId);
//        List<ImPayrollBpjsEntity> payrollBpjsEntityList = new ArrayList<>();
//        payrollBpjsEntityList = payrollBpjsDao.getBpjsFilter(branchId);
//
//        ImPayrollBpjsEntity bpjs = new ImPayrollBpjsEntity();
//        for (ImPayrollBpjsEntity payrollBpjsEntity : payrollBpjsEntityList){
//            bpjs = payrollBpjsEntity;
//        }
//
//        greater = dasar.compareTo(bpjs.getMaxBpjsTk());
//        smaller = dasar.compareTo(bpjs.getMinBpjsTk());
//
//        if (smaller == 0 || smaller == 1) {
//            if (greater == 0 || greater == 1) {
//                dasar = bpjs.getMaxBpjsTk();
//            }
//        } else {
//            dasar = bpjs.getMinBpjsTk();
//        }
//        if (jenis.equalsIgnoreCase("kary")){
//            iuran = CommonUtil.percentage(dasar, BigDecimal.valueOf(bpjs.getIuranKary()));
//            jpk = CommonUtil.percentage(dasar, BigDecimal.valueOf(bpjs.getJpkKary()));
//            hasil = iuran.add(jpk);
//        }else{
//            iuran = CommonUtil.percentage(dasar, BigDecimal.valueOf(bpjs.getIuranPers()));
//            jpk = CommonUtil.percentage(dasar, BigDecimal.valueOf(bpjs.getJpkPers()));
//            hasil = iuran.add(jpk);
//        }
//        return hasil;
//    }



    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<Payroll> dataAddPayroll(Payroll bean) throws GeneralBOException {
//        List<Payroll> listOfResult = new ArrayList();
//        try{
//            index = 0;
//            List<PayrollPph> listOfResultPph = new ArrayList();
//            List<PayrollThr> listOfResultThr = new ArrayList();
//            List<PayrollJasopr> listOfResultJasopr = new ArrayList();
//            List<PayrollJubileum> listOfResultJubileum= new ArrayList();
//            List<PayrollCuti>listOfResultCuti = new ArrayList<>();
//            List<PayrollPensiun> listOfResultPensiun= new ArrayList();
//
//            List<PayrollInsentif> listOfResultInsentif= new ArrayList();
//            List<ItPayrollEntity> itPayroll = new ArrayList<>();
//            List<PayrollTunjanganLain> listTunjanganLain = new ArrayList<>();
//            List<ImBranches> imBranches;
//            Branch branch = new Branch();
//            String tahun="";
//            BigDecimal paramDapen = BigDecimal.ZERO;
//            BigDecimal paramDapenPegawai = BigDecimal.ZERO;
//            BigDecimal proporsiGaji = BigDecimal.ONE;
//            try {
//                ImCompany company = companyDao.getCompanyInfo("Y");
//                if (!("").equalsIgnoreCase(company.getPeriodeGaji())){
//                    tahun=company.getPeriodeGaji();
//                }else{
//                    String status = "Error : tidak ditemukan periode gaji pada Company";
//                    logger.error("[PayrollBoImpl.dataAddPayroll] "+status);
//                    throw new GeneralBOException(status);
//                }
//
//                String strWhere = "";
//                itPayroll = payrollDao.getDataEdit(bean.getBranchId(), strWhere);
//                imBranches = branchDao.getListBranchById(bean.getBranchId());
//
//                //untuk yang resign dll proporsional
//                if (("Y").equalsIgnoreCase(bean.getFlagPayroll())) {
//                    itPayroll.addAll(payrollDao.getDataEditPegawaiNonAktif(bean.getBranchId(), strWhere,bean.getBulan(),bean.getTahun()));
//                }
//
//                if (imBranches.size()>0&&imBranches.size()<2){
//                    for (ImBranches branchLoop: imBranches){
//                        branch.setMaxBpjsKs(branchLoop.getMaxBpjsKs());
//                        branch.setMinBpjsKs(branchLoop.getMinBpjsKs());
//                        branch.setMaxBpjsTk(branchLoop.getMaxBpjsTk());
//                        branch.setMinBpjsTk(branchLoop.getMinBpjsTk());
//                        branch.setPercentKsKary(branchLoop.getPercentKsKary());
//                        branch.setPercentKsPers(branchLoop.getPercentKsPers());
//                        branch.setPercentTkKary(branchLoop.getPercentTkKary());
//                        branch.setPercentTkPers(branchLoop.getPercentTkPers());
//                        branch.setUmr(branchLoop.getUmr());
//                    }
//                }else{
//                    String error ="Error : Unit tidak ditemukan atau ada banyak unit";
//                    logger.error("[PayrollBoImpl.getSearchSmkJabatanByCriteria] "+error);
//                    throw new GeneralBOException(error);
//                }
//            } catch (HibernateException e) {
//                logger.error("[PayrollBoImpl.getSearchSmkJabatanByCriteria] Error, " + e.getMessage());
//                throw new GeneralBOException("Found problem when searching data by criteria, please info to your admin..." + e.getMessage());
//            }
//
//            //VALIDASI
//            //Validasi jika sudah ada payroll
//            List<ItPayrollEntity> validasiPayroll = new ArrayList<>();
//            if (("Y").equalsIgnoreCase(bean.getFlagPayroll())){
//                validasiPayroll = payrollDao.getDataPayrollByBulanBranchAndTahun(bean.getBranchId(),bean.getBulan(),bean.getTahun());
//                if (validasiPayroll.size()>0){
//                    String status = "ERROR : data payroll bulan ini sudah ada ";
//                    logger.error("[PayrollBoImpl.getSearchSmkJabatanByCriteria] Error, " + status);
//                    throw new GeneralBOException(status);
//                }
//            }
//
//            //Validasi jika sudah ada payroll menggantung
//            validasiPayroll = payrollDao.getDataPayrollByBulanBranchApproveNull(bean.getBranchId(),bean.getTipe());
//            if (validasiPayroll.size()>0){
//                String status = "ERROR : data payroll masih ada yang belum terapprove ";
//                logger.error("[PayrollBoImpl.getSearchSmkJabatanByCriteria] Error, " + status);
//                throw new GeneralBOException(status);
//            }
//
//            //Validasi jika payroll bulan 12 sudah di proses
//            if (!("Y").equalsIgnoreCase(bean.getFlagPensiun())){
//                validasiPayroll = payrollDao.getDataPayrollByBulan12Branch(bean.getBranchId(),bean.getTahun());
//                if (validasiPayroll.size()>0){
//                    String status = "ERROR : Payroll bulan 12 sudah di proses , tidak bisa melakukan transaksi lain ";
//                    logger.error("[PayrollBoImpl.getSearchSmkJabatanByCriteria] Error, " + status);
//                    throw new GeneralBOException(status);
//                }
//            }
//
//            //Validasi bonus hanya bisa diproses 1 kali di tahun yang sama
//            if (!"PR".equalsIgnoreCase(bean.getTipe())&&!"PN".equalsIgnoreCase(bean.getTipe())&&!"JB".equalsIgnoreCase(bean.getTipe())){
//                String tipeWhere="";
//                switch (bean.getTipe()){
//                    case "T":
//                        tipeWhere="flagThr";
//                        break;
//                    case "JP":
//                        tipeWhere="flagJasprod";
//                        break;
//                    case "IN":
//                        tipeWhere="flagInsentif";
//                        break;
//                    case "CP":
//                        tipeWhere="flagCutiPanjang";
//                        break;
//                    case "CT":
//                        tipeWhere="flagCutiTahunan";
//                        break;
//                }
//                validasiPayroll = payrollDao.getBonusDalam1Tahun(bean.getBranchId(),bean.getTahun(),tipeWhere);
//
//                if (validasiPayroll.size()>0){
//                    String status = "ERROR : Bonus sudah di proses pada tahun ini ";
//                    logger.error("[PayrollBoImpl.getSearchSmkJabatanByCriteria] Error, " + status);
//                    throw new GeneralBOException(status);
//                }
//            }
//            //END OF VALIDASI
//
//
//            if(itPayroll != null) {
//                Payroll payroll;
//                PayrollPph payrollPph = null;
//                int bulanBefore = Integer.valueOf(bean.getBulan());
//                String strBulanBefore = "";
//                int tahunBefore = Integer.valueOf(bean.getTahun());
//                bulanBefore -= 1 ;
//                if(bulanBefore == 0){
//                    tahunBefore -= 1 ;
//                    bulanBefore = 12 ;
//                }
//                if(bulanBefore < 10){
//                    strBulanBefore = "0"+bulanBefore;
//                }else{
//                    strBulanBefore = ""+ bulanBefore;
//                }
//                // payroll yg diproses hanya karyawan tetap dan pkwt dalam masa kerja tersebut
//                for (ItPayrollEntity payrollEntity : itPayroll) {
//
//                    //menghitung pengali proporsional
//                    if (payrollEntity.getTanggalEfektif()!=null){
//                        Calendar cal = Calendar.getInstance();
//                        cal.setTime(payrollEntity.getTanggalEfektif());
//                        double day = cal.get(Calendar.DAY_OF_MONTH);
//                        double maxday = cal.getActualMaximum(Calendar.DATE);
//                        double prop = day/maxday;
//                        proporsiGaji = BigDecimal.valueOf(prop);
//                    }
//
//                    //validasi untuk yang melakukan cuti di luar tanggung jawab
//                    List<ItCutiPegawaiEntity> listOrangCutiDiLuarTanggungJawab = cutiPegawaiDao.getListCekCutiLuarTanggungan(payrollEntity.getNip(),bean.getBulan(),bean.getTahun());
//                    if (listOrangCutiDiLuarTanggungJawab.size()!=0){
//                        continue;
//                    }
//
//                    ImBiodataEntity biodataEntity = biodataDao.getById("nip",payrollEntity.getNip());
//
//                    payroll = new Payroll();
//                    payrollPph = new PayrollPph();
//                    String dateSekarang = new SimpleDateFormat("dd-MM-yyyy").format(Calendar.getInstance().getTime());
//                    DateTime tglAktif = new DateTime(payrollEntity.getTanggalAktif());
//
//                    payroll.setBulan(bean.getBulan());
//                    payroll.setTahun(bean.getTahun());
//                    payroll.setNip(payrollEntity.getNip());
//                    payroll.setNama(payrollEntity.getNama());
//                    payroll.setKelompokId(payrollEntity.getKelompokId());
//                    payroll.setNpwp(payrollEntity.getNpwp());
//                    payroll.setStatusPegawai(payrollEntity.getStatusPegawai());
//                    payroll.setTipePegawai(payrollEntity.getTipePegawai());
//                    payroll.setTipePegawaiName(payrollEntity.getTipePegawaiName());
//                    payroll.setStrukturGaji(payrollEntity.getStrukturGaji());
//                    if(payrollEntity.getTanggalAktif() != null){
//                        payroll.setStTanggalAktif(CommonUtil.convertDateToString(payrollEntity.getTanggalAktif()));
//                        payroll.setTanggalAktif(payrollEntity.getTanggalAktif());
//                    }else{
//                        payroll.setStTanggalAktif("");
//                    }
//                    payroll.setStTanggalAktifSekarang(dateSekarang);
//                    DateTime tanggalPayroll = new DateTime(CommonUtil.convertToDate("01-" + bean.getBulan() + "-" + bean.getTahun()).getTime());
//                    Period p = new Period(tglAktif, tanggalPayroll , PeriodType.yearMonthDayTime());
//                    String strTanggalPayroll = bean.getBulan() + "-" + bean.getTahun();
//                    payroll.setStTanggalPayroll(strTanggalPayroll);
//                    payroll.setMasaKerjaTahun(p.getYears());
//                    payroll.setMasaKerjaBulan(p.getMonths());
//                    payroll.setPositionId(payrollEntity.getPositionId());
//                    payroll.setPositionName(payrollEntity.getPositionName());
//                    payroll.setDepartmentId(payrollEntity.getDepartmentId());
//                    payroll.setDepartmentName(payrollEntity.getDepartmentName());
//                    payroll.setBranchId(payrollEntity.getBranchId());
//                    payroll.setBranchName(payrollEntity.getBranchName());
//                    payroll.setGolonganId(payrollEntity.getGolonganId());
//                    payroll.setProfesiId(payrollEntity.getProfesiId());
//                    ImProfesiEntity profesiPegawai = new ImProfesiEntity();
//                    profesiPegawai = profesiDao.getById("profesiId", payrollEntity.getProfesiId());
//                    if (profesiPegawai!=null){
//                        payroll.setProfesiName(profesiPegawai.getProfesiName());
//                    }else{
//                        payroll.setProfesiName("-");
//                    }
//                    List<ImGolonganPkwtEntity> listGolonganPkwt = new ArrayList<>();
//                    listGolonganPkwt = golonganPkwtDao.getGolonganById(payrollEntity.getGolonganId());
//                    GolonganPkwt golonganPkwt = new GolonganPkwt();
//                    for (ImGolonganPkwtEntity golonganPkwtLoop: listGolonganPkwt){
//                        golonganPkwt.setGolonganPkwtName(golonganPkwtLoop.getGolonganPkwtName());
//                    }
//
//                    if (("TP03").equalsIgnoreCase(payrollEntity.getTipePegawai())){
//                        payroll.setGolonganName(golonganPkwt.getGolonganPkwtName());
//                    }else{
//                        payroll.setGolonganName(payrollEntity.getGolonganName());
//                    }
//
//                    payroll.setStatusKeluarga(payrollEntity.getStatusKeluarga());
//                    payroll.setMasaKerjaGol(payrollEntity.getMasaKerjaGol());
//                    payroll.setStMasaKerjaGol(String.valueOf(payrollEntity.getMasaKerjaGol()));
//                    payroll.setGolonganDapenId(payrollEntity.getGolonganDapenId());
//                    ImGolonganDapenEntity golonganDapen = new ImGolonganDapenEntity();
//                    golonganDapen = golonganDapenDao.getById("golonganDapenId",payrollEntity.getGolonganDapenId());
//                    if (golonganDapen!=null){
//                        payroll.setGolonganDapenName(golonganDapen.getGolonganDapenName());
//                    }
//                    // cek apakah anak > 25 tahun
//                    payrollEntity.setJumlahAnak(cekJumlahAnak(payrollEntity.getNip(), payrollEntity.getBranchId()));
//                    payroll.setGender(payrollEntity.getGender());
//                    payroll.setDanaPensiunName(payrollEntity.getDanaPensiunName());
//                    payroll.setFlagPjs(payrollEntity.getFlagPjs());
//
//                    payroll.setFlagPayroll(bean.getFlagPayroll());
//                    payroll.setFlagRapel(bean.getFlagRapel());
//                    payroll.setFlagThr(bean.getFlagThr());
//                    payroll.setFlagPendidikan(bean.getFlagPendidikan());
//                    payroll.setFlagJubileum(bean.getFlagJubileum());
//                    payroll.setFlagJasprod(bean.getFlagJasprod());
//                    payroll.setFlagPensiun(bean.getFlagPensiun());
//                    payroll.setFlagInsentif(bean.getFlagInsentif());
//
//                    BigDecimal jumlahGajiKotor = new BigDecimal(0);
//
//                    //tambahan Irfan
//                    //A
//                    BigDecimal gaji = new BigDecimal(0);
//                    BigDecimal tunjStruktural = new BigDecimal(0);
//                    BigDecimal tunjJabatanStruktural = new BigDecimal(0);
//                    BigDecimal tunjStrategis = new BigDecimal(0);
//                    BigDecimal santunanKhusus = new BigDecimal(0);
//                    BigDecimal tunjPeralihan = new BigDecimal(0);
//                    BigDecimal tunjTambahan = new BigDecimal(0);
//                    BigDecimal tunjLain = new BigDecimal(0);
//                    BigDecimal pemondokan = new BigDecimal(0);
//                    BigDecimal komunikasi = new BigDecimal(0);
//                    BigDecimal tambahanLain = new BigDecimal(0);
//                    BigDecimal lembur = new BigDecimal(0);
//                    //Tunjangan A lainnya
//                    BigDecimal tunjSupervisi = new BigDecimal(0);
//                    BigDecimal tunjLokasi = new BigDecimal(0);
//                    BigDecimal tunjSiaga = new BigDecimal(0);
//                    BigDecimal tunjProfesional = new BigDecimal(0);
//                    BigDecimal thp = new BigDecimal(0);
//
//                    //B
//                    //Tunjangan
//                    BigDecimal tunjSosialLain = new BigDecimal(0);
//                    BigDecimal tunjDapen = new BigDecimal(0);
//                    BigDecimal tunjPph = new BigDecimal(0);
//                    BigDecimal tunjBpjsKs = new BigDecimal(0);
//                    BigDecimal tunjBpjsTk = new BigDecimal(0);
//
//                    //tunjangan RLAB
//                    BigDecimal tunjanganRumah = new BigDecimal(0);
//                    BigDecimal tunjanganListrik = new BigDecimal(0);
//                    BigDecimal tunjanganAir = new BigDecimal(0);
//                    BigDecimal tunjanganBbm = new BigDecimal(0);
//                    BigDecimal totalRlab = new BigDecimal(0);
//
//                    //C
//                    //iuran pensiun
//                    BigDecimal iuranDapenPensiunPeg = new BigDecimal(0);
//                    BigDecimal iuranDapenPensiunPersh = new BigDecimal(0);
//
//                    //iuran bpjs Kesehatan
//                    BigDecimal iuranBpjsKsKary = new BigDecimal(0);
//                    BigDecimal iuranBpjsKsPers = new BigDecimal(0);
//                    BigDecimal iuranBpjsTkKary = new BigDecimal(0);
//                    BigDecimal iuranBpjsTkPers = new BigDecimal(0);
//
//                    //Potongan Lain
//                    BigDecimal totalPotonganLain = new BigDecimal(0);
//                    BigDecimal kopkar = new BigDecimal(0);
//                    BigDecimal iuranSp = new BigDecimal(0);
//                    BigDecimal iuranPiikb = new BigDecimal(0);
//                    BigDecimal bankBri = new BigDecimal(0);
//                    BigDecimal bankMandiri = new BigDecimal(0);
//                    BigDecimal infaq = new BigDecimal(0);
//                    BigDecimal perkesDanObat = new BigDecimal(0);
//                    BigDecimal listrik = new BigDecimal(0);
//                    BigDecimal iuranProfesi = new BigDecimal(0);
//                    BigDecimal potonganLain = new BigDecimal(0);
//                    BigDecimal iuranYpks = new BigDecimal(0);
//
//                    BigDecimal gajiBersih = new BigDecimal(0);
//                    BigDecimal tunjLembur = new BigDecimal(0);
//                    BigDecimal gajiPensiun = new BigDecimal(0);
//
//                    //D
//                    BigDecimal lainLain = new BigDecimal(0);
//
//                    //Pph bulan 12
//                     BigDecimal pphSeharusnya= new BigDecimal(0);
//                     BigDecimal pph11Bulan= new BigDecimal(0);
//                     BigDecimal selisihPph= new BigDecimal(0);
//                    BigDecimal totalLain11Bulan = new BigDecimal(0);
//
//                    //macam Peralihan
//                    BigDecimal peralihanGapok = BigDecimal.ZERO;
//                    BigDecimal peralihanSankhus = BigDecimal.ZERO;
//                    BigDecimal peralihanTunjangan = BigDecimal.ZERO;
//
//                    //persentasi gaji
//                    Integer persenGapok = 100;
//                    Integer persenSankhus = 100;
//                    Integer persenTJabatan = 100;
//                    Integer persenTStruktural = 100;
//                    Integer persenTFungsional = 100;
//                    Integer persenTTambahan = 100;
//                    Integer persenRlab = 100;
//
//                    //update 31-05-2020
//                    //persentase dari gaji
//                    String tipeGaji =biodataEntity.getJenisPegawai();
//
//                    if (!"".equalsIgnoreCase(tipeGaji)){
//                        List<ImHrisMappingPersenGaji> mappingPersenGajiList = mappingPersenGajiDao.getListMappingPersenGaji(tipeGaji);
//                        for (ImHrisMappingPersenGaji persenGaji : mappingPersenGajiList){
//                            switch (persenGaji.getJenisGaji()){
//                                case "gaji_golongan":
//                                    persenGapok=persenGaji.getPresentase();
//                                    break;
//                                case "tunjangan_umk":
//                                    persenSankhus=persenGaji.getPresentase();
//                                    break;
//                                case "tunjangan_jabatan":
//                                    persenTJabatan=persenGaji.getPresentase();
//                                    break;
//                                case "tunjangan_jabatan_struktural":
//                                    persenTStruktural=persenGaji.getPresentase();
//                                    break;
//                                case "tunjangan_strategis":
//                                    persenTFungsional=persenGaji.getPresentase();
//                                    break;
//                                case "tunjangan_tambahan":
//                                    persenTTambahan=persenGaji.getPresentase();
//                                    break;
//                                case "tunjangan_rlab":
//                                    persenRlab=persenGaji.getPresentase();
//                                    break;
//                            }
//                        }
//                    }
//
//
//                    //flag untuk testing Tambahan Lain
//                    String flagTestTambahanLain = "N";
//
//                    //digunakan untuk menghitung bulan berjalan dari pegawai
//                    int bulanBerjalan =0;
//
//                    //cek semua flag pendapatan tidak tentu jika dicentang
//                    if (bean.getFlagThr().equalsIgnoreCase("Y") || bean.getFlagJasprod().equalsIgnoreCase("Y")||bean.getFlagInsentif().equalsIgnoreCase("Y")||
//                            bean.getFlagJubileum().equalsIgnoreCase("Y")|| bean.getFlagCutiPanjang().equalsIgnoreCase("Y")||
//                            bean.getFlagCutiTahunan().equalsIgnoreCase("Y") || bean.getFlagPensiun().equalsIgnoreCase("Y")) {
//                        flagTestTambahanLain = "Y";
//                    }
//                    // Flag Payroll
//                    if(bean.getFlagPayroll().equalsIgnoreCase("Y") || flagTestTambahanLain.equalsIgnoreCase("Y")) {
//                        lembur = getTunjanganLembur(payrollEntity.getNip(), payrollEntity.getBranchId(), tahunBefore + "-" + bulanBefore + "-01",
//                                bean.getTahun() + "-" + bean.getBulan() + "-01");
//
//                        if (!payrollEntity.getTipePegawai().equalsIgnoreCase("TP03")) {
//                            //Jika Kelompok position BOD BOC KA
//                            if (payrollEntity.getKelompokId().equalsIgnoreCase("KL00")) {
//                                ImPayrollSkalaGajiBodEntity payrollSkalaGajiBodEntity = getSkalaGajiSimRsBod(payrollEntity.getPositionId(),tahun);
//                                if (payrollSkalaGajiBodEntity!=null){
//                                    gaji=payrollSkalaGajiBodEntity.getGajiBod();
//                                    tunjanganRumah = payrollSkalaGajiBodEntity.getTunjRumah();
//                                    komunikasi = payrollSkalaGajiBodEntity.getTunjTelekomunikasi();
//                                }else{
//                                    String status = "ERROR : tidak ditemukan gaji untuk BOD dengan position Id "+payrollEntity.getPositionId();
//                                    throw new GeneralBOException(status);
//                                }
//                            } else {
//                                ImPayrollTunjanganJabatanStrukturalEntity tunjanganJabatan = new ImPayrollTunjanganJabatanStrukturalEntity();
//                                //mengambil gaji pokok dari table skala gaji
//                                // update 31-05-2020 ( untuk pengisian tergantung centangan dari biodata ) && ada prosentase pendapatan gaji
//                                ImPayrollSkalaGajiEntity skalaGajiPegawai = getSkalaGajiSimRs(payrollEntity.getGolonganId(),tahun);
//                                if (skalaGajiPegawai.getNilai()!=null){
//                                    gaji = skalaGajiPegawai.getNilai();
//                                    gaji = gaji.multiply(new BigDecimal(persenGapok)).divide(new BigDecimal(100));
//                                }
//                                if (skalaGajiPegawai.getSantunanKhusus()!=null){
//                                    santunanKhusus = skalaGajiPegawai.getSantunanKhusus();
//                                    santunanKhusus = santunanKhusus.multiply(new BigDecimal(persenSankhus)).divide(new BigDecimal(100));
//                                }
//                                if (skalaGajiPegawai.getRumah()!=null){
//                                    if ("Y".equalsIgnoreCase(biodataEntity.getFlagTunjRumah())){
//                                        tunjanganRumah = skalaGajiPegawai.getRumah();
//                                    }
//                                }
//                                if (skalaGajiPegawai.getListrik()!=null){
//                                    if ("Y".equalsIgnoreCase(biodataEntity.getFlagTunjListrik())) {
//                                        tunjanganListrik = skalaGajiPegawai.getListrik();
//                                    }
//                                }
//                                if (skalaGajiPegawai.getAir()!=null){
//                                    if ("Y".equalsIgnoreCase(biodataEntity.getFlagTunjAir())) {
//                                        tunjanganAir = skalaGajiPegawai.getAir();
//                                    }
//                                }
//                                if (skalaGajiPegawai.getBbm()!=null){
//                                    if ("Y".equalsIgnoreCase(biodataEntity.getFlagTunjBbm())) {
//                                        tunjanganBbm = skalaGajiPegawai.getBbm();
//                                    }
//                                }
//
//                                totalRlab = totalRlab.add(tunjanganRumah).add(tunjanganListrik).add(tunjanganAir).add(tunjanganBbm);
//
//                                totalRlab=totalRlab.multiply(new BigDecimal(persenRlab)).divide(new BigDecimal(100));
//
//                                //mengambil tunjangan jabatan dan tunjangan struktural dari tunjangan jabatan struktural
//                                try {
//                                    tunjanganJabatan = getTunjanganJabatanStrukturalSimRs(payrollEntity.getPositionId());
//                                    if (tunjanganJabatan.getTunjJabatan()!=null){
//                                        tunjJabatanStruktural = tunjanganJabatan.getTunjJabatan();
//                                        tunjJabatanStruktural = tunjJabatanStruktural.multiply(new BigDecimal(persenTJabatan)).divide(new BigDecimal(100));
//                                    }
//                                    if (tunjanganJabatan.getTunjStruktural()!=null){
//                                        tunjStruktural = tunjanganJabatan.getTunjStruktural();
//                                        tunjStruktural = tunjStruktural.multiply(new BigDecimal(persenTStruktural)).divide(new BigDecimal(100));
//                                    }
//                                } catch (GeneralBOException e) {
//                                    String status = "ERROR : gagal mengambil tunj jabatan";
//                                    throw new GeneralBOException(status);
//                                }
//
//                                //mengambil tunjangan fungsional
//                                if (tunjJabatanStruktural.compareTo(BigDecimal.valueOf(0))<1){
//                                    List<ImPayrollTunjanganStrategisEntity> listTunjanganStrategis = new ArrayList<>();
//                                    try {
//                                        listTunjanganStrategis = payrollTunjanganStrategisDao.getDataTunjStrategisById(payrollEntity.getProfesiId(),
//                                                payrollEntity.getGolonganId());
//
//                                        if (listTunjanganStrategis.size()>0){
//                                            for (ImPayrollTunjanganStrategisEntity tunjStrategisLoop: listTunjanganStrategis){
//                                                if (tunjStrategisLoop.getNilai()!=null){
//                                                    tunjStrategis = tunjStrategisLoop.getNilai();
//                                                    tunjStrategis = tunjStrategis.multiply(new BigDecimal(persenTFungsional)).divide(new BigDecimal(100));
//                                                }
//                                            }
//                                        }else {
//                                            tunjStrategis= BigDecimal.valueOf(0);
//                                        }
//                                    } catch (GeneralBOException e) {
//                                        String status = "ERROR : gagal mengambil payroll tunjangan strategis";
//                                        throw new GeneralBOException(status);
//                                    }
//                                }
//
//                                //mengambil payroll tahun bulan sebelumnya
//                                List<ItPayrollEntity> lastPayroll = new ArrayList<>();
//                                try {
//                                    lastPayroll = payrollDao.getLastPayroll(payrollEntity.getNip(),strBulanBefore,String.valueOf(tahunBefore));
//                                    if (lastPayroll.size()>0){
//                                        for (ItPayrollEntity payrollLoop: lastPayroll){
//                                            tunjPeralihan = payrollLoop.getTunjanganPeralihan();
//                                            pemondokan = payrollLoop.getPemondokan();
//                                            komunikasi = payrollLoop.getKomunikasi();
//                                            peralihanGapok = payrollLoop.getPeralihanGapok();
//                                            peralihanSankhus = payrollLoop.getPeralihanSankhus();
//                                            peralihanTunjangan = payrollLoop.getPeralihanTunjangan();
//
//                                            kopkar = payrollLoop.getKopkar();
//                                            iuranSp = payrollLoop.getIuranSp();
//                                            iuranPiikb = payrollLoop.getIuranPiikb();
//                                            bankBri = payrollLoop.getBankBri();
//                                            bankMandiri = payrollLoop.getBankMandiri();
//                                            infaq = payrollLoop.getInfaq();
//                                            perkesDanObat = payrollLoop.getPerkesDanObat();
//                                            listrik = payrollLoop.getListrik();
//                                            iuranProfesi = payrollLoop.getIuranProfesi();
//                                            potonganLain = payrollLoop.getPotonganLain();
//
//                                            totalPotonganLain= kopkar.add(iuranSp).add(iuranPiikb).add(bankBri).add(bankMandiri).add(infaq).add(perkesDanObat).add(listrik).add(iuranProfesi).add(potonganLain);
//                                        }
//                                    }
//                                } catch (GeneralBOException e) {
//                                    String status = "ERROR : gagal mengambil last payroll ";
//                                    throw new GeneralBOException(status);
//                                }
//
//                            }
//                        } else {
//                            ImPayrollSkalaGajiPkwtEntity skalaGajiPkwt = getSkalaGajiSimRsPkwt(payrollEntity.getGolonganId(),tahun);
//                            if (skalaGajiPkwt.getGajiPokok()!=null){
//                                gaji = skalaGajiPkwt.getGajiPokok();
//                                gaji = gaji.multiply(new BigDecimal(persenGapok)).divide(new BigDecimal(100));
//                            }
//                            if (skalaGajiPkwt.getSantunanKhusus()!=null){
//                                santunanKhusus = skalaGajiPkwt.getSantunanKhusus();
//                                santunanKhusus = santunanKhusus.multiply(new BigDecimal(persenSankhus)).divide(new BigDecimal(100));
//                            }
//                            if (skalaGajiPkwt.getTunjFunsional()!=null){
//                                tunjStrategis = skalaGajiPkwt.getTunjFunsional();
//                                tunjStrategis = tunjStrategis.multiply(new BigDecimal(persenTFungsional)).divide(new BigDecimal(100));
//                            }
//                            if (skalaGajiPkwt.getTunjtambahan()!=null){
//                                tunjTambahan = skalaGajiPkwt.getTunjtambahan();
//                                tunjTambahan = tunjTambahan.multiply(new BigDecimal(persenTTambahan)).divide(new BigDecimal(100));
//                            }
//                        }
//
//                        //perhitungan tunjangan - tunjangan lainnya
//                        //perhitungan thp pegawai pada tahun berjalan saat sistem dimulai
//                        thp = BigDecimal.valueOf(0);
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//                            thp = getTotalThp(12,
//                                    payrollEntity.getGolonganId(),payrollEntity.getTipePegawai(),
//                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                        }
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP03")){
//                            bulanBerjalan = cekBulanPayrollSimRs(payrollEntity.getNip(),bean.getBulan(),bean.getTahun());
//                            thp = getTotalThp(bulanBerjalan,
//                                    payrollEntity.getGolonganId(),payrollEntity.getTipePegawai(),
//                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                        }
//                        //mengambil tunjangan2 lain pegawai
//                        List<ItTunjLainPegawaiEntity> tunjLainPegawaiEntityList = tunjLainPegawaiDao.getAllData(payrollEntity.getNip());
//                        if (tunjLainPegawaiEntityList.size()>0){
//                            for (ItTunjLainPegawaiEntity tunjLainPegawaiLoop: tunjLainPegawaiEntityList){
//                                if (tunjLainPegawaiLoop.getFlagTunjSupervisi().equalsIgnoreCase("Y")){
//                                    PayrollTunjanganLain payrollTunjanganLain = new PayrollTunjanganLain();
//                                    payrollTunjanganLain.setNip(payrollEntity.getNip());
//                                    payrollTunjanganLain.setNamaTunjangan("Tunjangan Supervisi");
//                                    payrollTunjanganLain.setBulan(bean.getBulan());
//                                    payrollTunjanganLain.setTahun(bean.getTahun());
//                                    payrollTunjanganLain.setNilai(CommonUtil.numbericFormat(tunjSupervisi,"###,###"));
//                                    payrollTunjanganLain.setNilaiNilai(tunjSupervisi);
//                                    listTunjanganLain.add(payrollTunjanganLain);
//                                }
//                                if (tunjLainPegawaiLoop.getFlagTunjLokasi().equalsIgnoreCase("Y")){
//                                    if(thp.compareTo(branch.getUmr()) < 0){
//                                        tunjLokasi = branch.getUmr().subtract(thp);
//                                        PayrollTunjanganLain payrollTunjanganLain = new PayrollTunjanganLain();
//                                        payrollTunjanganLain.setNip(payrollEntity.getNip());
//                                        payrollTunjanganLain.setNamaTunjangan("Tunjangan Lokasi");
//                                        payrollTunjanganLain.setBulan(bean.getBulan());
//                                        payrollTunjanganLain.setTahun(bean.getTahun());
//                                        payrollTunjanganLain.setNilai(CommonUtil.numbericFormat(tunjLokasi,"###,###"));
//                                        payrollTunjanganLain.setNilaiNilai(tunjLokasi);
//                                        listTunjanganLain.add(payrollTunjanganLain);
//                                    }else{
//                                        PayrollTunjanganLain payrollTunjanganLain = new PayrollTunjanganLain();
//                                        payrollTunjanganLain.setNip(payrollEntity.getNip());
//                                        payrollTunjanganLain.setNamaTunjangan("Tunjangan Lokasi");
//                                        payrollTunjanganLain.setBulan(bean.getBulan());
//                                        payrollTunjanganLain.setTahun(bean.getTahun());
//                                        payrollTunjanganLain.setNilai(CommonUtil.numbericFormat(tunjLokasi,"###,###"));
//                                        payrollTunjanganLain.setNilaiNilai(tunjLokasi);
//                                        listTunjanganLain.add(payrollTunjanganLain);
//                                    }
//                                }
//                                if (tunjLainPegawaiLoop.getFlagTunjSiaga().equalsIgnoreCase("Y")){
//                                    tunjSiaga = BigDecimal.valueOf(500000);
//
//                                    PayrollTunjanganLain payrollTunjanganLain = new PayrollTunjanganLain();
//                                    payrollTunjanganLain.setNip(payrollEntity.getNip());
//                                    payrollTunjanganLain.setNamaTunjangan("Tunjangan Siaga");
//                                    payrollTunjanganLain.setBulan(bean.getBulan());
//                                    payrollTunjanganLain.setTahun(bean.getTahun());
//                                    payrollTunjanganLain.setNilai(CommonUtil.numbericFormat(tunjSiaga,"###,###"));
//                                    payrollTunjanganLain.setNilaiNilai(tunjSiaga);
//                                    listTunjanganLain.add(payrollTunjanganLain);
//                                }
//                                if (tunjLainPegawaiLoop.getFlagTunjProfesional().equalsIgnoreCase("Y")){
//                                    tunjProfesional = tunjStrategis;
//
//                                    PayrollTunjanganLain payrollTunjanganLain = new PayrollTunjanganLain();
//                                    payrollTunjanganLain.setNip(payrollEntity.getNip());
//                                    payrollTunjanganLain.setNamaTunjangan("Tunjangan Profesional");
//                                    payrollTunjanganLain.setBulan(bean.getBulan());
//                                    payrollTunjanganLain.setTahun(bean.getTahun());
//                                    payrollTunjanganLain.setNilai(CommonUtil.numbericFormat(tunjProfesional,"###,###"));
//                                    payrollTunjanganLain.setNilaiNilai(tunjProfesional);
//                                    listTunjanganLain.add(payrollTunjanganLain);
//                                }
//                            }
//                        }
//
//                        //tunjangan - tunjangan lain ditambahkan
//                        tunjLain = tunjSupervisi.add(tunjLokasi).add(tunjSiaga).add(tunjProfesional);
//
//                        //perhitungan iuran bpjs pegawai irfan
//                        // update 31-05-2020 ( parameter dasar perhitungan bpjs fleksibel )
//                        BigDecimal dasarPerhitunganBpjs= BigDecimal.ZERO;
//                        List<ImPayrollParamBpjsEntity> payrollParamBpjsEntityList = payrollParamBpjsDao.getParams();
//                        for (ImPayrollParamBpjsEntity bpjsparam : payrollParamBpjsEntityList){
//                            if ("Y".equalsIgnoreCase(bpjsparam.getFlagGapok())){
//                                dasarPerhitunganBpjs=dasarPerhitunganBpjs.add(gaji);
//                            }
//                            if ("Y".equalsIgnoreCase(bpjsparam.getFlagSankhus())){
//                                dasarPerhitunganBpjs=dasarPerhitunganBpjs.add(santunanKhusus);
//                            }
//                            if ("Y".equalsIgnoreCase(bpjsparam.getFlagPeralihanGapok())){
//                                dasarPerhitunganBpjs=dasarPerhitunganBpjs.add(peralihanGapok);
//                            }
//                            if ("Y".equalsIgnoreCase(bpjsparam.getFlagPeralihanSankhus())){
//                                dasarPerhitunganBpjs=dasarPerhitunganBpjs.add(peralihanSankhus);
//                            }
//                            if ("Y".equalsIgnoreCase(bpjsparam.getFlagPeralihanTunjangan())){
//                                dasarPerhitunganBpjs=dasarPerhitunganBpjs.add(peralihanTunjangan);
//                            }
//                        }
//
//                        List<ImPayrollBpjsEntity> payrollBpjsEntityList = new ArrayList<>();
//                        payrollBpjsEntityList = payrollBpjsDao.getBpjsFilter(payrollEntity.getBranchId());
//
//                        ImPayrollBpjsEntity dataBpjs = new ImPayrollBpjsEntity();
//                        for (ImPayrollBpjsEntity payrollBpjsEntity : payrollBpjsEntityList){
//                            dataBpjs = payrollBpjsEntity;
//                        }
//
//                        // update 31-05-2020 ( ada centangan pada biodata untuk potongan iuran bpjs kary )
//                        if ("Y".equalsIgnoreCase(biodataEntity.getFlagBpjsKs())){
//                            //Bpjs Ks
//                            iuranBpjsKsKary = hitungIuranBpjs(dasarPerhitunganBpjs, dataBpjs.getIuranBpjsKsKaryPersen());
//                            iuranBpjsKsPers = hitungIuranBpjs(dasarPerhitunganBpjs, dataBpjs.getIuranBpjsKsPersPersen());
//                        }
//                        if ("Y".equalsIgnoreCase(biodataEntity.getFlagBpjsTk())){
//                            //Bpjs Tk
//                            iuranBpjsTkKary = hitungIuranBpjsTk(dasarPerhitunganBpjs, payrollEntity.getBranchId(), "kary");
//                            iuranBpjsTkPers = hitungIuranBpjsTk(dasarPerhitunganBpjs, payrollEntity.getBranchId(), "pers");
//                        }
//
//                        //perhitungan iuran pensiun
//                        if (payrollEntity.getDanaPensiun() != null) {
//                            if (!payrollEntity.getDanaPensiun().equalsIgnoreCase("")){
//                                ImPayrollDanaPensiunEntity payrollDanaPensiunEntity = payrollDanaPensiunDao.getById("danaPensiunId",payrollEntity.getDanaPensiun());
//                                if (payrollDanaPensiunEntity!=null){
//                                    paramDapen = payrollDanaPensiunEntity.getPersentasePers();
//                                    paramDapenPegawai = payrollDanaPensiunEntity.getPersentaseKary();
//                                }
//
//                                gajiPensiun = getGajiPensiunSimRs(payrollEntity.getGolonganDapenId(), payrollEntity.getMasaKerjaGol(),payrollEntity.getDanaPensiun());
//                                iuranDapenPensiunPersh = CommonUtil.percentage(gajiPensiun, paramDapen);
//
//                                if (payrollEntity.getDanaPensiun().equalsIgnoreCase("DP01")){
//                                    iuranDapenPensiunPeg = getIuranPensiunPegSimRs(payrollEntity.getGolonganId());
//                                }else {
//                                    iuranDapenPensiunPeg = CommonUtil.percentage(gajiPensiun, paramDapenPegawai);
//                                }
//
//                            }else{
//                                gajiPensiun = BigDecimal.valueOf(0);
//                                iuranDapenPensiunPeg = BigDecimal.valueOf(0);
//                                iuranDapenPensiunPersh = BigDecimal.valueOf(0);
//                            }
//
//                        } else {
//                            gajiPensiun = BigDecimal.valueOf(0);
//                            iuranDapenPensiunPeg = BigDecimal.valueOf(0);
//                            iuranDapenPensiunPersh = BigDecimal.valueOf(0);
//                        }
//
//                        //membulatkan iuran dapen
//                        iuranDapenPensiunPeg = iuranDapenPensiunPeg.setScale(0,BigDecimal.ROUND_HALF_UP);
//                        iuranDapenPensiunPersh = iuranDapenPensiunPersh.setScale(0,BigDecimal.ROUND_HALF_UP);
//                        iuranBpjsKsKary = iuranBpjsKsKary.setScale(0,BigDecimal.ROUND_HALF_UP);
//                        iuranBpjsTkPers = iuranBpjsTkPers.setScale(0,BigDecimal.ROUND_HALF_UP);
//
//                        payroll.setGajiPensiun(CommonUtil.numbericFormat(gajiPensiun, "###,###"));
//                        payroll.setGajiPensiunNilai(gajiPensiun);
//
//                        //Jika tunjangan Pesangon sudah diambil, maka sudak tidak mendapatkan gaji pensiun
//                        List<ItPayrollEntity> payrollPensiunList = null;
//                        payrollPensiunList = payrollDao.cekPensiun(payrollEntity.getNip());
//                        if (payrollPensiunList.size() > 0) {
//                            gajiPensiun = BigDecimal.valueOf(0);
//                        }
//
//                        //Menghitung proporsional
//                        gaji = gaji.multiply(proporsiGaji);
//                        santunanKhusus = santunanKhusus.multiply(proporsiGaji);
//                        tunjJabatanStruktural = tunjJabatanStruktural.multiply(proporsiGaji);
//                        tunjStruktural = tunjStruktural.multiply(proporsiGaji);
//                        tunjStrategis = tunjStrategis.multiply(proporsiGaji);
//                        tunjPeralihan = tunjPeralihan.multiply(proporsiGaji);
//                        tunjLain = tunjLain.multiply(proporsiGaji);
//                        tunjTambahan = tunjTambahan.multiply(proporsiGaji);
//                        pemondokan = pemondokan.multiply(proporsiGaji);
//                        komunikasi = komunikasi.multiply(proporsiGaji);
//                        tunjanganRumah = tunjanganRumah.multiply(proporsiGaji);
//                        tunjanganListrik = tunjanganListrik.multiply(proporsiGaji);
//                        tunjanganAir = tunjanganAir.multiply(proporsiGaji);
//                        tunjanganBbm = tunjanganBbm.multiply(proporsiGaji);
//                        totalRlab = totalRlab.multiply(proporsiGaji);
//
//                        //perhitungan pph gaji karyawan
//                        payrollPph = kalkulasiGrossUpPphSimRs(payrollEntity.getNip(),bean.getBulan(), bean.getTahun(), payrollEntity.getBranchId(),
//                                    gaji, santunanKhusus, tunjJabatanStruktural, tunjStruktural, tunjStrategis, tunjPeralihan,tunjLain, tunjTambahan, pemondokan, komunikasi,
//                                    totalRlab, lembur, iuranDapenPensiunPersh, iuranBpjsTkPers, iuranBpjsKsPers, lainLain,
//                                    iuranDapenPensiunPeg, iuranBpjsTkKary, iuranBpjsKsKary, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(),biodataEntity.getNpwp());
//
//                        if (bean.getBulan().equalsIgnoreCase("12")){
//                            BigDecimal bruto11Bulan = payrollDao.getBruto11Bulan(bean.getTahun(),payrollEntity.getNip());
//                            BigDecimal tunjPPh11Bulan = payrollDao.getTunjanganPPhGaji11Bulan(bean.getTahun(),payrollEntity.getNip());
//                            BigDecimal tunjPphBonus = payrollDao.getTunjanganPPhGajiBonusSetahun(bean.getTahun(),payrollEntity.getNip());
//                            pph11Bulan = payrollDao.getPPhGaji11Bulan(bean.getTahun(),payrollEntity.getNip());
//                            BigDecimal pphBonus = payrollDao.getPPhGajiBonusSetahun(bean.getTahun(),payrollEntity.getNip());
//                            BigDecimal bonus11Bulan = payrollDao.getTotalBonusSetahun(bean.getTahun(),payrollEntity.getNip());
//                            BigDecimal ptt11Bulan = payrollDao.totalLain(bean.getTahun(), payrollEntity.getNip());
//                            BigDecimal pttBulan12 = new BigDecimal(0);
//                            BigDecimal iuranPegawai11Bulan = payrollDao.getIuran11Bulan(bean.getTahun(),payrollEntity.getNip());
//                            totalLain11Bulan = bonus11Bulan.add(ptt11Bulan).add(pttBulan12);
//                            PayrollPph pph12Bulan = pph21SimRs(gaji, santunanKhusus, tunjJabatanStruktural, tunjStruktural, tunjStrategis, tunjPeralihan,tunjLain, tunjTambahan, pemondokan, komunikasi,
//                                    totalRlab, lembur, iuranDapenPensiunPersh, iuranBpjsTkPers, iuranBpjsKsPers, bonus11Bulan,
//                                    iuranDapenPensiunPeg, iuranBpjsTkKary, iuranBpjsKsKary, payrollEntity.getStatusKeluarga(),
//                                    payrollEntity.getJumlahAnak(),bruto11Bulan,tunjPPh11Bulan,tunjPphBonus,ptt11Bulan,iuranPegawai11Bulan,pttBulan12,pph11Bulan,pphBonus,biodataEntity.getNpwp());
//
//                            pphSeharusnya = pph12Bulan.getHutangPphNilai();
//                            selisihPph = pph12Bulan.getPphGajiNilai();
//
//                            if(selisihPph.compareTo(BigDecimal.ZERO)<0){
//                                selisihPph=BigDecimal.ZERO;
//                            }
//
//                            payrollPph.setPphGajiNilai(selisihPph);
//                            payrollPph.setPphGaji(CommonUtil.numbericFormat(selisihPph,"###,###"));
//                            payrollPph.setKeterangan("PPH Bulan 12");
//
//                            payroll.setPph11BulanNilai(pph11Bulan.add(pphBonus));
//                            payroll.setPph11Bulan(CommonUtil.numbericFormat(pph11Bulan.add(pphBonus),"###,###"));
//                            payroll.setTotalLain11BulanNilai(totalLain11Bulan);
//                            payroll.setTotalLain11Bulan(CommonUtil.numbericFormat(totalLain11Bulan,"###,###"));
//                            pph11Bulan = pph11Bulan.add(pphBonus);
//                        }
//                    }
//
//                    //Flag THR
//                    //cek jika flag THR di centang
//                    if (bean.getFlagThr().equalsIgnoreCase("Y")) {
//                        //perhitungan thp thr
//                        thp = BigDecimal.valueOf(0);
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//                            thp = getTotalThp(12,
//                                    payrollEntity.getGolonganId(),payrollEntity.getTipePegawai(),
//                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                        }
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP03")){
//                            bulanBerjalan = cekBulanPayrollSimRs(payrollEntity.getNip(),bean.getBulan(),bean.getTahun());
//                            thp = getTotalThp(12,
//                                    payrollEntity.getGolonganId(),payrollEntity.getTipePegawai(),
//                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                        }
//
//                        PayrollThr payrollThr = getThr(payrollEntity.getNip(), bean.getBulan(), bean.getTahun(), gaji
//                                , santunanKhusus, tunjStruktural, tunjJabatanStruktural, tunjStrategis, totalRlab
//                                , tunjPeralihan,pemondokan,komunikasi,tunjTambahan,tunjLain,thp);
//                        payrollThr.setFlagThr("Y");
//
//                        //perhitungan pph thr
//                        PayrollPph payrolPphThr =  kalkulasiGrossUpPphSimRs(payrollEntity.getNip(),bean.getBulan(), bean.getTahun(), payrollEntity.getBranchId(),
//                                gaji, santunanKhusus, tunjJabatanStruktural, tunjStruktural, tunjStrategis, tunjPeralihan,tunjLain, tunjTambahan, pemondokan, komunikasi,
//                                totalRlab, lembur, iuranDapenPensiunPersh, iuranBpjsTkPers, iuranBpjsKsPers, payrollThr.getTotalThrNilai(),
//                                iuranDapenPensiunPeg, iuranBpjsTkKary, iuranBpjsKsKary, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(),biodataEntity.getNpwp());
//
//                        //pph pendapatan dengan thr - pph gaji normal = pph thr only
//                        BigDecimal pphThr = payrolPphThr.getPphGajiNilai().subtract(payrollPph.getPphGajiNilai());
//                        if (pphThr.compareTo(BigDecimal.valueOf(0)) > 0){
//                            payrollPph.setPphGajiNilai(pphThr);
//                            payrollPph.setPphGaji(CommonUtil.numbericFormat(pphThr, "###,###"));
//                            payrollThr.setTotalThrNilaiBersih(payrollThr.getTotalThrNilai());
//                            payrollThr.setTotalThrBersih(CommonUtil.numbericFormat(payrollThr.getTotalThrNilai(), "###,###"));
//                            payrollThr.setPphThr(CommonUtil.numbericFormat(pphThr, "###,###"));
//                            payrollThr.setPphThrNilai(pphThr);
//
//                            //ada tunj. PPh
//                            payrollThr.setTunjanganPph(CommonUtil.numbericFormat(pphThr, "###,###"));
//                            payrollThr.setTunjanganPphNilai(pphThr);
//                            payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(pphThr, "###,###"));
//                            payrollPph.setTunjanganPphNilaiBulan(pphThr);
//
//                        }else{
//                            payrollPph.setPphGajiNilai(BigDecimal.valueOf(0));
//                            payrollPph.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                            payrollThr.setPphThr(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                            payrollThr.setPphThrNilai(BigDecimal.valueOf(0));
//                            payrollThr.setTunjanganPph(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                            payrollThr.setTunjanganPphNilai(BigDecimal.valueOf(0));
//                            payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                            payrollPph.setTunjanganPphNilaiBulan(BigDecimal.valueOf(0));
//
//                            payrollThr.setTotalThrNilaiBersih(payrollThr.getTotalThrNilai());
//                            payrollThr.setTotalThrBersih(CommonUtil.numbericFormat(payrollThr.getTotalThrNilai(), "###,###"));
//
//                        }
//                        payrollPph.setKeterangan("PPH THR");
//                        tambahanLain = payrollThr.getTotalThrNilai();
//
//                        listOfResultThr.add(payrollThr);
//                    } else {
//                        payroll.setFlagThr("N");
//                    }
//
//                    //Flag Jasprod
//                    if (bean.getFlagJasprod().equalsIgnoreCase("Y")) {
//                        thp = BigDecimal.valueOf(0);
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//                            thp = getTotalThp(12,
//                                    payrollEntity.getGolonganId(),payrollEntity.getTipePegawai(),
//                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                        }
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP03")){
//                            bulanBerjalan = cekBulanPayrollSimRs(payrollEntity.getNip(),bean.getBulan(),bean.getTahun());
//                            thp = getTotalThp(bulanBerjalan,
//                                    payrollEntity.getGolonganId(),payrollEntity.getTipePegawai(),
//                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                        }
//                        PayrollJasopr payrollJasopr = getJasopr(payrollEntity.getNip(), bean.getBulan(), bean.getTahun(),
//                                gaji,santunanKhusus,tunjJabatanStruktural,tunjStruktural,tunjStrategis,tunjPeralihan,
//                                tunjLain,tunjTambahan,pemondokan,komunikasi,totalRlab,thp);
//                        payroll.setFlagJasprod("Y");
//
//                        //hitung pph jasa operasional
//                        PayrollPph payrolPphJasopr = kalkulasiGrossUpPphSimRs(payrollEntity.getNip(),bean.getBulan(), bean.getTahun(), payrollEntity.getBranchId(),
//                                gaji, santunanKhusus, tunjJabatanStruktural, tunjStruktural, tunjStrategis, tunjPeralihan,tunjLain, tunjTambahan, pemondokan, komunikasi,
//                                totalRlab, lembur, iuranDapenPensiunPersh, iuranBpjsTkPers, iuranBpjsKsPers, payrollJasopr.getTotaljasoprNilai(),
//                                iuranDapenPensiunPeg, iuranBpjsTkKary, iuranBpjsKsKary, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(),biodataEntity.getNpwp());
//
//                        //pph pendapatan dengan jasopr - pph normal = pph jasop only
//                        BigDecimal pphJasopr = payrolPphJasopr.getPphGajiNilai().subtract(payrollPph.getPphGajiNilai());
//                        if (pphJasopr.compareTo(BigDecimal.valueOf(0)) > 0){
//                            payrollPph.setPphGajiNilai(pphJasopr);
//                            payrollPph.setPphGaji(CommonUtil.numbericFormat(pphJasopr, "###,###"));
//                            payrollJasopr.setNettojasoprNilai(payrollJasopr.getTotaljasoprNilai());
//                            payrollJasopr.setNettojasopr(CommonUtil.numbericFormat(payrollJasopr.getTotaljasoprNilai(), "###,###"));
//                            payrollJasopr.setPphJasoprNilai(pphJasopr);
//                            payrollJasopr.setPphJasopr(CommonUtil.numbericFormat(pphJasopr, "###,###"));
//
//                            //ada tunj. PPh
//                            payrollJasopr.setTunjPph(CommonUtil.numbericFormat(pphJasopr, "###,###"));
//                            payrollJasopr.setTunjPphNilai(pphJasopr);
//                            payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(pphJasopr, "###,###"));
//                            payrollPph.setTunjanganPphNilaiBulan(pphJasopr);
//
//                        }else{
//                            payrollPph.setPphGajiNilai(BigDecimal.valueOf(0));
//                            payrollPph.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                            payrollJasopr.setNettojasoprNilai(payrollJasopr.getTotaljasoprNilai());
//                            payrollJasopr.setNettojasopr(CommonUtil.numbericFormat(payrollJasopr.getTotaljasoprNilai(), "###,###"));
//                            payrollJasopr.setPphJasoprNilai(BigDecimal.valueOf(0));
//                            payrollJasopr.setPphJasopr(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//
//                            //ada tunj. PPh
//                            payrollJasopr.setTunjPph(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                            payrollJasopr.setTunjPphNilai(BigDecimal.valueOf(0));
//                            payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                            payrollPph.setTunjanganPphNilaiBulan(BigDecimal.valueOf(0));
//                        }
//                        payrollPph.setKeterangan("PPH JASOPR");
//                        tambahanLain = payrollJasopr.getTotaljasoprNilai();
//
//                        listOfResultJasopr.add(payrollJasopr);
//                    } else {
//                        payroll.setFlagJasprod("N");
//                    }
//
//                    //Flag Jubilium
//                    int tahunJabatan=0;
//                    PayrollJubileum payrollJubileum = new PayrollJubileum();
//                    if (bean.getFlagJubileum().equalsIgnoreCase("Y")){
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//
//                            payroll.setFlagJubileum("Y");
//                            String stTglAktif = payrollEntity.getTanggalAktif().toString();
//                            Integer tahunSekarang = Integer.parseInt(bean.getTahun());
//                            String[] arrayTglAktif = stTglAktif.split("-");
//                            Integer tahunaktif = Integer.parseInt(arrayTglAktif[0]);
//                            tahunJabatan = tahunSekarang - tahunaktif;
//                            if (tahunJabatan>=20){ //disini masih salah
//
//                                payrollJubileum = getJubileum(payrollEntity.getNip(),
//                                        gaji,santunanKhusus,tunjJabatanStruktural,tunjStruktural,tunjStrategis,tunjPeralihan,tunjTambahan,pemondokan,komunikasi,
//                                        bean.getTahun(),bean.getBulan(), payrollEntity.getTanggalAktif());
//                                PayrollPph payrolPphJubileum = new PayrollPph();
//                                payrolPphJubileum = kalkulasiGrossUpPphSimRs(payrollEntity.getNip(),bean.getBulan(), bean.getTahun(), payrollEntity.getBranchId(),
//                                        gaji, santunanKhusus, tunjJabatanStruktural, tunjStruktural, tunjStrategis, tunjPeralihan,tunjLain, tunjTambahan, pemondokan, komunikasi,
//                                        totalRlab, lembur, iuranDapenPensiunPersh, iuranBpjsTkPers, iuranBpjsKsPers, payrollJubileum.getTotalJubileumNilai(),
//                                        iuranDapenPensiunPeg, iuranBpjsTkKary, iuranBpjsKsKary, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(),biodataEntity.getNpwp());
//                                //pph pendapatan dengan jasopr - pph normal = pph jasop only
//                                BigDecimal pphJubileum = payrolPphJubileum.getPphGajiNilai().subtract(payrollPph.getPphGajiNilai());
//                                if (pphJubileum.compareTo(BigDecimal.valueOf(0))==1){
//                                    payrollPph.setPphGajiNilai(pphJubileum);
//                                    payrollPph.setPphGaji(CommonUtil.numbericFormat(pphJubileum, "###,###"));
//
//                                    payrollJubileum.setPphJubileumNilai(pphJubileum);
//                                    payrollJubileum.setPphJubileum(CommonUtil.numbericFormat(pphJubileum, "###,###"));
//                                    payrollJubileum.setNettoJubileumNilai(payrollJubileum.getTotalJubileumNilai().subtract(pphJubileum));
//                                    payrollJubileum.setNettoJubileum(CommonUtil.numbericFormat(payrollJubileum.getTotalJubileumNilai().subtract(pphJubileum), "###,###"));
//                                }else{
//                                    payrollPph.setPphGajiNilai(BigDecimal.valueOf(0));
//                                    payrollPph.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//
//                                    payrollJubileum.setPphJubileumNilai(BigDecimal.valueOf(0));
//                                    payrollJubileum.setPphJubileum(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                                    payrollJubileum.setNettoJubileumNilai(payrollJubileum.getTotalJubileumNilai());
//                                    payrollJubileum.setNettoJubileum(CommonUtil.numbericFormat(payrollJubileum.getTotalJubileumNilai(), "###,###"));
//                                }
//
//                                payrollPph.setKeterangan("PPH JUBILEUM");
//                                tambahanLain = payrollJubileum.getTotalJubileumNilai();
//
//                                listOfResultJubileum.add(payrollJubileum);
//                            }
//                        }
//                    }else{
//                        payroll.setFlagJubileum("N");
//                    }
//
//                    //FLAG CUTI PANJANG/TAHUNAN
//                    PayrollCuti payrollCuti = new PayrollCuti();
//                    if (bean.getFlagCutiPanjang().equalsIgnoreCase("Y")|| bean.getFlagCutiTahunan().equalsIgnoreCase("Y")){
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//                            bulanBerjalan = cekBulanPayrollSimRs(payrollEntity.getNip(),bean.getBulan(),bean.getTahun());
//                            thp = getTotalThp(12,
//                                    payrollEntity.getGolonganId(),payrollEntity.getTipePegawai(),
//                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                            payrollCuti = getCuti(payrollEntity.getNip(), bean.getBulan(), bean.getTahun(),thp,
//                                    bean.getFlagCutiTahunan(),bean.getFlagCutiPanjang());
//
//                            PayrollPph payrolPphCuti =  kalkulasiGrossUpPphSimRs(payrollEntity.getNip(),bean.getBulan(), bean.getTahun(), payrollEntity.getBranchId(),
//                                    gaji, santunanKhusus, tunjJabatanStruktural, tunjStruktural, tunjStrategis, tunjPeralihan,tunjLain, tunjTambahan, pemondokan, komunikasi,
//                                    totalRlab, lembur, iuranDapenPensiunPersh, iuranBpjsTkPers, iuranBpjsKsPers, payrollCuti.getTotalCutiNilai(),
//                                    iuranDapenPensiunPeg, iuranBpjsTkKary, iuranBpjsKsKary, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(),biodataEntity.getNpwp());
//
//                            //pph pendapatan dengan jasopr - pph normal = pph jasop only
//                            BigDecimal pphCuti = payrolPphCuti.getPphGajiNilai().subtract(payrollPph.getPphGajiNilai());
//
//                            payrollCuti.setGaji(CommonUtil.numbericFormat(gaji,"###,###"));
//                            payrollCuti.setSankhus(CommonUtil.numbericFormat(santunanKhusus,"###,###"));
//                            payrollCuti.setTunjJabatan(CommonUtil.numbericFormat(tunjJabatanStruktural,"###,###"));
//                            payrollCuti.setTunjStruktural(CommonUtil.numbericFormat(tunjStruktural,"###,###"));
//                            payrollCuti.setTunjFungsional(CommonUtil.numbericFormat(tunjStrategis,"###,###"));
//                            payrollCuti.setTunjPeralihan(CommonUtil.numbericFormat(tunjPeralihan,"###,###"));
//                            payrollCuti.setTunjRumah(CommonUtil.numbericFormat(tunjanganRumah,"###,###"));
//                            payrollCuti.setTunjListrik(CommonUtil.numbericFormat(tunjanganListrik,"###,###"));
//                            payrollCuti.setTunjAir(CommonUtil.numbericFormat(tunjanganAir,"###,###"));
//                            payrollCuti.setTunjBbm(CommonUtil.numbericFormat(tunjanganBbm,"###,###"));
//
//                            payrollCuti.setGajiNilai(gaji);
//                            payrollCuti.setSankhusNilai(santunanKhusus);
//                            payrollCuti.setTunjJabatanNilai(tunjJabatanStruktural);
//                            payrollCuti.setTunjStrukturalNilai(tunjStruktural);
//                            payrollCuti.setTunjFungsionalNilai(tunjStrategis);
//                            payrollCuti.setTunjPeralihanNilai(tunjPeralihan);
//                            payrollCuti.setTunjRumahNilai(tunjanganRumah);
//                            payrollCuti.setTunjListrikNilai(tunjanganListrik);
//                            payrollCuti.setTunjAirNilai(tunjanganAir);
//                            payrollCuti.setTunjBbmNilai(tunjanganBbm);
//
//                            if (pphCuti.compareTo(BigDecimal.valueOf(0)) > 0){
//                                payrollPph.setPphGajiNilai(pphCuti);
//                                payrollPph.setPphGaji(CommonUtil.numbericFormat(pphCuti, "###,###"));
//
//                                payrollCuti.setPphCutiNilai(pphCuti);
//                                payrollCuti.setPphCuti(CommonUtil.numbericFormat(pphCuti, "###,###"));
//                                payrollCuti.setTotalBersihCutiNilai(payrollCuti.getTotalCutiNilai());
//                                payrollCuti.setTotalBersihCuti(CommonUtil.numbericFormat(payrollCuti.getTotalCutiNilai(), "###,###"));
//
//                                //ada tunj. PPh
//                                payrollCuti.setTunjPph(CommonUtil.numbericFormat(pphCuti, "###,###"));
//                                payrollCuti.setTunjPphNilai(pphCuti);
//                                payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(pphCuti, "###,###"));
//                                payrollPph.setTunjanganPphNilaiBulan(pphCuti);
//
//                            }else{
//                                payrollPph.setPphGajiNilai(BigDecimal.valueOf(0));
//                                payrollPph.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//
//                                payrollCuti.setPphCutiNilai(BigDecimal.valueOf(0));
//                                payrollCuti.setPphCuti(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//
//                                //ada tunj. PPh
//                                payrollCuti.setTunjPph(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                                payrollCuti.setTunjPphNilai(BigDecimal.valueOf(0));
//                                payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                                payrollPph.setTunjanganPphNilaiBulan(BigDecimal.valueOf(0));
//
//                                payrollCuti.setTotalBersihCutiNilai(payrollCuti.getTotalCutiNilai());
//                                payrollCuti.setTotalBersihCuti(CommonUtil.numbericFormat(payrollCuti.getTotalCutiNilai(), "###,###"));
//                            }
//
//
//                            /*payrollPph.setPphGajiNilai(pphCuti);
//                            payrollPph.setPphGaji(CommonUtil.numbericFormat(pphCuti, "###,###"));*/
//                            payrollPph.setKeterangan("PPH CUTI");
//                            tambahanLain = payrollCuti.getTotalCutiNilai();
//                            if (bean.getFlagCutiPanjang().equalsIgnoreCase("Y")){
//                                payroll.setFlagCutiPanjang("Y");
//                                payroll.setFlagCutiTahunan("N");
//                                if (payrollCuti.getTotalCutiNilai().compareTo(BigDecimal.valueOf(0)) > 0){
//                                    listOfResultCuti.add(payrollCuti);
//                                }
//                            }
//                            if (bean.getFlagCutiTahunan().equalsIgnoreCase("Y")){
//                                payroll.setFlagCutiPanjang("N");
//                                payroll.setFlagCutiTahunan("Y");
//                                listOfResultCuti.add(payrollCuti);
//                            }
//                        }
//                    }else{
//                        payroll.setFlagCutiPanjang("N");
//                        payroll.setFlagCutiTahunan("N");
//                    }
//                    PayrollInsentif payrollInsentif  = new PayrollInsentif();
//                    if (bean.getFlagInsentif().equalsIgnoreCase("Y")){
//                        payroll.setFlagInsentif("Y");
//                        thp = BigDecimal.valueOf(0);
//                        BigDecimal total = new BigDecimal(0);
//                        //mengambil history jabatan pegawai, yang nantinya digunakan untuk menghitung thp
//                        List<ImtHrisHistoryJabatanPegawaiEntity> historyJabatanList = new ArrayList<>();
//                        historyJabatanList = historyJabatanPegawaiDao.getDataHistoryForThp(payrollEntity.getNip());
//                        Integer tahunsebelumnya = Integer.parseInt(bean.getTahun());
//                        tahunsebelumnya -=1;
//                        if (historyJabatanList.size()>0){
//                            for (ImtHrisHistoryJabatanPegawaiEntity historyLoop: historyJabatanList){
//                                String[]tglAwalJabatan = historyLoop.getTanggal().split("-");
//                                if (historyLoop.getTanggalKeluar()!=null){
//                                    if (historyLoop.getTanggalKeluar().equalsIgnoreCase("")){
//                                        if (Integer.parseInt(tglAwalJabatan[2])<tahunsebelumnya){
//                                            bulanBerjalan = hitungBulanInsentif("01-01-"+String.valueOf(tahunsebelumnya),"31-12-"+String.valueOf(tahunsebelumnya));
//                                            total = getTotalThp(bulanBerjalan,
//                                                    payrollEntity.getGolonganId(),historyLoop.getTipePegawaiId(),
//                                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                                        }else if(Integer.parseInt(tglAwalJabatan[2])==tahunsebelumnya){
//                                            bulanBerjalan = hitungBulanInsentif(historyLoop.getTanggal(),"31-12-"+String.valueOf(tahunsebelumnya));
//                                            total = getTotalThp(bulanBerjalan,
//                                                    payrollEntity.getGolonganId(),historyLoop.getTipePegawaiId(),
//                                                    tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                                        }
//                                    }else{
//                                        String[]tahunAkhir = historyLoop.getTanggalKeluar().split("-");
//                                        if (tahunAkhir[2].equalsIgnoreCase(String.valueOf(tahunsebelumnya))){
//                                            if (Integer.parseInt(tglAwalJabatan[2])<tahunBefore){
//                                                bulanBerjalan = hitungBulanInsentif("01-01-"+String.valueOf(tahunsebelumnya),historyLoop.getTanggalKeluar());
//                                                total = getTotalThp(bulanBerjalan,
//                                                        payrollEntity.getGolonganId(),historyLoop.getTipePegawaiId(),
//                                                        tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                                            }else{
//                                                bulanBerjalan = hitungBulanInsentif(historyLoop.getTanggal(),historyLoop.getTanggalKeluar());
//                                                total = getTotalThp(bulanBerjalan,
//                                                        payrollEntity.getGolonganId(),historyLoop.getTipePegawaiId(),
//                                                        tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                                            }
//                                        }
//                                    }
//                                }else{
//                                    if (Integer.parseInt(tglAwalJabatan[2])<tahunsebelumnya){
//                                        bulanBerjalan = hitungBulanInsentif("01-01-"+String.valueOf(tahunsebelumnya),"31-12-"+String.valueOf(tahunsebelumnya));
//                                        total = getTotalThp(bulanBerjalan,
//                                                payrollEntity.getGolonganId(),historyLoop.getTipePegawaiId(),
//                                                tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                                    }else if(Integer.parseInt(tglAwalJabatan[2])==tahunsebelumnya){
//                                        bulanBerjalan = hitungBulanInsentif(historyLoop.getTanggal(),"31-12"+String.valueOf(tahunsebelumnya));
//                                        total = getTotalThp(bulanBerjalan,
//                                                payrollEntity.getGolonganId(),historyLoop.getTipePegawaiId(),
//                                                tunjJabatanStruktural,tunjStruktural,tunjStrategis, tunjPeralihan,tahun);
//                                    }
//                                }
//                                thp = thp.add(total);
//                            }
//                            payrollInsentif = getInsentifSimRs(payrollEntity.getNip(), bean.getBulan(), bean.getTahun(),thp);
//                            payrollInsentif.setGaji(CommonUtil.numbericFormat(gaji,"###,###"));
//                            payrollInsentif.setSankhus(CommonUtil.numbericFormat(santunanKhusus,"###,###"));
//                            payrollInsentif.setTunjJabatan(CommonUtil.numbericFormat(tunjJabatanStruktural,"###,###"));
//                            payrollInsentif.setTunjFungsional(CommonUtil.numbericFormat(tunjStrategis,"###,###"));
//                            payrollInsentif.setTunjPeralihan(CommonUtil.numbericFormat(tunjPeralihan,"###,###"));
//                            payrollInsentif.setTunjStrutural(CommonUtil.numbericFormat(tunjStruktural,"###,###"));
//                            payrollInsentif.setTunjTambahan(CommonUtil.numbericFormat(tunjTambahan,"###,###"));
//                            payrollInsentif.setTunjAir(CommonUtil.numbericFormat(tunjanganAir,"###,###"));
//                            payrollInsentif.setTunjBbm(CommonUtil.numbericFormat(tunjanganBbm,"###,###"));
//                            payrollInsentif.setTunjRumah(CommonUtil.numbericFormat(tunjanganRumah,"###,###"));
//                            payrollInsentif.setTunjListrik(CommonUtil.numbericFormat(listrik,"###,###"));
//
//                            payrollInsentif.setGajiNilai(gaji);
//                            payrollInsentif.setSankhusNilai(santunanKhusus);
//                            payrollInsentif.setTunjJabatanNilai(tunjJabatanStruktural);
//                            payrollInsentif.setTunjStruturalNilai(tunjStruktural);
//                            payrollInsentif.setTunjFungsionalNilai(tunjStrategis);
//                            payrollInsentif.setTunjPeralihanNilai(tunjPeralihan);
//                            payrollInsentif.setTunjTambahanNilai(tunjTambahan);
//                            payrollInsentif.setTunjRumahNilai(tunjanganRumah);
//                            payrollInsentif.setTunjListrikNilai(tunjanganListrik);
//                            payrollInsentif.setTunjAirNilai(tunjanganAir);
//                            payrollInsentif.setTunjBbmNilai(tunjanganBbm);
//
//
//                            PayrollPph payrolPphInsentif =  kalkulasiGrossUpPphSimRs(payrollEntity.getNip(),bean.getBulan(), bean.getTahun(), payrollEntity.getBranchId(),
//                                    gaji, santunanKhusus, tunjJabatanStruktural, tunjStruktural, tunjStrategis, tunjPeralihan,tunjLain, tunjTambahan, pemondokan, komunikasi,
//                                    totalRlab, lembur, iuranDapenPensiunPersh, iuranBpjsTkPers, iuranBpjsKsPers, payrollInsentif.getTotalInsentifNilai(),
//                                    iuranDapenPensiunPeg, iuranBpjsTkKary, iuranBpjsKsKary, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(),biodataEntity.getNpwp());
//                            //pph pendapatan dengan insentif - pph normal = pph insentif only
//                            BigDecimal pphInsentif = payrolPphInsentif.getPphGajiNilai().subtract(payrollPph.getPphGajiNilai());
//
//                            if (pphInsentif.compareTo(BigDecimal.valueOf(0)) > 0){
//                                payrollInsentif.setPphInsentifNilai(pphInsentif);
//                                payrollInsentif.setPphInsentif(CommonUtil.numbericFormat(pphInsentif,"###,###"));
//
//                                payrollInsentif.setTotalInsentifBersih(CommonUtil.numbericFormat(payrollInsentif.getTotalInsentifNilai(),"###,###"));
//                                payrollPph.setPphGaji(CommonUtil.numbericFormat(pphInsentif,"###,###"));
//
//                                //ada tunj. PPh
//                                payrollInsentif.setTunjPph(CommonUtil.numbericFormat(pphInsentif, "###,###"));
//                                payrollInsentif.setTunjPphNilai(pphInsentif);
//                                payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(pphInsentif, "###,###"));
//                                payrollPph.setTunjanganPphNilaiBulan(pphInsentif);
//
//                                payrollInsentif.setTotalInsentifBersihNilai(payrollInsentif.getTotalInsentifNilai());
//                                payrollPph.setPphGajiNilai(pphInsentif);
//                            }else{
//                                payrollInsentif.setPphInsentif(CommonUtil.numbericFormat(BigDecimal.valueOf(0),"###,###"));
//                                payrollInsentif.setTotalInsentifBersih(CommonUtil.numbericFormat(payrollInsentif.getTotalInsentifNilai(),"###,###"));
//                                payrollPph.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0),"###,###"));
//
//                                //ada tunj. PPh
//                                payrollInsentif.setTunjPph(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                                payrollInsentif.setTunjPphNilai(BigDecimal.valueOf(0));
//                                payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                                payrollPph.setTunjanganPphNilaiBulan(BigDecimal.valueOf(0));
//
//                                payrollInsentif.setPphInsentifNilai(BigDecimal.valueOf(0));
//                                payrollInsentif.setTotalInsentifBersihNilai(payrollInsentif.getTotalInsentifNilai());
//                                payrollPph.setPphGajiNilai(BigDecimal.valueOf(0));
//                            }
//                            payrollPph.setKeterangan("PPH INSENTIF");
//                            tambahanLain = payrollInsentif.getTotalInsentifNilai();
//                        }
//                        listOfResultInsentif.add(payrollInsentif);
//                    }else{
//                        payroll.setFlagInsentif("N");
//                    }
//                    //flag Pensiun
//                    PayrollPensiun payrollPensiun = new PayrollPensiun();
//                    if (bean.getFlagPensiun().equalsIgnoreCase("Y")){
//                        if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//                            bulanBerjalan = 0;
//                            String tglAktifPegawai = CommonUtil.convertDateToString(payrollEntity.getTanggalAktif());
//                            String tglPensiunPegawai = CommonUtil.convertDateToString(payrollEntity.getTanggalPensiun());
//                            Integer bulanSekarang = Integer.parseInt(bean.getBulan());
//                            Integer bulanPensiun = hitungBulanInsentif("01-"+bean.getBulan()+"-"+bean.getTahun(),tglPensiunPegawai);
//                            bulanBerjalan = hitungBulanInsentif(CommonUtil.convertDateToString(payrollEntity.getTanggalAktif()),"01-"+bean.getBulan()+"-"+bean.getTahun());
//                            //pembayaran dikunci di h-1 bulan Masa bebas tugas
//                            if (bulanPensiun-bulanSekarang<=7){
//                                payrollPensiun = getPensiunSimRs(payrollEntity.getNip(),gaji,santunanKhusus, tunjJabatanStruktural, tunjStruktural,tunjPeralihan,bulanBerjalan);
//                                BigDecimal pphPensiun = hitungPph21Sht(payrollPensiun.getNettoPensiunNilai());
//
//                                payrollPensiun.setNip(payrollEntity.getNip());
//                                payrollPensiun.setTanggalAktif(payrollEntity.getTanggalAktif());
//                                payrollPensiun.setTanggalPensiun(payrollEntity.getTanggalPensiun());
//                                payrollPensiun.setStTanggalAktif(tglAktifPegawai);
//                                payrollPensiun.setStTanggalPensiun(tglPensiunPegawai);
//                                payrollPensiun.setMasaKerjaBulan(String.valueOf(bulanBerjalan));
//                                payrollPensiun.setMasaKerjaTahun(String.valueOf(bulanBerjalan/12));
//
//
//                                payrollPensiun.setTotalPensiunNilai(payrollPensiun.getNettoPensiunNilai().add(pphPensiun));
//                                payrollPensiun.setTotalPensiun(CommonUtil.numbericFormat(payrollPensiun.getNettoPensiunNilai().add(pphPensiun),"###,###"));
//
//                                payrollPensiun.setPphPensiunNilai(pphPensiun);
//                                payrollPensiun.setPphPensiun(CommonUtil.numbericFormat(pphPensiun,"###,###"));
//                                payrollPph.setPphGajiNilai(pphPensiun);
//                                payrollPph.setPphGaji(CommonUtil.numbericFormat(pphPensiun,"###,###"));
//                                payrollPph.setKeterangan("PPH PENSIUN");
//                                tambahanLain = payrollPensiun.getTotalPensiunNilai();
//                            }else{
//                                payroll.setFlagPensiun("N");
//                            }
//                        }else{
//                            payroll.setFlagPensiun("N");
//                        }
//                        listOfResultPensiun.add(payrollPensiun);
//                    }
//
//                    //untuk tunjangan pph sama dengan potongan pph
//                    tunjPph = payrollPph.getPphGajiNilai();
//                    //jika memproses selain gaji normal semua nilai di 0 kan
//                    if (flagTestTambahanLain.equalsIgnoreCase("Y")){
//                        //set semua nilai menjadi 0 selain tambahan lain
//                        gaji = BigDecimal.valueOf(0);
//                        gajiPensiun = BigDecimal.valueOf(0);
//                        tunjStruktural = BigDecimal.valueOf(0);
//                        tunjJabatanStruktural = BigDecimal.valueOf(0);
//                        tunjStrategis = BigDecimal.valueOf(0);
//                        santunanKhusus = BigDecimal.valueOf(0);
//                        tunjPeralihan = BigDecimal.valueOf(0);
//                        tunjTambahan = BigDecimal.valueOf(0);
//                        tunjLain = BigDecimal.valueOf(0);
//                        pemondokan = BigDecimal.valueOf(0);
//                        komunikasi = BigDecimal.valueOf(0);
//                        lembur = BigDecimal.valueOf(0);
//                        //Tunjangan A lainnya
//                        tunjSupervisi = BigDecimal.valueOf(0);
//                        tunjLokasi = BigDecimal.valueOf(0);
//                        tunjSiaga = BigDecimal.valueOf(0);
//                        tunjProfesional = BigDecimal.valueOf(0);
//
//                        //B
//                        //Tunjangan
//                        tunjSosialLain = BigDecimal.valueOf(0);
//                        tunjDapen = BigDecimal.valueOf(0);
////                        tunjPph = BigDecimal.valueOf(0);
//                        tunjBpjsKs = BigDecimal.valueOf(0);
//                        tunjBpjsTk = BigDecimal.valueOf(0);
//
//                        //tunjangan RLAB
//                        tunjanganRumah = BigDecimal.valueOf(0);
//                        tunjanganListrik = BigDecimal.valueOf(0);
//                        tunjanganAir = BigDecimal.valueOf(0);
//                        tunjanganBbm = BigDecimal.valueOf(0);
//                        totalRlab = BigDecimal.valueOf(0);
//
//                        //C
//                        //iuran pensiun
//                        iuranDapenPensiunPeg = BigDecimal.valueOf(0);
//                        iuranDapenPensiunPersh = BigDecimal.valueOf(0);
//
//                        //iuran bpjs Kesehatan
//                        iuranBpjsKsKary = BigDecimal.valueOf(0);
//                        iuranBpjsKsPers = BigDecimal.valueOf(0);
//                        iuranBpjsTkKary = BigDecimal.valueOf(0);
//                        iuranBpjsTkPers = BigDecimal.valueOf(0);
//
//                        //Potongan Lain
//                        totalPotonganLain = BigDecimal.valueOf(0);
//                        kopkar = BigDecimal.valueOf(0);
//                        iuranSp = BigDecimal.valueOf(0);
//                        iuranPiikb = BigDecimal.valueOf(0);
//                        bankBri = BigDecimal.valueOf(0);
//                        bankMandiri = BigDecimal.valueOf(0);
//                        infaq = BigDecimal.valueOf(0);
//                        perkesDanObat = BigDecimal.valueOf(0);
//                        listrik = BigDecimal.valueOf(0);
//                        iuranProfesi = BigDecimal.valueOf(0);
//                        potonganLain = BigDecimal.valueOf(0);
//
//                        //D
//                        lainLain = BigDecimal.valueOf(0);
//                    }
//                    payroll.setGajiPensiun(CommonUtil.numbericFormat(gajiPensiun, "###,###")); //Gaji
//                    payroll.setGajiPensiunNilai(gajiPensiun); //Gaji Nilai
//                    // komponen A
//                    payroll.setGajiGolongan(CommonUtil.numbericFormat(gaji, "###,###")); //Gaji
//                    payroll.setGajiGolonganNilai(gaji); //Gaji Nilai
//                    payroll.setTunjanganUmk(CommonUtil.numbericFormat(santunanKhusus, "###,###")); //santunan Khusus
//                    payroll.setTunjanganUmkNilai(santunanKhusus); //santunan Khusus Nilai
//                    payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabatanStruktural, "###,###")); //Tunj. Jabatan
//                    payroll.setTunjanganJabatanStrukturalNilai(tunjJabatanStruktural); //Tunj. Jabatan  Nilai
//                    payroll.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###")); //Tunj. Struktural
//                    payroll.setTunjanganStrukturalNilai(tunjStruktural); //Tunj. Struktural Nilai
//                    payroll.setTunjanganStrategis(CommonUtil.numbericFormat(tunjStrategis, "###,###"));
//                    payroll.setTunjanganStrategisNilai(tunjStrategis);
//                    payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//                    payroll.setTunjanganPeralihanNilai(tunjPeralihan);
//                    payroll.setTunjanganTambahan(CommonUtil.numbericFormat(tunjTambahan, "###,###"));
//                    payroll.setTunjanganTambahanNilai(tunjTambahan);
//                    payroll.setTunjanganLain(CommonUtil.numbericFormat(tunjLain, "###,###"));
//                    payroll.setTunjanganLainNilai(tunjLain);
//                    payroll.setPemondokan(CommonUtil.numbericFormat(pemondokan, "###,###"));
//                    payroll.setPemondokanNilai(pemondokan);
//                    payroll.setKomunikasi(CommonUtil.numbericFormat(komunikasi, "###,###"));
//                    payroll.setKomunikasiNilai(komunikasi);
//                    payroll.setTunjanganLembur(CommonUtil.numbericFormat(lembur, "###,###"));
//                    payroll.setTunjanganLemburNilai(lembur);
//                    payroll.setTambahanLain(CommonUtil.numbericFormat(tambahanLain, "###,###"));
//                    payroll.setTambahanLainNilai(tambahanLain);
//                    payroll.setTunjanganLembur(CommonUtil.numbericFormat(lembur, "###,###"));
//                    payroll.setTunjanganLemburNilai(lembur);
//
//                    BigDecimal totalA = new BigDecimal(0);
//                    totalA = totalA.add(gaji).add(santunanKhusus).add(tunjJabatanStruktural).add(tunjStruktural)
//                            .add(tunjStrategis).add(tunjPeralihan).add(tunjLain).add(tunjTambahan).add(tambahanLain).add(lembur).add(pemondokan).add(komunikasi).add(lembur);
//                    payroll.setTotalA(CommonUtil.numbericFormat(totalA, "###,###"));
//                    payroll.setTotalANilai(totalA);
//
//                    //Komponen B
//                    //Tunj. RLAB
//                    payroll.setTunjanganRumah(CommonUtil.numbericFormat(tunjanganRumah, "###,###"));
//                    payroll.setTunjanganRumahNilai(tunjanganRumah);
//                    payroll.setTunjanganListrik(CommonUtil.numbericFormat(tunjanganListrik, "###,###"));
//                    payroll.setTunjanganListrikNilai(tunjanganListrik);
//                    payroll.setTunjanganAir(CommonUtil.numbericFormat(tunjanganAir, "###,###"));
//                    payroll.setTunjanganAirNilai(tunjanganAir);
//                    payroll.setTunjanganBbm(CommonUtil.numbericFormat(tunjanganBbm, "###,###"));
//                    payroll.setTunjanganBBMNilai(tunjanganBbm);
//                    payroll.setTotalRlab(CommonUtil.numbericFormat(totalRlab, "###,###"));
//                    payroll.setTotalRlabNilai(totalRlab);
//
//                    //tunjangan
//
//                    tunjBpjsKs = iuranBpjsKsPers;
//                    payroll.setTunjanganBpjsKs(CommonUtil.numbericFormat(tunjBpjsKs, "###,###"));
//                    payroll.setTunjanganBpjsKsNilai(tunjBpjsKs);
//                    tunjBpjsTk = iuranBpjsTkPers;
//                    payroll.setTunjanganBpjsTk(CommonUtil.numbericFormat(tunjBpjsTk, "###,###"));
//                    payroll.setTunjanganBpjsTkNilai(tunjBpjsTk);
//                    payroll.setTunjanganSosialLain(CommonUtil.numbericFormat(tunjSosialLain, "###,###"));
//                    payroll.setTunjanganSosialLainNilai(tunjSosialLain);
//                    tunjDapen = iuranDapenPensiunPersh;
//                    payroll.setTunjanganDapen(CommonUtil.numbericFormat(tunjDapen, "###,###"));
//                    payroll.setTunjanganDapenNilai(tunjDapen);
//
//                    payroll.setTunjanganPph(CommonUtil.numbericFormat(tunjPph, "###,###"));
//                    payroll.setTunjanganPphNilai(tunjPph);
//
//                    BigDecimal totalB = new BigDecimal(0);
//                    totalB = totalB.add(tunjanganRumah).add(tunjanganListrik).add(tunjanganAir).add(tunjanganBbm)
//                            .add(tunjDapen).add(tunjBpjsKs).add(tunjBpjsTk).add(tunjPph).add(tunjSosialLain);
//                    payroll.setTotalB(CommonUtil.numbericFormat(totalB, "###,###"));
//                    payroll.setTotalBNilai(totalB);
//
//
//                    //Komponen C
//                    //iuran gaji pensiun
//                    payroll.setIuranDapenPeg(CommonUtil.numbericFormat(iuranDapenPensiunPeg, "###,###"));
//                    payroll.setIuranDapenPegNilai(iuranDapenPensiunPeg);
//                    payroll.setIuranDapenPersh(CommonUtil.numbericFormat(iuranDapenPensiunPersh, "###,###"));
//                    payroll.setIuranDapenPershNilai(iuranDapenPensiunPersh);
//
//                    //Komponen D
//                    payroll.setLainLain(CommonUtil.numbericFormat(lainLain, "###,###"));
//                    payroll.setLainLainNilai(lainLain);
//                    payroll.setIdLainLain("0");
//
//
//                    //iuran bpjs
//                    payroll.setIuranBpjsKsKary(CommonUtil.numbericFormat(iuranBpjsKsKary, "###,###"));
//                    payroll.setIuranBpjsKsKaryNilai(iuranBpjsKsKary);
//                    payroll.setIuranBpjsKsPersh(CommonUtil.numbericFormat(iuranBpjsKsPers, "###,###"));
//                    payroll.setIuranBpjsKsPersNilai(iuranBpjsKsPers);
//                    payroll.setIuranBpjsTkKary(CommonUtil.numbericFormat(iuranBpjsTkKary, "###,###"));
//                    payroll.setIuranBpjsTkKaryNilai(iuranBpjsTkKary);
//                    payroll.setIuranBpjsTkPers(CommonUtil.numbericFormat(iuranBpjsTkPers, "###,###"));
//                    payroll.setIuranBpjsTkPersNilai(iuranBpjsTkPers);
//                    payroll.setPphGajiNilai(payrollPph.getPphGajiNilai());
//                    payroll.setPphGaji(CommonUtil.numbericFormat(payrollPph.getPphGajiNilai(), "###,###"));
//
//                    if (bean.getBulan().equalsIgnoreCase("12")){
//                        payroll.setPphSeharusnyaNilai(pphSeharusnya);
//                        payroll.setPphSeharusnya(CommonUtil.numbericFormat(pphSeharusnya, "###,###"));
//                        payroll.setPph11BulanNilai(pph11Bulan);
//                        payroll.setPph11Bulan(CommonUtil.numbericFormat(pph11Bulan, "###,###"));
//                        payroll.setSelisihPphNilai(selisihPph);
//                        payroll.setSelisihPph(CommonUtil.numbericFormat(selisihPph, "###,###"));
//                        payroll.setTotalLain11BulanNilai(totalLain11Bulan);
//                        payroll.setTotalLain11Bulan(CommonUtil.numbericFormat(totalLain11Bulan, "###,###"));
//                    }else{
//                        payroll.setPphSeharusnyaNilai(BigDecimal.valueOf(0));
//                        payroll.setPphSeharusnya(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                        payroll.setPph11BulanNilai(BigDecimal.valueOf(0));
//                        payroll.setPph11Bulan(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                        payroll.setSelisihPphNilai(BigDecimal.valueOf(0));
//                        payroll.setSelisihPph(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                        payroll.setTotalLain11BulanNilai(BigDecimal.valueOf(0));
//                        payroll.setTotalLain11Bulan(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                    }
//
//                    //potongan lain
//                    payroll.setTotalPotonganLain(CommonUtil.numbericFormat(totalPotonganLain, "###,###"));
//                    payroll.setTotalPotonganLainNilai(totalPotonganLain);
//                    payroll.setIuranYpks(CommonUtil.numbericFormat(iuranYpks, "###,###"));
//                    payroll.setIuranYpksNilai(iuranYpks);
//
//                    //potongan lain
//                    payroll.setStPeralihanGapok(CommonUtil.numbericFormat(peralihanGapok, "###,###"));
//                    payroll.setPeralihanGapok(peralihanGapok);
//                    payroll.setStPeralihanSankhus(CommonUtil.numbericFormat(peralihanSankhus, "###,###"));
//                    payroll.setPeralihanSankhus(peralihanSankhus);
//                    payroll.setStPeralihanTunjangan(CommonUtil.numbericFormat(peralihanTunjangan, "###,###"));
//                    payroll.setPeralihanTunjangan(peralihanTunjangan);
//
//
//                    //Detail komponen C potongan lain - lain
//                    payroll.setKopkar(CommonUtil.numbericFormat(kopkar, "###,###"));
//                    payroll.setKopkarNilai(kopkar);
//                    payroll.setIuranSp(CommonUtil.numbericFormat(iuranSp, "###,###"));
//                    payroll.setIuranSpNilai(iuranSp);
//                    payroll.setIuranPiikb(CommonUtil.numbericFormat(iuranPiikb, "###,###"));
//                    payroll.setIuranPiikbNilai(iuranPiikb);
//                    payroll.setBankBri(CommonUtil.numbericFormat(bankBri, "###,###"));
//                    payroll.setBankBriNilai(bankBri);
//                    payroll.setBankMandiri(CommonUtil.numbericFormat(bankMandiri, "###,###"));
//                    payroll.setBankMandiriNilai(bankMandiri);
//                    payroll.setInfaq(CommonUtil.numbericFormat(infaq, "###,###"));
//                    payroll.setInfaqNilai(infaq);
//                    payroll.setPerkesDanObat(CommonUtil.numbericFormat(perkesDanObat, "###,###"));
//                    payroll.setPerkesDanObatNilai(perkesDanObat);
//                    payroll.setListrik(CommonUtil.numbericFormat(listrik, "###,###"));
//                    payroll.setListrikNilai(listrik);
//                    payroll.setIuranProfesi(CommonUtil.numbericFormat(iuranProfesi, "###,###"));
//                    payroll.setIuranProfesiNilai(iuranProfesi);
//                    payroll.setPotonganLain(CommonUtil.numbericFormat(potonganLain, "###,###"));
//                    payroll.setPotonganLainNilai(potonganLain);
//
//
//                    BigDecimal totalC = new BigDecimal(0);
//                    totalC = totalC.add(iuranDapenPensiunPeg).add(iuranDapenPensiunPersh).add(iuranBpjsKsKary).add(iuranBpjsKsPers)
//                            .add(iuranBpjsTkKary).add(iuranBpjsTkPers).add(payroll.getPphGajiNilai()).add(totalPotonganLain);
//                    payroll.setTotalC(CommonUtil.numbericFormat(totalC, "###,###"));
//                    payroll.setTotalCNilai(totalC);
//
//                    jumlahGajiKotor = totalA.add(totalB).add(lainLain);
//                    payroll.setGajiKotor(CommonUtil.numbericFormat(jumlahGajiKotor, "###,###"));
//                    payroll.setGajiKotorNilai(jumlahGajiKotor);
//
//                    gajiBersih = jumlahGajiKotor.subtract(totalC);
//
//                    payroll.setTotalGajiBersih(CommonUtil.numbericFormat(gajiBersih, "###,###"));
//                    payroll.setTotalGajiBersihNilai(gajiBersih);
//                    payroll.setProporsiGaji(proporsiGaji);
//
//                    if (flagTestTambahanLain.equalsIgnoreCase("N")){
//                        listOfResult.add(payroll);
//                        listOfResultPph.add(payrollPph);
//                    }else{
//                        if (bean.getFlagJubileum().equalsIgnoreCase("Y")){
//                            if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//                                if (tahunJabatan>=20){
//                                    if (payrollJubileum.getTotalJubileumNilai().compareTo(BigDecimal.valueOf(0)) > 0){
//                                        //validasi jika tahun ini sudah pernah ada jubilium maka tidak ditampilkan lagi
//                                        List<ItPayrollEntity> validasi = payrollDao.getBonusDalam1TahunNip(bean.getBranchId(),bean.getTahun(),"flagJubileum",payroll.getNip());
//                                        if (validasi.size()==0){
//                                            listOfResult.add(payroll);
//                                            listOfResultPph.add(payrollPph);
//                                        }
//                                    }
//                                }
//                            }
//                        }
//                        else if (bean.getFlagCutiPanjang().equalsIgnoreCase("Y") || bean.getFlagCutiTahunan().equalsIgnoreCase("Y")){
//                            if (payrollEntity.getTipePegawai().equalsIgnoreCase("TP01")){
//                                if (bean.getFlagCutiPanjang().equalsIgnoreCase("Y")){
//                                    if (payrollCuti.getTotalCutiNilai().compareTo(BigDecimal.valueOf(0))>0){
//                                        listOfResult.add(payroll);
//                                        listOfResultPph.add(payrollPph);
//                                    }
//                                }else{
//                                    if (payrollCuti.getTotalCutiNilai().compareTo(BigDecimal.valueOf(0))>0){
//                                        listOfResult.add(payroll);
//                                        listOfResultPph.add(payrollPph);
//                                    }
//                                }
//
//                            }
//                        }else if(bean.getFlagInsentif().equalsIgnoreCase("Y")){
//                            if (tambahanLain.compareTo(BigDecimal.valueOf(0))>0){
//                                if (payrollInsentif.getTotalInsentifNilai().compareTo(BigDecimal.valueOf(0))>0){
//                                    listOfResult.add(payroll);
//                                    listOfResultPph.add(payrollPph);
//                                }
//                            }
//                        }
//                        else if(bean.getFlagPensiun().equalsIgnoreCase("Y")){
//                            if (payrollPensiun.getTotalPensiunNilai() != null){
//                                //validasi jika tahun ini sudah pernah ada jubilium maka tidak ditampilkan lagi
//                                List<ItPayrollEntity> validasi = payrollDao.getBonusDalam1TahunNip(bean.getBranchId(),bean.getTahun(),"flagPensiun",payroll.getNip());
//                                if (validasi.size()==0){
//                                    listOfResult.add(payroll);
//                                    listOfResultPph.add(payrollPph);
//                                }
//                            }
//                        }
//                        else{
//                            listOfResult.add(payroll);
//                            listOfResultPph.add(payrollPph);
//                        }
//                    }
//                }
//            }
//
//            HttpSession session = ServletActionContext.getRequest().getSession();
//            session.setAttribute("listDataPayrollPphBackup", listOfResultPph);
//            session.setAttribute("listDataPayrollPph", listOfResultPph);
//            session.setAttribute("listDataPayrollThr", listOfResultThr);
//            session.setAttribute("listDataPayrollJasopr", listOfResultJasopr);
//            session.setAttribute("listDataPayrollJubileum", listOfResultJubileum);
//            session.setAttribute("listDataPayrollCuti", listOfResultCuti);
//            session.setAttribute("listDataPayrollInsentif", listOfResultInsentif);
//            session.setAttribute("listDataPayrollPensiun", listOfResultPensiun);
//
//            session.removeAttribute("listDataPayrollTunjanganLain");
//            session.setAttribute("listDataPayrollTunjanganLain", listTunjanganLain);
//        }catch (Exception E){
//            logger.error("[PayrollBoImpl.addPayroll] Error, " + E.getMessage());
//            throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + E.getMessage());
//        }
//
//        return listOfResult;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public String getDirektur() throws GeneralBOException {
//        String nama = "";
//        nama = strukturJabatanDao.getNamaDirektur();
//        return nama;
//    }
//
//    @Override
//    public String getKabidSdm() throws GeneralBOException {
//        String nama = "";
//        nama = strukturJabatanDao.getNamaKabidSdm();
//        return nama;
//    }
//
//    private boolean cekPromosi(String nip){
//        boolean hasil = false;
//        List<ItSmkHistoryEvaluasiPegawaiEntity> smkHistoryList = null;
//        List<ItPayrollMinimumPromosiEntity> minimumPromosiList = null;
//        int tahun = 0 ;
//        int poin = 0 ;
//
//        try {
//            smkHistoryList = smkHistoryEvaluasiPegawaiDao.getHistorySmk(nip);
//            minimumPromosiList = payrollMinimumPromosiDao.getAllData();
//        } catch (HibernateException e) {
//            logger.error("[PayrollBoImpl.cekPromosi] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//        }
//
//        if(smkHistoryList.size() > 0){
//            for(ItSmkHistoryEvaluasiPegawaiEntity itSmkHistory: smkHistoryList){
//                tahun++;
//                poin += itSmkHistory.getPoin();
//            }
//        }
//
//        if(minimumPromosiList.size() > 0){
//            for(ItPayrollMinimumPromosiEntity itMinimum: minimumPromosiList){
//                if(tahun >= itMinimum.getMasaKerjaMin() && tahun <= itMinimum.getMasaKerjaMaks() &&
//                        poin >= itMinimum.getMinimalPoin()){
//                    hasil = true;
//                    break;
//                }
//            }
//        }
//
//        return hasil;
//    }
//
//    private BigDecimal jumlahGajiKotor(BigDecimal gaji, BigDecimal tunjUmk, BigDecimal tunjStruktural, BigDecimal tunjPeralihan, BigDecimal tunjJabatanStruktural,
//                                       BigDecimal tunjStrategis, BigDecimal kompensasi, BigDecimal transport, BigDecimal listrik, BigDecimal pengobatan, BigDecimal tunjPerumahan,
//                                       BigDecimal tunjPph, BigDecimal tunjLain, BigDecimal tunjLembur){
//        BigDecimal hasil = new BigDecimal(0);
//
//        hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjPeralihan).add(tunjJabatanStruktural).add(tunjStrategis).add(kompensasi).add(transport).add(listrik)
//                .add(pengobatan).add(tunjPph).add(tunjLain).add(tunjLembur).add(tunjPerumahan);
//
//        return hasil;
//    }
//
//    private BigDecimal hitungTotalB(BigDecimal pphGaji, BigDecimal pphPengobatan, BigDecimal iuranPensiun, BigDecimal iuranBpjsTk, BigDecimal iuranBpjsPensiun,
//                                    BigDecimal iuranBpjsKesehatan, BigDecimal uangMukaLain, BigDecimal kekuranganBpjs){
//
//        BigDecimal hasil = new BigDecimal(0) ;
//
//        if(pphGaji == null){
//            pphGaji = new BigDecimal(0);
//        }
//        hasil =  pphGaji.add(pphPengobatan).add(iuranPensiun).add(iuranBpjsTk).add(iuranBpjsPensiun).add(iuranBpjsKesehatan).add(uangMukaLain)
//                .add(kekuranganBpjs);
//        return hasil;
//    }
//
//    private BigDecimal hitungTotalC(BigDecimal pengobatan, BigDecimal koperasi, BigDecimal dansos, BigDecimal sp, BigDecimal bazis,
//                                    BigDecimal bapor, BigDecimal zakatProfesi, BigDecimal lainLain){
//        BigDecimal hasil = new BigDecimal(0) ;
//        hasil = pengobatan.add(koperasi).add(dansos).add(sp).add(bazis).add(bapor).add(zakatProfesi).add(lainLain);
//        return hasil;
//    }
//
//    private BigDecimal hitungPphGajiBruto(BigDecimal gaji, BigDecimal santunanKhusus, BigDecimal tunjStruktural, BigDecimal tunjPeralihan, BigDecimal tunjJabatanStruktural,
//                                          BigDecimal tunjStrategis, BigDecimal tunjPph, BigDecimal tunjLembur, BigDecimal tunjLain, BigDecimal thr,
//                                          BigDecimal jasprod, BigDecimal insentif, BigDecimal pensiun, BigDecimal jubilium, BigDecimal rapel,BigDecimal jkmJkk, BigDecimal tunjTambahan){
//        BigDecimal hasil = new BigDecimal(0) ;
//        hasil = gaji.add(santunanKhusus).add(tunjStruktural).add(tunjPeralihan).add(tunjJabatanStruktural).add(tunjStrategis).
//                add(tunjPph).add(tunjLembur).add(tunjLain).add(thr).add(jasprod).add(insentif).add(jubilium).add(rapel).add(tunjTambahan)
//                .add(jkmJkk).add(pensiun);
//        return hasil.setScale(2, BigDecimal.ROUND_HALF_UP);
//    }
//
//    private BigDecimal hitungPphGajiB(BigDecimal pphGajiBiayaJabatan, BigDecimal pphGajiTotalBiayaPensiun, BigDecimal pphGajiPtkp){
//        BigDecimal hasil = new BigDecimal(0) ;
//
//        //hasil = pphGajiBiayaJabatan + pphGajiIuranPensiun + pphGajiDanaPensiun + pphGajiBpjsJht + pphGajiBpjsPensiun + pphGajiPtkp ;
//        hasil = hasil.add(pphGajiBiayaJabatan).add(pphGajiTotalBiayaPensiun).add(pphGajiPtkp);
//        return hasil;
//    }
//
//    //Perhitungan Hutang Pajak
//    private BigDecimal hitungHutangPajak(BigDecimal pkp){
//        BigDecimal hasil = new BigDecimal(0) ;
//
//        if(pkp.compareTo(BigDecimal.valueOf(50000000)) <= 0){
//            hasil = BigDecimal.valueOf(0.05).multiply(pkp);
//        }else if(pkp.compareTo(BigDecimal.valueOf(50000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(250000000)) <= 0){
//            hasil = BigDecimal.valueOf(2500000).add((BigDecimal.valueOf(0.15).multiply(pkp.subtract(BigDecimal.valueOf(50000000))))) ;
//        }else if(pkp.compareTo(BigDecimal.valueOf(250000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(500000000)) <= 0){
//            hasil = BigDecimal.valueOf(32500000).add((BigDecimal.valueOf(0.25).multiply((pkp.subtract(BigDecimal.valueOf(250000000))))));
//        }else{
//            hasil = BigDecimal.valueOf(95000000).add(BigDecimal.valueOf(0.3).multiply(pkp.subtract(BigDecimal.valueOf(500000000))));
//        }
//
//        return hasil.setScale(2, BigDecimal.ROUND_HALF_UP);
//    }
//
//    private BigDecimal hitungPph21Sht(BigDecimal totalSht){
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal sisaSht = totalSht;
//        if (totalSht.compareTo(BigDecimal.valueOf(50000000))<=0){
//            //jika uang pensiun < 50jt maka tidak kena pajak
//            hasil = BigDecimal.valueOf(0);
//        } else if (totalSht.compareTo(BigDecimal.valueOf(97500000))<=0){
//            //50jt tidak kena pajak
//            hasil = BigDecimal.valueOf(0);
//
//            //sisanya kena pajak
//            sisaSht = sisaSht.subtract(BigDecimal.valueOf(50000000));
//            hasil = hasil.add((sisaSht.multiply(BigDecimal.valueOf(0.0526315789473685))));
//        } else if (totalSht.compareTo(BigDecimal.valueOf(437500000))<=0){
//            //50jt tidak kena pajak
//            hasil = BigDecimal.valueOf(0);
//
//            //47500000 kena pajak
//            sisaSht = sisaSht.subtract(BigDecimal.valueOf(50000000));
//            hasil = hasil.add((BigDecimal.valueOf(47500000).multiply(BigDecimal.valueOf(0.0526315789473685))));
//
//            //dikurangi 47500000 dlu
//            sisaSht = sisaSht.subtract(BigDecimal.valueOf(47500000));
//            hasil = hasil.add((sisaSht.multiply(BigDecimal.valueOf(0.176470588235294))));
//        } else if (totalSht.compareTo(BigDecimal.valueOf(437500000))>0){
//            //50jt tidak kena pajak
//            hasil = BigDecimal.valueOf(0);
//
//            //47500000 kena pajak
//            sisaSht = sisaSht.subtract(BigDecimal.valueOf(50000000));
//            hasil = hasil.add((BigDecimal.valueOf(47500000).multiply(BigDecimal.valueOf(0.0526315789473685))));
//
//            //dikurangi 47500000 dlu
//            sisaSht = sisaSht.subtract(BigDecimal.valueOf(47500000));
//            hasil = hasil.add((sisaSht.multiply(BigDecimal.valueOf(0.176470588235294))));
//
//            //dikurangi 340000000 dlu
//            sisaSht = sisaSht.subtract(BigDecimal.valueOf(340000000));
//            hasil = hasil.add((sisaSht.multiply(BigDecimal.valueOf(0.333333333333333))));
//        }
//        return hasil;
//    }
//
//    private BigDecimal hitungPajakSetahunSimRs(BigDecimal pkp,String npwp){
//        /*BigDecimal hasil = new BigDecimal(0) ;
//        BigDecimal sisaPkp = pkp;
//        //jika kurang dr 50jt, jika lebih maka sisapkp - 50jt
//        if(pkp.compareTo(BigDecimal.valueOf(50000000)) <= 0){
//            hasil = hasil.add(BigDecimal.valueOf(0.05).multiply(sisaPkp));
//        }
//        if(pkp.compareTo(BigDecimal.valueOf(50000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(250000000)) <= 0){
//            //hitung pkp 50jt dlu
//            hasil = hasil.add(BigDecimal.valueOf(0.05).multiply(BigDecimal.valueOf(50000000)));
//            sisaPkp = sisaPkp.subtract(BigDecimal.valueOf(50000000));
//            //hitung pkp - 50jt
//            hasil = hasil.add(BigDecimal.valueOf(0.15).multiply(sisaPkp));
//        }
//        if(pkp.compareTo(BigDecimal.valueOf(250000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(500000000)) <= 0){
//            //hitung pkp 50jt dlu
//            hasil = hasil.add(BigDecimal.valueOf(0.05).multiply(BigDecimal.valueOf(50000000)));
//            sisaPkp = sisaPkp.subtract(BigDecimal.valueOf(50000000));
//            //hitung pkp - 50jt
//            hasil = hasil.add(BigDecimal.valueOf(0.15).multiply(BigDecimal.valueOf(200000000)));
//            sisaPkp = sisaPkp.subtract(BigDecimal.valueOf(200000000));
//            //hitung pkp - 250jt
//            hasil = hasil.add(BigDecimal.valueOf(0.25).multiply(sisaPkp));
//        }
//        if(pkp.compareTo(BigDecimal.valueOf(500000000)) > 0){
//            //hitung pkp 50jt dlu
//            hasil = hasil.add(BigDecimal.valueOf(0.05).multiply(BigDecimal.valueOf(50000000)));
//            sisaPkp = sisaPkp.subtract(BigDecimal.valueOf(50000000));
//            //hitung pkp - 50jt
//            hasil = hasil.add(BigDecimal.valueOf(0.15).multiply(BigDecimal.valueOf(200000000)));
//            sisaPkp = sisaPkp.subtract(BigDecimal.valueOf(200000000));
//            //hitung pkp - 250jt
//            hasil = hasil.add(BigDecimal.valueOf(0.25).multiply(sisaPkp));
//            sisaPkp = sisaPkp.subtract(BigDecimal.valueOf(500000000));
//            hasil = hasil.add(BigDecimal.valueOf(0.30).multiply(sisaPkp));
//        }*/
//
//
//        BigDecimal hasil = new BigDecimal(0) ;
//        if (!"".equalsIgnoreCase(npwp)){
//            if(pkp.compareTo(BigDecimal.valueOf(50000000)) <= 0){
//                hasil = BigDecimal.valueOf(0.05).multiply(pkp);
//            }else if(pkp.compareTo(BigDecimal.valueOf(50000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(200000000)) <= 0){
//                hasil = BigDecimal.valueOf(2500000).add((BigDecimal.valueOf(0.15).multiply(pkp.subtract(BigDecimal.valueOf(50000000))))) ;
//            }else if(pkp.compareTo(BigDecimal.valueOf(200000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(500000000)) <= 0){
//                hasil = BigDecimal.valueOf(30000000).add((BigDecimal.valueOf(0.25).multiply((pkp.subtract(BigDecimal.valueOf(250000000))))));
//            }else{
//                hasil = BigDecimal.valueOf(95000000).add(BigDecimal.valueOf(0.3).multiply(pkp.subtract(BigDecimal.valueOf(500000000))));
//            }
//        }else{
//            if(pkp.compareTo(BigDecimal.valueOf(50000000)) <= 0){
//                hasil = BigDecimal.valueOf(0.06).multiply(pkp);
//            }else if(pkp.compareTo(BigDecimal.valueOf(50000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(200000000)) <= 0){
//                hasil = BigDecimal.valueOf(2500000).add((BigDecimal.valueOf(0.18).multiply(pkp.subtract(BigDecimal.valueOf(50000000))))) ;
//            }else if(pkp.compareTo(BigDecimal.valueOf(200000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(500000000)) <= 0){
//                hasil = BigDecimal.valueOf(30000000).add((BigDecimal.valueOf(0.3).multiply((pkp.subtract(BigDecimal.valueOf(250000000))))));
//            }else{
//                hasil = BigDecimal.valueOf(95000000).add(BigDecimal.valueOf(0.36).multiply(pkp.subtract(BigDecimal.valueOf(500000000))));
//            }
//        }
//
//        return hasil.setScale(2, BigDecimal.ROUND_HALF_UP);
//    }
//
//    //Perhitungan Tunjangan PPH Bagi Kabid Keatas
//    private BigDecimal hitungTunjanganPph(BigDecimal pkp){
//        BigDecimal hasil = new BigDecimal(0) ;
//        BigDecimal pengali = new BigDecimal(0) ;
//
//        if(pkp.compareTo(BigDecimal.valueOf(47500000)) <= 0){
//            pengali = BigDecimal.valueOf(5).divide(BigDecimal.valueOf(95), MathContext.DECIMAL32);
//            hasil = pkp.multiply(pengali);
//        }else if(pkp.compareTo(BigDecimal.valueOf(47500000)) > 0 && pkp.compareTo(BigDecimal.valueOf(217500000)) <= 0){
//            pengali = BigDecimal.valueOf(15).divide(BigDecimal.valueOf(85), MathContext.DECIMAL32);
//            hasil = (pkp.subtract(BigDecimal.valueOf(47500000))).multiply(pengali);
//            hasil = hasil.add(BigDecimal.valueOf(2500000));
//        }else if(pkp.compareTo(BigDecimal.valueOf(217500000)) > 0 && pkp.compareTo(BigDecimal.valueOf(405000000)) <= 0){
//            pengali = BigDecimal.valueOf(25).divide(BigDecimal.valueOf(75), MathContext.DECIMAL32);
//            hasil = (pkp.subtract(BigDecimal.valueOf(217500000))).multiply(pengali);
//            hasil = hasil.add(BigDecimal.valueOf(32500000));
//        }else if(pkp.compareTo(BigDecimal.valueOf(405000000)) > 0){
//            pengali = BigDecimal.valueOf(30).divide(BigDecimal.valueOf(70), MathContext.DECIMAL32);
//            hasil = (pkp.subtract(BigDecimal.valueOf(405000000))).multiply(pengali);
//            hasil = hasil.add(BigDecimal.valueOf(95000000));
//        }
//
//        return hasil.setScale(2, BigDecimal.ROUND_HALF_UP);
//    }
//
//    //Perhitungan Gaji Berdasarkan Golongan
//    private BigDecimal getGaji(String golonganId, int point, String tahun){
//
//        //hasil2.add(new BigDecimal(0));
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollSkalaGajiEntity> imSkalaGaji = null;
//
//        imSkalaGaji = payrollSkalaGajiDao.getData2(golonganId,point,tahun);
//        if(imSkalaGaji != null){
//            for(ImPayrollSkalaGajiEntity skalaGaji : imSkalaGaji){
//                hasil = hasil.add(skalaGaji.getNilai());
//            }
//        }
//
//        return hasil;
//    }
//    public BigDecimal getSkalaGaji(String golonganId,String tahun){
//
//        //hasil2.add(new BigDecimal(0));
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollSkalaGajiEntity> imSkalaGaji = null;
//
//        imSkalaGaji = payrollSkalaGajiDao.getDataSkalaGajiSimRs(golonganId,tahun);
//        if(imSkalaGaji != null){
//            for(ImPayrollSkalaGajiEntity skalaGaji : imSkalaGaji){
//                hasil = hasil.add(skalaGaji.getNilai());
//            }
//        }
//
//        return hasil;
//    }
//    public ImPayrollSkalaGajiEntity getSkalaGajiSimRs(String golonganId,String tahun){
//
//        ImPayrollSkalaGajiEntity imSkalaGaji = new ImPayrollSkalaGajiEntity();
//        List<ImPayrollSkalaGajiEntity> skalaGaji = new ArrayList<>();
//        try {
//            skalaGaji = payrollSkalaGajiDao.getDataSkalaGajiSimRs(golonganId,tahun);
//            for (ImPayrollSkalaGajiEntity skalaGajiLoop: skalaGaji){
//                imSkalaGaji.setNilai(skalaGajiLoop.getNilai());
//                imSkalaGaji.setRumah(skalaGajiLoop.getRumah());
//                imSkalaGaji.setListrik(skalaGajiLoop.getListrik());
//                imSkalaGaji.setAir(skalaGajiLoop.getAir());
//                imSkalaGaji.setBbm(skalaGajiLoop.getBbm());
//                imSkalaGaji.setSantunanKhusus(skalaGajiLoop.getSantunanKhusus());
//                imSkalaGaji.setTotal(skalaGajiLoop.getTotal());
//            }
//
//        }catch(GeneralBOException e){
//
//        }
//
//        return imSkalaGaji;
//    }
//    public ImPayrollSkalaGajiPkwtEntity getSkalaGajiSimRsPkwt(String golonganId,String tahun){
//
//        ImPayrollSkalaGajiPkwtEntity imSkalaGajiPkwt = new ImPayrollSkalaGajiPkwtEntity();
//        List<ImPayrollSkalaGajiPkwtEntity> skalaGaji = new ArrayList<>();
//        try {
//            skalaGaji = payrollSkalaGajiPkwtDao.getSkalaGajiPkwt(golonganId,tahun);
//            for (ImPayrollSkalaGajiPkwtEntity skalaGajiLoop: skalaGaji){
//                imSkalaGajiPkwt.setGajiPokok(skalaGajiLoop.getGajiPokok());
//                imSkalaGajiPkwt.setSantunanKhusus(skalaGajiLoop.getSantunanKhusus());
//                imSkalaGajiPkwt.setTunjFunsional(skalaGajiLoop.getTunjFunsional());
//                imSkalaGajiPkwt.setTunjtambahan(skalaGajiLoop.getTunjtambahan());
//            }
//
//        }catch(GeneralBOException e){
//
//        }
//
//        return imSkalaGajiPkwt;
//    }
//
//    public ImPayrollSkalaGajiBodEntity getSkalaGajiSimRsBod(String positionId,String tahun){
//
//        ImPayrollSkalaGajiBodEntity imPayrollSkalaGajiBodEntity = new ImPayrollSkalaGajiBodEntity();
//        List<ImPayrollSkalaGajiBodEntity> skalaGaji;
//        try {
//            skalaGaji = payrollSkalaGajiBodDao.getSkalaGajiBod(positionId,tahun);
//            if (skalaGaji.size()!=0){
//                for (ImPayrollSkalaGajiBodEntity skalaGajiLoop: skalaGaji){
//                    imPayrollSkalaGajiBodEntity.setGajiBod(skalaGajiLoop.getGajiBod());
//                    imPayrollSkalaGajiBodEntity.setTunjTelekomunikasi(skalaGajiLoop.getTunjTelekomunikasi());
//                    imPayrollSkalaGajiBodEntity.setTunjRumah(skalaGajiLoop.getTunjRumah());
//                    imPayrollSkalaGajiBodEntity.setJumlahPengasilanBulan(skalaGajiLoop.getJumlahPengasilanBulan());
//                }
//            }else{
//                String status = "ERROR : tidak ditemukan gaji untuk BOD dengan position Id "+positionId;
//                throw new GeneralBOException(status);
//            }
//        }catch(GeneralBOException e){
//            throw new GeneralBOException(e.getMessage());
//        }
//        return imPayrollSkalaGajiBodEntity;
//    }
//
//    //Perhitungan Tunjangan UMK
//    private BigDecimal getTunjanganUmk(String branchId, String golonganId, String tahun){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollTunjanganUmkEntity> ImtUmk = null;
//
//        try {
//            ImtUmk = payrollTunjanganUmkDao.getData2(branchId, golonganId, tahun);
//            if(ImtUmk != null){
//                for(ImPayrollTunjanganUmkEntity skalaUmk : ImtUmk){
//                    hasil = hasil.add(skalaUmk.getNilai());
//                }
//            }
//        } catch (Exception e) {
//            logger.error("[PayrollBoImpl.getTunjanganUmk] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//        }
//
//        return hasil;
//    }
//
//    //Perhitungan Tunjangan Struktural
//    private BigDecimal getTunjanganStruktural(String golonganId, String kelompok, String positionId, String tahun){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollTunjanganStrukturalEntity> ImtUmk = null;
//        if(golonganId != null && kelompok != null){
//            String strGolongan = golonganId.substring(1);
//            int noGolongan = Integer.parseInt(strGolongan);
//            if(positionId.equalsIgnoreCase("184") && noGolongan < 13){
//                ImtUmk = payrollTunjanganStrukturalDao.getData2("G12", tahun);
//            }else{
//                if(kelompok.equalsIgnoreCase("KL04") && noGolongan < 14){
//                    ImtUmk = payrollTunjanganStrukturalDao.getData2("G14", tahun);
//                }else if(kelompok.equalsIgnoreCase("KL03") && noGolongan < 15){
//                    ImtUmk = payrollTunjanganStrukturalDao.getData2("G15", tahun);
//                }else{
//                    ImtUmk = payrollTunjanganStrukturalDao.getData2(golonganId, tahun);
//                }
//            }
//        }else{
//            if(golonganId != null){
//                ImtUmk = payrollTunjanganStrukturalDao.getData2(golonganId, tahun);
//            }
//        }
//
//        if(ImtUmk != null){
//            for(ImPayrollTunjanganStrukturalEntity skalaUmk : ImtUmk){
//                hasil = hasil.add(skalaUmk.getNilai());
//            }
//        }
//
//        return hasil;
//    }
//
//    //Perhitungan Tunjangan Jabatan Struktural
//    private BigDecimal getTunjanganJabatanStruktural(String positionId, String branchId){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollTunjanganJabatanStrukturalEntity> ImtUmk = null;
//
//        ImtUmk = payrollTunjanganJabatanStrukturalDao.getData2(positionId, branchId);
//        if(ImtUmk != null){
//            for(ImPayrollTunjanganJabatanStrukturalEntity skalaUmk : ImtUmk){
//                hasil = hasil.add(skalaUmk.getNilai());
//            }
//        }
//
//        return hasil;
//    }
//    public ImPayrollTunjanganJabatanStrukturalEntity getTunjanganJabatanStrukturalSimRs(String positionId){
//        ImPayrollTunjanganJabatanStrukturalEntity hasil= new ImPayrollTunjanganJabatanStrukturalEntity();
//        List<ImPayrollTunjanganJabatanStrukturalEntity> tunjangan = null;
//        ImPosition positionPegawai = positionDao.getById("positionId",positionId);
//        tunjangan = payrollTunjanganJabatanStrukturalDao.getTunjanganJabatanStruktural(positionPegawai.getKelompokId());
//        if(tunjangan != null){
//            for(ImPayrollTunjanganJabatanStrukturalEntity tunjanganLoop : tunjangan){
//                hasil.setTunjJabatan(tunjanganLoop.getTunjJabatan());
//                hasil.setTunjStruktural(tunjanganLoop.getTunjStruktural());
//            }
//        }
//
//        return hasil;
//    }
//
//    //Perhitungan Tunjangan Strategis
//    private BigDecimal getTunjanganStrategis(String positionId){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollTunjanganStrategisEntity> ImStrategis = null;
//
//        ImStrategis = payrollTunjanganStrategisDao.getData2(positionId);
//        if(ImStrategis != null){
//            for(ImPayrollTunjanganStrategisEntity skalaStrategis : ImStrategis){
//                hasil = hasil.add(skalaStrategis.getNilai());
//            }
//        }
//
//        return hasil;
//    }
//
//    //Tunjangan Perumahan
//    private BigDecimal getTunjanganPerumahan(String golonganId, String kelompokId){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollTunjanganPerumahanEntity> ImPerumahan = null;
//        String kelompok = "";
//        String golongan = "";
//        if(kelompokId != null){
//            if(kelompokId.equalsIgnoreCase("KL03") || kelompokId.equalsIgnoreCase("KL04")){
//                kelompok = kelompokId;
//            }else if(kelompokId.equalsIgnoreCase("KL01")){
//                kelompok = kelompokId;
//            }else{
//                golongan = golonganId;
//            }
//        }else{
//            golongan = golonganId;
//        }
//
//        try {
//            ImPerumahan = payrollTunjanganPerumahanDao.dataPerumahan();
//            if(ImPerumahan != null){
//                for(ImPayrollTunjanganPerumahanEntity skalaPerumahan : ImPerumahan){
//                    if(!"".equalsIgnoreCase(kelompok)){
//                        if(skalaPerumahan.getKelompokId().equalsIgnoreCase(kelompokId)){
//                            hasil = hasil.add(skalaPerumahan.getNilai());
//                            break;
//                        }
//                    }else{
//                        if(skalaPerumahan.getGolonganId().equalsIgnoreCase(golongan)){
//                            hasil = hasil.add(skalaPerumahan.getNilai());
//                            break;
//                        }
//                    }
//                }
//            }
//        } catch (HibernateException e) {
//            logger.error("[PayrollBoImpl.getTunjanganPerumahan] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when searching data by criteria, please info to your admin..." + e.getMessage());
//        }
//
//
//        return hasil;
//    }
//
//    //Tunjangan Air Listrik
//    private BigDecimal getTunjanganAirListrik(String golonganId){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollAirListrikEntity> ImAirListrik = null;
//
//        ImAirListrik = payrollTunjanganAirListrikDao.getData2(golonganId);
//        if(ImAirListrik != null){
//            for(ImPayrollAirListrikEntity skalaAir : ImAirListrik){
//                hasil = hasil.add(skalaAir.getNilai());
//            }
//        }
//        return hasil;
//    }
//
//    //Tunjangan Gaji Pensiun
//    private String getGajiPensiun(String branchId, BigDecimal gajiGolongan, String statusKeluarga, int jumlahAnak){
//        BigDecimal hasil = new BigDecimal(1);
//        BigDecimal multifikator = new BigDecimal(1);
//        BigDecimal nilaiKeluarga = new BigDecimal(0);
//        String finalHasil = "";
//
//        List<ImBranches> branches = null ;
//        List<ImPayrollFaktorKeluargaEntity> ImKeluarga = null;
//
//        branches = branchDao.getListBranchById(branchId);
//        for(ImBranches branches1 : branches){
//            multifikator = branches1.getMultifikator();
//        }
//
//        if(statusKeluarga.equalsIgnoreCase("B") && jumlahAnak > 0){
//            jumlahAnak = 0;
//        }
//
//        if(statusKeluarga.equalsIgnoreCase("K") && jumlahAnak > 3){
//            jumlahAnak = 3;
//        }
//
//        ImKeluarga = payrollFaktorKeluargaDao.getData2(statusKeluarga, jumlahAnak);
//
//        if(ImKeluarga != null){
//            for(ImPayrollFaktorKeluargaEntity keluarga : ImKeluarga){
//                finalHasil = keluarga.getFaktorKeluargaId();
//                nilaiKeluarga = nilaiKeluarga.add(keluarga.getNilai());
//            }
//        }
//
//        hasil = gajiGolongan.multiply(multifikator).multiply(nilaiKeluarga);
//        finalHasil += "-" + hasil;
//
//        return finalHasil;
//    }
//    //Gaji Pensiun Selain Dapen RNI
//    private BigDecimal getGajiPensiun2(String golonganId, int poin, String golonganDapen, int poinLebih){
//        BigDecimal hasil = BigDecimal.valueOf(0);
//        BigDecimal hasilSkalaPensiun = new BigDecimal(0);
//
//        if(!"".equalsIgnoreCase(golonganDapen) && golonganDapen != null){
//            String dapen[] = golonganDapen.split("-");
//            golonganId = dapen[0];
//            poin = Integer.parseInt(dapen[1]);
//        }
//
//        List<ImPayrollSkalaGajiPensiunEntity> imSkalaPensiun = null;
//        if(poin >= 20 && poinLebih > 0){
//            BigDecimal selisih = new BigDecimal(0);
//            BigDecimal a = new BigDecimal(0);
//            BigDecimal b = new BigDecimal(0);
//            for(int i = 20 ; i >= 19 ; i--){
//                imSkalaPensiun = payrollSkalaGajiPensiunDao.getSkalaGajiPensiun(golonganId, i);
//                if(imSkalaPensiun != null){
//                    for(ImPayrollSkalaGajiPensiunEntity imPensiun : imSkalaPensiun){
//                        if(i == 20){
//                            a = imPensiun.getNilai();
//                        }else{
//                            b = imPensiun.getNilai();
//                        }
//                    }
//                }
//            }
//            selisih = a.subtract(b);
//            selisih = selisih.multiply(BigDecimal.valueOf(poinLebih));
//
//            imSkalaPensiun = payrollSkalaGajiPensiunDao.getSkalaGajiPensiun(golonganId, 20);
//            if(imSkalaPensiun != null){
//                for(ImPayrollSkalaGajiPensiunEntity imPensiun : imSkalaPensiun){
//                    hasilSkalaPensiun = imPensiun.getNilai();
//                }
//            }
//            hasilSkalaPensiun = hasilSkalaPensiun.add(selisih);
//        }else{
//            imSkalaPensiun = payrollSkalaGajiPensiunDao.getSkalaGajiPensiun(golonganId, poin);
//            if(imSkalaPensiun != null){
//                for(ImPayrollSkalaGajiPensiunEntity imPensiun : imSkalaPensiun){
//                    hasilSkalaPensiun = imPensiun.getNilai();
//                }
//            }
//        }
//
//        return hasilSkalaPensiun;
//    }
//    private BigDecimal getGajiPensiunSimRs(String golonganId, int poin,String dapenId){
//        BigDecimal hasilSkalaPensiun = new BigDecimal(0);
//        List<ImPayrollSkalaGajiPensiunRniEntity> imSkalaPensiun = null;
//        try{
//            //mengambil
//            imSkalaPensiun = payrollSkalaGajiPensiunRniDao.getSkalaGajiPensiunRni(golonganId, poin,dapenId);
//
//            for (ImPayrollSkalaGajiPensiunRniEntity skalaGajiLoop: imSkalaPensiun){
//                hasilSkalaPensiun = skalaGajiLoop.getNilai();
//            }
//        }catch(GeneralBOException e){
//
//        }
//        return hasilSkalaPensiun;
//    }
//    private BigDecimal getIuranPensiunPegSimRs(String golonganId){
//        BigDecimal hasilSkalaPensiun = new BigDecimal(0);
//        List<ImPayrollSkalaGajiPensiunEntity> imSkalaPensiun = null;
//        try{
//            //mengambil iuran gaji pensiun pegawai
//            imSkalaPensiun = payrollSkalaGajiPensiunDao.getSkalaGajiPensiunSimRs(golonganId);
//            for (ImPayrollSkalaGajiPensiunEntity skalaGajiLoop: imSkalaPensiun){
//                hasilSkalaPensiun = skalaGajiLoop.getNilai();
//            }
//        }catch(GeneralBOException e){
//
//        }
//        return hasilSkalaPensiun;
//    }
//    private BigDecimal getDapenDplkSimRs(String golonganId, Integer masaKerja){
//        BigDecimal hasilSkalaPensiun = new BigDecimal(0);
//        List<ImPayrollSkalaGajiPensiunDplkEntity> imSkalaPensiun = null;
//        try{
//            //mengambil iuran gaji pensiun pegawai
//            imSkalaPensiun = payrollSkalaGajiPensiunDplkDao.getSkalaGajiPensiunDplk(golonganId, masaKerja);
//            for (ImPayrollSkalaGajiPensiunDplkEntity skalaGajiLoop: imSkalaPensiun){
//                hasilSkalaPensiun = skalaGajiLoop.getNilai();
//            }
//        }catch(GeneralBOException e){
//
//        }
//        return hasilSkalaPensiun;
//    }

    //uncomment by ferdi, 01 des 2020
//    //Gaji Pensiun Dapen RNI
//    private BigDecimal getGajiPensiunRni(String golonganId, String statusKeluarga, String branchId, int jumlahAnak){
////        BigDecimal hasil = BigDecimal.valueOf(0);
////        int poin = 0;
////        String golongan = "";
////
////        if(!"".equalsIgnoreCase(golonganId) && golonganId != null){
////            String golonganPoin[] = golonganId.split("-");
////            golongan = golonganPoin[0];
////            poin =  Integer.parseInt(golonganPoin[1]);
////        }
////
////        List<ImPayrollSkalaGajiPensiunRniEntity> imSkalaPensiunRni = null;
////        imSkalaPensiunRni = payrollSkalaGajiPensiunRniDao.getSkalaGajiPensiunRni(golongan, poin);
////        BigDecimal hasilSkalaPensiun = new BigDecimal(0);
////        if(imSkalaPensiunRni != null){
////            for(ImPayrollSkalaGajiPensiunRniEntity imPensiun : imSkalaPensiunRni){
////                hasilSkalaPensiun = imPensiun.getNilai();
////            }
////        }
//
//        //==============================================================
//
//        BigDecimal hasilSkalaPensiun = new BigDecimal(0);
//        Integer poinLebih = 0;
//        Integer poin = 0;
//
//        if(!"".equalsIgnoreCase(golonganId) && golonganId != null){
//            String dapen[] = golonganId.split("-");
//            golonganId = dapen[0];
//            poin = Integer.parseInt(dapen[1]);
//            if (poin>20){
//                poinLebih=poin-20;
//                poin=20;
//            }
//        }
//
//        List<ImPayrollSkalaGajiPensiunRniEntity> imSkalaPensiunRni = null;
//        if(poin >= 20 && poinLebih > 0){
//            BigDecimal selisih = new BigDecimal(0);
//            BigDecimal a = new BigDecimal(0);
//            BigDecimal b = new BigDecimal(0);
//            for(int i = 20 ; i >= 19 ; i--){
////                imSkalaPensiunRni = payrollSkalaGajiPensiunRniDao.getSkalaGajiPensiunRni(golonganId, i);
//                if(imSkalaPensiunRni != null){
//                    for(ImPayrollSkalaGajiPensiunRniEntity imPensiun : imSkalaPensiunRni){
//                        if(i == 20){
//                            a = imPensiun.getNilai();
//                        }else{
//                            b = imPensiun.getNilai();
//                        }
//                    }
//                }
//            }
//            selisih = a.subtract(b);
//            selisih = selisih.multiply(BigDecimal.valueOf(poinLebih));
//
////            imSkalaPensiunRni = payrollSkalaGajiPensiunRniDao.getSkalaGajiPensiunRni(golonganId, 20);
//            if(imSkalaPensiunRni != null){
//                for(ImPayrollSkalaGajiPensiunRniEntity imPensiun : imSkalaPensiunRni){
//                    hasilSkalaPensiun = imPensiun.getNilai();
//                }
//            }
//            hasilSkalaPensiun = hasilSkalaPensiun.add(selisih);
//        }else{
////            imSkalaPensiunRni = payrollSkalaGajiPensiunRniDao.getSkalaGajiPensiunRni(golonganId, poin);
//            if(imSkalaPensiunRni != null){
//                for(ImPayrollSkalaGajiPensiunRniEntity imPensiun : imSkalaPensiunRni){
//                    hasilSkalaPensiun = imPensiun.getNilai();
//                }
//            }
//        }
//
//        List<ImBranches> branches = null ;
//        branches = branchDao.getListBranchById(branchId);
//        BigDecimal multifikator = new BigDecimal(0);
//        for(ImBranches branches1 : branches){
//            multifikator = branches1.getMultifikator();
//        }
//
//        if(statusKeluarga.equalsIgnoreCase("B") && jumlahAnak > 3){
//            jumlahAnak = 3;
//        }
//
//        if(statusKeluarga.equalsIgnoreCase("K") && jumlahAnak > 3){
//            jumlahAnak = 3;
//        }
//
//        List <ImPayrollFaktorKeluargaEntity> ImKeluarga = payrollFaktorKeluargaDao.getData2(statusKeluarga, jumlahAnak);
//        BigDecimal nilaiKeluarga = new BigDecimal(0);
//        if(ImKeluarga != null){
//            for(ImPayrollFaktorKeluargaEntity keluarga : ImKeluarga){
//                nilaiKeluarga = nilaiKeluarga.add(keluarga.getNilai());
//            }
//        }
//
//        BigDecimal gajiPensiun = new BigDecimal(0);
//        gajiPensiun = hasilSkalaPensiun.multiply(multifikator).multiply(nilaiKeluarga);
//
//        return gajiPensiun;
//
//    }
//
//    //Pengambilan Tunjangan Medical Record
//    private List<MedicalRecord> getMedicalRecord(String nip,String bulan,String tahun){
//
//        if(nip.equalsIgnoreCase("91-0138")){
//            int a = 0;
//        }
//        String stTanggal = "01-"+bulan+"-"+tahun;
//        java.sql.Date tanggal = CommonUtil.convertStringToDate(stTanggal);
//
//        List<ItHrisMedicalRecordEntity> ItMedicalRecord = null;
//        List<MedicalRecord> medicalRecordList = new ArrayList<>();
//
//        //mendapat data medical di bulan sebelumnya
//        ItMedicalRecord = medicalRecordDao.getData(nip,tanggal);
//        if(ItMedicalRecord != null){
//            for(ItHrisMedicalRecordEntity medicalRecord : ItMedicalRecord){
//                MedicalRecord medicalRecord1 = new MedicalRecord();
//
//                medicalRecord1.setMedicalRecordId(medicalRecord.getMedicalRecordId());
//                medicalRecord1.setNip(medicalRecord.getNip());
//                medicalRecord1.setJumlahBiaya(medicalRecord.getJumlahBiaya());
//
//                medicalRecordList.add(medicalRecord1);
//            }
//        }
//
//        return medicalRecordList ;
//    }
//    private PayrollJubileum getJubileum(String nip, BigDecimal gaji,BigDecimal sankhus,
//                                        BigDecimal tunjJabatan,BigDecimal tunjStruktural,BigDecimal tunjFungsional, BigDecimal tunjPeralihan,BigDecimal tunjTambahan,
//                                        BigDecimal pemondokan,BigDecimal komunikasi,
//                                        String tahun, String bulan, Date tanggalAktifPegawai){
//        PayrollJubileum payrollJubileum = new PayrollJubileum();
//        BigDecimal totalA = gaji.add(tunjPeralihan);
//        String stTglAktif = tanggalAktifPegawai.toString();
//        Integer tahunSekarang = Integer.parseInt(tahun);
//        String[] arrayTglAktif = stTglAktif.split("-");
//        String stTglJubileum = tahun+"-"+arrayTglAktif[1]+"-"+arrayTglAktif[2];
//        java.sql.Date tglJubileum = CommonUtil.convertStringToDate(stTglJubileum);
//        BigDecimal totalJubileum = new BigDecimal(0);
//        String emas = "";
//        String jubileum = "";
//        Integer tahunaktif = Integer.parseInt(arrayTglAktif[0]);
//        if (tahunSekarang - 35 == tahunaktif){
//            totalJubileum = CommonUtil.percentage(totalA,BigDecimal.valueOf(90)).multiply(BigDecimal.valueOf(3));
//            emas ="Emas 5 Gr";
//            jubileum ="Penghargaan 35 Tahun masa Kerja";
//        }
//        if (tahunSekarang - 30 == tahunaktif){
//            totalJubileum = CommonUtil.percentage(totalA,BigDecimal.valueOf(90)).multiply(BigDecimal.valueOf(3));
//            emas ="Emas 5 Gr";
//            jubileum ="Penghargaan 30 Tahun masa Kerja";
//        }
//        if (tahunSekarang - 25 == tahunaktif){
//            totalJubileum = CommonUtil.percentage(totalA,BigDecimal.valueOf(90)).multiply(BigDecimal.valueOf(5));
//            emas ="Emas 10 Gr";
//            jubileum ="Penghargaan 25 Tahun masa Kerja";
//        }
//        if (tahunSekarang - 20 == tahunaktif){
//            totalJubileum = CommonUtil.percentage(totalA,BigDecimal.valueOf(90)).multiply(BigDecimal.valueOf(2));
//            jubileum ="Penghargaan 20 Tahun masa Kerja";
//        }
//        //jika dapat nilai jubileum lalu diset dimodel
//        if (totalJubileum.compareTo(BigDecimal.valueOf(0))==1){
//            payrollJubileum.setNip(nip);
//            payrollJubileum.setGaji(CommonUtil.numbericFormat(gaji,"###,###"));
//            payrollJubileum.setGajiNilai(gaji);
//            payrollJubileum.setSankhus(CommonUtil.numbericFormat(sankhus,"###,###"));
//            payrollJubileum.setSankhusNilai(sankhus);
//            payrollJubileum.setTunjanganJabatan(CommonUtil.numbericFormat(tunjJabatan,"###,###"));
//            payrollJubileum.setTunjanganjabatanNilai(tunjJabatan);
//            payrollJubileum.setTunjanganJabStruktural(CommonUtil.numbericFormat(tunjStruktural,"###,###"));
//            payrollJubileum.setTunjanganStrukturalNilai(tunjStruktural);
//            payrollJubileum.setTunjanganFungsional(CommonUtil.numbericFormat(tunjFungsional,"###,###"));
//            payrollJubileum.setTunjanganFungsionalNilai(tunjFungsional);
//            payrollJubileum.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan,"###,###"));
//            payrollJubileum.setTunjanganPeralihanNilai(tunjPeralihan);
//            payrollJubileum.setTunjanganTambahan(CommonUtil.numbericFormat(tunjTambahan,"###,###"));
//            payrollJubileum.setTunjanganTambahanNilai(tunjTambahan);
//            payrollJubileum.setPemondokan(CommonUtil.numbericFormat(pemondokan,"###,###"));
//            payrollJubileum.setPemondokanNilai(pemondokan);
//            payrollJubileum.setKomunikasi(CommonUtil.numbericFormat(komunikasi,"###,###"));
//            payrollJubileum.setKomunikasiNilai(komunikasi);
//
//            payrollJubileum.setStTanggalJubileum(stTglJubileum);
//            payrollJubileum.setTanggalJubileumDate(tglJubileum);
//
//            payrollJubileum.setTotalJubileum(CommonUtil.numbericFormat(totalJubileum,"###,###"));
//            payrollJubileum.setTotalJubileumNilai(totalJubileum);
//            payrollJubileum.setKeteranganEmas(emas);
//            payrollJubileum.setKeteranganjubileum(jubileum);
//        }else{
//            payrollJubileum.setNip(nip);
//            payrollJubileum.setGaji(CommonUtil.numbericFormat(gaji,"###,###"));
//            payrollJubileum.setGajiNilai(gaji);
//            payrollJubileum.setSankhus(CommonUtil.numbericFormat(sankhus,"###,###"));
//            payrollJubileum.setSankhusNilai(sankhus);
//            payrollJubileum.setTunjanganJabatan(CommonUtil.numbericFormat(tunjJabatan,"###,###"));
//            payrollJubileum.setTunjanganjabatanNilai(tunjJabatan);
//            payrollJubileum.setTunjanganJabStruktural(CommonUtil.numbericFormat(tunjStruktural,"###,###"));
//            payrollJubileum.setTunjanganStrukturalNilai(tunjStruktural);
//            payrollJubileum.setTunjanganFungsional(CommonUtil.numbericFormat(tunjFungsional,"###,###"));
//            payrollJubileum.setTunjanganFungsionalNilai(tunjFungsional);
//            payrollJubileum.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan,"###,###"));
//            payrollJubileum.setTunjanganPeralihanNilai(tunjPeralihan);
//            payrollJubileum.setTunjanganTambahan(CommonUtil.numbericFormat(tunjTambahan,"###,###"));
//            payrollJubileum.setTunjanganTambahanNilai(tunjTambahan);
//            payrollJubileum.setPemondokan(CommonUtil.numbericFormat(pemondokan,"###,###"));
//            payrollJubileum.setPemondokanNilai(pemondokan);
//            payrollJubileum.setKomunikasi(CommonUtil.numbericFormat(komunikasi,"###,###"));
//            payrollJubileum.setKomunikasiNilai(komunikasi);
//
//            payrollJubileum.setStTanggalJubileum(stTglJubileum);
//            payrollJubileum.setTanggalJubileumDate(tglJubileum);
//
//            payrollJubileum.setTotalJubileum(CommonUtil.numbericFormat(BigDecimal.valueOf(0),"###,###"));
//            payrollJubileum.setTotalJubileumNilai(BigDecimal.valueOf(0));
//            payrollJubileum.setKeteranganEmas(emas);
//            payrollJubileum.setKeteranganjubileum(jubileum);
//        }
//        return payrollJubileum;
//    }
//
//    private BigDecimal getTotalThp(int bulan, String golonganId, String tipePegawai, BigDecimal tunjJabatan,
//                                   BigDecimal tunjStruktural,BigDecimal tunjFungsional, BigDecimal tunjPeralihan,String tahun){
//        BigDecimal totalThp = new BigDecimal(0);
//        try {
//            if (tipePegawai.equalsIgnoreCase("TP01")){
//                ImPayrollSkalaGajiEntity skalaGajiPegawai = getSkalaGajiSimRs(golonganId,tahun);
//                totalThp = (skalaGajiPegawai.getTotal().add(tunjJabatan).add(tunjStruktural).add(tunjFungsional).add(tunjPeralihan)).multiply(BigDecimal.valueOf(bulan)).divide(BigDecimal.valueOf(12));
//            }
//            if (tipePegawai.equalsIgnoreCase("TP03")){
//                if (bulan>12){
//                    bulan = 12;
//                }
//                ImPayrollSkalaGajiPkwtEntity skalaGajiPkwt = getSkalaGajiSimRsPkwt(golonganId,tahun);
//                totalThp = totalThp.add(skalaGajiPkwt.getGajiPokok().multiply(BigDecimal.valueOf(bulan)).divide(BigDecimal.valueOf(12),2,BigDecimal.ROUND_HALF_UP))
//                        .add(totalThp.add(skalaGajiPkwt.getSantunanKhusus().multiply(BigDecimal.valueOf(bulan)).divide(BigDecimal.valueOf(12),2,BigDecimal.ROUND_HALF_UP)))
//                        .add(totalThp.add(skalaGajiPkwt.getTunjFunsional().multiply(BigDecimal.valueOf(bulan)).divide(BigDecimal.valueOf(12),2,BigDecimal.ROUND_HALF_UP)))
//                        .add(totalThp.add(skalaGajiPkwt.getTunjtambahan().multiply(BigDecimal.valueOf(bulan)).divide(BigDecimal.valueOf(12),2,BigDecimal.ROUND_HALF_UP)));
//            }
//        }catch (Exception e){
//            throw new GeneralBOException("Error saat mengambil total THP");
//        }
//        return totalThp;
//    }
//
//    private PayrollPensiun getPensiunSimRs(String nip, BigDecimal gaji, BigDecimal sankhus,BigDecimal tunjJabatan,BigDecimal tunjStruktural, BigDecimal peralihan, int bulan){
//        PayrollPensiun payrollPensiun = new PayrollPensiun();
//        BigDecimal hasil = new BigDecimal(0);
//        Integer tahun = bulan/12;
//        if(tahun <20){
//            hasil = (gaji.add(peralihan)).multiply(BigDecimal.valueOf(2)).multiply(BigDecimal.valueOf(tahun));
//        }else{
//            hasil = (gaji.add(peralihan)).multiply(BigDecimal.valueOf(3)).multiply(BigDecimal.valueOf(tahun));
//        }
//        payrollPensiun.setNettoPensiunNilai(hasil);
//        payrollPensiun.setGajiGolonganNilai(gaji);
//        payrollPensiun.setTunjanganUmkNilai(sankhus);
//        payrollPensiun.setTunjanganJabatanStrukturalNilai(tunjJabatan);
//        payrollPensiun.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollPensiun.setTunjanganPeralihanNilai(peralihan);
//
//        payrollPensiun.setNip(nip);
//        payrollPensiun.setNettoPensiun(CommonUtil.numbericFormat(hasil,"###,###"));
//        payrollPensiun.setGajiGolongan(CommonUtil.numbericFormat(gaji,"###,###"));
//        payrollPensiun.setTunjanganPeralihan(CommonUtil.numbericFormat(peralihan,"###,###"));
//
//        return payrollPensiun;
//    }
//
//    private PayrollInsentif getInsentifSimRs(String nip,String bulan, String tahun, BigDecimal thp){
//        PayrollInsentif payrollInsentif = new PayrollInsentif();
//
//        payrollInsentif.setNip(nip);
//        payrollInsentif.setBulan(nip);
//        payrollInsentif.setTahun(nip);
//
//        payrollInsentif.setTotalThp(CommonUtil.numbericFormat(thp,"###,###"));
//        payrollInsentif.setTotalInsentif(CommonUtil.numbericFormat(thp,"###,###"));
//        payrollInsentif.setTotalInsentifBersih(CommonUtil.numbericFormat(thp,"###,###"));
//
//        payrollInsentif.setTotalThpNilai(thp);
//        payrollInsentif.setTotalInsentifNilai(thp);
//        payrollInsentif.setTotalInsentifBersihNilai(thp);
//
//        return payrollInsentif;
//    }
//
//    private PayrollCuti getCuti(String nip,String bulan, String tahun, BigDecimal thp, String flagCutiTahunan, String flagCutiPanjang){
//        int bulanAktif = 0;
//        String keterangan = "";
//        BigDecimal hasil = new BigDecimal(0);
//        bulanAktif = cekBulanPayrollSimRs(nip,bulan, tahun);
//        int tahunCutiPanjang = bulanAktif/72;
//        if (flagCutiPanjang.equalsIgnoreCase("Y")){
//            if (tahunCutiPanjang>0){
//                //menguji apakah cuti panjang dalam total tahun cuti panjang sama
//                List<ItPayrollCutiEntity> cekPayrollCuti = new ArrayList<>();
//                cekPayrollCuti = payrollCutiDao.cekTahunCutiPanjang(nip,String.valueOf(tahunCutiPanjang),"CUTI PANJANG");
//                if (cekPayrollCuti.size()==0){
//                    hasil = thp;
//                    keterangan = "CUTI PANJANG";
//                }
//            }
//        }
//        if (flagCutiTahunan.equalsIgnoreCase("Y")){
//            List<ItPayrollCutiEntity> cekPayrollCuti = new ArrayList<>();
//            cekPayrollCuti = payrollCutiDao.cekIfCutiPanjangExist(nip,tahun,"CUTI PANJANG");
//            if (cekPayrollCuti.size()==0){
//                if (bulanAktif/12>0){
//                    hasil = CommonUtil.percentage(BigDecimal.valueOf(55),thp);
//                    keterangan = "CUTI TAHUNAN";
//                }
//            }
//        }
//
//        PayrollCuti payrollCuti = new PayrollCuti();
//        payrollCuti.setNip(nip);
//        payrollCuti.setBulan(bulan);
//        payrollCuti.setTahun(tahun);
//        payrollCuti.setTotalThp(CommonUtil.numbericFormat(thp,"###,###"));
//        payrollCuti.setTotalThpNilai(thp);
//        payrollCuti.setTotalCuti(CommonUtil.numbericFormat(hasil,"###,###"));
//        payrollCuti.setTotalCutiNilai(hasil);
//        payrollCuti.setKeterangan(keterangan);
//        return payrollCuti;
//    }
//    private PayrollJasopr getJasopr(String nip,
//                                    String bulan,
//                                    String tahun,
//                                    BigDecimal gaji,
//                                    BigDecimal sankhus,
//                                    BigDecimal tunjJabatan,
//                                    BigDecimal tunjStruktural,
//                                    BigDecimal tunjFungsional,
//                                    BigDecimal tunjPeralihan,
//                                    BigDecimal tunjLain,
//                                    BigDecimal tunjTambahan,
//                                    BigDecimal pemondokan,
//                                    BigDecimal komunikasi,
//                                    BigDecimal totalRlab,
//                                    BigDecimal thpPegawai){
//        BigDecimal hasil = new BigDecimal(0);
//        hasil = thpPegawai;
//        PayrollJasopr payrollJasopr = new PayrollJasopr();
//
//        payrollJasopr.setTotaljasoprNilai(hasil);
//        payrollJasopr.setTotaljasopr(CommonUtil.numbericFormat(hasil, "###,###"));
//
//        payrollJasopr.setBulan(bulan);
//        payrollJasopr.setTahun(tahun);
//        payrollJasopr.setNip(nip);
//
//        payrollJasopr.setTotalThpNilai(thpPegawai);
//        payrollJasopr.setGajiNilai(gaji);
//        payrollJasopr.setSankhusNilai(sankhus);
//        payrollJasopr.setTunjJabatanNilai(tunjJabatan);
//        payrollJasopr.setTunjStrukturalNilai(tunjStruktural);
//        payrollJasopr.setTunjFungsionalNilai(tunjFungsional);
//        payrollJasopr.setTunjPeralihanNilai(tunjPeralihan);
//        payrollJasopr.setTunjLainNilai(tunjLain);
//        payrollJasopr.setTunjTambahanNilai(tunjTambahan);
//        payrollJasopr.setPemondokanNilai(pemondokan);
//        payrollJasopr.setKomunikasiNilai(komunikasi);
//        payrollJasopr.setTotalRlabNilai(totalRlab);
//
//        payrollJasopr.setTotalThp(CommonUtil.numbericFormat(thpPegawai, "###,###"));
//        payrollJasopr.setGaji(CommonUtil.numbericFormat(gaji, "###,###"));
//        payrollJasopr.setSankhus(CommonUtil.numbericFormat(sankhus, "###,###"));
//        payrollJasopr.setTunjJabatan(CommonUtil.numbericFormat(tunjJabatan, "###,###"));
//        payrollJasopr.setTunjStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//        payrollJasopr.setTunjFungsional(CommonUtil.numbericFormat(tunjFungsional, "###,###"));
//        payrollJasopr.setTunjPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//        payrollJasopr.setTunjLain(CommonUtil.numbericFormat(tunjLain, "###,###"));
//        payrollJasopr.setTunjTambahan(CommonUtil.numbericFormat(tunjTambahan, "###,###"));
//        payrollJasopr.setPemondokan(CommonUtil.numbericFormat(pemondokan, "###,###"));
//        payrollJasopr.setKomunikasi(CommonUtil.numbericFormat(komunikasi, "###,###"));
//        payrollJasopr.setTotalRlab(CommonUtil.numbericFormat(totalRlab, "###,###"));
//        return payrollJasopr;
//    }
//
//    private PayrollThr getThr(String nip,
//                              String bulan,
//                              String tahun,
//                              BigDecimal gaji,
//                              BigDecimal tunjUmk,
//                              BigDecimal tunjStruktural,
//                              BigDecimal tunjJabStruktural,
//                              BigDecimal tunjStrategis,
//                              BigDecimal totalRlab,
//                              BigDecimal tunjPeralihan,
//                              BigDecimal pemondokan,
//                              BigDecimal komunikasi,
//                              BigDecimal tunjTambahan,
//                              BigDecimal tunjLain,
//                              BigDecimal thp){
//        PayrollThr payrollThr = new PayrollThr();
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal totalThr = new BigDecimal(0);
//
//        int bulanAktif = 1;
//        //cek jumlah bulan aktif pendidikan (Apakah ditahun ini user pensiun atau tidak)
//        String strTgl = "01-"+bulan+"-"+tahun;
//        Date tgl = CommonUtil.convertStringToDate(strTgl);
//
//        bulanAktif = cekBulanThr(nip, tgl);
//
//        if (bulanAktif>1){
//            totalThr = thp;
//        }
//        payrollThr.setNip(nip);
//        payrollThr.setGajiGolonganNilai(gaji);
//        payrollThr.setTunjanganUmkNilai(tunjUmk);
//        payrollThr.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollThr.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//        payrollThr.setTunjanganStrategisNilai(tunjStrategis);
//        payrollThr.setTunjanganPeralihanNilai(tunjPeralihan);
//        payrollThr.setTunjanganLainNilai(tunjLain);
//        payrollThr.setBulanAktif(bulanAktif);
//        payrollThr.setTotalThrNilai(totalThr);
//        payrollThr.setTotalRlabNilai(totalRlab);
//        payrollThr.setThpNilai(thp);
//
//
//        payrollThr.setPemondokanNilai(pemondokan);
//        payrollThr.setKomunikasiNilai(komunikasi);
//        payrollThr.setTunjanganTambahanNilai(tunjTambahan);
//
//
//        payrollThr.setGajiGolongan(CommonUtil.numbericFormat(gaji, "###,###"));
//        payrollThr.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//        payrollThr.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//        payrollThr.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabStruktural, "###,###"));
//        payrollThr.setTunjanganStrategis(CommonUtil.numbericFormat(tunjStrategis, "###,###"));
//        payrollThr.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//        payrollThr.setTotalThr(CommonUtil.numbericFormat(totalThr, "###,###"));
//        payrollThr.setThp(CommonUtil.numbericFormat(thp, "###,###"));
//
//        payrollThr.setPemondokan(CommonUtil.numbericFormat(pemondokan, "###,###"));
//        payrollThr.setKomunikasi(CommonUtil.numbericFormat(komunikasi, "###,###"));
//        payrollThr.setTunjanganTambahan(CommonUtil.numbericFormat(tunjTambahan, "###,###"));
//        payrollThr.setTotalRlab(CommonUtil.numbericFormat(totalRlab, "###,###"));
//        payrollThr.setTunjanganLain(CommonUtil.numbericFormat(tunjLain, "###,###"));
//
//        return payrollThr;
//    }
//
//    private PayrollThr getAsumsiThr(String nip, BigDecimal gaji, BigDecimal tunjUmk, BigDecimal tunjStruktural, BigDecimal tunjJabStruktural, BigDecimal tunjStrategis,
//                                    BigDecimal tunjPph, BigDecimal peralihan, String bulan, String tahun, String branchId){
//        PayrollThr payrollThr = new PayrollThr();
//        BigDecimal hasil = new BigDecimal(0);
//
//        if(bulan.equalsIgnoreCase("01")){
//            hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjStrategis).add(tunjPph).add(peralihan);
//
//            BigDecimal persentase = new BigDecimal(0);
//            List<ImCompany> ImCompany = companyDao.getBiayaJabatanPersentase();
//            if(ImCompany.size() > 0){
//                for(ImCompany company : ImCompany){
//                    persentase = persentase.add(company.getPayrollThrPersentase());
//                }
//            }
//            hasil = hasil.multiply(persentase).divide(BigDecimal.valueOf(100));
//        }else{
//            List<ItPayrollEntity> itPayrollEntity = payrollDao.getTunjanganAsumsi(nip, "01", tahun, branchId);
//            if(itPayrollEntity.size() > 0){
//                String pphId = "";
//                for(ItPayrollEntity itPayrollEntity1: itPayrollEntity){
//                    //pphId = itPayrollEntity1.getPphId();
//                    hasil = itPayrollEntity1.getAsumsiThr();
//                }
//                /*ItPayrollPphEntity itPayrollPphEntity = payrollPphDao.getById("pphId", pphId);
//                hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjStrategis).add(tunjPph);
//                hasil = hasil.multiply(BigDecimal.valueOf(50)).divide(BigDecimal.valueOf(100));
//                itPayrollPphEntity.setAsumsiThr(hasil);
//                payrollPphDao.updateAndSave(itPayrollPphEntity);*/
//            }
//            //hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjStrategis).add(tunjPph);
//        }
//
//
//        payrollThr.setNip(nip);
//        payrollThr.setGajiGolonganNilai(gaji);
//        payrollThr.setTunjanganUmkNilai(tunjUmk);
//        payrollThr.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollThr.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//        payrollThr.setTunjanganStrategisNilai(tunjStrategis);
//        payrollThr.setTunjanganPphNilai(tunjPph);
//        payrollThr.setTotalThrNilai(hasil);
//
//        payrollThr.setGajiGolongan(CommonUtil.numbericFormat(gaji, "###,###"));
//        payrollThr.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//        payrollThr.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//        payrollThr.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabStruktural, "###,###"));
//        payrollThr.setTunjanganStrategis(CommonUtil.numbericFormat(tunjStrategis, "###,###"));
//        payrollThr.setTunjanganPph(CommonUtil.numbericFormat(tunjPph, "###,###"));
//        payrollThr.setTotalThr(CommonUtil.numbericFormat(hasil, "###,###"));
//
//        return payrollThr;
//    }
//
//    private BigDecimal getAsumsiJasprod(String nip, String bulan, String tahun, String branchId){
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal persentase = new BigDecimal(0);
//        BigDecimal gaji = new BigDecimal(0);
//        BigDecimal tunjUmk = new BigDecimal(0);
//        BigDecimal tunjStruktural = new BigDecimal(0);
//        BigDecimal tunjJabStruktural = new BigDecimal(0);
//        BigDecimal tunjPeralihan = new BigDecimal(0);
//        BigDecimal tunjStrategis = new BigDecimal(0);
//
//        if(nip.equalsIgnoreCase("15-0425")){
//            int a = 0;
//        }
//        String tahunBefore = (Integer.parseInt(tahun)-1) + "";
//        List<ItPayrollEntity> itPayrollEntity = null ;
//
//        if(bulan.equalsIgnoreCase("01")){
//            itPayrollEntity = payrollDao.getLastPayroll(nip, "12", tahunBefore + "");
//            if(itPayrollEntity.size() > 0){
//                for(ItPayrollEntity itPayrollEntity1 : itPayrollEntity){
//                    gaji = itPayrollEntity1.getGajiGolongan();
//                    tunjUmk = itPayrollEntity1.getTunjanganUmk();
//                    tunjStruktural = itPayrollEntity1.getTunjanganStruktural();
//                    tunjJabStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                    tunjPeralihan = itPayrollEntity1.getTunjanganPeralihan();
//                    tunjStrategis = itPayrollEntity1.getTunjanganStrategis();
//                }
//            }
//
//            hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjPeralihan).add(tunjStrategis).add(tunjJabStruktural).add(tunjStrategis);
//
//            List<ImCompany> ImCompany = companyDao.getBiayaJabatanPersentase();
//            if(ImCompany.size() > 0){
//                for(ImCompany company : ImCompany){
//                    persentase = persentase.add(company.getPayrollJasprodKali());
//                }
//            }
//            hasil = hasil.multiply(persentase);
//        }else{
//            itPayrollEntity = payrollDao.getTunjanganAsumsi(nip, "01", tahun, branchId);
//            if(itPayrollEntity.size() > 0){
//                String pphId = "";
//                for(ItPayrollEntity itPayrollEntity1: itPayrollEntity){
//                    //pphId = itPayrollEntity1.getPphId();
//                    hasil = itPayrollEntity1.getAsumsiJasprod();
//                }
//            }
//        }
//        /*hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjPeralihan).add(tunjStrategis).add(tunjStrategis);
//
//        List<ImCompany> ImCompany = companyDao.getBiayaJabatanPersentase();
//        if(ImCompany.size() > 0){
//            for(ImCompany company : ImCompany){
//                persentase = persentase.add(company.getPayrollJasprodKali());
//            }
//        }
//        hasil = hasil.multiply(persentase);
//
//        itPayrollEntity = payrollDao.getTunjanganAsumsi(nip, "01", tahun, "KD01");
//        if(itPayrollEntity.size() > 0){
//            String pphId = "";
//            for(ItPayrollEntity itPayrollEntity1: itPayrollEntity){
//                pphId = itPayrollEntity1.getPphId();
//                //--hasil = itPayrollEntity1.getAsumsiThr();
//            }
//            ItPayrollPphEntity itPayrollPphEntity = payrollPphDao.getById("pphId", pphId);
//
//            itPayrollPphEntity.setAsumsiJasprod(hasil);
//            payrollPphDao.updateAndSave(itPayrollPphEntity);
//        }*/
//
//        return hasil;
//    }
//
//    private PayrollPendidikan getPendidikan(String nip, String tahun, BigDecimal gaji, BigDecimal tunjUmk, BigDecimal tunjStruktural, BigDecimal tunjJabStruktural, BigDecimal tunjStrategis,
//                                            BigDecimal kompensasi, BigDecimal tunjAirListrik, BigDecimal tunjPph, BigDecimal tunjPeralihan, int bulanAktif){
//        PayrollPendidikan payrollPendidikan = new PayrollPendidikan();
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal totalPendidikan = new BigDecimal(0);
//
//        try{
//            totalPendidikan = gaji
//                    .add(tunjUmk)
//                    .add(tunjStruktural)
//                    .add(tunjJabStruktural)
//                    .add(tunjStrategis)
//                    .add(kompensasi)
//                    .add(tunjAirListrik)
//                    .add(tunjPph)
//                    .add(tunjPeralihan);
//            hasil = BigDecimal.valueOf(bulanAktif).divide(BigDecimal.valueOf(12), 4, BigDecimal.ROUND_HALF_UP).multiply(totalPendidikan);
//
//            payrollPendidikan.setTunjanganPeralihanNilai(tunjPeralihan);
//            payrollPendidikan.setGajiNilai(gaji);
//            payrollPendidikan.setTunjanganUmkNilai(tunjUmk);
//            payrollPendidikan.setTunjanganStrukturalNilai(tunjStruktural);
//            payrollPendidikan.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//            payrollPendidikan.setTunjanganStrategisNilai(tunjStrategis);
//            payrollPendidikan.setTunjanganKompensasiNilai(kompensasi);
//            payrollPendidikan.setTunjanganAirListrikNilai(tunjAirListrik);
//            payrollPendidikan.setTunjanganPphNilai(tunjPph);
//            payrollPendidikan.setTotalPendidikanNilai(totalPendidikan);
//            payrollPendidikan.setTotalPendidikanBersihNilai(hasil);
//            payrollPendidikan.setBulanAktif(bulanAktif);
//
//            payrollPendidikan.setNip(nip);
//            payrollPendidikan.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//            payrollPendidikan.setGaji(CommonUtil.numbericFormat(gaji, "###,###"));
//            payrollPendidikan.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//            payrollPendidikan.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//            payrollPendidikan.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabStruktural, "###,###"));
//            payrollPendidikan.setTunjanganStrategis(CommonUtil.numbericFormat(tunjStrategis, "###,###"));
//            payrollPendidikan.setTunjanganKompensasi(CommonUtil.numbericFormat(kompensasi, "###,###"));
//            payrollPendidikan.setTunjanganAirListrik(CommonUtil.numbericFormat(tunjAirListrik, "###,###"));
//            payrollPendidikan.setTunjanganPph(CommonUtil.numbericFormat(tunjPph, "###,###"));
//            payrollPendidikan.setTotalPendidikan(CommonUtil.numbericFormat(totalPendidikan, "###,###"));
//            payrollPendidikan.setTotalPendidikanBersih(CommonUtil.numbericFormat(hasil, "###,###"));
//        }catch (Exception E){
//            logger.error("[PayrollBoImpl.getPendidikan] Error, " + E.getMessage());
//            throw new GeneralBOException("please info to your admin..." + E.getMessage());
//        }
//
//
//        return payrollPendidikan;
//    }
//
//    private PayrollPendidikan getAsumsiPendidikan(String nip, BigDecimal gaji, BigDecimal tunjUmk, BigDecimal tunjStruktural, BigDecimal tunjJabStruktural, BigDecimal tunjStrategis,
//                                                  BigDecimal kompensasi, BigDecimal tunjAirListrik, BigDecimal tunjPph, BigDecimal peralihan, String bulan, String tahun, String branchId){
//        PayrollPendidikan payrollPendidikan = new PayrollPendidikan();
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal persentase = new BigDecimal(0);
//        if(bulan.equalsIgnoreCase("01")){
//            hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjStrategis).add(kompensasi).add(tunjAirListrik).add(tunjPph).add(peralihan);
//            List<ImCompany> ImCompany = companyDao.getBiayaJabatanPersentase();
//            if(ImCompany.size() > 0){
//                for(ImCompany company : ImCompany){
//                    persentase = persentase.add(company.getPayrollPendidikanPersentase());
//                }
//            }
//
//            hasil = hasil.multiply(persentase).divide(BigDecimal.valueOf(100));
//        }else{
//            List<ItPayrollEntity> itPayrollEntity = payrollDao.getTunjanganAsumsi(nip, "01", tahun, branchId);
//            if(itPayrollEntity.size() > 0){
//                String pphId = "";
//                for(ItPayrollEntity itPayrollEntity1: itPayrollEntity){
//                    //pphId = itPayrollEntity1.getPphId();
//                    hasil = itPayrollEntity1.getAsumsiPendidikan();
//                }
//            }
//        }
//
//
//        payrollPendidikan.setGajiNilai(gaji);
//        payrollPendidikan.setTunjanganUmkNilai(tunjUmk);
//        payrollPendidikan.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollPendidikan.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//        payrollPendidikan.setTunjanganStrategisNilai(tunjStrategis);
//        payrollPendidikan.setTunjanganKompensasiNilai(kompensasi);
//        payrollPendidikan.setTunjanganAirListrikNilai(tunjAirListrik);
//        payrollPendidikan.setTunjanganPphNilai(tunjPph);
//        payrollPendidikan.setTotalPendidikanNilai(hasil);
//
//        payrollPendidikan.setNip(nip);
//        payrollPendidikan.setGaji(CommonUtil.numbericFormat(gaji, "###,###"));
//        payrollPendidikan.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//        payrollPendidikan.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//        payrollPendidikan.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabStruktural, "###,###"));
//        payrollPendidikan.setTunjanganStrategis(CommonUtil.numbericFormat(tunjStrategis, "###,###"));
//        payrollPendidikan.setTunjanganKompensasi(CommonUtil.numbericFormat(kompensasi, "###,###"));
//        payrollPendidikan.setTunjanganAirListrik(CommonUtil.numbericFormat(tunjAirListrik, "###,###"));
//        payrollPendidikan.setTunjanganPph(CommonUtil.numbericFormat(tunjPph, "###,###"));
//        payrollPendidikan.setTotalPendidikan(CommonUtil.numbericFormat(hasil, "###,###"));
//
//        return payrollPendidikan;
//    }
//
//    private BigDecimal getJasprodFaktorKali(String branchId, String nip){
//        BigDecimal faktorKali = new BigDecimal(0);
//        List<ImBranches> branches = null;
//        branches = branchDao.getListBranchById(branchId);
//        for(ImBranches branches1 : branches){
//            faktorKali = branches1.getFaktorJasprod();
//        }
//
//        if(nip.equalsIgnoreCase("17-0658")){
//            faktorKali = BigDecimal.valueOf(4.62);
//        }
//
//        return faktorKali;
//    }
//
//    private BigDecimal getBiayaJasprod(String branchId){
//        BigDecimal biayaJasprod = new BigDecimal(0);
//        List<ImBranches> branches = null;
//        branches = branchDao.getListBranchById(branchId);
//        for(ImBranches branches1 : branches){
//            biayaJasprod = branches1.getBiayaJasprod();
//        }
//
//        return biayaJasprod;
//    }
//
//    private PayrollJasprod getJasprod(String nip,
//                                      String branchId,
//                                      int mk,
//                                      String golongan,
//                                      String point,
//                                      String tahun){
//        PayrollJasprod payrollJasprod = new PayrollJasprod();
//        if(nip.equalsIgnoreCase("12-0424")){
//            int a = 0;
//        }
//
//        BigDecimal gajiBruto = new BigDecimal(0);
//        BigDecimal tambahan = new BigDecimal(0);
//        BigDecimal bruto = new BigDecimal(0);
//        BigDecimal pajak = new BigDecimal(0);
//        BigDecimal gajiMasaKerja = new BigDecimal(0);
//        BigDecimal perhitungan = new BigDecimal(0);
//        BigDecimal gajiFaktorNormal = new BigDecimal(0);
//        BigDecimal selisihTotalGajiSmkFaktor = new BigDecimal(0);
//        BigDecimal faktorKali = getJasprodFaktorKali(branchId, nip);
//        BigDecimal biayaJasprod = getBiayaJasprod(branchId);
//        int tahunInt = Integer.parseInt(tahun);
//        int sebelumTahun = tahunInt - 1;
//        BigDecimal nilaiSmk = new BigDecimal(9.12);
//        BigDecimal jumlalhSeluruhNilaiSmk = jumlahNilaiSmk.setScale(2, BigDecimal.ROUND_HALF_UP);
//        BigDecimal persenSmk = new BigDecimal(98.5);
//
//        // Mengambil nilai SMK
//        List<ItSmkEntity> itSmkEntities = new ArrayList<>();
//        try {
//            itSmkEntities = smkDao.getListSmkByNipPeriode(nip, sebelumTahun + "", branchId);
//        } catch (HibernateException e) {
//            logger.error("[PayrollBoImpl.getJasprod] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//        }
//        if(itSmkEntities.size() > 0){
//            for(ItSmkEntity itSmkEntity: itSmkEntities){
//                nilaiSmk = BigDecimal.valueOf(itSmkEntity.getGrandTotalNilaiPrestasi());
////                mk = itSmkEntity.getMasaKerjaGolongan();
//                mk = itSmkEntity.getMasaKerjaBln();
//            }
//        }
//
//        // persen SMK
//        List<ImSmkPersenSmkNilaiEntity> imSmkPersenSmkNilaiEntities = new ArrayList<>();
//        imSmkPersenSmkNilaiEntities = smkPersenSmkNilaiDao.getListPersen(branchId);
//        if(imSmkPersenSmkNilaiEntities.size() > 0){
//            for(ImSmkPersenSmkNilaiEntity imSmkPersenSmkNilaiEntity: imSmkPersenSmkNilaiEntities){
//                if(nilaiSmk.compareTo(imSmkPersenSmkNilaiEntity.getNilaiBawah()) >= 0 && nilaiSmk.compareTo(imSmkPersenSmkNilaiEntity.getNilaiAtas()) < 0){
//                    persenSmk = imSmkPersenSmkNilaiEntity.getNilai();
//                    break;
//                }
//            }
//        }
//
//        // Jasprod mengambil gaji dari tahun sebelumnya di bulan 12
//        List<ItPayrollEntity> itPayrollEntity = null;
//        itPayrollEntity = payrollDao.getLastPayroll(nip, "12", sebelumTahun + "", branchId);
//        BigDecimal gaji = new BigDecimal(0);
//        BigDecimal tunjUmk = new BigDecimal(0);
//        BigDecimal tunjStruktural = new BigDecimal(0);
//        BigDecimal tunjJabStruktural = new BigDecimal(0);
//        BigDecimal tunjStrategis = new BigDecimal(0);
//        BigDecimal tunjPeralihan = new BigDecimal(0);
//        if(itPayrollEntity.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1 : itPayrollEntity){
//                gaji = itPayrollEntity1.getGajiGolongan();
//                tunjUmk = itPayrollEntity1.getTunjanganUmk();
//                tunjStruktural = itPayrollEntity1.getTunjanganStruktural();
//                tunjJabStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                tunjStrategis = itPayrollEntity1.getTunjanganStrategis();
//                tunjPeralihan = itPayrollEntity1.getTunjanganPeralihan(); //Tunj. Peralihan
//            }
//        }
//        gajiBruto = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjPeralihan).add(tunjStrategis);
//
//        gajiMasaKerja = gajiBruto.multiply(BigDecimal.valueOf(mk)).divide(BigDecimal.valueOf(12), BigDecimal.ROUND_HALF_UP);
//        perhitungan = (gajiMasaKerja.multiply(faktorKali));
//        perhitungan = perhitungan.multiply(persenSmk).divide(BigDecimal.valueOf(100), BigDecimal.ROUND_HALF_UP);
//        gajiFaktorNormal = gajiMasaKerja.multiply(faktorKali);
//        selisihTotalGajiSmkFaktor = biayaJasprod.subtract(jasprodJumlahPerhitungan);
//
//        if(selisihTotalGajiSmkFaktor.compareTo(BigDecimal.valueOf(0)) > 0){
//            if(jasprodJumlahPerhitungan.compareTo(BigDecimal.valueOf(0)) > 0){
//                tambahan = perhitungan.divide(jasprodJumlahPerhitungan, BigDecimal.ROUND_HALF_UP).multiply(selisihTotalGajiSmkFaktor);
//            }else{
//                tambahan = BigDecimal.valueOf(0);
//            }
//        }
//
//        bruto = perhitungan.add(tambahan);
//        //pajak = bruto.multiply(BigDecimal.valueOf(20)).divide(BigDecimal.valueOf(100), 0, BigDecimal.ROUND_HALF_UP);
//
//        //BigDecimal finalNilaiJasprod = new BigDecimal(0);
//        //31-01-2019
//        //finalNilaiJasprod = bruto.subtract(pajak);
//        //finalNilaiJasprod = gajiBruto.multiply(BigDecimal.valueOf(3));
//        payrollJasprod.setNip(nip);
//        payrollJasprod.setGajiGolonganNilai(gaji);
//        payrollJasprod.setTunjanganUmkNilai(tunjUmk);
//        payrollJasprod.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollJasprod.setTunjanganJabStrukturalNilai(tunjJabStruktural);
//        payrollJasprod.setTunjPeralihanNilai(tunjPeralihan);
//        payrollJasprod.setTunjanganStrategisNilai(tunjStrategis);
//        payrollJasprod.setGajiBrutoNilai(gajiBruto);
//        payrollJasprod.setGajiMasaKerjaNilai(gajiMasaKerja);
//        payrollJasprod.setFaktor(faktorKali);
//        payrollJasprod.setSelisihGajiSmkFaktor(selisihTotalGajiSmkFaktor);
//        payrollJasprod.setJumlahPersenSmk(jumlahNilaiSmk);
//        payrollJasprod.setNilaiSmk(nilaiSmk.doubleValue());
//        payrollJasprod.setPersenSmk(persenSmk.doubleValue());
//        payrollJasprod.setPerhitunganNilai(perhitungan);
//        payrollJasprod.setGajiMasaKerjaFaktorNilai(gajiFaktorNormal);
//        payrollJasprod.setTambahanNilai(tambahan);
//        payrollJasprod.setJasprodNilai(bruto);
//        payrollJasprod.setJasprodNilaiFinal(bruto);
//
//
//        payrollJasprod.setMasaKerja(mk);
//        payrollJasprod.setGolongan(golongan);
//        payrollJasprod.setPoint(point);
//        payrollJasprod.setGajiGolongan(CommonUtil.numbericFormat(gaji, "###,###"));
//        payrollJasprod.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//        payrollJasprod.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//        payrollJasprod.setTunjanganJabStruktural(CommonUtil.numbericFormat(tunjJabStruktural, "###,###"));
//        payrollJasprod.setTunjPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//        payrollJasprod.setTunjanganStrategis(CommonUtil.numbericFormat(tunjStrategis, "###,###"));
//        payrollJasprod.setGajiBruto(CommonUtil.numbericFormat(gajiBruto, "###,###"));
//        payrollJasprod.setGajiMasaKerja(CommonUtil.numbericFormat(gajiMasaKerja, "###,###"));
//        payrollJasprod.setPerhitungan(CommonUtil.numbericFormat(perhitungan, "###,###"));
//        payrollJasprod.setGajiMasaKerjaFaktor(CommonUtil.numbericFormat(gajiFaktorNormal, "###,###"));
//        payrollJasprod.setTambahan(CommonUtil.numbericFormat(tambahan, "###,###"));
//        payrollJasprod.setNilaiJasprod(CommonUtil.numbericFormat(bruto, "###,###"));
//        payrollJasprod.setFinalNilaiJasprod(CommonUtil.numbericFormat(bruto, "###,###"));
//
//        return payrollJasprod;
//    }
//
//    private PayrollInsentif getInsentif(String nip, int bulanMulai, int bulanSampai, int tahunInsentif, String tahun, String branchId){
//        if (nip.equalsIgnoreCase("95-0231")){
//            int a = 0;
//        }
//
//        PayrollInsentif payrollInsentif = new PayrollInsentif();
//
//        BigDecimal pendapatanBruto = new BigDecimal(0);
//        BigDecimal potInsentif = new BigDecimal(0);
//        BigDecimal smkStandart = new BigDecimal(0);
//        BigDecimal potInsentifIndividu = new BigDecimal(1);
//
//        //Akira
//        //SMK Huruf dan SMK Nilai Di standarkan ke 0 dan huruf ke K
//        String smkHuruf = "K";
//        BigDecimal smkAngka = new BigDecimal(0);
//        BigDecimal insentifDiterima = new BigDecimal(0);
//        int mk = 0;
//        int jmlMk = bulanSampai-bulanMulai+1;
//        List<ImPayrollMasterInsentifEntity> masterInsentifList = payrollMasterInsentifDao.getDataMasterInsentif(branchId);
//        if(masterInsentifList.size() > 0){
//            for(ImPayrollMasterInsentifEntity masterINsentifLoop: masterInsentifList){
//                potInsentif = masterINsentifLoop.getPotonganInsentif();
//                smkStandart = masterINsentifLoop.getSmkStandart();
//            }
//        }
//
//        //cek bulan Aktif
//        /*String strBln = "";
//        for(int bln1 = bulanMulai; bln1 <= bulanSampai; bln1++){
//            String bulanStr="";
//            if (bln1<9){
//
//            }else{
//
//            }
//
//            if(bln1 == bulanMulai){
//                strBln = "(";
//                strBln = strBln + "'0" + bln1 + "'";
//            }else if(bln1 == bulanSampai){
//                strBln += ",";
//                strBln = strBln + "'0" + bln1 + "'";
//                strBln += ")";
//            }else{
//                strBln += ", ";
//                strBln = strBln + "'0" + bln1 + "'";
//            }
//        }
//        List<ItPayrollEntity> payrollEntityList = payrollDao.kalkulasiBulanBukanDirektur(nip, tahunInsentif + "", strBln);
//        mk = payrollEntityList.size();*/
//
//        List<ImPayrollInsentifNilaiSmkEntity> imPayrollInsentifNilaiSmkEntities = payrollInsentifNilaiSmkDao.getNilaiByNip(nip);
//        if(imPayrollInsentifNilaiSmkEntities.size() > 0){
//            for(ImPayrollInsentifNilaiSmkEntity imPayrollInsentifNilaiSmkEntity: imPayrollInsentifNilaiSmkEntities){
//                smkAngka = imPayrollInsentifNilaiSmkEntity.getNilaiSmkInsentif();
//                smkHuruf = imPayrollInsentifNilaiSmkEntity.getNilaiHuruf();
//                mk = imPayrollInsentifNilaiSmkEntity.getJumlahBulan();
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntity = null;
//        itPayrollEntity = payrollDao.getLastPayroll(nip);
//        BigDecimal gaji = new BigDecimal(0);
//        BigDecimal tunjUmk = new BigDecimal(0);
//        BigDecimal tunjStruktural = new BigDecimal(0);
//        BigDecimal tunjJabStruktural = new BigDecimal(0);
//        BigDecimal tunjStrategis = new BigDecimal(0);
//        BigDecimal tunjPeralihan = new BigDecimal(0);
//        if(itPayrollEntity.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1 : itPayrollEntity){
//                gaji = itPayrollEntity1.getGajiGolongan();
//                tunjUmk = itPayrollEntity1.getTunjanganUmk();
//                tunjStruktural = itPayrollEntity1.getTunjanganStruktural();
//                tunjJabStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                tunjStrategis = itPayrollEntity1.getTunjanganStrategis();
//                tunjPeralihan = itPayrollEntity1.getTunjanganPeralihan(); //Tunj. Peralihan
//            }
//        }
//        pendapatanBruto = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjPeralihan).add(tunjStrategis);
//        potInsentifIndividu = potInsentif.multiply(pendapatanBruto);
//        potInsentifIndividu = potInsentifIndividu.multiply(BigDecimal.valueOf(mk)).divide(BigDecimal.valueOf(jmlMk), BigDecimal.ROUND_HALF_UP);
//
//        insentifDiterima = smkAngka.divide(smkStandart,5, BigDecimal.ROUND_HALF_UP);
//        insentifDiterima = insentifDiterima.multiply(potInsentifIndividu).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        payrollInsentif.setBulanMulai(bulanMulai);
//        payrollInsentif.setBulanSampai(bulanSampai);
//        payrollInsentif.setTahunInsentif(tahunInsentif);
//
//        payrollInsentif.setNip(nip);
//        payrollInsentif.setTahun(tahun);
//        payrollInsentif.setGajiGolonganNilai(gaji);
//        payrollInsentif.setTunjanganUmkNilai(tunjUmk);
//        payrollInsentif.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollInsentif.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//        payrollInsentif.setTunjanganPeralihanNilai(tunjPeralihan);
//        payrollInsentif.setTunjanganStrategisNilai(tunjStrategis);
//        payrollInsentif.setJumlahBrutoNilai(pendapatanBruto);
//
//        payrollInsentif.setGajiGolongan(CommonUtil.numbericFormat(gaji, "###,###"));
//        payrollInsentif.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//        payrollInsentif.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//        payrollInsentif.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabStruktural, "###,###"));
//        payrollInsentif.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//        payrollInsentif.setTunjanganStrategis(CommonUtil.numbericFormat(tunjStrategis, "###,###"));
//        payrollInsentif.setJumlahBruto(CommonUtil.numbericFormat(pendapatanBruto, "###,###"));
//
//        payrollInsentif.setMasaKerja(mk);
//        payrollInsentif.setPotonganinsentifNilai(potInsentif);
//
//        payrollInsentif.setPotonganinsentifIndividuNilai(potInsentifIndividu);
//        payrollInsentif.setPotonganinsentifIndividu(CommonUtil.numbericFormat(potInsentifIndividu, "###,###"));
//
//        payrollInsentif.setSmkStandart(smkStandart.doubleValue());
//        payrollInsentif.setSmkHuruf(smkHuruf);
//        payrollInsentif.setSmkAngka(smkAngka.doubleValue());
//
//        payrollInsentif.setInsentifyangDiterimaNilai(insentifDiterima);
//        payrollInsentif.setInsentifyangDiterima(CommonUtil.numbericFormat(insentifDiterima, "###,###"));
//
//        return payrollInsentif;
//    }
//
//    private Boolean cekPensiun(String bulan, String tahun, Date tanggalPensiun){
//        Boolean hasil = false;
//        String strPensiun[] = CommonUtil.convertDateToString(tanggalPensiun).split("-");
//        DateTime tanggalPayroll = new DateTime(CommonUtil.convertToDate(strPensiun[0] + "-" + bulan + "-" + tahun).getTime());
//        DateTime tglPensiun = new DateTime(tanggalPensiun.getTime());
//        BigInteger companyBulan = BigInteger.valueOf(0);
//        List<ImCompany> ImCompany = null;
//        ImCompany = companyDao.getBiayaJabatanPersentase();
//        Months bln = Months.monthsBetween(tanggalPayroll, tglPensiun);
//        if(ImCompany.size() > 0){
//            for(ImCompany company : ImCompany){
//                companyBulan = companyBulan.add(company.getBulanPensiun());
//            }
//        }
//
//        tglPensiun = tglPensiun.minusMonths(companyBulan.intValue());
//        if(bln.getMonths() <= companyBulan.intValue()){
//            hasil = true;
//        }else{
//            hasil = false;
//        }
//        return hasil ;
//    }
//
//    private PayrollPensiun getPensiun(String nip, java.sql.Date tanggalAktif, java.sql.Date tanggalPensiun, String tanggalPayroll, String golongan, String point,
//                                      String masaKerjaTahun, String masaKerjaBulan, BigDecimal gaji, BigDecimal tunjUmk, BigDecimal tunjStruktural,
//                                      BigDecimal tunjJabStruktural, BigDecimal tunjPeralihan, String flagPayroll){
//        PayrollPensiun payrollPensiun = new PayrollPensiun();
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal faktorPensiun = new BigDecimal(1);
//        BigDecimal faktorPenghargaan = new BigDecimal(1);
//        BigDecimal hasilKaliFaktorPensiun = new BigDecimal(0);
//        BigDecimal hasilKaliFaktorPenghargaan = new BigDecimal(0);
//        BigDecimal penggantianPerumahan = new BigDecimal(0);
//        BigDecimal jumlahPensiunPenghargaan = new BigDecimal(0);
//        BigDecimal pph1 = new BigDecimal(0);
//        BigDecimal pph2 = new BigDecimal(0);
//        BigDecimal pph3 = new BigDecimal(0);
//        BigDecimal pph4 = new BigDecimal(0);
//        BigDecimal tmpPph = new BigDecimal(0);
//        BigDecimal pphFinal = new BigDecimal(0);
//        BigDecimal nettoPensiun = new BigDecimal(0);
//
//        //Akira
//        //pensiun pph1,2,3,4 di set dari awal
//        payrollPensiun.setPph1Nilai(pph1);
//        payrollPensiun.setPph2Nilai(pph2);
//        payrollPensiun.setPph3Nilai(pph3);
//        payrollPensiun.setPph4Nilai(pph4);
//        payrollPensiun.setPph1(CommonUtil.numbericFormat(pph1, "###,###"));
//        payrollPensiun.setPph2(CommonUtil.numbericFormat(pph2, "###,###"));
//        payrollPensiun.setPph3(CommonUtil.numbericFormat(pph3, "###,###"));
//        payrollPensiun.setPph4(CommonUtil.numbericFormat(pph4, "###,###"));
//
//        BigDecimal hasilKaliPensiunPenghargaan = new BigDecimal(0);
//        BigDecimal hasilKaliPensiunPenghargaan_perumahan = new BigDecimal(0);
//        String stTahunAktif = CommonUtil.convertDateToString(tanggalAktif);
//        String stTahunAktifArr[] = stTahunAktif.split("-");
//        List<ImPayrollMasaKerjaPensiunEntity> masaKerjaPensiun = null;
//        masaKerjaPensiun = masaKerjaPensiunDao.getListMasaKerjaPensiun();
//        if(masaKerjaPensiun.size() > 0){
//            for(ImPayrollMasaKerjaPensiunEntity imMasaKerjaPensiunEntity: masaKerjaPensiun){
//                if(Integer.parseInt(masaKerjaTahun) >= imMasaKerjaPensiunEntity.getTahunDari() && Integer.parseInt(masaKerjaTahun) <=
//                        imMasaKerjaPensiunEntity.getTahunSampai()){
//                    faktorPensiun = BigDecimal.valueOf(imMasaKerjaPensiunEntity.getFaktorPensiun());
//                    faktorPenghargaan = BigDecimal.valueOf(imMasaKerjaPensiunEntity.getFaktorPenghargaan());
//                }else if(Integer.parseInt(masaKerjaTahun) >= imMasaKerjaPensiunEntity.getTahunSampai()){
//                    faktorPensiun = BigDecimal.valueOf(imMasaKerjaPensiunEntity.getFaktorPensiun());
//                    faktorPenghargaan = BigDecimal.valueOf(imMasaKerjaPensiunEntity.getFaktorPenghargaan());
//                }
//            }
//        }
//
//        if(flagPayroll.equalsIgnoreCase("N")){
//            List<ItPayrollEntity> itPayrollEntity = payrollDao.getLastPayroll(nip);
//            if(itPayrollEntity.size() > 0){
//                for(ItPayrollEntity itPayrollEntity1: itPayrollEntity){
//                    if(itPayrollEntity1.getNip().equalsIgnoreCase(nip)){
//                        gaji = itPayrollEntity1.getGajiGolongan();
//                        tunjUmk = itPayrollEntity1.getTunjanganUmk();
//                        tunjStruktural = itPayrollEntity1.getTunjanganStruktural();
//                        tunjPeralihan = itPayrollEntity1.getTunjanganPeralihan();
//                        tunjJabStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                        break;
//                    }
//                }
//            }
//        }
//
//        hasil = gaji.add(tunjUmk).add(tunjStruktural).add(tunjJabStruktural).add(tunjPeralihan);
//        hasilKaliFaktorPensiun = hasil.multiply(faktorPensiun);
//        hasilKaliFaktorPenghargaan = hasil.multiply(faktorPenghargaan);
//
//        jumlahPensiunPenghargaan = hasilKaliFaktorPenghargaan.add(hasilKaliFaktorPensiun);
//
//        penggantianPerumahan = jumlahPensiunPenghargaan.multiply(BigDecimal.valueOf(15)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//
//        hasilKaliPensiunPenghargaan_perumahan = jumlahPensiunPenghargaan.add(penggantianPerumahan);
//
//        tmpPph = hasilKaliPensiunPenghargaan_perumahan;
//
//        //hitung pph 4
//        if(tmpPph.compareTo(BigDecimal.valueOf(500000000)) > 0){
//            BigDecimal nilaiPPh4 = tmpPph.subtract(BigDecimal.valueOf(500000000));
//            pph4 = nilaiPPh4.multiply(BigDecimal.valueOf(25)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//            payrollPensiun.setPph4Nilai(pph4);
//            payrollPensiun.setPph4(CommonUtil.numbericFormat(pph4, "###,###"));
//
//            tmpPph = tmpPph.subtract(nilaiPPh4);
//        }
//
//        //hitung pph 3
//        if(tmpPph.compareTo(BigDecimal.valueOf(100000000)) > 0 && tmpPph.compareTo(BigDecimal.valueOf(500000000)) <= 0 ){
//            BigDecimal nilaiPPh3 = tmpPph.subtract(BigDecimal.valueOf(100000000));
//            pph3 = nilaiPPh3.multiply(BigDecimal.valueOf(15)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//            payrollPensiun.setPph3Nilai(pph3);
//            payrollPensiun.setPph3(CommonUtil.numbericFormat(pph3, "###,###"));
//
//            tmpPph = tmpPph.subtract(nilaiPPh3);
//        }
//
//        //hitung pph 2
//        if(tmpPph.compareTo(BigDecimal.valueOf(50000000)) > 0 && tmpPph.compareTo(BigDecimal.valueOf(100000000)) <= 0 ){
//            BigDecimal nilaiPPh2 = tmpPph.subtract(BigDecimal.valueOf(50000000));
//            pph2 = nilaiPPh2.multiply(BigDecimal.valueOf(5)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//            payrollPensiun.setPph2Nilai(pph2);
//            payrollPensiun.setPph2(CommonUtil.numbericFormat(pph2, "###,###"));
//
//            tmpPph = tmpPph.subtract(nilaiPPh2);
//        }
//
//        //hitung pph 1
//        if(tmpPph.compareTo(BigDecimal.valueOf(50000000)) < 0 ){
//            pph1 = BigDecimal.ZERO;
//            payrollPensiun.setPph1Nilai(pph1);
//            payrollPensiun.setPph1(CommonUtil.numbericFormat(pph1, "###,###"));
//
//            tmpPph = BigDecimal.ZERO;
//        }
//
//        /*tmpPph = hasilKaliPensiunPenghargaan_perumahan.subtract(BigDecimal.valueOf(50000000));
//        if(tmpPph.compareTo(BigDecimal.valueOf(50000000)) >= 0){
//            pph1 = BigDecimal.valueOf(0);
//            payrollPensiun.setPph1Nilai(pph1);
//            payrollPensiun.setPph1(CommonUtil.numbericFormat(pph1, "###,###"));
//
//            //hitung pph2
//            if(tmpPph.compareTo(BigDecimal.valueOf(100000000)) < 0){
//                pph2 = tmpPph.multiply(BigDecimal.valueOf(5)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//                payrollPensiun.setPph2Nilai(pph2);
//                payrollPensiun.setPph2(CommonUtil.numbericFormat(pph2, "###,###"));
//            }else{
//                pph2 = BigDecimal.valueOf(50000000).multiply(BigDecimal.valueOf(5)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//                payrollPensiun.setPph2Nilai(pph2);
//                payrollPensiun.setPph2(CommonUtil.numbericFormat(pph2, "###,###"));
//
//                tmpPph = tmpPph.subtract(BigDecimal.valueOf(50000000));
//
//                //hitung pph3
//                if(tmpPph.compareTo(BigDecimal.valueOf(0)) >= 0){
//                    if(tmpPph.compareTo(BigDecimal.valueOf(500000000)) < 0){
//                        pph3 = tmpPph.multiply(BigDecimal.valueOf(15)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//                    }else{
//                        pph3 = BigDecimal.valueOf(100000000).multiply(BigDecimal.valueOf(15)).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//                    }
//                    tmpPph = tmpPph.subtract(BigDecimal.valueOf(100000000));
//                    payrollPensiun.setPph3Nilai(pph3);
//                    payrollPensiun.setPph3(CommonUtil.numbericFormat(pph3, "###,###"));
//                }
//            }
//        }
//
//        payrollPensiun.setPph4Nilai(pph4);
//        payrollPensiun.setPph4(CommonUtil.numbericFormat(pph4, "###,###"));*/
//
//        pphFinal = pph1.add(pph2).add(pph3).add(pph4);
//
//        payrollPensiun.setPenggantianPerumahanNilai(penggantianPerumahan);
//        payrollPensiun.setPenggantianPerumahan(CommonUtil.numbericFormat(penggantianPerumahan, "###,###"));
//
//        payrollPensiun.setPphPensiunNilai(pphFinal);
//        payrollPensiun.setPphPensiun(CommonUtil.numbericFormat(pphFinal, "###,###"));
//
//        nettoPensiun = hasilKaliPensiunPenghargaan_perumahan.subtract(pphFinal);
//        payrollPensiun.setTotalPensiun(CommonUtil.numbericFormat(hasilKaliPensiunPenghargaan_perumahan, "###,###"));
//        payrollPensiun.setTotalPensiunNilai(hasilKaliPensiunPenghargaan_perumahan);
//
//        payrollPensiun.setNip(nip);
//        payrollPensiun.setGajiGolonganNilai(gaji);
//        payrollPensiun.setTunjanganUmkNilai(tunjUmk);
//        payrollPensiun.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollPensiun.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//        payrollPensiun.setTunjanganPeralihanNilai(tunjPeralihan);
//
//        payrollPensiun.setGajiGolongan(CommonUtil.numbericFormat(gaji, "###,###"));
//        payrollPensiun.setTunjanganUmk(CommonUtil.numbericFormat(tunjUmk, "###,###"));
//        payrollPensiun.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural, "###,###"));
//        payrollPensiun.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabStruktural, "###,###"));
//        payrollPensiun.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan, "###,###"));
//        payrollPensiun.setTanggalAktif(tanggalAktif);
//        payrollPensiun.setStTanggalPayroll(tanggalPayroll);
//        payrollPensiun.setTanggalPensiun(tanggalPensiun);
//        payrollPensiun.setStTanggalAktif(CommonUtil.convertDateToString(tanggalAktif));
//        payrollPensiun.setStTanggalPensiun(CommonUtil.convertDateToString(tanggalPensiun));
//        payrollPensiun.setGolongan(golongan);
//        payrollPensiun.setPoint(point);
//        payrollPensiun.setMasaKerjaTahun(masaKerjaTahun);
//        payrollPensiun.setMasaKerjaBulan(masaKerjaBulan);
//        payrollPensiun.setFaktorPensiun(faktorPensiun.toString());
//        payrollPensiun.setFaktorPenghargaan(faktorPenghargaan.toString());
//
//        payrollPensiun.setJumlahTunjanganNilai(hasil);
//        payrollPensiun.setTunjanganPensiunNilai(hasilKaliFaktorPensiun);
//        payrollPensiun.setTunjanganPenghargaanNilai(hasilKaliFaktorPenghargaan);
//
//        payrollPensiun.setHasilNilai(hasil);
//        payrollPensiun.setHasil(CommonUtil.numbericFormat(hasil, "###,###"));
//        payrollPensiun.setHasilKaliFaktorPensiunNilai(hasilKaliFaktorPensiun);
//        payrollPensiun.setHasilKaliFaktorPensiun(CommonUtil.numbericFormat(hasilKaliFaktorPensiun, "###,###"));
//        payrollPensiun.setHasilKaliFaktorPenghargaanNilai(hasilKaliFaktorPenghargaan);
//        payrollPensiun.setHasilKaliFaktorPenghargaan(CommonUtil.numbericFormat(hasilKaliFaktorPenghargaan, "###,###"));
//        payrollPensiun.setJumlahBiayaPensiunNilai(jumlahPensiunPenghargaan);
//        payrollPensiun.setJumlahBiayaPensiun(CommonUtil.numbericFormat(jumlahPensiunPenghargaan, "###,###"));
//        payrollPensiun.setNettoPensiunNilai(nettoPensiun);
//        payrollPensiun.setNettoPensiun(CommonUtil.numbericFormat(nettoPensiun, "###,###"));
//
//        return payrollPensiun;
//    }
//
//    private BigDecimal getBpjs(String tipePegawai, String tipeDanaPensiun, BigDecimal gajiBpjs, BigDecimal gajiPensiun, String tipe){
//        BigDecimal hasil = new BigDecimal(0);
//        BigDecimal umk = new BigDecimal(0);
//        BigDecimal persen = new BigDecimal(0);
//        BigDecimal BpjsPensiun = new BigDecimal(0);
//
//        if(tipeDanaPensiun == null){
//            tipeDanaPensiun = "";
//        }
//
//        if(tipeDanaPensiun.equalsIgnoreCase("DP02")){
//            BpjsPensiun = BpjsPensiun.add(gajiPensiun);
//        }else{
//            BpjsPensiun = BpjsPensiun.add(gajiBpjs);
//        }
//
//        List<ImBranches> imBranches = null;
//        imBranches = branchDao.getListBranchById("KD01");
//        if(imBranches.size() > 0){
//            for(ImBranches imBranches1: imBranches){
//                umk = imBranches1.getUmr();
//            }
//        }
//
//        List<ImPayrollBpjsEntity> ImBpjs = null;
//        ImBpjs = payrollBpjsDao.getPersenBpjs();
//        if(ImBpjs.size() > 0){
//            // inisialisasi awal untuk variabel nilai Max
//            BigDecimal nilaiMax = new BigDecimal(0);
//
//            for(ImPayrollBpjsEntity bpjsEntity : ImBpjs){
//                if(tipe.equalsIgnoreCase("jht")){
//                    /*List<ImCompany> ImCompany = companyDao.getBiayaJabatanPersentase();
//                    if(ImCompany.size() > 0){
//                        for(ImCompany company : ImCompany){
//                            //nilaiMax = nilaiMax.add(company.getMaxBpjsTk());
//                        }
//                    }*/
//                    if(BpjsPensiun.compareTo(umk) <= 0){
//                        BpjsPensiun = umk;
//                    }
//                    persen = bpjsEntity.getBpjsJhtPersen() ;
//                }else if(tipe.equalsIgnoreCase("kesehatan")){
//                    List<ImCompany> ImCompany = companyDao.getBiayaJabatanPersentase();
//                    if(ImCompany.size() > 0){
//                        for(ImCompany company : ImCompany){
//                            nilaiMax = nilaiMax.add(company.getMaxBpjsKesehatan());
//                        }
//                    }
//                    if(BpjsPensiun.compareTo(umk) <= 0){
//                        BpjsPensiun = umk;
//                    }
//                    if(BpjsPensiun.compareTo(nilaiMax) >= 0){
//                        BpjsPensiun = nilaiMax;
//                    }
//                    persen = bpjsEntity.getBpjsKesehatanPersen() ;
//                }else if(tipe.equalsIgnoreCase("pensiun")){
//                    List<ImCompany> ImCompany = companyDao.getBiayaJabatanPersentase();
//                    if(ImCompany.size() > 0){
//                        for(ImCompany company : ImCompany){
//                            nilaiMax = nilaiMax.add(company.getMaxBpjsPensiun());
//                        }
//                    }
//                    if(BpjsPensiun.compareTo(umk) <= 0){
//                        BpjsPensiun = umk;
//                    }
//                    if(BpjsPensiun.compareTo(nilaiMax) >= 0){
//                        BpjsPensiun = nilaiMax;
//                    }
//                    persen = bpjsEntity.getBpjsPensiunPersen() ;
//                }else {
//                    persen = BigDecimal.valueOf(0) ;
//                }
//            }
//        }
//
//        hasil = BpjsPensiun.multiply(persen).divide(BigDecimal.valueOf(100));
//        return hasil;
//    }
//
//    private BigDecimal getPtkp(String statusKeluarga, int jumlahTanggungan, String gender){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollFaktorKeluargaEntity> imPayrollFaktorKeluargaEntities = null;
//
//        //jika perempuan, ptkp B0
//        if(gender.equalsIgnoreCase("P")){
//            statusKeluarga = "B";
//            jumlahTanggungan = 0;
//        }
//
//        if(statusKeluarga.equalsIgnoreCase("B") && jumlahTanggungan > 0){
//            jumlahTanggungan = 0;
//        }
//
//        if(statusKeluarga.equalsIgnoreCase("K") && jumlahTanggungan > 3){
//            jumlahTanggungan = 3;
//        }
//
//        imPayrollFaktorKeluargaEntities = payrollFaktorKeluargaDao.getData2(statusKeluarga, jumlahTanggungan);
//        if(imPayrollFaktorKeluargaEntities.size() > 0){
//            for(ImPayrollFaktorKeluargaEntity ptkp : imPayrollFaktorKeluargaEntities){
//                hasil = ptkp.getPtkp();
//            }
//        }
//        return hasil;
//    }
//
//    private BigDecimal getBiayaJabatan(BigDecimal brutoA){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImCompany> ImCompany = null;
//
//        ImCompany = companyDao.getBiayaJabatanPersentase();
//        if(ImCompany.size() > 0){
//            for(ImCompany company : ImCompany){
//                hasil = company.getBiayaJabatanPersentase();
//            }
//        }
//
//        hasil = hasil.multiply(brutoA);
//        hasil = hasil.divide(BigDecimal.valueOf(100));
//
//        if(hasil.compareTo(BigDecimal.valueOf(6000000)) >= 0){
//            hasil = BigDecimal.valueOf(6000000);
//        }
//
//        return hasil;
//    }
//
//    private BigDecimal getIuranPensiun(String branchId, String param, BigDecimal gajiPensiun, String statusKeluarga, int jumlahAnak){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollDanaPensiunEntity> ImDanaPensiun = null;
//
//        ImDanaPensiun = danaPensiunDao.getListDanaPensiun(param);
//        if(ImDanaPensiun.size() > 0){
//            for(ImPayrollDanaPensiunEntity danaPensiunEntity : ImDanaPensiun){
//                hasil = danaPensiunEntity.getPersentase();
//            }
//            if(param.equalsIgnoreCase("DP02")){
//                hasil = hasil.multiply(gajiPensiun).divide(BigDecimal.valueOf(100),2, BigDecimal.ROUND_HALF_UP);
//            }else{
//                hasil = hasil.multiply(gajiPensiun).divide(BigDecimal.valueOf(100),2, BigDecimal.ROUND_HALF_UP);
//            }
//        }
//
//
//
//        return hasil;
//    }
//
//    private BigDecimal getIuranJkmJkk(BigDecimal gaji){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImCompany> ImCompany = null;
//        BigDecimal nilai = new BigDecimal(0);
//        ImCompany = companyDao.getBiayaJabatanPersentase();
//        if(ImCompany.size() > 0){
//            for(ImCompany company : ImCompany){
//                nilai = company.getIuranPerusahaanJkmJkk();
//            }
//        }
//
//        hasil = gaji.multiply(nilai).multiply(BigDecimal.valueOf(12)) ;
//        hasil = hasil.divide(BigDecimal.valueOf(100), 0, BigDecimal.ROUND_HALF_UP);
//
//        return hasil;
//    }
//
//    private BigDecimal getPakaianDinas(String branchId, String gender, String bulan){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollBajuDinasEntity> ImBajuDinas = null;
//
//        if(bulan.equalsIgnoreCase("06")){
//            ImBajuDinas = payrollBajuDinasDao.getListBajuDinas(branchId, gender);
//            if(ImBajuDinas.size() > 0){
//                for(ImPayrollBajuDinasEntity bajuDinas : ImBajuDinas){
//                    hasil = bajuDinas.getNilai();
//                }
//            }
//        }
//
//        return hasil;
//    }
//
//    private BigDecimal getPakaianDinas(String branchId, String gender){
//        BigDecimal hasil = new BigDecimal(0);
//        List<ImPayrollBajuDinasEntity> ImBajuDinas = null;
//
//        ImBajuDinas = payrollBajuDinasDao.getListBajuDinas(branchId, gender);
//        if(ImBajuDinas.size() > 0){
//            for(ImPayrollBajuDinasEntity bajuDinas : ImBajuDinas){
//                hasil = bajuDinas.getNilai();
//            }
//        }
//
//        return hasil;
//    }
//
//    //Tunjangan Lembur
//    private BigDecimal getTunjanganLembur(String nip, String branchId, String awal, String akhir){
//        BigDecimal hasil = new BigDecimal(0);
//        List<AbsensiPegawaiEntity> absensiPegawaiEntityList = null;
//        java.sql.Date Awal = null;
//        java.sql.Date Akhir = null;
//
//        Awal = java.sql.Date.valueOf(awal);
//        Akhir = java.sql.Date.valueOf(akhir);
//
//        absensiPegawaiEntityList = absensiPegawaiDao.getDataLembur(nip, branchId, Awal, Akhir);
//        if(absensiPegawaiEntityList.size() > 0){
//            for(AbsensiPegawaiEntity lembur : absensiPegawaiEntityList){
//                hasil = hasil.add(BigDecimal.valueOf(lembur.getBiayaLembur()));
//            }
//        }
//        return hasil;
//    }


//uncommenct by ferdi, 01 des 2020
//    @Override
//    public void saveAddData(List<Payroll> payroll, Payroll bean) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//        List<PayrollPotonganLain> listOfPotonganLain = (List<PayrollPotonganLain>) session.getAttribute("listOfPotonganLain");
//        List<PayrollUpahHarian> listOfResultGajiPkwt = (List<PayrollUpahHarian>) session.getAttribute("listOfGajiPkwt");
//
//
//        int a = 0;
//        for(Payroll payroll1 : payroll){
//            a++;
//            ItPayrollEntity itPayrollEntity = new ItPayrollEntity();
//            ItPayrollPensiunEntity itPayrollPensiunEntity = new ItPayrollPensiunEntity();
//            ItPayrollPotonganLainEntity itPayrollPotonganLainEntity = new ItPayrollPotonganLainEntity();
//            ItPayrollUpahHarianEntity itPayrollUpahHarianEntity = null;
//            ItPayrollRapelEntity itPayrollRapelEntity = new ItPayrollRapelEntity();
//            ItPayrollRapelThrEntity itPayrollRapelThrEntity = new ItPayrollRapelThrEntity();
//            ItPayrollRapelJubileumEntity itPayrollRapelJubileumEntity = new ItPayrollRapelJubileumEntity();
//            List<ItPayrollRapelDetailEntity> itPayrollRapelDetailEntity = new ArrayList<>();
//            List<ItPayrollRapelLemburEntity> itPayrollRapelLemburEntity = new ArrayList<>();
//            ItPayrollRapelPendidikanEntity itPayrollRapelPendidikanEntity = new ItPayrollRapelPendidikanEntity();
//            ItPayrollRapelInsentifEntity itPayrollRapelInsentifEntity = new ItPayrollRapelInsentifEntity();
//
//
//
//
//            String idPayroll = payrollDao.getNextPayrollId(payroll1.getBulan(), payroll1.getTahun());
//            String idPayrollPph = payrollPphDao.getNextPayrollPphId(payroll1.getBulan(), payroll1.getTahun());
//
//            //Payroll Pph
//            List<PayrollPph> listOfResultPph = (List<PayrollPph>) session.getAttribute("listDataPayrollPph");
//            if(payroll1.getNip() != null && !"".equalsIgnoreCase(payroll1.getNip())){
//                if(listOfResultPph != null){
//                    for (PayrollPph payrollPph: listOfResultPph) {
//                        if(payroll1.getNip().equalsIgnoreCase(payrollPph.getNip())){
//                            ItPayrollPphEntity itPayrollPphEntity = new ItPayrollPphEntity();
//
//                            itPayrollPphEntity.setPphId(idPayrollPph);
//                            itPayrollPphEntity.setPayrollId(idPayroll);
//                            itPayrollPphEntity.setPkp(payrollPph.getPkpNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setPphGaji(payrollPph.getPphGajiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setBruto(payrollPph.getBrutoNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setReduce(payrollPph.getReduceNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setNip(payrollPph.getNip());
//                            itPayrollPphEntity.setBulan(payrollPph.getBulan());
//                            itPayrollPphEntity.setTahun(payrollPph.getTahun());
//                            itPayrollPphEntity.setPtkp(payrollPph.getPtkpNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setNetto(payrollPph.getNettoNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setBiayaJabatan(payrollPph.getBiayaJabatanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setHutangPph(payrollPph.getHutangPphNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjanganPph(payrollPph.getTunjanganPphNilaiBulan().setScale(2, RoundingMode.HALF_UP));
//
//
//                            itPayrollPphEntity.setGaji(payrollPph.getGajiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setSankhus(payrollPph.getSankhusNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjanganJabatanStruktural(payrollPph.getTunjanganJabatanStrukturalNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjanganStruktural(payrollPph.getTunjanganStrukturalNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjanganStrategis(payrollPph.getTunjanganStrategisNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjanganPeralihan(payrollPph.getTunjanganPeralihanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTotalTunjLain(payrollPph.getTotalTunjanganLainNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjTambahan(payrollPph.getTunjanganTambahanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setPemondokan(payrollPph.getPemondokanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setKomunikasi(payrollPph.getKomunikasiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTotalRlab(payrollPph.getTotalRlabNilai().setScale(2, RoundingMode.HALF_UP));
//
//
//                            itPayrollPphEntity.setIuranPegawai(payrollPph.getIuranPegawaiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjanganLembur(payrollPph.getTunjanganLemburNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setTunjanganPensiun(payrollPph.getTunjanganPensiunNilai().setScale(2, RoundingMode.HALF_UP));
//
//                            itPayrollPphEntity.setBpjsTk(payrollPph.getBpjsTkNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setBpjsKs(payrollPph.getBpjsKsNilai().setScale(2, RoundingMode.HALF_UP));
//
//                            itPayrollPphEntity.setBonus(payrollPph.getBonusNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity.setKeterangan(payrollPph.getKeterangan());
//
//                            itPayrollPphEntity.setAction(bean.getAction());
//                            itPayrollPphEntity.setFlag(bean.getFlag());
//                            itPayrollPphEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollPphEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollPphEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollPphEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                            try {
//                                payrollPphDao.addAndSave(itPayrollPphEntity);
//                            } catch (HibernateException e) {
//                                logger.error("[PayrollBoImpl.save] Error, " + e.getMessage());
//                                throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//                            }
//                            break;
//                        }
//                    }
//                }
//            }
//            //test flag jika selain payroll maka tunjangan lain tidak perlu d save
//            //tunjangan lain
//            List<PayrollTunjanganLain> listOfResultTunjLain = (List<PayrollTunjanganLain>) session.getAttribute("listDataPayrollTunjanganLain");
//            if (payroll1.getFlagPayroll().equalsIgnoreCase("Y")){
//                if (listOfResultTunjLain!=null){
//                    for (PayrollTunjanganLain payrollTunjanganLainLoop: listOfResultTunjLain){
//                        if (payroll1.getNip().equalsIgnoreCase(payrollTunjanganLainLoop.getNip())){
//                            ItPayrollTunjanganLainEntity itPayrollTunjanganLainEntity = new ItPayrollTunjanganLainEntity();
//                            String payrollTunjanganLainId = payrollTunjanganLainDao.getNextPayrollTunjanganLainId(payroll1.getBulan(), payroll1.getTahun());
//                            itPayrollTunjanganLainEntity.setTunjLainId(payrollTunjanganLainId);
//                            itPayrollTunjanganLainEntity.setPayrollId(idPayroll);
//                            itPayrollTunjanganLainEntity.setNamaTunjangan(payrollTunjanganLainLoop.getNamaTunjangan());
//                            itPayrollTunjanganLainEntity.setBulan(payroll1.getBulan());
//                            itPayrollTunjanganLainEntity.setTahun(payroll1.getTahun());
//                            if (payrollTunjanganLainLoop.getNilaiNilai()!=null){
//                                itPayrollTunjanganLainEntity.setNilai(payrollTunjanganLainLoop.getNilaiNilai().setScale(2, RoundingMode.HALF_UP));
//                            }else{
//                                itPayrollTunjanganLainEntity.setNilai(BigDecimal.valueOf(0));
//                            }
//                            itPayrollTunjanganLainEntity.setNip(payroll1.getNip());
//                            itPayrollTunjanganLainEntity.setAction(bean.getAction());
//                            itPayrollTunjanganLainEntity.setFlag(bean.getFlag());
//                            itPayrollTunjanganLainEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollTunjanganLainEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollTunjanganLainEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollTunjanganLainEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                            try {
//                                payrollTunjanganLainDao.addAndSave(itPayrollTunjanganLainEntity);
//                            } catch (HibernateException e) {
//                                logger.error("[PayrollBoImpl.save] Error, " + e.getMessage());
//                                throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//                            }
//                        }
//
//                    }
//                }
//            }
//            //save data THR
//            List<PayrollThr> listOfResultThr = (List<PayrollThr>) session.getAttribute("listDataPayrollThr");
//            if(listOfResultThr != null){
//                for (PayrollThr payrollThr: listOfResultThr) {
//                    if(payroll1.getNip().equalsIgnoreCase(payrollThr.getNip())){
//                        ItPayrollThrEntity itPayrollThrEntity = new ItPayrollThrEntity();
//                        String thrId = payrollThrDao.getNextThrId(payroll1.getTahun());
//                        itPayrollThrEntity.setThrId(thrId);
//                        itPayrollThrEntity.setPayrollId(idPayroll);
//                        itPayrollThrEntity.setGajiGolongan(payrollThr.getGajiGolonganNilai());
//                        itPayrollThrEntity.setTunjanganUmk(payrollThr.getTunjanganUmkNilai());
//                        itPayrollThrEntity.setTunjanganStruktural(payrollThr.getTunjanganStrukturalNilai());
//                        itPayrollThrEntity.setTunjanganJabatanStruktural(payrollThr.getTunjanganJabatanStrukturalNilai());
//                        itPayrollThrEntity.setTunjanganStrategis(payrollThr.getTunjanganStrategisNilai());
//                        itPayrollThrEntity.setTunjanganPeralihan(payrollThr.getTunjanganPeralihanNilai());
//                        itPayrollThrEntity.setPemondokan(payrollThr.getPemondokanNilai());
//                        itPayrollThrEntity.setKomunikasi(payrollThr.getKomunikasiNilai());
//                        itPayrollThrEntity.setTunjanganLain(payrollThr.getTunjanganLainNilai());
//                        itPayrollThrEntity.setTunjanganTambahan(payrollThr.getTunjanganTambahanNilai());
//                        itPayrollThrEntity.setTotalRlab(payrollThr.getTotalRlabNilai());
//                        itPayrollThrEntity.setThp(payrollThr.getThpNilai());
//
//                        itPayrollThrEntity.setBulanAktif(payrollThr.getBulanAktif());
//                        itPayrollThrEntity.setTotalThrBersih(payrollThr.getTotalThrNilaiBersih());
//                        itPayrollThrEntity.setPphThr(payrollThr.getPphThrNilai());
//                        itPayrollThrEntity.setTunjanganPph(payrollThr.getTunjanganPphNilai());
//
//                        itPayrollThrEntity.setTotalThr(payrollThr.getTotalThrNilai());
//
//                        itPayrollThrEntity.setAction(bean.getAction());
//                        itPayrollThrEntity.setFlag(bean.getFlag());
//                        itPayrollThrEntity.setCreatedDate(bean.getCreatedDate());
//                        itPayrollThrEntity.setCreatedWho(bean.getCreatedWho());
//                        itPayrollThrEntity.setLastUpdate(bean.getLastUpdate());
//                        itPayrollThrEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                        payrollThrDao.addAndSave(itPayrollThrEntity);
//                    }
//                }
//            }
//            //Save data Jasopr
//            List<PayrollJasopr> listOfResultJasopr = (List<PayrollJasopr>) session.getAttribute("listDataPayrollJasopr");
//            if (listOfResultJasopr.size()>0){
//                for (PayrollJasopr payrollJasopr: listOfResultJasopr){
//                    if (payroll1.getNip().equalsIgnoreCase(payrollJasopr.getNip())){
//                        ItPayrollJasoprEntity itPayrollJasoprEntity = new ItPayrollJasoprEntity();
//                        String payrollJasoprid = payrollJasprodDao.getNextJasprodId(payroll1.getTahun());
//                        itPayrollJasoprEntity.setJasoprId(payrollJasoprid);
//                        itPayrollJasoprEntity.setPayrollId(idPayroll);
//                        itPayrollJasoprEntity.setBulan(payroll1.getBulan());
//                        itPayrollJasoprEntity.setTahun(payroll1.getTahun());
//                        itPayrollJasoprEntity.setNip(payroll1.getNip());
//                        itPayrollJasoprEntity.setTotalThp(payrollJasopr.getTotalThpNilai());
//                        itPayrollJasoprEntity.setGaji(payrollJasopr.getGajiNilai());
//                        itPayrollJasoprEntity.setSankhus(payrollJasopr.getSankhusNilai());
//                        itPayrollJasoprEntity.setTunjJabatan(payrollJasopr.getTunjJabatanNilai());
//                        itPayrollJasoprEntity.setTunjStruktural(payrollJasopr.getTunjStrukturalNilai());
//                        itPayrollJasoprEntity.setTunjFungsional(payrollJasopr.getTunjFungsionalNilai());
//                        itPayrollJasoprEntity.setTunjPeralihan(payrollJasopr.getTunjPeralihanNilai());
//                        itPayrollJasoprEntity.setTunjLain(payrollJasopr.getTunjLainNilai());
//                        itPayrollJasoprEntity.setTunjTambahan(payrollJasopr.getTunjTambahanNilai());
//                        itPayrollJasoprEntity.setPemondokan(payrollJasopr.getPemondokanNilai());
//                        itPayrollJasoprEntity.setKomunikasi(payrollJasopr.getKomunikasiNilai());
//                        itPayrollJasoprEntity.setTotalRlab(payrollJasopr.getTotalRlabNilai());
//                        itPayrollJasoprEntity.setTotaljasopr(payrollJasopr.getTotaljasoprNilai());
//                        itPayrollJasoprEntity.setNettojasopr(payrollJasopr.getNettojasoprNilai());
//                        itPayrollJasoprEntity.setPphJasopr(payrollJasopr.getPphJasoprNilai());
//                        itPayrollJasoprEntity.setTunjPph(payrollJasopr.getTunjPphNilai());
//
//                        itPayrollJasoprEntity.setAction(bean.getAction());
//                        itPayrollJasoprEntity.setFlag(bean.getFlag());
//                        itPayrollJasoprEntity.setCreatedDate(bean.getCreatedDate());
//                        itPayrollJasoprEntity.setCreatedWho(bean.getCreatedWho());
//                        itPayrollJasoprEntity.setLastUpdate(bean.getLastUpdate());
//                        itPayrollJasoprEntity.setLastUpdateWho(bean.getLastUpdateWho());
//
//                        payrollJasoprDao.addAndSave(itPayrollJasoprEntity);
//                    }
//                }
//            }
//            //Save add Jubileum
//            List<PayrollJubileum> listOfResultJubileum = (List<PayrollJubileum>) session.getAttribute("listDataPayrollJubileum");
//            if (listOfResultJubileum.size()>0){
//                for (PayrollJubileum payrollJubileum: listOfResultJubileum){
//                    if (payroll1.getNip().equalsIgnoreCase(payrollJubileum.getNip())){
//                        ItPayrollJubileumEntity itPayrollJubileumEntity = new ItPayrollJubileumEntity();
//                        String jubileumId = payrollJubileumDao.getNextJubileumId(payroll1.getTahun());
//
//                        itPayrollJubileumEntity.setJubileumId(jubileumId);
//                        itPayrollJubileumEntity.setPayrollId(idPayroll);
//                        itPayrollJubileumEntity.setNip(payrollJubileum.getNip());
//                        itPayrollJubileumEntity.setNip(payrollJubileum.getNip());
//                        itPayrollJubileumEntity.setTotal(payrollJubileum.getTotalJubileumNilai());
//                        itPayrollJubileumEntity.setPphJubileum(payrollJubileum.getPphJubileumNilai());
//                        itPayrollJubileumEntity.setNettoJubileum(payrollJubileum.getNettoJubileumNilai());
//                        itPayrollJubileumEntity.setTanggalJubileum(payrollJubileum.getTanggalJubileumDate());
//                        itPayrollJubileumEntity.setKeteranganEmas(payrollJubileum.getKeteranganEmas());
//                        itPayrollJubileumEntity.setKeteranganjubileum(payrollJubileum.getKeteranganjubileum());
//
//
//                        itPayrollJubileumEntity.setGaji(payrollJubileum.getGajiNilai());
//                        itPayrollJubileumEntity.setSankhus(payrollJubileum.getSankhusNilai());
//                        itPayrollJubileumEntity.setTunjanganjabatan(payrollJubileum.getTunjanganjabatanNilai());
//                        itPayrollJubileumEntity.setTunjanganStruktural(payrollJubileum.getTunjanganStrukturalNilai());
//                        itPayrollJubileumEntity.setTunjanganFungsional(payrollJubileum.getTunjanganFungsionalNilai());
//                        itPayrollJubileumEntity.setTunjanganPeralihan(payrollJubileum.getTunjanganPeralihanNilai());
//                        itPayrollJubileumEntity.setTunjanganTambahan(payrollJubileum.getTunjanganTambahanNilai());
//                        itPayrollJubileumEntity.setPemondokan(payrollJubileum.getPemondokanNilai());
//                        itPayrollJubileumEntity.setKomunikasi(payrollJubileum.getKomunikasiNilai());
//
//                        itPayrollJubileumEntity.setAction(bean.getAction());
//                        itPayrollJubileumEntity.setFlag(bean.getFlag());
//                        itPayrollJubileumEntity.setCreatedDate(bean.getCreatedDate());
//                        itPayrollJubileumEntity.setCreatedWho(bean.getCreatedWho());
//                        itPayrollJubileumEntity.setLastUpdate(bean.getLastUpdate());
//                        itPayrollJubileumEntity.setLastUpdateWho(bean.getLastUpdateWho());
//
//                        payrollJubileumDao.addAndSave(itPayrollJubileumEntity);
//                    }
//                }
//            }
//            //Save Cuti
//            List<PayrollCuti> listOfResultCuti = (List<PayrollCuti>) session.getAttribute("listDataPayrollCuti");
//            if (listOfResultCuti.size()>0){
//                for (PayrollCuti cutiLoop: listOfResultCuti){
//                    if(payroll1.getNip().equalsIgnoreCase(cutiLoop.getNip())){
//                        ItPayrollCutiEntity itPayrollCutiEntity = new ItPayrollCutiEntity();
//                        String cutiId = payrollCutiDao.getNextCutiId(payroll1.getTahun());
//                        itPayrollCutiEntity.setPayrollCutiId(cutiId);
//                        itPayrollCutiEntity.setPayrollId(idPayroll);
//                        itPayrollCutiEntity.setTotalCuti(cutiLoop.getTotalCutiNilai());
//                        itPayrollCutiEntity.setPphCuti(cutiLoop.getPphCutiNilai());
//                        itPayrollCutiEntity.setTotalBersihCuti(cutiLoop.getTotalBersihCutiNilai());
//                        itPayrollCutiEntity.setTotalThp(cutiLoop.getTotalThpNilai());
//
//                        itPayrollCutiEntity.setGaji(cutiLoop.getGajiNilai());
//                        itPayrollCutiEntity.setSankhus(cutiLoop.getSankhusNilai());
//                        itPayrollCutiEntity.setTunjJabatan(cutiLoop.getTunjJabatanNilai());
//                        itPayrollCutiEntity.setTunjStruktural(cutiLoop.getTunjStrukturalNilai());
//                        itPayrollCutiEntity.setTunjFungsional(cutiLoop.getTunjFungsionalNilai());
//                        itPayrollCutiEntity.setTunjPeralihan(cutiLoop.getTunjPeralihanNilai());
//                        itPayrollCutiEntity.setTunjRumah(cutiLoop.getTunjRumahNilai());
//                        itPayrollCutiEntity.setTunjListrik(cutiLoop.getTunjListrikNilai());
//                        itPayrollCutiEntity.setTunjAir(cutiLoop.getTunjAirNilai());
//                        itPayrollCutiEntity.setTunjBbm(cutiLoop.getTunjBbmNilai());
//                        itPayrollCutiEntity.setTunjPph(cutiLoop.getTunjPphNilai());
//
//                        itPayrollCutiEntity.setNip(cutiLoop.getNip());
//                        itPayrollCutiEntity.setBulan(cutiLoop.getBulan());
//                        itPayrollCutiEntity.setTahun(cutiLoop.getTahun());
//                        itPayrollCutiEntity.setKeterangan(cutiLoop.getKeterangan());
//
//                        itPayrollCutiEntity.setAction(bean.getAction());
//                        itPayrollCutiEntity.setFlag(bean.getFlag());
//                        itPayrollCutiEntity.setCreatedDate(bean.getCreatedDate());
//                        itPayrollCutiEntity.setCreatedWho(bean.getCreatedWho());
//                        itPayrollCutiEntity.setLastUpdate(bean.getLastUpdate());
//                        itPayrollCutiEntity.setLastUpdateWho(bean.getLastUpdateWho());
//
//                        payrollCutiDao.addAndSave(itPayrollCutiEntity);
//                    }
//                }
//            }
//
//            //Save Insentif
//            List<PayrollInsentif> listOfResultInsentif = (List<PayrollInsentif>) session.getAttribute("listDataPayrollInsentif");
//            if (listOfResultInsentif.size()>0){
//                for (PayrollInsentif insentifLoop: listOfResultInsentif){
//                    if(payroll1.getNip().equalsIgnoreCase(insentifLoop.getNip())){
//                        ItPayrollInsentifEntity insentifEntity = new ItPayrollInsentifEntity();
//                        String insentifId = payrollInsentifDao.getNextInsentifDao(payroll1.getTahun());
//                        insentifEntity.setInsentifId(insentifId);
//                        insentifEntity.setPayrollId(idPayroll);
//                        insentifEntity.setNip(insentifLoop.getNip());
//                        insentifEntity.setBulan(payroll1.getBulan());
//                        insentifEntity.setTahun(payroll1.getTahun());
//
//                        insentifEntity.setTotalInsentif(insentifLoop.getTotalInsentifNilai());
//                        insentifEntity.setTotalInsentifBersih(insentifLoop.getTotalInsentifBersihNilai());
//                        insentifEntity.setPphInsentif(insentifLoop.getPphInsentifNilai());
//                        insentifEntity.setTotalThp(insentifLoop.getTotalThpNilai());
//
//                        insentifEntity.setGaji(insentifLoop.getGajiNilai());
//                        insentifEntity.setSankhus(insentifLoop.getTotalThpNilai());
//                        insentifEntity.setTunjJabatan(insentifLoop.getTunjJabatanNilai());
//                        insentifEntity.setTunjStrutural(insentifLoop.getTunjStruturalNilai());
//                        insentifEntity.setTunjFungsional(insentifLoop.getTunjFungsionalNilai());
//                        insentifEntity.setTunjPeralihan(insentifLoop.getTunjPeralihanNilai());
//                        insentifEntity.setTunjTambahan(insentifLoop.getTunjTambahanNilai());
//                        insentifEntity.setTunjRumah(insentifLoop.getTunjRumahNilai());
//                        insentifEntity.setTunjListrik(insentifLoop.getTunjListrikNilai());
//                        insentifEntity.setTunjAir(insentifLoop.getTunjAirNilai());
//                        insentifEntity.setTunjBbm(insentifLoop.getTunjBbmNilai());
//                        insentifEntity.setTunjPph(insentifLoop.getTunjPphNilai());
//
//                        insentifEntity.setAction(bean.getAction());
//                        insentifEntity.setFlag(bean.getFlag());
//                        insentifEntity.setCreatedDate(bean.getCreatedDate());
//                        insentifEntity.setCreatedWho(bean.getCreatedWho());
//                        insentifEntity.setLastUpdate(bean.getLastUpdate());
//                        insentifEntity.setLastUpdateWho(bean.getLastUpdateWho());
//
//                        payrollInsentifDao.addAndSave(insentifEntity);
//                    }
//                }
//            }
//
//            //save payrollPensiun
//            List<PayrollPensiun> listOfResultPensiun = (List<PayrollPensiun>) session.getAttribute("listDataPayrollPensiun");
//            if (listOfResultPensiun.size()>0){
//                for (PayrollPensiun pensiunLoop: listOfResultPensiun){
//                    if(payroll1.getNip().equalsIgnoreCase(pensiunLoop.getNip())){
//                        ItPayrollPensiunEntity payrollPensiunEntity = new ItPayrollPensiunEntity();
//                        String pensiunId = payrollPensiunDao.getNextPayrollPensiunId(payroll1.getTahun());
//                        payrollPensiunEntity.setPensiunId(pensiunId);
//                        payrollPensiunEntity.setPayrollId(idPayroll);
//                        payrollPensiunEntity.setNip(pensiunLoop.getNip());
//
//                        payrollPensiunEntity.setTanggalAktif(pensiunLoop.getTanggalAktif());
//                        payrollPensiunEntity.setTanggalPensiun(pensiunLoop.getTanggalPensiun());
//
//                        payrollPensiunEntity.setGajiGolongan(pensiunLoop.getGajiGolonganNilai());
//                        payrollPensiunEntity.setTunjanganUmk(pensiunLoop.getTunjanganUmkNilai());
//                        payrollPensiunEntity.setTunjanganJabatanStruktural(pensiunLoop.getTunjanganJabatanStrukturalNilai());
//                        payrollPensiunEntity.setTunjanganStruktural(pensiunLoop.getTunjanganJabatanStrukturalNilai());
//                        payrollPensiunEntity.setTunjanganPeralihan(pensiunLoop.getTunjanganPeralihanNilai());
//
//                        payrollPensiunEntity.setJumlahBiayaPensiun(pensiunLoop.getTotalPensiunNilai());
//                        payrollPensiunEntity.setNettoPensiun(pensiunLoop.getNettoPensiunNilai());
//                        payrollPensiunEntity.setPphPensiun(pensiunLoop.getPphPensiunNilai());
//
//                        payrollPensiunEntity.setAction(bean.getAction());
//                        payrollPensiunEntity.setFlag(bean.getFlag());
//                        payrollPensiunEntity.setCreatedDate(bean.getCreatedDate());
//                        payrollPensiunEntity.setCreatedWho(bean.getCreatedWho());
//                        payrollPensiunEntity.setLastUpdate(bean.getLastUpdate());
//                        payrollPensiunEntity.setLastUpdateWho(bean.getLastUpdateWho());
//
//                        payrollPensiunDao.addAndSave(payrollPensiunEntity);
//                    }
//                }
//            }
//
//            //data Pegawai
//            itPayrollEntity.setPayrollId(idPayroll);
//            itPayrollEntity.setBulan(payroll1.getBulan());
//            itPayrollEntity.setTahun(payroll1.getTahun());
//            itPayrollEntity.setNip(payroll1.getNip());
//            itPayrollEntity.setNama(payroll1.getNama());
//            itPayrollEntity.setGender(payroll1.getGender());
//            itPayrollEntity.setMasaKerja(payroll1.getMasaKerjaTahun());
//            itPayrollEntity.setPositionId(payroll1.getPositionId());
//            itPayrollEntity.setPositionName(payroll1.getPositionName());
//            itPayrollEntity.setGolonganId(payroll1.getGolonganId());
//            itPayrollEntity.setGolonganName(payroll1.getGolonganName());
//            itPayrollEntity.setDepartmentId(payroll1.getDepartmentId());
//            itPayrollEntity.setDepartmentName(payroll1.getDepartmentName());
//            itPayrollEntity.setBranchId(payroll1.getBranchId());
//            itPayrollEntity.setBranchName(payroll1.getBranchName());
//            itPayrollEntity.setPoint(payroll1.getPoint());
//            itPayrollEntity.setStatusKeluarga(payroll1.getStatusKeluarga());
//            itPayrollEntity.setJumlahAnak(payroll1.getJumlahAnak());
//            itPayrollEntity.setFaktorKeluargaId(payroll1.getFaktorKeluargaId());
//            itPayrollEntity.setGolonganDapenId(payroll1.getGolonganDapenId());
//            itPayrollEntity.setGolonganDapenName(payroll1.getGolonganDapenName());
//
//            itPayrollEntity.setMasaKerjaGol(payroll1.getMasaKerjaGol());
//
//            itPayrollEntity.setGajiPensiun(payroll1.getGajiPensiunNilai());
//
//            /*itPayrollEntity.setMultifikator(payroll1.getMultifikator());
//            itPayrollEntity.setGajiPensiunBpjs(payroll1.getGajiBpjsNilai());*/
//            //Komponen A
//            itPayrollEntity.setGajiGolongan(payroll1.getGajiGolonganNilai());
//            itPayrollEntity.setTunjanganUmk(payroll1.getTunjanganUmkNilai()); //Santunan Khusus
//            itPayrollEntity.setTunjanganStruktural(payroll1.getTunjanganStrukturalNilai());
//            itPayrollEntity.setTunjanganPeralihan(payroll1.getTunjanganPeralihanNilai());
//            itPayrollEntity.setTunjanganJabatanStruktural(payroll1.getTunjanganJabatanStrukturalNilai());
//            itPayrollEntity.setTunjanganStrategis(payroll1.getTunjanganStrategisNilai());
//            itPayrollEntity.setTunjanganLain(payroll1.getTunjanganLainNilai());
//            itPayrollEntity.setTunjanganTambahan(payroll1.getTunjanganTambahanNilai());
//            itPayrollEntity.setPemondokan(payroll1.getPemondokanNilai());
//            itPayrollEntity.setKomunikasi(payroll1.getKomunikasiNilai());
//            itPayrollEntity.setTunjanganLembur(payroll1.getTunjanganLemburNilai());
//            itPayrollEntity.setTambahanLain(payroll1.getTambahanLainNilai());
//            itPayrollEntity.setTotalA(payroll1.getTotalANilai());
//
//
//            //Komponen B
//            //tunjangan RLAB
//            itPayrollEntity.setTunjanganRumah(payroll1.getTunjanganRumahNilai());
//            itPayrollEntity.setTunjanganListrik(payroll1.getTunjanganListrikNilai());
//            itPayrollEntity.setTunjanganAir(payroll1.getTunjanganAirNilai());
//            itPayrollEntity.setTunjanganBBM(payroll1.getTunjanganBBMNilai());
//            itPayrollEntity.setTotalRlab(payroll1.getTotalRlabNilai());
//            //tunjangan lainnya
//            itPayrollEntity.setTunjanganDapen(payroll1.getTunjanganDapenNilai());
//            itPayrollEntity.setTunjanganBpjsKs(payroll1.getTunjanganBpjsKsNilai());
//            itPayrollEntity.setTunjanganBpjsTk(payroll1.getTunjanganBpjsTkNilai());
//            itPayrollEntity.setTunjanganPph(payroll1.getTunjanganPphNilai());
//            itPayrollEntity.setTunjanganSosialLain(payroll1.getTunjanganSosialLainNilai());
//            itPayrollEntity.setTotalB(payroll1.getTotalBNilai());
//
//            //Komponen C
//            itPayrollEntity.setIuranDapenPeg(payroll1.getIuranDapenPegNilai());
//            itPayrollEntity.setIuranDapenPersh(payroll1.getIuranDapenPershNilai());
//            itPayrollEntity.setIuranBpjsTkKary(payroll1.getIuranBpjsTkKaryNilai());
//            itPayrollEntity.setIuranBpjsTkPers(payroll1.getIuranBpjsTkPersNilai());
//            itPayrollEntity.setIuranBpjsKsKary(payroll1.getIuranBpjsKsKaryNilai());
//            itPayrollEntity.setIuranBpjsKsPers(payroll1.getIuranBpjsKsPersNilai());
//            itPayrollEntity.setPphGaji(payroll1.getPphGajiNilai());
//            itPayrollEntity.setTotalPotonganLain(payroll1.getTotalPotonganLainNilai());
//            itPayrollEntity.setIuranYpks(payroll1.getIuranYpksNilai());
//            itPayrollEntity.setTotalC(payroll1.getTotalCNilai());
//
//            //Komponen D
//            itPayrollEntity.setLainLain(payroll1.getLainLainNilai());
//            itPayrollEntity.setIdLainLain(payroll1.getIdLainLain());
//
//            //Rincian C
//            itPayrollEntity.setKopkar(payroll1.getKopkarNilai());
//            itPayrollEntity.setIuranSp(payroll1.getIuranSpNilai());
//            itPayrollEntity.setIuranPiikb(payroll1.getIuranPiikbNilai());
//            itPayrollEntity.setBankBri(payroll1.getBankBriNilai());
//            itPayrollEntity.setBankMandiri(payroll1.getBankMandiriNilai());
//            itPayrollEntity.setInfaq(payroll1.getInfaqNilai());
//            itPayrollEntity.setPerkesDanObat(payroll1.getPerkesDanObatNilai());
//            itPayrollEntity.setListrik(payroll1.getListrikNilai());
//            itPayrollEntity.setIuranProfesi(payroll1.getIuranProfesiNilai());
//            itPayrollEntity.setPotonganLain(payroll1.getPotonganLainNilai());
//
//            //pph 21
//            itPayrollEntity.setTotalLain11Bulan(payroll1.getTotalLain11BulanNilai());
//            itPayrollEntity.setPph11Bulan(payroll1.getPph11BulanNilai());
//            itPayrollEntity.setPphSeharusnya(payroll1.getPphSeharusnyaNilai());
//            itPayrollEntity.setSelisihPph(payroll1.getSelisihPphNilai());
//
//            //macam peralihan
//            itPayrollEntity.setPeralihanGapok(payroll1.getPeralihanGapok());
//            itPayrollEntity.setPeralihanSankhus(payroll1.getPeralihanSankhus());
//            itPayrollEntity.setPeralihanTunjangan(payroll1.getPeralihanTunjangan());
//
//            itPayrollEntity.setFlagPayroll(payroll1.getFlagPayroll());
//            itPayrollEntity.setFlagCutiTahunan(payroll1.getFlagCutiTahunan());
//            itPayrollEntity.setFlagCutiPanjang(payroll1.getFlagCutiPanjang());
//            itPayrollEntity.setFlagThr(payroll1.getFlagThr());
//            itPayrollEntity.setFlagJasprod(payroll1.getFlagJasprod());
//            itPayrollEntity.setFlagJubileum(payroll1.getFlagJubileum());
//            itPayrollEntity.setFlagPensiun(payroll1.getFlagPensiun());
//            if(payroll1.getFlagInsentif() != null){
//                itPayrollEntity.setFlagInsentif(payroll1.getFlagInsentif());
//            }else{
//                itPayrollEntity.setFlagInsentif("N");
//            }
//
//            itPayrollEntity.setTotalRapel(payroll1.getTotalRapelNilai());
//            itPayrollEntity.setTotalThr(payroll1.getTotalThrNilai());
//            itPayrollEntity.setTotalJasProd(payroll1.getTotalJasProdNilai());
//            if(payroll1.getTotalInsentifNilai() != null){
//                itPayrollEntity.setTotalInsentif(payroll1.getTotalInsentifNilai());
//            }else{
//                itPayrollEntity.setTotalInsentif(BigDecimal.valueOf(0));
//            }
//            itPayrollEntity.setTotalPensiun(payroll1.getTotalPensiunNilai());
//            itPayrollEntity.setTotalJubileum(payroll1.getTotalKaliJubileumNilai());
//            itPayrollEntity.setGajiBersih(payroll1.getTotalGajiBersihNilai());
//            itPayrollEntity.setProporsiGaji(payroll1.getProporsiGaji());
//
//            itPayrollEntity.setAction(bean.getAction());
//            itPayrollEntity.setFlag(bean.getFlag());
//            itPayrollEntity.setCreatedDate(bean.getCreatedDate());
//            itPayrollEntity.setCreatedWho(bean.getCreatedWho());
//            itPayrollEntity.setLastUpdate(bean.getLastUpdate());
//            itPayrollEntity.setLastUpdateWho(bean.getLastUpdateWho());
//
//            if (CommonConstant.ID_KANPUS.equalsIgnoreCase(payroll1.getBranchId())){
//                itPayrollEntity.setApprovalUnitFlag("Y");
//                itPayrollEntity.setApprovalUnitId(bean.getCreatedWho());
//                itPayrollEntity.setApprovalUnitDate(bean.getCreatedDate());
//                itPayrollEntity.setApprovalUnitName(bean.getCreatedWho());
//            }
//
//            payrollDao.addAndSave(itPayrollEntity);
//
//            /*//Payroll Jasprod
//            if(payroll1.getNip() != null && !"".equalsIgnoreCase(payroll1.getNip())){
//                if(listOfResultJasprod != null){
//                    for (PayrollJasprod payrollJasprod: listOfResultJasprod) {
//                        if(payroll1.getNip().equalsIgnoreCase(payrollJasprod.getNip())){
//                            itPayrollJasprodEntity.setPayrollId(idPayroll);
//
//                            itPayrollJasprodEntity.setGajiGolonganNilai(payrollJasprod.getGajiGolonganNilai());
//                            if(itPayrollJasprodEntity.getGajiGolonganNilai() == null){
//                                itPayrollJasprodEntity.setGajiGolonganNilai(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setTunjanganUmkNilai(payrollJasprod.getTunjanganUmkNilai());
//                            if(itPayrollJasprodEntity.getTunjanganUmkNilai() == null){
//                                itPayrollJasprodEntity.setTunjanganUmkNilai(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setTunjanganStrukturalNilai(payrollJasprod.getTunjanganStrukturalNilai());
//                            if(itPayrollJasprodEntity.getTunjanganStrukturalNilai() == null){
//                                itPayrollJasprodEntity.setTunjanganStrukturalNilai(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setTunjanganJabStrukturalNilai(payrollJasprod.getTunjanganJabStrukturalNilai());
//                            if(itPayrollJasprodEntity.getTunjanganJabStrukturalNilai() == null){
//                                itPayrollJasprodEntity.setTunjanganJabStrukturalNilai(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setTunjPeralihanNilai(payrollJasprod.getTunjPeralihanNilai());
//                            if(itPayrollJasprodEntity.getTunjPeralihanNilai() == null){
//                                itPayrollJasprodEntity.setTunjPeralihanNilai(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setTunjanganStrategisNilai(payrollJasprod.getTunjanganStrategisNilai());
//                            if(itPayrollJasprodEntity.getTunjanganStrategisNilai() == null){
//                                itPayrollJasprodEntity.setTunjanganStrategisNilai(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setGajiBruto(payrollJasprod.getGajiBrutoNilai());
//                            if(itPayrollJasprodEntity.getGajiBruto() == null){
//                                itPayrollJasprodEntity.setGajiBruto(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setMasaKerja(payrollJasprod.getMasaKerja());
//                            itPayrollJasprodEntity.setNilaiSmk(BigDecimal.valueOf(payrollJasprod.getNilaiSmk()));
//
//                            itPayrollJasprodEntity.setGajiMasaKerja(payrollJasprod.getGajiMasaKerjaNilai());
//                            if(itPayrollJasprodEntity.getGajiMasaKerja() == null){
//                                itPayrollJasprodEntity.setGajiMasaKerja(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setFaktorKali(payrollJasprod.getFaktor());
//                            itPayrollJasprodEntity.setPersenSmk(BigDecimal.valueOf(payrollJasprod.getPersenSmk()));
//
//                            //gaji x faktor
//                            itPayrollJasprodEntity.setGajiMasaKerjaFaktor(payrollJasprod.getGajiMasaKerjaFaktorNilai());
//                            if(itPayrollJasprodEntity.getGajiMasaKerjaFaktor() == null){
//                                itPayrollJasprodEntity.setGajiMasaKerjaFaktor(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setGajiMasaKerjaFaktorSmk(payrollJasprod.getPerhitunganNilai());
//                            if(itPayrollJasprodEntity.getGajiMasaKerjaFaktorSmk() == null){
//                                itPayrollJasprodEntity.setGajiMasaKerjaFaktorSmk(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setTambahan(payrollJasprod.getTambahanNilai());
//                            if(itPayrollJasprodEntity.getTambahan() == null){
//                                itPayrollJasprodEntity.setTambahan(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setBruto(payrollJasprod.getJasprodNilai());
//                            if(itPayrollJasprodEntity.getBruto() == null){
//                                itPayrollJasprodEntity.setBruto(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setSelisihTotalGajiSmkFaktor(payrollJasprod.getSelisihGajiSmkFaktor());
//                            if(itPayrollJasprodEntity.getSelisihTotalGajiSmkFaktor() == null){
//                                itPayrollJasprodEntity.setSelisihTotalGajiSmkFaktor(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setJumlahPersenSmk(payrollJasprod.getJumlahPersenSmk());
//                            if(itPayrollJasprodEntity.getJumlahPersenSmk() == null){
//                                itPayrollJasprodEntity.setJumlahPersenSmk(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setPphJasprod(payrollJasprod.getPphJasprod());
//                            if(itPayrollJasprodEntity.getPphJasprod() == null){
//                                itPayrollJasprodEntity.setPphJasprod(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setPotKoperasi(BigDecimal.valueOf(0));
//                            itPayrollJasprodEntity.setPotTaliAsih(BigDecimal.valueOf(0));
//                            itPayrollJasprodEntity.setPotLain(BigDecimal.valueOf(0));
//
//                            itPayrollJasprodEntity.setFinalJasprodBersih(payrollJasprod.getFinalJasprod());
//                            if(itPayrollJasprodEntity.getFinalJasprodBersih() == null){
//                                itPayrollJasprodEntity.setFinalJasprodBersih(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollJasprodEntity.setAction(bean.getAction());
//                            itPayrollJasprodEntity.setFlag(bean.getFlag());
//                            itPayrollJasprodEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollJasprodEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollJasprodEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollJasprodEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                            break;
//                        }
//                    }
//                }
//            }*/
//
//            /*//Payroll Insentif
//            if(payroll1.getNip() != null && !"".equalsIgnoreCase(payroll1.getNip())){
//                if(listOfResultInsentif != null){
//                    for (PayrollInsentif payrollInsentif: listOfResultInsentif) {
//                        if(payroll1.getNip().equalsIgnoreCase(payrollInsentif.getNip())){
//                            itPayrollInsentifEntity.setPayrollId(idPayroll);
//                            //itPayrollInsentifEntity.setNip(payroll1.getNip());
//
//                            itPayrollInsentifEntity.setGajiGolongan(payrollInsentif.getGajiGolonganNilai());
//                            if(itPayrollInsentifEntity.getGajiGolongan() == null){
//                                itPayrollInsentifEntity.setGajiGolongan(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setTunjanganUmk(payrollInsentif.getTunjanganUmkNilai());
//                            if(itPayrollInsentifEntity.getTunjanganUmk() == null){
//                                itPayrollInsentifEntity.setTunjanganUmk(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setTunjanganStruktural(payrollInsentif.getTunjanganStrukturalNilai());
//                            if(itPayrollInsentifEntity.getTunjanganStruktural() == null){
//                                itPayrollInsentifEntity.setTunjanganStruktural(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setTunjanganJabatanStruktural(payrollInsentif.getTunjanganJabatanStrukturalNilai());
//                            if(itPayrollInsentifEntity.getTunjanganJabatanStruktural() == null){
//                                itPayrollInsentifEntity.setTunjanganJabatanStruktural(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setTunjanganPeralihan(payrollInsentif.getTunjanganPeralihanNilai());
//                            if(itPayrollInsentifEntity.getTunjanganPeralihan() == null){
//                                itPayrollInsentifEntity.setTunjanganPeralihan(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setTunjanganStrategis(payrollInsentif.getTunjanganStrategisNilai());
//                            if(itPayrollInsentifEntity.getTunjanganStrategis() == null){
//                                itPayrollInsentifEntity.setTunjanganStrategis(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setJumlahBruto(payrollInsentif.getJumlahBrutoNilai());
//                            if(itPayrollInsentifEntity.getJumlahBruto() == null){
//                                itPayrollInsentifEntity.setJumlahBruto(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setMasaKerja(payrollInsentif.getMasaKerja());
//                            itPayrollInsentifEntity.setPotonganinsentif(payrollInsentif.getPotonganinsentifNilai());
//
//                            itPayrollInsentifEntity.setPotonganinsentifIndividu(payrollInsentif.getPotonganinsentifIndividuNilai());
//                            if(itPayrollInsentifEntity.getPotonganinsentifIndividu() == null){
//                                itPayrollInsentifEntity.setPotonganinsentifIndividu(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setSmkStandart(payrollInsentif.getSmkStandart());
//                            itPayrollInsentifEntity.setSmkHuruf(payrollInsentif.getSmkHuruf());
//                            itPayrollInsentifEntity.setSmkAngka(payrollInsentif.getSmkAngka());
//                            itPayrollInsentifEntity.setTahun(payrollInsentif.getTahun());
//
//                            itPayrollInsentifEntity.setInsentifyangDiterima(payrollInsentif.getInsentifyangDiterimaNilai());
//                            if(itPayrollInsentifEntity.getInsentifyangDiterima() == null){
//                                itPayrollInsentifEntity.setInsentifyangDiterima(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setJumlahPph(payrollInsentif.getJumlahPph());
//                            if(itPayrollInsentifEntity.getJumlahPph() == null){
//                                itPayrollInsentifEntity.setJumlahPph(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setJumlahInsentif(payrollInsentif.getJumlahInsentif());
//                            if(itPayrollInsentifEntity.getJumlahInsentif() == null){
//                                itPayrollInsentifEntity.setJumlahInsentif(BigDecimal.valueOf(0));
//                            }
//
//                            itPayrollInsentifEntity.setPotPph(BigDecimal.valueOf(0));
//                            itPayrollInsentifEntity.setBulanMulai(payrollInsentif.getBulanMulai());
//                            itPayrollInsentifEntity.setBulanSampai(payrollInsentif.getBulanSampai());
//                            itPayrollInsentifEntity.setTahunInsentif(payrollInsentif.getTahunInsentif());
//
//                            itPayrollInsentifEntity.setAction(bean.getAction());
//                            itPayrollInsentifEntity.setFlag(bean.getFlag());
//                            itPayrollInsentifEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollInsentifEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollInsentifEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollInsentifEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                            break;
//                        }
//                    }
//                }
//            }*/
//
//            /*//Payroll Rapel
//            if(payroll1.getNip() != null && !"".equalsIgnoreCase(payroll1.getNip())){
//                if(listOfResultRapel != null){
//                    for (PayrollRapel payrollRapel: listOfResultRapel) {
//                        if(payroll1.getNip().equalsIgnoreCase(payrollRapel.getNip())){
//                            itPayrollRapelEntity.setPayrollId(idPayroll);
//                            itPayrollRapelEntity.setTanggalAwal(payrollRapel.getTanggalAwal());
//                            itPayrollRapelEntity.setTanggalAkhir(payrollRapel.getTanggalAkhir());
//
//                            itPayrollRapelEntity.setGajiGolonganLama(payrollRapel.getGajiGolonganLamaNilai());
//                            itPayrollRapelEntity.setTunjanganUmkLama(payrollRapel.getTunjanganUmkLamaNilai());
//                            itPayrollRapelEntity.setTunjanganStrukturalLama(payrollRapel.getTunjanganStrukturalLamaNilai());
//                            itPayrollRapelEntity.setTunjanganJabatanStrukturalLama(payrollRapel.getTunjanganJabatanStrukturalLamaNilai());
//                            itPayrollRapelEntity.setTunjanganStrategisLama(payrollRapel.getTunjanganStrategisLamaNilai());
//                            itPayrollRapelEntity.setTunjanganAirListrikLama(payrollRapel.getTunjanganAirListrikLamaNilai());
//                            itPayrollRapelEntity.setTunjanganPerumahanLama(payrollRapel.getTunjanganPerumahanLamaNilai());
//
//                            itPayrollRapelEntity.setGajiGolonganBaru(payrollRapel.getGajiGolonganBaruNilai());
//                            itPayrollRapelEntity.setTunjanganUmkBaru(payrollRapel.getTunjanganUmkBaruNilai());
//                            itPayrollRapelEntity.setTunjanganStrukturalBaru(payrollRapel.getTunjanganStrukturalBaruNilai());
//                            itPayrollRapelEntity.setTunjanganJabatanStrukturalBaru(payrollRapel.getTunjanganJabatanStrukturalBaruNilai());
//                            itPayrollRapelEntity.setTunjanganStrategisBaru(payrollRapel.getTunjanganStrategisBaruNilai());
//                            itPayrollRapelEntity.setTunjanganAirListrikBaru(payrollRapel.getTunjanganAirListrikBaruNilai());
//                            itPayrollRapelEntity.setTunjanganPerumahanBaru(payrollRapel.getTunjanganPerumahanBaruNilai());
//
//                            itPayrollRapelEntity.setSelisihGajiGolongan(payrollRapel.getGajiGolonganNilai());
//                            itPayrollRapelEntity.setSelisihTunjanganUmk(payrollRapel.getTunjanganUmkNilai());
//                            itPayrollRapelEntity.setSelisihTunjanganStruktural(payrollRapel.getTunjanganStrukturalNilai());
//                            itPayrollRapelEntity.setSelisihTunjanganJabatanStruktural(payrollRapel.getTunjanganJabatanStrukturalNilai());
//                            itPayrollRapelEntity.setSelisihTunjanganStrategis(payrollRapel.getTunjanganStrategisNilai());
//                            itPayrollRapelEntity.setSelisihTunjanganAirListrik(payrollRapel.getTunjanganAirListrikNilai());
//                            itPayrollRapelEntity.setSelisihTunjanganPerumahan(payrollRapel.getTunjanganPerumahanNilai());
//
//                            itPayrollRapelEntity.setGolonganIdLama(payrollRapel.getGolonganIdLama());
//                            itPayrollRapelEntity.setGolonganIdBaru(payrollRapel.getGolonganIdBaru());
//                            itPayrollRapelEntity.setPointLama(payrollRapel.getPointLama());
//                            itPayrollRapelEntity.setPointBaru(payrollRapel.getPointBaru());
//                            itPayrollRapelEntity.setJumlahBlnRapel(payrollRapel.getJumlahBulan());
//
//                            itPayrollRapelEntity.setTotalRapelInsentif(payrollRapel.getTotalRapelInsentifNilai());
//                            itPayrollRapelEntity.setTotalRapelPendidikan(payrollRapel.getTotalRapelPendidikanNilai());
//                            itPayrollRapelEntity.setTotalRapelThr(payrollRapel.getTotalRapelThrNilai());
//                            itPayrollRapelEntity.setTotalRapelJubileum(payrollRapel.getTotalRapelJubileumNilai());
//                            itPayrollRapelEntity.setTotalRapelLembur(payrollRapel.getTotalRapelLemburNilai());
//
//                            itPayrollRapelEntity.setTotalRapel(payrollRapel.getTotalRapelNilai());
//                            itPayrollRapelEntity.setTotalRapelBulan(payrollRapel.getTotalRapelBulanNilai());
//                            itPayrollRapelEntity.setTotalRapelFinal(payrollRapel.getTotalRapelFinalNilai());
//
//                            itPayrollRapelEntity.setPphRapel(payrollRapel.getPphRapelNilai());
//                            itPayrollRapelEntity.setPphRapelPribadi(payrollRapel.getPphRapelPribadiNilai());
//                            itPayrollRapelEntity.setTunjanganPph(payrollRapel.getTunjanganPphNilai());
//                            itPayrollRapelEntity.setRapelBersih(payrollRapel.getRapelBersihNilai());
//
//                            itPayrollRapelEntity.setAction(bean.getAction());
//                            itPayrollRapelEntity.setFlag(bean.getFlag());
//                            itPayrollRapelEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollRapelEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollRapelEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollRapelEntity.setLastUpdateWho(bean.getLastUpdateWho());
//
//                            String rapelId = payrollRapelDao.getNextRapelDao(payroll1.getTahun());
//                            itPayrollRapelEntity.setRapelId(rapelId);
//
//                            // Rapel Lembur
//                            for (PayrollRapelLembur payrollRapelLembur: listOfResultRapelLembur) {
//                                ItPayrollRapelLemburEntity rapelLembur = new ItPayrollRapelLemburEntity();
//                                if (payroll1.getNip().equalsIgnoreCase(payrollRapelLembur.getNip())) {
//
//                                    rapelLembur.setRapelLemburId(payrollRapelLemburDao.getNextRapelLemburDao(payroll1.getTahun()));
//                                    rapelLembur.setRapelId(rapelId);
//                                    rapelLembur.setAbsensiPegawaiId(payrollRapelLembur.getAbsensiPegawaiId());
//                                    rapelLembur.setNip(payrollRapelLembur.getNip());
//                                    rapelLembur.setTanggal(payrollRapelLembur.getTanggal());
//                                    rapelLembur.setGajiGolonganLama(payrollRapelLembur.getGajiGolonganLama());
//                                    rapelLembur.setTunjanganUmkLama(payrollRapelLembur.getTunjanganUmkLama());
//                                    rapelLembur.setTunjanganPeralihanLama(payrollRapelLembur.getTunjanganPeralihanLama());
//
//                                    rapelLembur.setLamaLembur(payrollRapelLembur.getLamaLembur());
//                                    rapelLembur.setJamLembur(payrollRapelLembur.getJamLembur());
//                                    rapelLembur.setBiayaLemburLama(payrollRapelLembur.getBiayaLemburLama());
//                                    rapelLembur.setTipePegawai(payrollRapelLembur.getTipePegawai());
//                                    rapelLembur.setFaktorPengali(payrollRapelLembur.getFaktorPengali());
//
//                                    rapelLembur.setGajiGolonganBaru(payrollRapelLembur.getGajiGolonganBaru());
//                                    rapelLembur.setTunjanganUmkBaru(payrollRapelLembur.getTunjanganUmkBaru());
//                                    rapelLembur.setTunjanganPeralihanBaru(payrollRapelLembur.getTunjanganPeralihanBaru());
//                                    rapelLembur.setBiayaLemburBaru(payrollRapelLembur.getBiayaLemburBaru());
//                                    rapelLembur.setSelisihBiayaLemburBaru(payrollRapelLembur.getSelisihBiayaLemburBaru());
//
//                                    rapelLembur.setAction(bean.getAction());
//                                    rapelLembur.setFlag(bean.getFlag());
//                                    rapelLembur.setCreatedDate(bean.getCreatedDate());
//                                    rapelLembur.setCreatedWho(bean.getCreatedWho());
//                                    rapelLembur.setLastUpdate(bean.getLastUpdate());
//                                    rapelLembur.setLastUpdateWho(bean.getLastUpdateWho());
//
//                                    itPayrollRapelLemburEntity.add(rapelLembur);
//                                }
//                            }
//
//                            // Rapel Detail
//                            for (PayrollRapelDetail payrollRapelDetail: listOfResultRapelDetail) {
//                                ItPayrollRapelDetailEntity rapelDetail = new ItPayrollRapelDetailEntity();
//                                if (payroll1.getNip().equalsIgnoreCase(payrollRapelDetail.getNip())) {
//
//                                    rapelDetail.setRapelDetailId(payrollRapelDetailDao.getNextRapelDetailDao(payroll1.getTahun()));
//                                    rapelDetail.setBulan(payrollRapelDetail.getRapelBulan());
//                                    rapelDetail.setTahun(payrollRapelDetail.getRapelTahun());
//                                    rapelDetail.setRapelId(rapelId);
//                                    rapelDetail.setNip(payrollRapelDetail.getNip());
//                                    rapelDetail.setGolonganId(payrollRapelDetail.getGolonganId());
//                                    rapelDetail.setPoint(payrollRapelDetail.getPoint());
//                                    rapelDetail.setPointLebih(payrollRapelDetail.getPointLebih());
//                                    rapelDetail.setGolonganIdLama(payrollRapelDetail.getGolonganIdLama());
//                                    rapelDetail.setPointLama(payrollRapelDetail.getPointLama());
//                                    rapelDetail.setPointLebihLama(payrollRapelDetail.getPointLebihLama());
//
//                                    rapelDetail.setGajiGolonganBaruNilai(payrollRapelDetail.getGajiGolonganBaruNilai());
//                                    rapelDetail.setGajiGolonganLamaNilai(payrollRapelDetail.getGajiGolonganLamaNilai());
//                                    rapelDetail.setGajiGolonganNilai(payrollRapelDetail.getGajiGolonganNilai());
//
//                                    rapelDetail.setPeralihanBaruNilai(payrollRapelDetail.getPeralihanBaruNilai());
//                                    rapelDetail.setPeralihanLamaNilai(payrollRapelDetail.getPeralihanLamaNilai());
//                                    rapelDetail.setPeralihanNilai(payrollRapelDetail.getPeralihanNilai());
//
//                                    rapelDetail.setUmkBaruNilai(payrollRapelDetail.getUmkBaruNilai());
//                                    rapelDetail.setUmkLamaNilai(payrollRapelDetail.getUmkLamaNilai());
//                                    rapelDetail.setUmkNilai(payrollRapelDetail.getUmkNilai());
//
//                                    rapelDetail.setStrategisBaruNilai(payrollRapelDetail.getStrategisBaruNilai());
//                                    rapelDetail.setStrategisLamaNilai(payrollRapelDetail.getStrategisLamaNilai());
//                                    rapelDetail.setStrategisNilai(payrollRapelDetail.getStrategisNilai());
//
//                                    rapelDetail.setStrukturalBaruNilai(payrollRapelDetail.getStrukturalBaruNilai());
//                                    rapelDetail.setStrukturalLamaNilai(payrollRapelDetail.getStrukturalLamaNilai());
//                                    rapelDetail.setStrukturalNilai(payrollRapelDetail.getStrukturalNilai());
//
//                                    rapelDetail.setJabStrukturalBaruNilai(payrollRapelDetail.getJabStrukturalBaruNilai());
//                                    rapelDetail.setJabStrukturalLamaNilai(payrollRapelDetail.getJabStrukturalLamaNilai());
//                                    rapelDetail.setJabStrukturalNilai(payrollRapelDetail.getJabStrukturalNilai());
//
//                                    rapelDetail.setAirListrikBaruNilai(payrollRapelDetail.getAirListrikBaruNilai());
//                                    rapelDetail.setAirListrikLamaNilai(payrollRapelDetail.getAirListrikLamaNilai());
//                                    rapelDetail.setAirListrikNilai(payrollRapelDetail.getAirListrikNilai());
//
//                                    rapelDetail.setPerumahanBaruNilai(payrollRapelDetail.getPerumahanBaruNilai());
//                                    rapelDetail.setPerumahanLamaNilai(payrollRapelDetail.getPerumahanLamaNilai());
//                                    rapelDetail.setPerumahanNilai(payrollRapelDetail.getPerumahanNilai());
//
//                                    rapelDetail.setAction(bean.getAction());
//                                    rapelDetail.setFlag(bean.getFlag());
//                                    rapelDetail.setCreatedDate(bean.getCreatedDate());
//                                    rapelDetail.setCreatedWho(bean.getCreatedWho());
//                                    rapelDetail.setLastUpdate(bean.getLastUpdate());
//                                    rapelDetail.setLastUpdateWho(bean.getLastUpdateWho());
//
//                                    itPayrollRapelDetailEntity.add(rapelDetail);
//                                }
//                            }
//
//                            for (PayrollRapelThr payrollRapelThr: listOfResultRapelThr) {
//                                if (payroll1.getNip().equalsIgnoreCase(payrollRapelThr.getNip())) {
//                                    itPayrollRapelThrEntity.setRapelThrId(payrollRapelThrDao.getNextRapelThrDao(payroll1.getTahun()));
//                                    itPayrollRapelThrEntity.setPayrollThrId(payrollRapelThr.getPayrollThrId());
//                                    itPayrollRapelThrEntity.setPayrollRapelId(rapelId);
//                                    itPayrollRapelThrEntity.setNip(payroll1.getNip());
//
//                                    itPayrollRapelThrEntity.setThrGajiGolonganNilaiBaru(payrollRapelThr.getThrGajiGolonganNilaiBaru());
//                                    itPayrollRapelThrEntity.setThrPeralihanNilaiBaru(payrollRapelThr.getThrPeralihanNilaiBaru());
//                                    itPayrollRapelThrEntity.setThrUmkNilaiBaru(payrollRapelThr.getThrUmkNilaiBaru());
//                                    itPayrollRapelThrEntity.setThrStrukturalNilaiBaru(payrollRapelThr.getThrStrukturalNilaiBaru());
//                                    itPayrollRapelThrEntity.setThrStrategisNilaiBaru(payrollRapelThr.getThrStrategisNilaiBaru());
//                                    itPayrollRapelThrEntity.setThrJabStrukturalNilaiBaru(payrollRapelThr.getThrJabStrukturalNilaiBaru());
//
//                                    itPayrollRapelThrEntity.setThrGajiGolonganNilaiSelisihBaru(payrollRapelThr.getThrGajiGolonganNilaiSelisihBaru());
//                                    itPayrollRapelThrEntity.setThrPeralihanNilaiSelisihBaru(payrollRapelThr.getThrPeralihanNilaiSelisihBaru());
//                                    itPayrollRapelThrEntity.setThrUmkNilaiSelisihBaru(payrollRapelThr.getThrUmkNilaiSelisihBaru());
//                                    itPayrollRapelThrEntity.setThrStrukturalNilaiSelisihBaru(payrollRapelThr.getThrStrukturalNilaiSelisihBaru());
//                                    itPayrollRapelThrEntity.setThrStrategisNilaiSelisihBaru(payrollRapelThr.getThrStrategisNilaiSelisihBaru());
//                                    itPayrollRapelThrEntity.setThrJabStrukturalNilaiSelisihBaru(payrollRapelThr.getThrJabStrukturalNilaiSelisihBaru());
//
//                                    itPayrollRapelThrEntity.setTotalRapelNilaiSelisihBaru(payrollRapelThr.getTotalRapelNilaiSelisihBaru());
//
//                                    itPayrollRapelThrEntity.setBulanAktif(payrollRapelThr.getBulanAktif() + "");
//                                    itPayrollRapelThrEntity.setTotalRapelBersihNilaiSelisihBaru(payrollRapelThr.getTotalRapelFinalNilai());
//
//
//
//                                    itPayrollRapelThrEntity.setAction(bean.getAction());
//                                    itPayrollRapelThrEntity.setFlag(bean.getFlag());
//                                    itPayrollRapelThrEntity.setCreatedDate(bean.getCreatedDate());
//                                    itPayrollRapelThrEntity.setCreatedWho(bean.getCreatedWho());
//                                    itPayrollRapelThrEntity.setLastUpdate(bean.getLastUpdate());
//                                    itPayrollRapelThrEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                                }
//                            }
//
//                            // Rapel Jubileum
//                            for (PayrollRapelJubileum payrollRapelJubileum: listOfResultRapelJubileum) {
//                                if (payroll1.getNip().equalsIgnoreCase(payrollRapelJubileum.getNip())) {
//                                    itPayrollRapelJubileumEntity.setRapelJubileumId(payrollRapelJubileumDao.getNextRapelJubileumDao(payroll1.getTahun()));
//                                    itPayrollRapelJubileumEntity.setPayrollJubileumId(payrollRapelJubileum.getPayrollJubileumId());
//                                    itPayrollRapelJubileumEntity.setPayrollRapelId(rapelId);
//                                    itPayrollRapelJubileumEntity.setNip(payroll1.getNip());
//
//                                    itPayrollRapelJubileumEntity.setJubileumGajiGolonganNilaiBaru(payrollRapelJubileum.getJubileumGajiGolonganNilaiBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumUmkNilaiBaru(payrollRapelJubileum.getJubileumUmkNilaiBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumStrukturalNilaiBaru(payrollRapelJubileum.getJubileumStrukturalNilaiBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumPeralihanNilaiBaru(payrollRapelJubileum.getJubileumPeralihanNilaiBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumJabStrukturalNilaiBaru(payrollRapelJubileum.getJubileumJabStrukturalNilaiBaru());
//
//                                    itPayrollRapelJubileumEntity.setJubileumGajiGolonganNilaiSelisihBaru(payrollRapelJubileum.getJubileumGajiGolonganNilaiSelisihBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumUmkNilaiSelisihBaru(payrollRapelJubileum.getJubileumUmkNilaiSelisihBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumStrukturalNilaiSelisihBaru(payrollRapelJubileum.getJubileumStrukturalNilaiSelisihBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumPeralihanNilaiSelisihBaru(payrollRapelJubileum.getJubileumPeralihanNilaiSelisihBaru());
//                                    itPayrollRapelJubileumEntity.setJubileumJabStrukturalNilaiSelisihBaru(payrollRapelJubileum.getJubileumJabStrukturalNilaiSelisihBaru());
//
//                                    itPayrollRapelJubileumEntity.setTotalRapelNilaiSelisih(payrollRapelJubileum.getTotalRapelNilaiSelisih());
//                                    itPayrollRapelJubileumEntity.setTotalRapelJubileumNilai(payrollRapelJubileum.getTotalRapelJubileumNilai());
//
//                                    itPayrollRapelJubileumEntity.setAction(bean.getAction());
//                                    itPayrollRapelJubileumEntity.setFlag(bean.getFlag());
//                                    itPayrollRapelJubileumEntity.setCreatedDate(bean.getCreatedDate());
//                                    itPayrollRapelJubileumEntity.setCreatedWho(bean.getCreatedWho());
//                                    itPayrollRapelJubileumEntity.setLastUpdate(bean.getLastUpdate());
//                                    itPayrollRapelJubileumEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                                }
//                            }
//
//                            // Rapel Insentif
//                            for (PayrollRapelInsentif payrollRapelInsentif: listOfResultRapelInsentif) {
//                                if (payroll1.getNip().equalsIgnoreCase(payrollRapelInsentif.getNip())) {
//                                    itPayrollRapelInsentifEntity.setPayrollRapelId(rapelId);
//                                    itPayrollRapelInsentifEntity.setPayrollInsentifId(payrollRapelInsentif.getPayrollInsentifId());
//                                    itPayrollRapelInsentifEntity.setNip(payrollRapelInsentif.getNip());
//                                    itPayrollRapelInsentifEntity.setRapelInsentifId(payrollRapelInsentifDao.getNextRapelInsentifDao(payroll1.getTahun()));
//
//                                    itPayrollRapelInsentifEntity.setInsentifGajiGolonganNilaiBaru(payrollRapelInsentif.getInsentifGajiGolonganNilaiBaru());
//                                    itPayrollRapelInsentifEntity.setInsentifUmkNilaiBaru(payrollRapelInsentif.getInsentifUmkNilaiBaru());
//                                    itPayrollRapelInsentifEntity.setInsentifStrukturalNilaiBaru(payrollRapelInsentif.getInsentifStrukturalNilaiBaru());
//                                    itPayrollRapelInsentifEntity.setInsentifPeralihanNilaiBaru(payrollRapelInsentif.getInsentifPeralihanNilaiBaru());
//                                    itPayrollRapelInsentifEntity.setInsentifStrategisNilaiBaru(payrollRapelInsentif.getInsentifStrategisNilaiBaru());
//                                    itPayrollRapelInsentifEntity.setInsentifJabStrukturalNilaiBaru(payrollRapelInsentif.getInsentifJabStrukturalNilaiBaru());
//
//                                    itPayrollRapelInsentifEntity.setInsentifBrutoBaruNilai(payrollRapelInsentif.getBrutoInsentifNilai());
//                                    itPayrollRapelInsentifEntity.setPotonganInsentif(payrollRapelInsentif.getPotonganInsentifNilai());
//                                    itPayrollRapelInsentifEntity.setPotonganInsentifIndividuBaruNilai(payrollRapelInsentif.getPotonganInsentifIndividuNilai());
//                                    itPayrollRapelInsentifEntity.setMasaKerja(payrollRapelInsentif.getMasaKerja());
//                                    itPayrollRapelInsentifEntity.setSmkStandart(BigDecimal.valueOf(Double.parseDouble(payrollRapelInsentif.getSmkStandart())));
//                                    itPayrollRapelInsentifEntity.setSmkHuruf(payrollRapelInsentif.getSmkHuruf());
//                                    itPayrollRapelInsentifEntity.setSmkAngka(payrollRapelInsentif.getSmkAngkaNilai());
//
//                                    itPayrollRapelInsentifEntity.setInsentifJumlahBaruNilai(payrollRapelInsentif.getInsentifYangDiterimaBaruNilai());
//                                    itPayrollRapelInsentifEntity.setInsentifJumlahLamaNilai(payrollRapelInsentif.getInsentifYangDiterimaLamaNilai());
//                                    itPayrollRapelInsentifEntity.setTotalRapelInsentifNilai(payrollRapelInsentif.getInsentifYangDiterimaSelisihNilai());
//
//                                    itPayrollRapelInsentifEntity.setAction(bean.getAction());
//                                    itPayrollRapelInsentifEntity.setFlag(bean.getFlag());
//                                    itPayrollRapelInsentifEntity.setCreatedDate(bean.getCreatedDate());
//                                    itPayrollRapelInsentifEntity.setCreatedWho(bean.getCreatedWho());
//                                    itPayrollRapelInsentifEntity.setLastUpdate(bean.getLastUpdate());
//                                    itPayrollRapelInsentifEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                                    break;
//                                }
//                            }
//                        }
//                    }
//                }
//            }*/
//
//            /*//Payroll Jubileum
//            if(payroll1.getNip() != null && !"".equalsIgnoreCase(payroll1.getNip())){
//                if(listOfResultJubileum != null){
//                    for (PayrollJubileum payrollJubileum: listOfResultJubileum) {
//                        if(payroll1.getNip().equalsIgnoreCase(payrollJubileum.getNip())){
//                            itPayrollJubileumEntity.setPayrollId(idPayroll);
//
//                            itPayrollJubileumEntity.setPayrollId(idPayroll);
//                            itPayrollJubileumEntity.setGajiGolongan(payrollJubileum.getGajiGolonganNilai());
//                            itPayrollJubileumEntity.setTunjanganUmk(payrollJubileum.getTunjanganUmkNilai());
//                            itPayrollJubileumEntity.setTunjanganStruktural(payrollJubileum.getTunjanganStrukturalNilai());
//                            itPayrollJubileumEntity.setTunjanganPeralihan(payrollJubileum.getTunjanganPeralihanNilai());
//                            itPayrollJubileumEntity.setTunjanganJabStruktural(payrollJubileum.getTunjanganJabStrukturalNilai());
//                            itPayrollJubileumEntity.setTotal(payrollJubileum.getBesarJubileumNilai());
//                            itPayrollJubileumEntity.setTanggalJubileum(CommonUtil.convertStringToDate(payrollJubileum.getTanggalJubileum()));
//                            itPayrollJubileumEntity.setGrandTotal(payrollJubileum.getTotalJubileumNilai());
//                            itPayrollJubileumEntity.setPphJubileum(payrollJubileum.getPphJubileumNilai());
//                            itPayrollJubileumEntity.setNettoJubileum(payrollJubileum.getNettoJubileumNilai());
//                            itPayrollJubileumEntity.setAction(bean.getAction());
//                            itPayrollJubileumEntity.setFlag(bean.getFlag());
//                            itPayrollJubileumEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollJubileumEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollJubileumEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollJubileumEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                            break;
//                        }
//                    }
//                }
//            }*/
//
//            /*//Payroll Pensiun
//            if(payroll1.getNip() != null && !"".equalsIgnoreCase(payroll1.getNip())){
//                if(listOfResultPensiun != null){
//                    for (PayrollPensiun payrollPensiun: listOfResultPensiun) {
//                        if(payroll1.getNip().equalsIgnoreCase(payrollPensiun.getNip())){
//                            itPayrollPensiunEntity.setPayrollId(idPayroll);
//
//                            itPayrollPensiunEntity.setGajiGolongan(payrollPensiun.getGajiGolonganNilai());
//                            itPayrollPensiunEntity.setTunjanganUmk(payrollPensiun.getTunjanganUmkNilai());
//                            itPayrollPensiunEntity.setTunjanganStruktural(payrollPensiun.getTunjanganStrukturalNilai());
//                            itPayrollPensiunEntity.setTunjanganJabatanStruktural(payrollPensiun.getTunjanganJabatanStrukturalNilai());
//                            itPayrollPensiunEntity.setTunjanganPeralihan(payrollPensiun.getTunjanganPeralihanNilai());
//                            itPayrollPensiunEntity.setTanggalAktif(payrollPensiun.getTanggalAktif());
//                            itPayrollPensiunEntity.setTanggalPensiun(payrollPensiun.getTanggalPensiun());
//                            itPayrollPensiunEntity.setFaktorPensiun(BigDecimal.valueOf(Double.parseDouble(payrollPensiun.getFaktorPensiun())));
//                            itPayrollPensiunEntity.setFaktorPenghargaan(BigDecimal.valueOf(Double.parseDouble(payrollPensiun.getFaktorPenghargaan())));
//                            itPayrollPensiunEntity.setJumlahTunjangan(payrollPensiun.getJumlahTunjanganNilai());
//                            itPayrollPensiunEntity.setTunjanganPensiun(payrollPensiun.getTunjanganPensiunNilai());
//                            itPayrollPensiunEntity.setTunjanganPenghargaan(payrollPensiun.getTunjanganPenghargaanNilai());
//                            itPayrollPensiunEntity.setJumlahBiayaPensiun(payrollPensiun.getJumlahBiayaPensiunNilai());
//                            itPayrollPensiunEntity.setPph1Nilai(payrollPensiun.getPph1Nilai());
//                            itPayrollPensiunEntity.setPph2Nilai(payrollPensiun.getPph2Nilai());
//                            itPayrollPensiunEntity.setPph3Nilai(payrollPensiun.getPph3Nilai());
//                            itPayrollPensiunEntity.setPph4Nilai(payrollPensiun.getPph4Nilai());
//                            itPayrollPensiunEntity.setPphPensiun(payrollPensiun.getPphPensiunNilai());
//                            itPayrollPensiunEntity.setPenggantianPerumahan(payrollPensiun.getPenggantianPerumahanNilai());
//                            itPayrollPensiunEntity.setNettoPensiun(payrollPensiun.getNettoPensiunNilai());
//
//                            itPayrollPensiunEntity.setAction(bean.getAction());
//                            itPayrollPensiunEntity.setFlag(bean.getFlag());
//                            itPayrollPensiunEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollPensiunEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollPensiunEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollPensiunEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                            itPayrollEntity.setTotalPensiun(payrollPensiun.getJumlahBiayaPensiunNilai());
//                            break;
//                        }
//                    }
//                }
//            }*/
//
//            try {
//                // Rapel
//                /*if(payroll1.getFlagRapel() != null){
//                    if(payroll1.getFlagRapel().equalsIgnoreCase("Y")){
//                        if(itPayrollRapelEntity.getPayrollId() != null){
//                            payrollRapelDao.addAndSave(itPayrollRapelEntity);
//                        }
//
//                        if(itPayrollRapelThrEntity.getPayrollThrId() != null){
//                            payrollRapelThrDao.addAndSave(itPayrollRapelThrEntity);
//                        }
//
//                        if(itPayrollRapelJubileumEntity.getPayrollJubileumId() != null){
//                            payrollRapelJubileumDao.addAndSave(itPayrollRapelJubileumEntity);
//                        }
//
//                        if(itPayrollRapelPendidikanEntity.getPayrollPendidikanId() != null){
//                            payrollRapelPendidikanDao.addAndSave(itPayrollRapelPendidikanEntity);
//                        }
//
//                        if(itPayrollRapelInsentifEntity.getPayrollInsentifId() != null){
//                            payrollRapelInsentifDao.addAndSave(itPayrollRapelInsentifEntity);
//                        }
//
//                        if(itPayrollRapelLemburEntity.size() > 0){
//                            for(ItPayrollRapelLemburEntity rapelLemburLoop: itPayrollRapelLemburEntity){
//                                if(rapelLemburLoop.getRapelLemburId() != null){
//                                    payrollRapelLemburDao.addAndSave(rapelLemburLoop);
//                                }
//                            }
//                        }
//
//                        if(itPayrollRapelDetailEntity.size() > 0){
//                            for(ItPayrollRapelDetailEntity rapelDetailLoop: itPayrollRapelDetailEntity){
//                                if(rapelDetailLoop.getRapelDetailId() != null){
//                                    payrollRapelDetailDao.addAndSave(rapelDetailLoop);
//                                }
//                            }
//                        }
//                    }
//                }*/
//
//                /*// THR
//                if(payroll1.getFlagThr() != null){
//                    if(payroll1.getFlagThr().equalsIgnoreCase("Y")){
//                        itPayrollThrEntity.setThrId(payrollThrDao.getNextThrId(payroll1.getTahun()));
//                        payrollThrDao.addAndSave(itPayrollThrEntity);
//                    }
//                }*/
//
//                // jasprod
//                /*if(payroll1.getFlagJasprod() != null){
//                    if(payroll1.getFlagJasprod().equalsIgnoreCase("Y")){
//                        itPayrollJasprodEntity.setJasprodId(payrollJasprodDao.getNextJasprodId(payroll1.getTahun()));
//                        payrollJasprodDao.addAndSave(itPayrollJasprodEntity);
//                    }
//                }*/
//
//                /*if(payroll1.getTipePegawai() != null && payroll1.getKelompokId() != null) {
//                    if (!payroll1.getTipePegawai().equalsIgnoreCase("TP03") &&
//                            !payroll1.getKelompokId().equalsIgnoreCase("KL00") && !payroll1.getKelompokId().equalsIgnoreCase("KL01")) {
//                        // insentif
//                        if(payroll1.getFlagInsentif() != null){
//                            if(payroll1.getFlagInsentif().equalsIgnoreCase("Y")){
//                                itPayrollInsentifEntity.setInsentifId(payrollInsentifDao.getNextInsentifDao(payroll1.getTahun()));
//                                payrollInsentifDao.addAndSave(itPayrollInsentifEntity);
//                            }
//                        }
//                    }
//                }*/
//
//
//                /*if(payroll1.getLabelJubileum() == null && payroll1.getCentangJubileum() != null){
//                    if(payroll1.getCentangJubileum().equalsIgnoreCase("Y")){
//                        if(listOfResultJubileum != null){
//                            itPayrollJubileumEntity.setJubileumId(payrollJubileumDao.getNextJubileumId(payroll1.getTahun()));
//                            payrollJubileumDao.addAndSave(itPayrollJubileumEntity);
//                        }
//                    }
//                }*/
//
//                /*if(payroll1.getCentangPensiun() != null && payroll1.getLabelPensiun() == null){
//                    if(payroll1.getCentangPensiun().equalsIgnoreCase("Y")){
//                        if(listOfResultPensiun != null){
//                            itPayrollPensiunEntity.setPensiunId(payrollPensiunDao.getNextPayrollPensiunId(payroll1.getTahun()));
//                            payrollPensiunDao.addAndSave(itPayrollPensiunEntity);
//                        }
//                    }
//                }*/
//
//            } catch (HibernateException e) {
//                logger.error("[PayrollBoImpl.saveDelete] Error, " + e.getMessage());
//                throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//            }
//            /*try {
//                if(itPayrollEntity.getFlagJasprod() == null){
//                    itPayrollEntity.setFlagJasprod("N");
//                }
//
//                if(itPayrollEntity.getFlagPensiun() != null && itPayrollEntity.getFlagPensiun().equalsIgnoreCase("Y")){
//                    if(payroll1.getCentangPensiun() != null && payroll1.getLabelPensiun() == null) {
//                        if (payroll1.getCentangPensiun().equalsIgnoreCase("Y")) {
//                            payrollDao.addAndSave(itPayrollEntity);
//                        }
//                    }
//                }else if(itPayrollEntity.getFlagJubileum() != null && itPayrollEntity.getFlagJubileum().equalsIgnoreCase("Y")){
//                    if(payroll1.getCentangJubileum() != null && payroll1.getLabelJubileum() == null) {
//                        if (payroll1.getCentangJubileum().equalsIgnoreCase("Y")) {
//                            payrollDao.addAndSave(itPayrollEntity);
//                        }
//                    }
//                }else{
//                    payrollDao.addAndSave(itPayrollEntity);
//                }
//
//                //Update Medical Record
//                if(listOfResultMedical != null){
//                    for(MedicalRecord medicalRecord: listOfResultMedical){
//                        if(itPayrollEntity.getNip().equalsIgnoreCase(medicalRecord.getNip())){
//                            ItHrisMedicalRecordEntity itHrisMedicalRecordEntity = new ItHrisMedicalRecordEntity();
//                            try {
//                                itHrisMedicalRecordEntity.setFlagPayroll("Y");
//                                itHrisMedicalRecordEntity.setPayrollId(itPayrollEntity.getPayrollId());
//
//                                medicalRecordDao.updateFlagPayroll(medicalRecord.getMedicalRecordId(), itPayrollEntity.getPayrollId());
//                            } catch (Exception e) {
//                                logger.error("[PayrollBoImpl.saveAddData] Error, " + e.getMessage());
//                                throw new GeneralBOException("Found problem when Update flag medical record data Payroll, please info to your admin..." + e.getMessage());
//                            }
//                        }
//                    }
//                }
//
//            } catch (HibernateException e) {
//                logger.error("[PayrollBoImpl.saveDelete] Error, " + e.getMessage());
//                throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//            }*/
//
//            //Gaji PKWT
//            /*if(listOfResultGajiPkwt != null){
//                for (PayrollUpahHarian payrollUpahHarian: listOfResultGajiPkwt) {
//                    if(payroll1.getNip().equalsIgnoreCase(payrollUpahHarian.getNip())){
//                        String id = payrollUpahHarianDao.getNextUpahHarianDao();
//                        itPayrollUpahHarianEntity = new ItPayrollUpahHarianEntity();
//                        itPayrollUpahHarianEntity.setPayrollId(idPayroll);
//                        itPayrollUpahHarianEntity.setUpahHarianId(id);
//                        itPayrollUpahHarianEntity.setTanggal(CommonUtil.convertStringToDate(payrollUpahHarian.getStTnggal()));
//
//                        itPayrollUpahHarianEntity.setAction(bean.getAction());
//                        itPayrollUpahHarianEntity.setFlag(bean.getFlag());
//                        itPayrollUpahHarianEntity.setCreatedDate(bean.getCreatedDate());
//                        itPayrollUpahHarianEntity.setCreatedWho(bean.getCreatedWho());
//                        itPayrollUpahHarianEntity.setLastUpdate(bean.getLastUpdate());
//                        itPayrollUpahHarianEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                        try {
//                            payrollUpahHarianDao.addAndSave(itPayrollUpahHarianEntity);
//                        } catch (HibernateException e) {
//                            logger.error("[PayrollBoImpl.save] Error, " + e.getMessage());
//                            throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//                        }
//                    }
//                }
//            }*/
//
//            /*if(payroll1.getNip() != null && !"".equalsIgnoreCase(payroll1.getNip())){
//                //Detail Potongan Lain
//                if(listOfPotonganLain != null){
//                    for (PayrollPotonganLain payrollPotonganLain: listOfPotonganLain) {
//                        if(payroll1.getNip().equalsIgnoreCase(payrollPotonganLain.getNip())){
//                            String id = payrollPotonganLainDao.getNextPotonganLainId();
//                            itPayrollPotonganLainEntity.setPotonganLainId(id);
//                            itPayrollPotonganLainEntity.setPayrollId(idPayroll);
//
//                            itPayrollPotonganLainEntity.setKeterangan1(payrollPotonganLain.getKeterangan1());
//                            itPayrollPotonganLainEntity.setKeterangan2(payrollPotonganLain.getKeterangan2());
//                            itPayrollPotonganLainEntity.setKeterangan3(payrollPotonganLain.getKeterangan3());
//                            itPayrollPotonganLainEntity.setKeterangan4(payrollPotonganLain.getKeterangan4());
//                            itPayrollPotonganLainEntity.setKeterangan5(payrollPotonganLain.getKeterangan5());
//
//                            itPayrollPotonganLainEntity.setNilai1(payrollPotonganLain.getNilai1());
//                            itPayrollPotonganLainEntity.setNilai2(payrollPotonganLain.getNilai2());
//                            itPayrollPotonganLainEntity.setNilai3(payrollPotonganLain.getNilai3());
//                            itPayrollPotonganLainEntity.setNilai4(payrollPotonganLain.getNilai4());
//                            itPayrollPotonganLainEntity.setNilai5(payrollPotonganLain.getNilai5());
//
//                            itPayrollPotonganLainEntity.setAction(bean.getAction());
//                            itPayrollPotonganLainEntity.setFlag(bean.getFlag());
//                            itPayrollPotonganLainEntity.setCreatedDate(bean.getCreatedDate());
//                            itPayrollPotonganLainEntity.setCreatedWho(bean.getCreatedWho());
//                            itPayrollPotonganLainEntity.setLastUpdate(bean.getLastUpdate());
//                            itPayrollPotonganLainEntity.setLastUpdateWho(bean.getLastUpdateWho());
//                            try {
//                                payrollPotonganLainDao.addAndSave(itPayrollPotonganLainEntity);
//                            } catch (HibernateException e) {
//                                logger.error("[PayrollBoImpl.save] Error, " + e.getMessage());
//                                throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//                            }
//                            break;
//                        }
//                    }
//                }
//            }*/
//
//        }
//    }

    //uncommenct by ferdi, 01 des 2020
//    @Override
//    public List<Payroll> getSearchHome(Payroll bean) throws GeneralBOException {
//        List<ItPayrollEntity> itPayrollEntity = new ArrayList();
//        List<Payroll> payrollList = new ArrayList();
//
//        DecimalFormat kursIndonesia = (DecimalFormat) DecimalFormat.getCurrencyInstance();
//        DecimalFormatSymbols formatRp = new DecimalFormatSymbols();
//        formatRp.setCurrencySymbol("");
//        formatRp.setMonetaryDecimalSeparator(',');
//        formatRp.setGroupingSeparator('.');
//        kursIndonesia.setDecimalFormatSymbols(formatRp);
//
//        try {
//            // Get data from database by ID
//            itPayrollEntity = payrollDao.getDataSearchHome(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getBulan1(),
//                    bean.getTahun1(), bean.getTipe());
//        } catch (HibernateException e) {
//            logger.error("[PayrollBoImpl.saveDelete] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when searching data alat by Kode alat, please inform to your admin...," + e.getMessage());
//        }
//
//        if(itPayrollEntity.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1 : itPayrollEntity){
//                Payroll payroll = new Payroll();
//                String tanggal = "";
//                payroll.setFlagSlip(false);
//
//                if(("Y").equalsIgnoreCase(itPayrollEntity1.getApprovalFlag())){
//                    String DATE_FORMAT = "dd-MM-yyyy HH:mm";
//                    SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
//                    Date tanggalApp = itPayrollEntity1.getApprovalDate();
//                    tanggal = sdf.format(tanggalApp);
//                    payroll.setFlagEdit(false);
//                    payroll.setStatusApprove("D");
//                }else if (("Y").equalsIgnoreCase(itPayrollEntity1.getApprovalAksFlag())&&(!CommonConstant.ID_KANPUS.equalsIgnoreCase(CommonUtil.userBranchLogin()))&&CommonConstant.ROLE_ID_ADMIN_AKS.equalsIgnoreCase(CommonUtil.roleIdAsLogin())){
//                    payroll.setStatusApprove("RK");
//                }else if (("Y").equalsIgnoreCase(itPayrollEntity1.getApprovalAksFlag())){
//                    payroll.setStatusApprove("DU");
//                } else if (("Y").equalsIgnoreCase(itPayrollEntity1.getApprovalSdmFlag())){
//                    payroll.setStatusApprove("K");
//                }else if (("Y").equalsIgnoreCase(itPayrollEntity1.getApprovalUnitFlag())){
//                    payroll.setStatusApprove("S");
//                }else{
//                    payroll.setStatusApprove("U");
//                }
//
//                payroll.setStApprovalDate(tanggal);
//                payroll.setBulan(itPayrollEntity1.getBulan());
//                payroll.setTahun(itPayrollEntity1.getTahun());
//                payroll.setJumlahPegawai(itPayrollEntity1.getJumlahPegawai());
//                payroll.setBranchId(itPayrollEntity1.getBranchId());
//                payroll.setBranchName(itPayrollEntity1.getBranchName());
//                payroll.setTotalGajiBersihNilai(itPayrollEntity1.getGajiBersih());
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity1.getGajiBersih(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity1.getTotalA());
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity1.getTotalA(), "###,###"));
//                payroll.setApprovalFlag(itPayrollEntity1.getApprovalFlag());
//                payroll.setApprovalDate(itPayrollEntity1.getApprovalDate());
//
//                //untuk flag approval
//                payroll.setApprovalAksFlag(itPayrollEntity1.getApprovalAksFlag());
//
//                if(itPayrollEntity1.getFlagPayroll().equalsIgnoreCase("Y")){
//                    payroll.setFlagSlip(true);
//                }
//
//                if(itPayrollEntity1.getFlagCutiPanjang().equalsIgnoreCase("Y")){
//                    payroll.setFlagSlip(true);
//                }
//                if(itPayrollEntity1.getFlagCutiTahunan().equalsIgnoreCase("Y")){
//                    payroll.setFlagSlip(true);
//                }
//
//                if(itPayrollEntity1.getFlagThr().equalsIgnoreCase("Y")){
//                    payroll.setFlagSlip(true);
//                }
//
//                if(itPayrollEntity1.getFlagInsentif() != null && itPayrollEntity1.getFlagInsentif().equalsIgnoreCase("Y")){
//                    payroll.setFlagSlip(true);
//                }
//
//                if(itPayrollEntity1.getFlagJasprod() != null){
//                    if(itPayrollEntity1.getFlagJasprod().equalsIgnoreCase("Y")){
//                        payroll.setFlagSlip(true);
//                    }
//                }
//
//                if(itPayrollEntity1.getFlagJubileum() != null){
//                    if(itPayrollEntity1.getFlagJubileum().equalsIgnoreCase("Y")){
//                        payroll.setFlagSlip(true);
//                    }
//                }
//
//                if(itPayrollEntity1.getFlagPensiun() != null){
//                    if(itPayrollEntity1.getFlagPensiun().equalsIgnoreCase("Y")){
//                        payroll.setFlagSlip(true);
//                    }
//                }
//                payroll.setTipe(bean.getTipe());
//                payrollList.add(payroll);
//            }
//        }
//        return payrollList;
//    }
//
//    // mengambil biaya insentif pada payroll
//    @Override
//    public List<PayrollInsentif> getSearchInsentif(Payroll bean) throws GeneralBOException {
//        List<ItPayrollInsentifEntity> itPayrollInsentifEntities = new ArrayList();
//        List<PayrollInsentif> payrollList = new ArrayList();
//
//        DecimalFormat kursIndonesia = (DecimalFormat) DecimalFormat.getCurrencyInstance();
//        DecimalFormatSymbols formatRp = new DecimalFormatSymbols();
//        formatRp.setCurrencySymbol("");
//        formatRp.setMonetaryDecimalSeparator(',');
//        formatRp.setGroupingSeparator('.');
//        kursIndonesia.setDecimalFormatSymbols(formatRp);
//
//        try {
//            // Get data from database by ID
//            itPayrollInsentifEntities = payrollDao.getDataInsentif(bean.getBranchId());
//        } catch (HibernateException e) {
//            logger.error("[PayrollBoImpl.saveDelete] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when searching data alat by Kode alat, please inform to your admin...," + e.getMessage());
//        }
//
//        if(itPayrollInsentifEntities.size() > 0){
//            for(ItPayrollInsentifEntity itPayrollInsentifEntity : itPayrollInsentifEntities){
//                PayrollInsentif payrollInsentif = new PayrollInsentif();
//                String tanggal = "";
//
//                payrollInsentif.setNip(itPayrollInsentifEntity.getNip());
//                payrollInsentif.setNama(itPayrollInsentifEntity.getNama());
//                payrollInsentif.setBranchName(itPayrollInsentifEntity.getBranchName());
//                payrollInsentif.setStrJumlahInsentif(CommonUtil.numbericFormat(itPayrollInsentifEntity.getJumlahInsentif(), "###,###"));
//                payrollInsentif.setStrJumlahPph(CommonUtil.numbericFormat(itPayrollInsentifEntity.getJumlahPph(), "###,###"));
//
//                payrollList.add(payrollInsentif);
//            }
//        }
//        return payrollList;
//    }
//


    //uncommenct by ferdi, 01 des 2020
//    @Override
//    public List<Payroll> getDataView(Payroll bean) throws GeneralBOException {
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList();
//        List<ItPayrollEntity> tmpItPayrollEntities = new ArrayList();
//        List<ItPayrollPensiunEntity> itPayrollPensiunEntities = new ArrayList();
//        List<ItPayrollJubileumEntity> itPayrollJubileumEntities = new ArrayList();
//        List<Payroll> payrollList = new ArrayList();
//        DecimalFormat kursIndonesia = (DecimalFormat) DecimalFormat.getCurrencyInstance();
//        DecimalFormatSymbols formatRp = new DecimalFormatSymbols();
//        formatRp.setCurrencySymbol("");
//        formatRp.setMonetaryDecimalSeparator(',');
//        formatRp.setGroupingSeparator('.');
//        kursIndonesia.setDecimalFormatSymbols(formatRp);
//
//        List<ImBiodataEntity> dataBiodata = biodataDao.getAllData();
//        if(bean.getNip().equalsIgnoreCase("")){
//            itPayrollEntities = payrollDao.getDataView(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getTipe());
//            /*if(bean.getTipe().equalsIgnoreCase("PN")){
//                itPayrollEntities = payrollDao.getDataViewPensiun(bean.getBranchId(), bean.getBulan(), bean.getTahun());
//                if(itPayrollEntities.size() > 0){
//                    for(ItPayrollEntity itPayrollEntity : itPayrollEntities){
//                        itPayrollPensiunEntities = payrollPensiunDao.getPensiun(itPayrollEntity.getPayrollId());
//                        if(itPayrollPensiunEntities.size() > 0){
//                            for(ItPayrollPensiunEntity itPayrollPensiunEntity: itPayrollPensiunEntities){
//                                if(itPayrollPensiunEntity.getFlag().equalsIgnoreCase("Y")){
//                                    tmpItPayrollEntities.add(itPayrollEntity);
//                                }
//                            }
//                        }
//                    }
//                }
//                itPayrollEntities.clear();
//                itPayrollEntities.addAll(tmpItPayrollEntities);
//            }else if(bean.getTipe().equalsIgnoreCase("JB")){
//                itPayrollEntities = payrollDao.getDataViewJubileum(bean.getBranchId(), bean.getBulan(), bean.getTahun());
//                if(itPayrollEntities.size() > 0){
//                    for(ItPayrollEntity itPayrollEntity : itPayrollEntities){
//                        itPayrollJubileumEntities = payrollJubileumDao.getJubileum(itPayrollEntity.getPayrollId());
//                        if(itPayrollJubileumEntities.size() > 0){
//                            for(ItPayrollJubileumEntity itPayrollJubileumEntity: itPayrollJubileumEntities){
//                                if(itPayrollJubileumEntity.getFlag().equalsIgnoreCase("Y")){
//                                    tmpItPayrollEntities.add(itPayrollEntity);
//                                }
//                            }
//                        }
//                    }
//                }
//                itPayrollEntities.clear();
//                itPayrollEntities.addAll(tmpItPayrollEntities);
//            }else{
//                itPayrollEntities = payrollDao.getDataView(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getTipe());
//            }*/
//        }else{
//            if(bean.getTipe().equalsIgnoreCase("PN")){
//                itPayrollEntities = payrollDao.getDataViewPensiun(bean.getNip(), bean.getBranchId(), bean.getBulan(), bean.getTahun());
//            }else if(bean.getTipe().equalsIgnoreCase("JB")){
//                itPayrollEntities = payrollDao.getDataViewJubileum(bean.getNip(), bean.getBranchId(), bean.getBulan(), bean.getTahun());
//            }else{
//                itPayrollEntities = payrollDao.getDataView(bean.getNip(), bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getTipe());
//            }
//        }
//
//        if(itPayrollEntities.size() > 0){
//            int i = 0 ;
//            for(ItPayrollEntity itPayrollEntity : itPayrollEntities){
//                i++;
//                String tanggal = "";
//                if(itPayrollEntity.getApprovalFlag() != null){
//                    String DATE_FORMAT = "dd-MM-yyyy";
//                    SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
//                    Date tanggalApp = itPayrollEntity.getApprovalDate();
//                    tanggal = sdf.format(tanggalApp);
//                }
//
//                Payroll payroll = new Payroll();
//
//                //data pribadi pegawai
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                payroll.setBulan(itPayrollEntity.getBulan());
//                payroll.setTahun(itPayrollEntity.getTahun());
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                //payroll.setStTanggalAktif(CommonUtil.convertTimestampToString(itPayrollEntity.getTanggalAktif()));
//                payroll.setPositionId(itPayrollEntity.getPositionId());
//                payroll.setPositionName(itPayrollEntity.getPositionName());
//                payroll.setGolonganId(itPayrollEntity.getGolonganId());
//                payroll.setGolonganName(itPayrollEntity.getGolonganName());
//                payroll.setDepartmentId(itPayrollEntity.getDepartmentId());
//                payroll.setDepartmentName(itPayrollEntity.getDepartmentName());
//                payroll.setBranchId(itPayrollEntity.getBranchId());
//                payroll.setStatusKeluarga(itPayrollEntity.getStatusKeluarga());
//                payroll.setJumlahAnak(itPayrollEntity.getJumlahAnak());
//                payroll.setFaktorKeluargaId(itPayrollEntity.getFaktorKeluargaId());
//
//                //komponen A
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity.getGajiGolongan(), "###,###"));
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganUmk(), "###,###")); //santunan khusus
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk()); //santunan khusus
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStrategis(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStrategis());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStrategis(), "###,###"));
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPeralihan(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganLainNilai(itPayrollEntity.getTunjanganLain()); //Tunj. lain Nilai---*/
//                payroll.setTunjanganTambahan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganTambahan(), "###,###")); //Tunj. tambahan ---
//                payroll.setTunjanganTambahanNilai(itPayrollEntity.getTunjanganTambahan()); //Tunj. tambahan Nilai---*/
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity.getTotalA()); //Nilai Total A
//
//                if(itPayrollEntity.getPphGaji() != null){
//                    payroll.setPphGaji(CommonUtil.numbericFormat(itPayrollEntity.getPphGaji(), "###,###"));
//                    payroll.setPphGajiNilai(itPayrollEntity.getPphGaji());
//                }else{
//                    payroll.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                    payroll.setPphGajiNilai(BigDecimal.valueOf(0));
//                }
//
//                payroll.setTotalC(CommonUtil.numbericFormat(itPayrollEntity.getTotalC(), "###,###"));
//                payroll.setTotalB(CommonUtil.numbericFormat(itPayrollEntity.getTotalB(), "###,###"));
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//
//                payroll.setFlagPayroll(itPayrollEntity.getFlagPayroll());
//                payroll.setFlagRapel(itPayrollEntity.getFlagRapel());
//                payroll.setFlagThr(itPayrollEntity.getFlagThr());
//                payroll.setFlagPendidikan(itPayrollEntity.getFlagPendidikan());
//                payroll.setFlagJasprod(itPayrollEntity.getFlagJasprod());
//                payroll.setFlagPensiun(itPayrollEntity.getFlagPensiun());
//               /* payroll.setTotalRapel(CommonUtil.numbericFormat(itPayrollEntity.getTotalRapel(), "###,###"));
//                payroll.setTotalRapelNilai(itPayrollEntity.getTotalRapel());
//                payroll.setTotalThr(CommonUtil.numbericFormat(itPayrollEntity.getTotalThr(), "###,###"));
//                payroll.setTotalThrNilai(itPayrollEntity.getTotalThr());
//                payroll.setTotalPendidikan(CommonUtil.numbericFormat(itPayrollEntity.getTotalPendidikan(), "###,###"));
//                payroll.setTotalPendidikanNilai(itPayrollEntity.getTotalPendidikan());
//                payroll.setTotalJasProd(CommonUtil.numbericFormat(itPayrollEntity.getTotalJasProd(), "###,###"));
//                payroll.setTotalJasProdNilai(itPayrollEntity.getTotalJasProd());*/
//                payroll.setAction(itPayrollEntity.getAction());
//                payroll.setFlag(itPayrollEntity.getFlag());
//                payroll.setApprovalFlag(itPayrollEntity.getApprovalFlag());
//                payroll.setCreatedDate(itPayrollEntity.getCreatedDate());
//                payroll.setCreatedWho(itPayrollEntity.getCreatedWho());
//                payroll.setLastUpdate(itPayrollEntity.getLastUpdate());
//                payroll.setLastUpdateWho(itPayrollEntity.getLastUpdateWho());
//                payroll.setStApprovalDate(tanggal);
//                payroll.setProporsiGaji(itPayrollEntity.getProporsiGaji());
//
//                payroll.setStApprovalDate(tanggal);
//                payroll.setFlagPromosiOn(cekPromosi(itPayrollEntity.getNip()));
//
//                String tipePegawai = "";
//                for(ImBiodataEntity biodata: dataBiodata){
//                    if(biodata.getNip().equalsIgnoreCase(payroll.getNip())){
//                        tipePegawai = biodata.getTipePegawai();
//                    }
//                }
//
//                if(itPayrollEntity.getFlagJubileum() != null){
//                    if(tipePegawai.equalsIgnoreCase("TP01") && itPayrollEntity.getFlagJubileum().equalsIgnoreCase("Y")){
//                        //digunakan untuk mengetahui tanggal Jubileum
//                        PayrollJubileum payrollJubileum = payrollJubileum(itPayrollEntity.getBulan(), itPayrollEntity.getTahun(), itPayrollEntity.getNip(), itPayrollEntity.getBranchId(),
//                                itPayrollEntity.getGajiGolongan(), itPayrollEntity.getTunjanganUmk(), itPayrollEntity.getTunjanganStruktural(), itPayrollEntity.getTunjanganPeralihan(),
//                                itPayrollEntity.getTunjanganJabatanStruktural(), payroll.getFlagPayroll());
//                        if(cekJubileumSys(payroll.getNip()).equalsIgnoreCase("")){
//                            payroll.setTanggalJubileum(payrollJubileum.getTanggalJubileum());
//                            payroll.setFlagJubileumOn(payrollJubileum.isFlagJubileum());
//                        }else{
//                            List<ItPayrollJubileumEntity> itPayrollJubileumEntities1 = payrollJubileumDao.getJubileum(itPayrollEntity.getPayrollId());
//                            if(itPayrollJubileumEntities1.size() > 0){
//                                payroll.setTanggalJubileum(payrollJubileum.getTanggalJubileum());
//                            }else{
//                                payroll.setTanggalJubileum("");
//                            }
//                            payroll.setFlagJubileumOn(false);
//                        }
//                    }else{
//                        payroll.setTanggalJubileum("");
//                        payroll.setFlagJubileumOn(false);
//                    }
//                }else{
//                    payroll.setTanggalJubileum("");
//                    payroll.setFlagJubileumOn(false);
//                }
//
//                if(tipePegawai.equalsIgnoreCase("TP01") && itPayrollEntity.getFlagPensiun().equalsIgnoreCase("Y")){
//                    //cek pensiun dan tanggal pensiun
//                    //Direktur tidak mendapatkan pensiun
//                    ImBiodataEntity imBiodataEntity = biodataDao.getById("nip", itPayrollEntity.getNip());
//                    if(itPayrollEntity.getImPosition() != null){
//                        if(!itPayrollEntity.getImPosition().getKelompokId().equalsIgnoreCase("KL01")){
//                            if(cekPensiunSys(payroll.getNip()).equalsIgnoreCase("")){
//                                payroll.setFlagPensiunOn(cekPensiun(bean.getBulan(), bean.getTahun(), imBiodataEntity.getTanggalPensiun()));
//                                if(cekPensiun(bean.getBulan(), bean.getTahun(), imBiodataEntity.getTanggalPensiun()) == true){
//                                    payroll.setStTanggalPensiun(CommonUtil.convertDateToString(imBiodataEntity.getTanggalPensiun()));
//                                }else{
//                                    payroll.setStTanggalPensiun("");
//                                }
//                            }else{
//                                payroll.setFlagPensiunOn(false);
//                            }
//                        }else{
//                            payroll.setFlagPensiunOn(false);
//                        }
//                    }
//                }else{
//                    payroll.setFlagPensiunOn(false);
//                }
//
//                if (("JB").equalsIgnoreCase(bean.getTipe())||("PN").equalsIgnoreCase(bean.getTipe())||("PR").equalsIgnoreCase(bean.getTipe())){
//                    if (("Y").equalsIgnoreCase(payroll.getApprovalFlag())){
//                        payroll.setCetakSatuan(true);
//                    }
//                }
//
//                payrollList.add(payroll);
//            }
//        }
//
//        return payrollList;
//    }



    //uncomment by ferdi, 01 des 2020
//    @Override
//    public Payroll getPayrollApprove(Payroll bean) throws GeneralBOException {
//        List<ItPayrollEntity> itPayrollEntity = new ArrayList();
//        Payroll hasilPayroll = new Payroll();
//        int x = 0 ;
//
//        itPayrollEntity = payrollDao.getDataView(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getTipe());
//        if(itPayrollEntity.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1 : itPayrollEntity){
//                if(itPayrollEntity1.getApprovalFlag() != null){
//                    String DATE_FORMAT = "dd-MM-yyyy";
//                    SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
//                    Date tanggalApp = itPayrollEntity1.getApprovalDate();
//                    String tanggal = sdf.format(tanggalApp);
//
//                    hasilPayroll.setApprovalFlag(itPayrollEntity1.getApprovalFlag());
//                    hasilPayroll.setStApprovalDate(tanggal);
//                    hasilPayroll.setApprovalId(itPayrollEntity1.getApprovalId());
//
//                    hasilPayroll.setSudahApprove(true);
//                    break;
//                }
//            }
//        }
//
//        return hasilPayroll ;
//    }
//
//    @Override
//    public PayrollJubileum searchJubileumMasaKerjaDetailSys(PayrollJubileum bean) throws GeneralBOException {
//        DateTime tglPkwtAwal = new DateTime();
//        DateTime tglPkwtAkhir = new DateTime();
//        DateTime tglTetapAwal = new DateTime();
//        DateTime tglSekarang = new DateTime();
//        DateTime tglAktifUser = new DateTime();
//
//        Timestamp datePkwtAwal = null;
//        Timestamp datePkwtAkhir = new Timestamp(Calendar.getInstance().getTime().getTime());
//
//
//
//        BigInteger jumlahThnPkwt = BigInteger.valueOf(0);
//        BigInteger jumlahBlnPkwt = BigInteger.valueOf(0);
//        BigInteger jumlahHariPkwt = BigInteger.valueOf(0);
//
//        BigInteger jumlahThnTetap = BigInteger.valueOf(0);
//        BigInteger jumlahBlnTetap = BigInteger.valueOf(0);
//        BigInteger jumlahHariTetap = BigInteger.valueOf(0);
//
//        BigInteger jumlahCuti = BigInteger.valueOf(0);
//
//        PayrollJubileum payrollJubileum = new PayrollJubileum();
//
//        List<ImBiodataHistoryEntity> imHrisTipePegawaiHistory = biodataHistoryDao.getListPersonalPayroll(bean.getNip());
//        if(imHrisTipePegawaiHistory.size() > 0){
//            for(ImBiodataHistoryEntity imBiodataHistoryEntity : imHrisTipePegawaiHistory){
//                if(imBiodataHistoryEntity.getTipePegawai().equalsIgnoreCase(bean.getTipePegawai())){
//                    //Mengambil tanggal antara mulai PKWT sampai berakhir PKWT
//                    tglPkwtAwal = new DateTime(imBiodataHistoryEntity.getTanggalAktif());
//                    tglPkwtAkhir = new DateTime(CommonUtil.convertTimestampToDate(imBiodataHistoryEntity.getCreatedDate()));
//                    payrollJubileum.setStTanggalPkwtAwal(tglPkwtAwal.getDayOfMonth() + "-" + tglPkwtAwal.getMonthOfYear() + "-" + tglPkwtAwal.getYear());
//                    payrollJubileum.setStTanggalPkwtAkhir(tglPkwtAkhir.getDayOfMonth() + "-" + tglPkwtAkhir.getMonthOfYear() + "-" + tglPkwtAkhir.getYear());
//                    tglTetapAwal = tglPkwtAkhir.plusDays(1);
//                    payrollJubileum.setStTanggalPegawaiTetapAwal(tglTetapAwal.getDayOfMonth() + "-" + tglTetapAwal.getMonthOfYear() + "-" +tglTetapAwal.getYear());
//                }
//            }
//        }else{
//            payrollJubileum.setStTanggalPkwtAwal("-");
//            payrollJubileum.setStTanggalPkwtAkhir("-");
//        }
//
//        List<ImBiodataEntity> imHrisTipePegawai = biodataDao.getListPersonal(bean.getNip());
//        if(imHrisTipePegawai != null){
//            for(ImBiodataEntity imBiodataEntity : imHrisTipePegawai){
//                tglAktifUser = new DateTime(imBiodataEntity.getTanggalAktif());
//                datePkwtAwal = new Timestamp(imBiodataEntity.getTanggalAktif().getTime());
//                tglTetapAwal = new DateTime(imBiodataEntity.getTanggalAktif());
//                if(imHrisTipePegawaiHistory.size() ==0){
//                    payrollJubileum.setStTanggalPegawaiTetapAwal(CommonUtil.convertDateToString(imBiodataEntity.getTanggalAktif()));
//                }
//            }
//        }
//
//        //Pengambilan Jumlah Hari Cuti selama menjadi pekerja di Perusahaan (Mulai tanggal aktif sampai dengan tanggal sekarang)
//        List<ItCutiPegawaiEntity> itCutiPegawaiEntities = cutiPegawaiDao.getDataCutiPegawai(bean.getNip(), datePkwtAwal, datePkwtAkhir);
//        if(itCutiPegawaiEntities.size() > 0){
//            for(ItCutiPegawaiEntity itCutiPegawaiEntity : itCutiPegawaiEntities){
//                jumlahCuti = jumlahCuti.add(itCutiPegawaiEntity.getLamaHariCuti());
//            }
//        }
//
//        //Lama Pkwt
//        jumlahHariPkwt= BigInteger.valueOf(Days.daysBetween(tglPkwtAwal, tglPkwtAkhir).getDays());
//        BigInteger bagiPkwt = jumlahHariPkwt.divide(BigInteger.valueOf(2));
//        jumlahHariPkwt= jumlahHariPkwt.mod(BigInteger.valueOf(30));
//        Period p = new Period(tglPkwtAwal, tglPkwtAkhir, PeriodType.yearMonthDayTime());
//
//        payrollJubileum.setLamaPkwt(p.getYears()+ " Tahun." + p.getMonths() + " Bulan, " + p.getDays() + " Hari.");
//
//        //Lama Karyawan Tetap
//        jumlahThnTetap = BigInteger.valueOf(Years.yearsBetween(tglTetapAwal, tglSekarang).getYears());
//        jumlahBlnTetap = BigInteger.valueOf(Months.monthsBetween(tglTetapAwal, tglSekarang).getMonths());
//        jumlahBlnTetap = jumlahBlnTetap.mod(BigInteger.valueOf(12));
//        jumlahHariTetap= BigInteger.valueOf(Days.daysBetween(tglTetapAwal, tglSekarang).getDays());
//        jumlahHariTetap= jumlahHariTetap.mod(BigInteger.valueOf(30));
//
//        Date sekarang = new Date();
//        payrollJubileum.setStTanggalPegawaiTetapAkhir(CommonUtil.convertDateToString(sekarang));
//        payrollJubileum.setLamaPegawaiTetap(jumlahThnTetap + " Tahun, " + jumlahBlnTetap + " Bulan, " + jumlahHariTetap + " Hari");
//
//        //Lama Karyawan Masa Kerja
//        jumlahThnTetap = BigInteger.valueOf(Years.yearsBetween(tglAktifUser, tglSekarang).getYears());
//        jumlahBlnTetap = BigInteger.valueOf(Months.monthsBetween(tglAktifUser, tglSekarang).getMonths());
//        jumlahBlnTetap = jumlahBlnTetap.mod(BigInteger.valueOf(12));
//        jumlahHariTetap= BigInteger.valueOf(Days.daysBetween(tglAktifUser, tglSekarang).getDays());
//        jumlahHariTetap= jumlahHariTetap.mod(BigInteger.valueOf(30));
//        payrollJubileum.setMasaKerja(jumlahThnTetap + " Tahun, " + jumlahBlnTetap + " Bulan, " + jumlahHariTetap + " Hari.");
//
//
//        return payrollJubileum;
//    }
//
//    @Override
//    public PayrollPph getDetailEditPphSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollPphEntity> payrollPphs = new ArrayList<>();
//        PayrollPph payrollPph = new PayrollPph();
//
//        payrollPphs = payrollPphDao.getDataView(payrollId);
//        if(payrollPphs.size() > 0){
//            for(ItPayrollPphEntity itPayrollPphEntity : payrollPphs){
//                payrollPph.setPphId(itPayrollPphEntity.getPphId());
//                payrollPph.setPkp(CommonUtil.numbericFormat(itPayrollPphEntity.getPkp(),"###,###"));
//                payrollPph.setPkpNilai(itPayrollPphEntity.getPkp());
//                payrollPph.setPphGaji(CommonUtil.numbericFormat(itPayrollPphEntity.getPphGaji(),"###,###"));
//                payrollPph.setPphGajiNilai(itPayrollPphEntity.getPphGaji());
//                payrollPph.setBruto(CommonUtil.numbericFormat(itPayrollPphEntity.getBruto(),"###,###"));
//                payrollPph.setBrutoNilai(itPayrollPphEntity.getBruto());
//                payrollPph.setReduce(CommonUtil.numbericFormat(itPayrollPphEntity.getReduce(),"###,###"));
//                payrollPph.setReduceNilai(itPayrollPphEntity.getReduce());
//                payrollPph.setNip(itPayrollPphEntity.getNip());
//                payrollPph.setBulan(itPayrollPphEntity.getBulan());
//                payrollPph.setTahun(itPayrollPphEntity.getTahun());
//                payrollPph.setPtkp(CommonUtil.numbericFormat(itPayrollPphEntity.getPtkp(),"###,###"));
//                payrollPph.setPtkpNilai(itPayrollPphEntity.getPtkp());
//                payrollPph.setNetto(CommonUtil.numbericFormat(itPayrollPphEntity.getNetto(),"###,###"));
//                payrollPph.setNettoNilai(itPayrollPphEntity.getNetto());
//                payrollPph.setBiayaJabatan(CommonUtil.numbericFormat(itPayrollPphEntity.getBiayaJabatan(),"###,###"));
//                payrollPph.setBiayaJabatanNilai(itPayrollPphEntity.getBiayaJabatan());
//                payrollPph.setHutangPph(CommonUtil.numbericFormat(itPayrollPphEntity.getHutangPph(),"###,###"));
//                payrollPph.setHutangPphNilai(itPayrollPphEntity.getHutangPph());
//                payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjanganPph(),"###,###"));
//                payrollPph.setTunjanganPphNilaiBulan(itPayrollPphEntity.getTunjanganPph());
//
//                payrollPph.setGaji(CommonUtil.numbericFormat(itPayrollPphEntity.getGaji(),"###,###"));
//                payrollPph.setGajiNilai(itPayrollPphEntity.getGaji());
//                payrollPph.setSankhus(CommonUtil.numbericFormat(itPayrollPphEntity.getSankhus(),"###,###"));
//                payrollPph.setSankhusNilai(itPayrollPphEntity.getSankhus());
//                payrollPph.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjanganJabatanStruktural(),"###,###"));
//                payrollPph.setTunjanganJabatanStrukturalNilai(itPayrollPphEntity.getTunjanganJabatanStruktural());
//                payrollPph.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjanganStruktural(),"###,###"));
//                payrollPph.setTunjanganStrukturalNilai(itPayrollPphEntity.getTunjanganStruktural());
//                payrollPph.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjanganStrategis(),"###,###"));
//                payrollPph.setTunjanganStrategisNilai(itPayrollPphEntity.getTunjanganStrategis());
//                payrollPph.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjanganPeralihan(),"###,###"));
//                payrollPph.setTunjanganPeralihanNilai(itPayrollPphEntity.getTunjanganPeralihan());
//                payrollPph.setTotalTunjanganLain(CommonUtil.numbericFormat(itPayrollPphEntity.getTotalTunjLain(),"###,###"));
//                payrollPph.setTotalTunjanganLainNilai(itPayrollPphEntity.getTotalTunjLain());
//                payrollPph.setTunjanganTambahan(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjTambahan(),"###,###"));
//                payrollPph.setTunjanganTambahanNilai(itPayrollPphEntity.getTunjTambahan());
//                payrollPph.setPemondokan(CommonUtil.numbericFormat(itPayrollPphEntity.getPemondokan(),"###,###"));
//                payrollPph.setPemondokanNilai(itPayrollPphEntity.getPemondokan());
//                payrollPph.setKomunikasi(CommonUtil.numbericFormat(itPayrollPphEntity.getKomunikasi(),"###,###"));
//                payrollPph.setKomunikasiNilai(itPayrollPphEntity.getKomunikasi());
//                payrollPph.setTotalRlab(CommonUtil.numbericFormat(itPayrollPphEntity.getTotalRlab(),"###,###"));
//                payrollPph.setTotalRlabNilai(itPayrollPphEntity.getTotalRlab());
//                payrollPph.setIuranPegawai(CommonUtil.numbericFormat(itPayrollPphEntity.getIuranPegawai(),"###,###"));
//                payrollPph.setIuranPegawaiNilai(itPayrollPphEntity.getIuranPegawai());
//                payrollPph.setTunjanganLembur(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjanganLembur(),"###,###"));
//                payrollPph.setTunjanganLemburNilai(itPayrollPphEntity.getTunjanganLembur());
//                payrollPph.setTunjanganPensiun(CommonUtil.numbericFormat(itPayrollPphEntity.getTunjanganPensiun(),"###,###"));
//                payrollPph.setTunjanganPensiunNilai(itPayrollPphEntity.getTunjanganPensiun());
//                payrollPph.setBpjsTk(CommonUtil.numbericFormat(itPayrollPphEntity.getBpjsTk(),"###,###"));
//                payrollPph.setBpjsTkNilai(itPayrollPphEntity.getBpjsTk());
//                payrollPph.setBpjsKs(CommonUtil.numbericFormat(itPayrollPphEntity.getBpjsKs(),"###,###"));
//                payrollPph.setBpjsKsNilai(itPayrollPphEntity.getBpjsKs());
//                payrollPph.setBonus(CommonUtil.numbericFormat(itPayrollPphEntity.getBonus(),"###,###"));
//                payrollPph.setBonusNilai(itPayrollPphEntity.getBonus());
//            }
//        }
//
//        return payrollPph;
//    }
//    public List<PayrollTunjanganLain> getDetailEditTunjLainSys(String payrollId) throws GeneralBOException {
//        List<PayrollTunjanganLain> listOfResult = new ArrayList<>();
//        List<ItPayrollTunjanganLainEntity> listPayrollTunjLain = new ArrayList<>();
//        listPayrollTunjLain = payrollTunjanganLainDao.getDataView(payrollId);
//        if (listPayrollTunjLain.size()>0){
//            for (ItPayrollTunjanganLainEntity payrollTunjanganLainLoop: listPayrollTunjLain){
//                PayrollTunjanganLain payrollTunjanganLain = new PayrollTunjanganLain();
//                payrollTunjanganLain.setTunjLainId(payrollTunjanganLainLoop.getTunjLainId());
//                payrollTunjanganLain.setNamaTunjangan(payrollTunjanganLainLoop.getNamaTunjangan());
//                payrollTunjanganLain.setPayrollId(payrollTunjanganLainLoop.getPayrollId());
//                payrollTunjanganLain.setBulan(payrollTunjanganLainLoop.getBulan());
//                payrollTunjanganLain.setTahun(payrollTunjanganLainLoop.getTahun());
//                payrollTunjanganLain.setNip(payrollTunjanganLainLoop.getNip());
//                payrollTunjanganLain.setNilai(CommonUtil.numbericFormat(payrollTunjanganLainLoop.getNilai(),"###,###"));
//                payrollTunjanganLain.setNilaiNilai(payrollTunjanganLainLoop.getNilai());
//
//                listOfResult.add(payrollTunjanganLain);
//
//            }
//        }
//
//
//        return listOfResult;
//    }
//
//    @Override
//    public PayrollRapel getDetailEditRapelSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollRapelEntity> payrollEntities = null;
//        PayrollRapel payrollRapel = new PayrollRapel();
//
//        payrollEntities = payrollRapelDao.getRapel(payrollId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollRapelEntity itPayrollRapelEntity : payrollEntities){
//                payrollRapel.setGajiGolonganLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getGajiGolonganLama(), "###,###"));
//                payrollRapel.setTunjanganUmkLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganUmkLama(), "###,###"));
//                payrollRapel.setTunjanganStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganStrukturalLama(), "###,###"));
//                payrollRapel.setTunjanganJabatanStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganJabatanStrukturalLama(), "###,###"));
//                payrollRapel.setTunjanganStrategisLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganStrategisLama(), "###,###"));
//                payrollRapel.setTunjanganAirListrikLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganAirListrikLama(), "###,###"));
//                payrollRapel.setTunjanganPerumahanLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganPerumahanLama(), "###,###"));
//
//                payrollRapel.setGajiGolonganBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getGajiGolonganBaru(), "###,###"));
//                payrollRapel.setTunjanganUmkBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganUmkBaru(), "###,###"));
//                payrollRapel.setTunjanganStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganStrukturalBaru(), "###,###"));
//                payrollRapel.setTunjanganJabatanStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganJabatanStrukturalBaru(), "###,###"));
//                payrollRapel.setTunjanganStrategisBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganStrategisBaru(), "###,###"));
//                payrollRapel.setTunjanganAirListrikBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganAirListrikBaru(), "###,###"));
//                payrollRapel.setTunjanganPerumahanBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganPerumahanBaru(), "###,###"));
//
//                payrollRapel.setGajiGolongan(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihGajiGolongan(), "###,###"));
//                payrollRapel.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihTunjanganUmk(), "###,###"));
//                payrollRapel.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihTunjanganStruktural(), "###,###"));
//                payrollRapel.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihTunjanganJabatanStruktural(), "###,###"));
//                payrollRapel.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihTunjanganStrategis(), "###,###"));
//                payrollRapel.setTunjanganAirListrik(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihTunjanganAirListrik(), "###,###"));
//                payrollRapel.setTunjanganPerumahan(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihTunjanganPerumahan(), "###,###"));
//
//                payrollRapel.setGolonganLama(itPayrollRapelEntity.getImGolonganLamaEntity().getGolonganName().substring(9) + " / " + itPayrollRapelEntity.getPointLama());
//                payrollRapel.setGolonganBaru(itPayrollRapelEntity.getImGolonganBaruEntity().getGolonganName().substring(9) + " / " + itPayrollRapelEntity.getPointBaru());
//                payrollRapel.setJumlahBulan(itPayrollRapelEntity.getJumlahBlnRapel());
//                payrollRapel.setRapelId(itPayrollRapelEntity.getRapelId());
//
//                payrollRapel.setTotalRapelInsentif(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelInsentif(), "###,###"));
//                payrollRapel.setTotalRapelJubileum(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelJubileum(), "###,###"));
//                payrollRapel.setTotalRapelThr(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelThr(), "###,###"));
//                payrollRapel.setTotalRapelPendidikan(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelPendidikan(), "###,###"));
//                payrollRapel.setTotalRapelBulan(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelBulan(), "###,###"));
//                payrollRapel.setTotalRapelLembur(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelLembur(), "###,###"));
//
//                payrollRapel.setTotalRapel(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapel(), "###,###"));
//                payrollRapel.setTotalRapelBulan(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelBulan(), "###,###"));
//                payrollRapel.setTotalRapelFinal(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelFinal(), "###,###"));
//            }
//        }
//
//        return payrollRapel;
//    }
//
//    @Override
//    public PayrollRapelThr getDetailEditRapelThrSys(String rapelId) throws GeneralBOException {
//        List<ItPayrollRapelThrEntity> payrollEntities = null;
//        PayrollRapelThr payrollRapelThr = new PayrollRapelThr();
//
//        payrollEntities = payrollRapelThrDao.getRapelThr(rapelId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollRapelThrEntity itPayrollRapelEntity : payrollEntities){
//                payrollRapelThr.setThrGajiGolonganLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollThrEntity().getGajiGolongan(), "###,###"));
//                payrollRapelThr.setThrUmkLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollThrEntity().getTunjanganUmk(), "###,###"));
//                payrollRapelThr.setThrStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollThrEntity().getTunjanganStruktural(), "###,###"));
//                payrollRapelThr.setThrJabStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollThrEntity().getTunjanganJabatanStruktural(), "###,###"));
//                payrollRapelThr.setThrStrategisLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollThrEntity().getTunjanganStrategis(), "###,###"));
//
//                payrollRapelThr.setThrGajiGolonganBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrGajiGolonganNilaiBaru(), "###,###"));
//                payrollRapelThr.setThrUmkBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrUmkNilaiBaru(), "###,###"));
//                payrollRapelThr.setThrStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrStrukturalNilaiBaru(), "###,###"));
//                payrollRapelThr.setThrJabStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrJabStrukturalNilaiBaru(), "###,###"));
//                payrollRapelThr.setThrStrategisBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrStrategisNilaiBaru(), "###,###"));
//
//                payrollRapelThr.setThrGajiGolonganSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrGajiGolonganNilaiSelisihBaru(), "###,###"));
//                payrollRapelThr.setThrUmkSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrUmkNilaiSelisihBaru(), "###,###"));
//                payrollRapelThr.setThrStrukturalSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrStrukturalNilaiSelisihBaru(), "###,###"));
//                payrollRapelThr.setThrJabStrukturalSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrJabStrukturalNilaiSelisihBaru(), "###,###"));
//                payrollRapelThr.setThrStrategisSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getThrStrategisNilaiSelisihBaru(), "###,###"));
//
//                payrollRapelThr.setTotalRapelSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelNilaiSelisihBaru(), "###,###"));
//
//            }
//        }
//
//        return payrollRapelThr;
//    }
//
//    @Override
//    public PayrollRapelJubileum getDetailEditRapelJubileumSys(String rapelId) throws GeneralBOException {
//        List<ItPayrollRapelJubileumEntity> payrollEntities = null;
//        PayrollRapelJubileum payrollRapelJubileum = new PayrollRapelJubileum();
//
//        payrollEntities = payrollRapelJubileumDao.getRapelJubileum(rapelId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollRapelJubileumEntity itPayrollRapelEntity : payrollEntities){
//                payrollRapelJubileum.setJubileumGajiGolonganLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollJubileumEntity().getGajiGolongan(), "###,###"));
//                payrollRapelJubileum.setJubileumUmkLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollJubileumEntity().getTunjanganUmk(), "###,###"));
//                payrollRapelJubileum.setJubileumStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollJubileumEntity().getTunjanganStruktural(), "###,###"));
//                payrollRapelJubileum.setJubileumJabStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollJubileumEntity().getTunjanganJabStruktural(), "###,###"));
//                payrollRapelJubileum.setJubileumPeralihanLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollJubileumEntity().getTunjanganPeralihan(), "###,###"));
//
//                payrollRapelJubileum.setJubileumGajiGolonganBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumGajiGolonganNilaiBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumUmkBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumUmkNilaiBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumStrukturalNilaiBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumJabStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumJabStrukturalNilaiBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumPeralihanBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumPeralihanNilaiBaru(), "###,###"));
//
//                payrollRapelJubileum.setJubileumGajiGolonganSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumGajiGolonganNilaiSelisihBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumUmkSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumUmkNilaiSelisihBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumStrukturalSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumStrukturalNilaiSelisihBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumJabStrukturalSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumJabStrukturalNilaiSelisihBaru(), "###,###"));
//                payrollRapelJubileum.setJubileumPeralihanSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getJubileumPeralihanNilaiSelisihBaru(), "###,###"));
//
//                payrollRapelJubileum.setTotalRapelSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelNilaiSelisih(), "###,###"));
//                payrollRapelJubileum.setTotalRapelJubileum(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelJubileumNilai(), "###,###"));
//
//            }
//        }
//
//        return payrollRapelJubileum;
//    }
//
//    @Override
//    public PayrollRapelPendidikan getDetailEditRapelPendidikanSys(String rapelId) throws GeneralBOException {
//        List<ItPayrollRapelPendidikanEntity> payrollEntities = null;
//        PayrollRapelPendidikan payrollRapelPendidikan = new PayrollRapelPendidikan();
//
//        payrollEntities = payrollRapelPendidikanDao.getRapelPendidikan(rapelId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollRapelPendidikanEntity itPayrollRapelEntity : payrollEntities){
//                payrollRapelPendidikan.setPendidikanGajiGolonganLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollPendidikanEntity().getGajiGolongan(), "###,###"));
//                payrollRapelPendidikan.setPendidikanUmkLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollPendidikanEntity().getTunjanganUmk(), "###,###"));
//                payrollRapelPendidikan.setPendidikanStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollPendidikanEntity().getTunjanganStruktural(), "###,###"));
//                payrollRapelPendidikan.setPendidikanJabStrukturalLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollPendidikanEntity().getTunjanganJabatanStruktural(), "###,###"));
//                payrollRapelPendidikan.setPendidikanStrategisLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollPendidikanEntity().getTunjanganStrategis(), "###,###"));
//                payrollRapelPendidikan.setPendidikanAirListrikLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getPayrollPendidikanEntity().getTunjanganAirListrik(), "###,###"));
//
//                payrollRapelPendidikan.setPendidikanGajiGolonganBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanGajiGolonganNilaiBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanUmkBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanUmkNilaiBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanStrukturalNilaiBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanJabStrukturalBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanJabStrukturalNilaiBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanStrategisBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanStrategisNilaiBaru(), "###,###"));
//                if(itPayrollRapelEntity.getPendidikanAirListrikNilaiBaru() != null){
//                    payrollRapelPendidikan.setPendidikanAirListrikBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanAirListrikNilaiBaru(), "###,###"));
//                }else{
//                    payrollRapelPendidikan.setPendidikanAirListrikBaru(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                }
//
//                payrollRapelPendidikan.setPendidikanGajiGolonganSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanGajiGolonganNilaiSelisihBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanUmkSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanUmkNilaiSelisihBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanStrukturalSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanStrukturalNilaiSelisihBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanJabStrukturalSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanJabStrukturalNilaiSelisihBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanAirListrikSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanAirListrikNilaiSelisihBaru(), "###,###"));
//                payrollRapelPendidikan.setPendidikanStrategisSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getPendidikanStrategisNilaiSelisihBaru(), "###,###"));
//                payrollRapelPendidikan.setTotalRapelSelisihBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelNilaiSelisihBaru(), "###,###"));
//            }
//        }
//
//        return payrollRapelPendidikan;
//    }
//
//    @Override
//    public PayrollRapelInsentif getDetailEditRapelInsentifSys(String rapelId) throws GeneralBOException {
//        List<ItPayrollRapelInsentifEntity> payrollEntities = null;
//        PayrollRapelInsentif payrollRapel = new PayrollRapelInsentif();
//
//        payrollEntities = payrollRapelInsentifDao.getRapelInsentif(rapelId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollRapelInsentifEntity itPayrollRapelEntity : payrollEntities){
//                payrollRapel.setMasaKerja(itPayrollRapelEntity.getMasaKerja());
//                payrollRapel.setPotonganInsentifNilai(itPayrollRapelEntity.getPotonganInsentif());
//                payrollRapel.setPotonganInsentifIndividu(CommonUtil.numbericFormat(itPayrollRapelEntity.getPotonganInsentifIndividuBaruNilai(), "###,###"));
//                payrollRapel.setBrutoInsentif(CommonUtil.numbericFormat(itPayrollRapelEntity.getInsentifBrutoBaruNilai(), "###,###"));
//
//                payrollRapel.setSmkStandart(itPayrollRapelEntity.getSmkStandart() + "");
//                payrollRapel.setSmkHuruf(itPayrollRapelEntity.getSmkHuruf());
//                payrollRapel.setSmkAngka(itPayrollRapelEntity.getSmkAngka() + "");
//                payrollRapel.setInsentifYangDiterimaBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getInsentifJumlahBaruNilai(), "###,###"));
//                payrollRapel.setInsentifYangDiterimaLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getInsentifJumlahLamaNilai(), "###,###"));
//                payrollRapel.setInsentifYangDiterimaSelisih(CommonUtil.numbericFormat(itPayrollRapelEntity.getTotalRapelInsentifNilai(), "###,###"));
//            }
//        }
//
//        return payrollRapel;
//    }
//
//    @Override
//    public PayrollJasprod getDetailEditJasprodSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollJasprodEntity> payrollEntities = null;
//        PayrollJasprod payrollJasprod = new PayrollJasprod();
//
//        payrollEntities = payrollJasprodDao.getJasprod(payrollId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollJasprodEntity itPayrollJasprodEntity : payrollEntities){
//
//                BigDecimal gajiMasaKerja = itPayrollJasprodEntity.getBruto().multiply(BigDecimal.valueOf(itPayrollJasprodEntity.getMasaKerja()));
//                BigDecimal gajiMasaKerjaFaktor = itPayrollJasprodEntity.getGajiMasaKerjaFaktor();
//                BigDecimal gajiKotorFaktor = itPayrollJasprodEntity.getBruto().multiply(itPayrollJasprodEntity.getFaktorKali());
//                BigDecimal masaKerjaFaktorSmk = itPayrollJasprodEntity.getGajiMasaKerjaFaktorSmk();;
//                BigDecimal tambahan = itPayrollJasprodEntity.getTambahan();
//                payrollJasprod.setMasaKerja(itPayrollJasprodEntity.getMasaKerja());
//                BigDecimal nilaiJasprod = masaKerjaFaktorSmk.add(tambahan);
//
//                payrollJasprod.setStFaktor(itPayrollJasprodEntity.getFaktorKali().toString());
//                payrollJasprod.setStNilaiSmk(itPayrollJasprodEntity.getNilaiSmk().toString());
//                payrollJasprod.setStPersenSmk(itPayrollJasprodEntity.getPersenSmk().toString());
//                payrollJasprod.setGajiGolongan(CommonUtil.numbericFormat(itPayrollJasprodEntity.getGajiGolonganNilai(), "###,###"));
//                payrollJasprod.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollJasprodEntity.getTunjanganUmkNilai(), "###,###"));
//                payrollJasprod.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollJasprodEntity.getTunjanganStrukturalNilai(), "###,###"));
//                payrollJasprod.setTunjanganJabStruktural(CommonUtil.numbericFormat(itPayrollJasprodEntity.getTunjanganJabStrukturalNilai(), "###,###"));
//                payrollJasprod.setTunjPeralihan(CommonUtil.numbericFormat(itPayrollJasprodEntity.getTunjPeralihanNilai(), "###,###"));
//                payrollJasprod.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollJasprodEntity.getTunjanganStrategisNilai(), "###,###"));
//                payrollJasprod.setGajiBruto(CommonUtil.numbericFormat(itPayrollJasprodEntity.getBruto(), "###,###"));
//                payrollJasprod.setGajiMasaKerja(CommonUtil.numbericFormat(itPayrollJasprodEntity.getGajiMasaKerja(), "###,###"));
//                payrollJasprod.setPerhitungan(CommonUtil.numbericFormat(masaKerjaFaktorSmk, "###,###"));
//                payrollJasprod.setGajiMasaKerjaFaktor(CommonUtil.numbericFormat(gajiMasaKerjaFaktor, "###,###"));
//                payrollJasprod.setTambahan(CommonUtil.numbericFormat(tambahan, "###,###"));
//                payrollJasprod.setNilaiJasprod(CommonUtil.numbericFormat(nilaiJasprod, "###,###"));
//            }
//        }
//
//        return payrollJasprod;
//    }
//
//    @Override
//    public PayrollInsentif getDetailEditInsentifSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollInsentifEntity> payrollEntities = null;
//        PayrollInsentif payrollInsentif = new PayrollInsentif();
//
//        payrollEntities = payrollInsentifDao.getInsentif(payrollId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollInsentifEntity itPayrollInsentifEntity: payrollEntities){
//
//                payrollInsentif.setBulanMulai(itPayrollInsentifEntity.getBulanMulai());
//                payrollInsentif.setBulanSampai(itPayrollInsentifEntity.getBulanSampai());
//                payrollInsentif.setTahunInsentif(itPayrollInsentifEntity.getTahunInsentif());
//
//                payrollInsentif.setMasaKerja(itPayrollInsentifEntity.getMasaKerja());
//                payrollInsentif.setSmkStandart(itPayrollInsentifEntity.getSmkStandart());
//                payrollInsentif.setSmkHuruf(itPayrollInsentifEntity.getSmkHuruf());
//                payrollInsentif.setSmkAngka(itPayrollInsentifEntity.getSmkAngka());
//                payrollInsentif.setTahun(itPayrollInsentifEntity.getTahun());
//                payrollInsentif.setPotonganinsentif(itPayrollInsentifEntity.getPotonganinsentif() + "");
//                payrollInsentif.setInsentifyangDiterima(CommonUtil.numbericFormat(itPayrollInsentifEntity.getJumlahInsentif(), "###,###"));
//                payrollInsentif.setStrJumlahPph(CommonUtil.numbericFormat(itPayrollInsentifEntity.getJumlahPph(), "###,###"));
//                payrollInsentif.setGajiGolongan(CommonUtil.numbericFormat(itPayrollInsentifEntity.getGajiGolongan(), "###,###"));
//                payrollInsentif.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollInsentifEntity.getTunjanganUmk(), "###,###"));
//                payrollInsentif.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollInsentifEntity.getTunjanganStruktural(), "###,###"));
//                payrollInsentif.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollInsentifEntity.getTunjanganPeralihan(), "###,###"));
//                payrollInsentif.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollInsentifEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payrollInsentif.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollInsentifEntity.getTunjanganStrategis(), "###,###"));
//                payrollInsentif.setJumlahBruto(CommonUtil.numbericFormat(itPayrollInsentifEntity.getJumlahBruto(), "###,###"));
//
//                payrollInsentif.setPotonganinsentifIndividu(CommonUtil.numbericFormat(itPayrollInsentifEntity.getPotonganinsentifIndividu(), "###,###"));
//
//            }
//        }
//
//        return payrollInsentif;
//    }
//
//    @Override
//    public PayrollJubileum getDetailEditJubileumSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollJubileumEntity> payrollEntities = null;
//        PayrollJubileum payrollJubileum = new PayrollJubileum();
//
//        payrollEntities = payrollJubileumDao.getJubileum(payrollId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollJubileumEntity itPayrollJubileumEntity : payrollEntities){
//                payrollJubileum.setGajiGolongan(CommonUtil.numbericFormat(itPayrollJubileumEntity.getGajiGolongan(), "###,###"));
//                payrollJubileum.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollJubileumEntity.getTunjanganUmk(), "###,###"));
//                payrollJubileum.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollJubileumEntity.getTunjanganStruktural(), "###,###"));
//                payrollJubileum.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollJubileumEntity.getTunjanganPeralihan(), "###,###"));
//                payrollJubileum.setTunjanganJabStruktural(CommonUtil.numbericFormat(itPayrollJubileumEntity.getTunjanganJabStruktural(), "###,###"));
//                payrollJubileum.setBesarJubileum(CommonUtil.numbericFormat(itPayrollJubileumEntity.getTotal(), "###,###"));
//                payrollJubileum.setTotalJubileum(CommonUtil.numbericFormat(itPayrollJubileumEntity.getGrandTotal(), "###,###"));
//                payrollJubileum.setPphJubileum(CommonUtil.numbericFormat(itPayrollJubileumEntity.getPphJubileum(), "###,###"));
//                payrollJubileum.setNettoJubileum(CommonUtil.numbericFormat(itPayrollJubileumEntity.getNettoJubileum(), "###,###"));
//            }
//
//        }
//
//        return payrollJubileum;
//    }
//
//    @Override
//    public PayrollPendidikan getDetailEditPendidikanSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollPendidikanEntity> payrollEntities = null;
//        PayrollPendidikan payrollPendidikan = new PayrollPendidikan();
//
//        payrollEntities = payrollPendidikanDao.getPendidikan(payrollId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollPendidikanEntity itPayrollPendidikanEntity : payrollEntities){
//                payrollPendidikan.setBulanAktif(itPayrollPendidikanEntity.getBulanAktif());
//                payrollPendidikan.setGaji(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getGajiGolongan(), "###,###"));
//                payrollPendidikan.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganPeralihan(), "###,###"));
//                payrollPendidikan.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganUmk(), "###,###"));
//                payrollPendidikan.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganStruktural(), "###,###"));
//                payrollPendidikan.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payrollPendidikan.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganStrategis(), "###,###"));
//                payrollPendidikan.setTunjanganKompensasi(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganKompensasi(), "###,###"));
//                payrollPendidikan.setTunjanganAirListrik(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganAirListrik(), "###,###"));
//                payrollPendidikan.setTunjanganPph(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTunjanganPph(), "###,###"));
//                payrollPendidikan.setTotalPendidikan(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTotalPendidikan(), "###,###"));
//                payrollPendidikan.setTotalPendidikanBersih(CommonUtil.numbericFormat(itPayrollPendidikanEntity.getTotalPendidikanBersih(), "###,###"));
//            }
//        }else{
//            payrollPendidikan.setGaji("0");
//            payrollPendidikan.setTunjanganPeralihan("0");
//            payrollPendidikan.setTunjanganUmk("0");
//            payrollPendidikan.setTunjanganStruktural("0");
//            payrollPendidikan.setTunjanganJabatanStruktural("0");
//            payrollPendidikan.setTunjanganStrategis("0");
//            payrollPendidikan.setTunjanganKompensasi("0");
//            payrollPendidikan.setTunjanganAirListrik("0");
//            payrollPendidikan.setTunjanganPph("0");
//            payrollPendidikan.setTotalPendidikan("0");
//            payrollPendidikan.setTotalPendidikanBersih("0");
//        }
//
//        return payrollPendidikan;
//    }
//
//    @Override
//    public PayrollPensiun getDetailEditPensiunSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollPensiunEntity> payrollEntities = null;
//        PayrollPensiun payrollPensiun = new PayrollPensiun();
//
//        payrollEntities = payrollPensiunDao.getPensiun(payrollId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollPensiunEntity itPayrollPensiunEntity : payrollEntities){
//                payrollPensiun.setGajiGolongan(CommonUtil.numbericFormat(itPayrollPensiunEntity.getGajiGolongan(), "###,###"));
//                payrollPensiun.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollPensiunEntity.getTunjanganUmk(), "###,###"));
//                payrollPensiun.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollPensiunEntity.getTunjanganStruktural(), "###,###"));
//                payrollPensiun.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollPensiunEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payrollPensiun.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollPensiunEntity.getTunjanganPeralihan(), "###,###"));
//                payrollPensiun.setFaktorPensiun(CommonUtil.numbericFormat(itPayrollPensiunEntity.getFaktorPensiun(), "###,###"));
//                payrollPensiun.setFaktorPenghargaan(CommonUtil.numbericFormat(itPayrollPensiunEntity.getFaktorPenghargaan(), "###,###"));
//                payrollPensiun.setJumlahTunjangan(CommonUtil.numbericFormat(itPayrollPensiunEntity.getJumlahTunjangan(), "###,###"));
//                payrollPensiun.setTunjanganPensiun(CommonUtil.numbericFormat(itPayrollPensiunEntity.getTunjanganPensiun(), "###,###"));
//                payrollPensiun.setTunjanganPenghargaan(CommonUtil.numbericFormat(itPayrollPensiunEntity.getTunjanganPenghargaan(), "###,###"));
//                payrollPensiun.setHasil(CommonUtil.numbericFormat(itPayrollPensiunEntity.getJumlahBiayaPensiun(), "###,###"));
//
//                payrollPensiun.setJumlahBiayaPensiun(CommonUtil.numbericFormat(itPayrollPensiunEntity.getJumlahBiayaPensiun(), "###,###"));
//                payrollPensiun.setPenggantianPerumahan(CommonUtil.numbericFormat(itPayrollPensiunEntity.getPenggantianPerumahan(), "###,###"));
//                payrollPensiun.setTotalPensiun(CommonUtil.numbericFormat(itPayrollPensiunEntity.getJumlahBiayaPensiun()
//                        .add(itPayrollPensiunEntity.getPenggantianPerumahan()), "###,###"));
//                payrollPensiun.setPphPensiun(CommonUtil.numbericFormat(itPayrollPensiunEntity.getPphPensiun(), "###,###"));
//                payrollPensiun.setNettoPensiun(CommonUtil.numbericFormat(itPayrollPensiunEntity.getNettoPensiun(), "###,###"));
//
//                payrollPensiun.setTanggalAktif(itPayrollPensiunEntity.getTanggalAktif());
//                payrollPensiun.setTanggalPensiun(itPayrollPensiunEntity.getTanggalPensiun());
//                payrollPensiun.setStTanggalAktif(CommonUtil.convertDateToString(itPayrollPensiunEntity.getTanggalAktif()));
//                payrollPensiun.setStTanggalPensiun(CommonUtil.convertDateToString(itPayrollPensiunEntity.getTanggalPensiun()));
//            }
//        }
//
//        return payrollPensiun;
//    }
//
//    @Override
//    public PayrollThr getDetailEditThrSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollThrEntity> payrollEntities = null;
//        PayrollThr payrollThr = new PayrollThr();
//
//        payrollEntities = payrollThrDao.getThr(payrollId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollThrEntity itPayrollThrEntity : payrollEntities){
//                payrollThr.setGajiGolongan(CommonUtil.numbericFormat(itPayrollThrEntity.getGajiGolongan(), "###,###"));
//                payrollThr.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollThrEntity.getTunjanganUmk(), "###,###"));
//                payrollThr.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollThrEntity.getTunjanganStruktural(), "###,###"));
//                payrollThr.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollThrEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payrollThr.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollThrEntity.getTunjanganStrategis(), "###,###"));
//                payrollThr.setTunjanganPph(CommonUtil.numbericFormat(itPayrollThrEntity.getTunjanganPph(), "###,###"));
//                payrollThr.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollThrEntity.getTunjanganPeralihan(), "###,###"));
//                payrollThr.setTotalThr(CommonUtil.numbericFormat(itPayrollThrEntity.getTotalThr(), "###,###"));
//                payrollThr.setTotalThrBersih(CommonUtil.numbericFormat(itPayrollThrEntity.getTotalThrBersih(), "###,###"));
//                payrollThr.setBulanAktif(itPayrollThrEntity.getBulanAktif());
//            }
//        }
//
//        return payrollThr;
//    }
//
//    @Override
//    public List<PayrollRapelLembur> getDetailEditRapelLemburSys(String rapelId) throws GeneralBOException {
//        List<ItPayrollRapelLemburEntity> payrollEntities = null;
//        List<PayrollRapelLembur> payrollRapelLembur = new ArrayList<>();
//
//        payrollEntities = payrollRapelLemburDao.getRapelLembur(rapelId);
//        if(payrollEntities.size() > 0){
//            for(ItPayrollRapelLemburEntity itPayrollRapelEntity : payrollEntities){
//                PayrollRapelLembur rapelLembur = new PayrollRapelLembur();
//
//                rapelLembur.setStrTanggal(CommonUtil.convertDateToString(itPayrollRapelEntity.getTanggal()));
//                rapelLembur.setJamLembur(itPayrollRapelEntity.getJamLembur());
//                rapelLembur.setStrBiayaLemburLama(CommonUtil.numbericFormat(itPayrollRapelEntity.getBiayaLemburLama(), "###,###"));
//                rapelLembur.setStrBiayaLemburBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getBiayaLemburBaru(), "###,###"));
//                rapelLembur.setStrSelisihBiayaLemburBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getSelisihBiayaLemburBaru(), "###,###"));
//                rapelLembur.setStrTunjanganUmkBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganUmkBaru(), "###,###"));
//                rapelLembur.setStrTunjanganPeralihanBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getTunjanganPeralihanBaru(), "###,###"));
//                rapelLembur.setStrGajiGolonganBaru(CommonUtil.numbericFormat(itPayrollRapelEntity.getGajiGolonganBaru(), "###,###"));
//                rapelLembur.setSelisihBiayaLemburBaru(itPayrollRapelEntity.getSelisihBiayaLemburBaru());
//
//                payrollRapelLembur.add(rapelLembur);
//            }
//        }
//
//        return payrollRapelLembur;
//    }
//
//    @Override
//    public Payroll getDetailEditSys(String payrollId) throws GeneralBOException {
//        Payroll payroll = new Payroll();
//        ItPayrollEntity itPayrollEntity2 = null;
//        itPayrollEntity2 = payrollDao.getById("payrollId", payrollId, "Y");
//
//        payroll.setPayrollId(itPayrollEntity2.getPayrollId());
//        payroll.setKelompokId(itPayrollEntity2.getImPosition().getKelompokId());
//        payroll.setBulan(itPayrollEntity2.getBulan());
//        payroll.setTahun(itPayrollEntity2.getTahun());
//        payroll.setNip(itPayrollEntity2.getNip());
//        payroll.setNama(itPayrollEntity2.getNama());
//        payroll.setDanaPensiun(itPayrollEntity2.getImBiodataEntity().getDanaPensiun());
//        if(itPayrollEntity2.getImBiodataEntity() != null){
//            if(!"".equalsIgnoreCase(itPayrollEntity2.getImBiodataEntity().getDanaPensiun()) && itPayrollEntity2.getImBiodataEntity().getDanaPensiun() != null){
//                payroll.setDanaPensiunName(itPayrollEntity2.getImBiodataEntity().getImDanaPensiunEntity().getDanaPensiun());
//            }
//        }
//        payroll.setNpwp(itPayrollEntity2.getImBiodataEntity().getNpwp());
//        if(itPayrollEntity2.getImBiodataEntity().getTanggalAktif() != null){
//            payroll.setStTanggalAktif(CommonUtil.convertDateToString(itPayrollEntity2.getImBiodataEntity().getTanggalAktif()));
//        }
//        if(itPayrollEntity2.getImBiodataEntity().getTanggalPensiun() != null){
//            payroll.setStTanggalPensiun(CommonUtil.convertDateToString(itPayrollEntity2.getImBiodataEntity().getTanggalPensiun()));
//        }
//        String dateSekarang = new SimpleDateFormat("dd-MM-yyyy").format(Calendar.getInstance().getTime());
//        payroll.setStTanggalAktifSekarang(dateSekarang);
//        DateTime tglAktif = new DateTime(itPayrollEntity2.getImBiodataEntity().getTanggalAktif());
//        DateTime tglSekarang = new DateTime();
//        Period p = new Period(tglAktif, tglSekarang , PeriodType.yearMonthDayTime());
//        payroll.setMasaKerjaTahun(p.getYears());
//        payroll.setMasaKerjaBulan(p.getMonths());
//        payroll.setTipePegawai(itPayrollEntity2.getImBiodataEntity().getTipePegawai());
//        payroll.setTipePegawaiName(itPayrollEntity2.getImBiodataEntity().getImHrisTipePegawai().getTipePegawaiName());
//        payroll.setPositionId(itPayrollEntity2.getPositionId());
//        payroll.setPositionName(itPayrollEntity2.getPositionName());
//        payroll.setDepartmentId(itPayrollEntity2.getDepartmentId());
//        payroll.setDepartmentName(itPayrollEntity2.getDepartmentName());
//        payroll.setBranchId(itPayrollEntity2.getBranchId());
//        payroll.setBranchName(itPayrollEntity2.getBranchName());
//        payroll.setGolonganId(itPayrollEntity2.getGolonganId());
//        payroll.setGolonganName(itPayrollEntity2.getGolonganName());
//        payroll.setStatusKeluarga(itPayrollEntity2.getStatusKeluarga());
//        payroll.setJumlahAnak(itPayrollEntity2.getJumlahAnak());
//        payroll.setGender(itPayrollEntity2.getImBiodataEntity().getGender());
//        payroll.setMasaKerjaGol(itPayrollEntity2.getMasaKerjaGol());
//        payroll.setStMasaKerjaGol(String.valueOf(itPayrollEntity2.getMasaKerjaGol()));
//        payroll.setStatusPegawai(itPayrollEntity2.getImBiodataEntity().getStatusPegawai());
//        payroll.setGolonganDapenId(itPayrollEntity2.getGolonganDapenId());
//        //mengambil golongan dapen name
//        if (!("TP03").equalsIgnoreCase(payroll.getTipePegawai())){
//            List<ImGolonganDapenEntity> golonganDapenEntity = new ArrayList<>();
//            try{
//                golonganDapenEntity = golonganDapenDao.getGolonganById(itPayrollEntity2.getImBiodataEntity().getGolonganDapenId());
//                for (ImGolonganDapenEntity golonganDapenLoop: golonganDapenEntity){
//                    payroll.setGolonganDapenName(golonganDapenLoop.getGolonganDapenName());
//                }
//            }catch(GeneralBOException e){
//
//            }
//        }else{
//            payroll.setGolonganDapenName("");
//        }
//
//        payroll.setGajiPensiun(CommonUtil.numbericFormat(itPayrollEntity2.getGajiPensiun(), "###,###")); //Gaji
//        payroll.setGajiPensiunNilai(itPayrollEntity2.getGajiPensiun()); //Gaji Nilai
//
//
//        //Flag - Flag
//        payroll.setFlagPayroll(itPayrollEntity2.getFlagPayroll());
//        payroll.setFlagRapel(itPayrollEntity2.getFlagRapel());
//        payroll.setFlagThr(itPayrollEntity2.getFlagThr());
//        payroll.setFlagJasprod(itPayrollEntity2.getFlagJasprod());
//        payroll.setFlagInsentif(itPayrollEntity2.getFlagInsentif());
//        payroll.setFlagPensiun(itPayrollEntity2.getFlagPensiun());
//        payroll.setFlagJubileum(itPayrollEntity2.getFlagJubileum());
//        payroll.setFaktorKeluargaId(itPayrollEntity2.getFaktorKeluargaId()); //setIdKeluarga
//       /* payroll.setCentangListrikAir(itPayrollEntity2.getCentangListrikAir());
//        payroll.setCentangPerumahan(itPayrollEntity2.getCentangPerumahan());*/
//
//        ImBiodataEntity biodata = null;
//        biodata = biodataDao.getById("nip", payroll.getNip());
//        List<ItPayrollEntity> payrollPensiunList = null;
//        payrollPensiunList = payrollDao.cekPensiun(payroll.getNip());
//        itPayrollEntity2.setNettoPensiun(BigDecimal.valueOf(0));
//        itPayrollEntity2.setNettoJubileum(BigDecimal.valueOf(0));
//        if(itPayrollEntity2.getImBiodataEntity().getTipePegawai().equalsIgnoreCase("TP01")){
//            if(itPayrollEntity2.getFlagPensiun() != null){
//                if(itPayrollEntity2.getFlagPensiun().equalsIgnoreCase("Y")){
//                    if(itPayrollEntity2.getImPosition() != null){
//                        if(!itPayrollEntity2.getImPosition().getKelompokId().equalsIgnoreCase("KL01")){
//                            if(payrollPensiunList.size() == 0){
//                                payroll.setFlagPensiunOn(cekPensiun(payroll.getBulan(), payroll.getTahun(), biodata.getTanggalPensiun()));
//                                if(cekPensiun(payroll.getBulan(), payroll.getTahun(), biodata.getTanggalPensiun()) == true){
//                                    payroll.setStTanggalPensiun(CommonUtil.convertDateToString(biodata.getTanggalPensiun()));
//                                }
//                                List<ItPayrollPensiunEntity> pensiunEntities = payrollPensiunDao.getPensiun(payrollId);
//                                if(pensiunEntities.size() > 0){
//                                    for(ItPayrollPensiunEntity itPayrollPensiunEntity: pensiunEntities){
//                                        if(itPayrollPensiunEntity.getFlag().equalsIgnoreCase("Y")){
//                                            payroll.setCentangPensiun("Y");
//                                            itPayrollEntity2.setNettoPensiun(itPayrollPensiunEntity.getNettoPensiun());
//                                            break;
//                                        }
//                                    }
//                                }
//                            }else{
//                                for(ItPayrollEntity itPayrollEntity : payrollPensiunList){
//                                    if(itPayrollEntity.getPayrollId().equalsIgnoreCase(payrollId)){
//                                        itPayrollEntity2.setNettoPensiun(itPayrollEntity.getNettoPensiun());
//                                    }else{
//                                        itPayrollEntity2.setNettoPensiun(BigDecimal.valueOf(0));
//                                    }
//                                }
//                                payroll.setCentangPensiun("Y");
//                                payroll.setFlagPensiunOn(false);
//                            }
//                        }else{
//                            payroll.setFlagPensiunOn(false);
//                            itPayrollEntity2.setNettoPensiun(BigDecimal.valueOf(0));
//                        }
//                    }else{
//                        payroll.setFlagPensiunOn(false);
//                        itPayrollEntity2.setNettoPensiun(BigDecimal.valueOf(0));
//                    }
//                }
//            }
//
//
//        }
//
//        List<ItPersonilPositionEntity> itPersonilPositionEntity = null;
//        itPersonilPositionEntity = personilPositionDao.getListNip(itPayrollEntity2.getNip());
//        for(ItPersonilPositionEntity itPersonilPositionEntity1: itPersonilPositionEntity){
//            payroll.setFlagPjs(itPersonilPositionEntity1.getPjs());
//        }
//
//        //komponen A
//        payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity2.getGajiGolongan(), "###,###")); //Gaji
//        payroll.setGajiGolonganNilai(itPayrollEntity2.getGajiGolongan()); //Gaji Nilai
//        payroll.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganUmk(), "###,###")); //santunan Khusus
//        payroll.setTunjanganUmkNilai(itPayrollEntity2.getTunjanganUmk()); //santunan Khusus Nilai
//        payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganJabatanStruktural(), "###,###")); //Tunj. Jabatan
//        payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity2.getTunjanganJabatanStruktural()); //Tunj. Jabatan  Nilai
//        payroll.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganStruktural(), "###,###")); //Tunj. Struktural
//        payroll.setTunjanganStrukturalNilai(itPayrollEntity2.getTunjanganStruktural()); //Tunj. Struktural Nilai
//        payroll.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganStrategis(), "###,###"));
//        payroll.setTunjanganStrategisNilai(itPayrollEntity2.getTunjanganStrategis());
//        payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganPeralihan(), "###,###"));
//        payroll.setTunjanganPeralihanNilai(itPayrollEntity2.getTunjanganPeralihan());
//        payroll.setTunjanganTambahan(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganTambahan(), "###,###"));
//        payroll.setTunjanganTambahanNilai(itPayrollEntity2.getTunjanganTambahan());
//        payroll.setTunjanganLain(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganLain(), "###,###"));
//        payroll.setTunjanganLainNilai(itPayrollEntity2.getTunjanganLain());
//        payroll.setPemondokan(CommonUtil.numbericFormat(itPayrollEntity2.getPemondokan(), "###,###"));
//        payroll.setPemondokanNilai(itPayrollEntity2.getPemondokan());
//        payroll.setKomunikasi(CommonUtil.numbericFormat(itPayrollEntity2.getKomunikasi(), "###,###"));
//        payroll.setKomunikasiNilai(itPayrollEntity2.getKomunikasi());
//        payroll.setTunjanganLembur(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganLembur(), "###,###")); //lembur
//        payroll.setTunjanganLemburNilai(itPayrollEntity2.getTunjanganLembur()); //tambahan lain Nilai
//        payroll.setTambahanLain(CommonUtil.numbericFormat(itPayrollEntity2.getTambahanLain(), "###,###")); //lembur
//        payroll.setTambahanLainNilai(itPayrollEntity2.getTambahanLain()); //tambahan lain Nilai
//        payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity2.getTotalA(), "###,###"));
//        payroll.setTotalANilai(itPayrollEntity2.getTotalA());
//
//
//        //Komponen B
//        //Rlab
//        payroll.setTunjanganRumah(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganRumah(),"###,###"));
//        payroll.setTunjanganRumahNilai(itPayrollEntity2.getTunjanganRumah());
//        payroll.setTunjanganListrik(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganListrik(),"###,###"));
//        payroll.setTunjanganListrikNilai(itPayrollEntity2.getTunjanganListrik());
//        payroll.setTunjanganAir(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganAir(),"###,###"));
//        payroll.setTunjanganAirNilai(itPayrollEntity2.getTunjanganAir());
//        payroll.setTunjanganBbm(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganBBM(),"###,###"));
//        payroll.setTunjanganBBMNilai(itPayrollEntity2.getTunjanganBBM());
//        payroll.setTotalRlab(CommonUtil.numbericFormat(itPayrollEntity2.getTotalRlab(),"###,###"));
//        payroll.setTotalRlabNilai(itPayrollEntity2.getTotalRlab());
//
//        //Tunjangan Bpjs
//        payroll.setTunjanganBpjsKs(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganBpjsKs(),"###,###"));
//        payroll.setTunjanganBpjsKsNilai(itPayrollEntity2.getTunjanganBpjsKs());
//        payroll.setTunjanganBpjsTk(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganBpjsTk(),"###,###"));
//        payroll.setTunjanganBpjsTkNilai(itPayrollEntity2.getTunjanganBpjsTk());
//
//        //Tunjangan Dapen
//        payroll.setTunjanganDapen(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganDapen(),"###,###"));
//        payroll.setTunjanganDapenNilai(itPayrollEntity2.getTunjanganDapen());
//
//        //Tunjangan Sosial Lainnya
//        payroll.setTunjanganSosialLain(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganSosialLain(),"###,###"));
//        payroll.setTunjanganSosialLainNilai(itPayrollEntity2.getTunjanganSosialLain());
//
//        //Tunjangan PPH
//        payroll.setTunjanganPph(CommonUtil.numbericFormat(itPayrollEntity2.getTunjanganPph(),"###,###"));
//        payroll.setTunjanganPphNilai(itPayrollEntity2.getTunjanganPph());
//
//        //Total B
//        payroll.setTotalB(CommonUtil.numbericFormat(itPayrollEntity2.getTotalB(), "###,###"));
//        payroll.setTotalBNilai(itPayrollEntity2.getTotalB());
//
//
//        //Komponen C
//        //Iuran Dapen
//        payroll.setIuranDapenPeg(CommonUtil.numbericFormat(itPayrollEntity2.getIuranDapenPeg(),"###,###"));
//        payroll.setIuranDapenPegNilai(itPayrollEntity2.getIuranDapenPeg());
//        payroll.setIuranDapenPersh(CommonUtil.numbericFormat(itPayrollEntity2.getIuranDapenPersh(),"###,###"));
//        payroll.setIuranDapenPershNilai(itPayrollEntity2.getIuranDapenPersh());
//
//        //Komponen D
//        payroll.setIdLainLain(itPayrollEntity2.getIdLainLain());
//        payroll.setLainLain(CommonUtil.numbericFormat(itPayrollEntity2.getLainLain(),"###,###"));
//        payroll.setLainLainNilai(itPayrollEntity2.getLainLain());
//
//        //Iuran Bpjs
//        payroll.setIuranBpjsKsKary(CommonUtil.numbericFormat(itPayrollEntity2.getIuranBpjsKsKary(),"###,###"));
//        payroll.setIuranBpjsKsKaryNilai(itPayrollEntity2.getIuranBpjsKsKary());
//        payroll.setIuranBpjsKsPersh(CommonUtil.numbericFormat(itPayrollEntity2.getIuranBpjsKsPers(),"###,###"));
//        payroll.setIuranBpjsKsPersNilai(itPayrollEntity2.getIuranBpjsKsPers());
//        payroll.setIuranBpjsTkKary(CommonUtil.numbericFormat(itPayrollEntity2.getIuranBpjsTkKary(),"###,###"));
//        payroll.setIuranBpjsTkKaryNilai(itPayrollEntity2.getIuranBpjsTkKary());
//        payroll.setIuranBpjsTkPers(CommonUtil.numbericFormat(itPayrollEntity2.getIuranBpjsTkPers(),"###,###"));
//        payroll.setIuranBpjsTkPersNilai(itPayrollEntity2.getIuranBpjsTkPers());
//
//        //Iuran PPh Gaji
//        payroll.setPphGaji(CommonUtil.numbericFormat(itPayrollEntity2.getPphGaji(),"###,###"));
//        payroll.setPphGajiNilai(itPayrollEntity2.getPphGaji());
//
//        //iuran Total Potongan Lain
//        payroll.setTotalPotonganLain(CommonUtil.numbericFormat(itPayrollEntity2.getTotalPotonganLain(),"###,###"));
//        payroll.setTotalPotonganLainNilai(itPayrollEntity2.getTotalPotonganLain());
//
//        //iuran Ypks
//        payroll.setIuranYpks(CommonUtil.numbericFormat(itPayrollEntity2.getIuranYpks(),"###,###"));
//        payroll.setIuranYpksNilai(itPayrollEntity2.getIuranYpks());
//
//        //Total C
//        payroll.setTotalC(CommonUtil.numbericFormat(itPayrollEntity2.getTotalC(), "###,###"));
//        payroll.setTotalCNilai(itPayrollEntity2.getTotalC());
//
//
//        //Rincian Potongan C
//        payroll.setKopkar(CommonUtil.numbericFormat(itPayrollEntity2.getKopkar(),"###,###"));
//        payroll.setIuranSp(CommonUtil.numbericFormat(itPayrollEntity2.getIuranSp(),"###,###"));
//        payroll.setIuranPiikb(CommonUtil.numbericFormat(itPayrollEntity2.getIuranPiikb(),"###,###"));
//        payroll.setBankBri(CommonUtil.numbericFormat(itPayrollEntity2.getBankBri(),"###,###"));
//        payroll.setBankMandiri(CommonUtil.numbericFormat(itPayrollEntity2.getBankMandiri(),"###,###"));
//        payroll.setInfaq(CommonUtil.numbericFormat(itPayrollEntity2.getInfaq(),"###,###"));
//        payroll.setPerkesDanObat(CommonUtil.numbericFormat(itPayrollEntity2.getPerkesDanObat(),"###,###"));
//        payroll.setListrik(CommonUtil.numbericFormat(itPayrollEntity2.getListrik(),"###,###"));
//        payroll.setIuranProfesi(CommonUtil.numbericFormat(itPayrollEntity2.getIuranProfesi(),"###,###"));
//        payroll.setPotonganLain(CommonUtil.numbericFormat(itPayrollEntity2.getPotonganLain(),"###,###"));
//
//        payroll.setKopkarNilai(itPayrollEntity2.getKopkar());
//        payroll.setIuranSpNilai(itPayrollEntity2.getIuranSp());
//        payroll.setIuranPiikbNilai(itPayrollEntity2.getIuranPiikb());
//        payroll.setBankBriNilai(itPayrollEntity2.getBankBri());
//        payroll.setBankMandiriNilai(itPayrollEntity2.getBankMandiri());
//        payroll.setInfaqNilai(itPayrollEntity2.getInfaq());
//        payroll.setPerkesDanObatNilai(itPayrollEntity2.getListrik());
//        payroll.setListrikNilai(itPayrollEntity2.getIuranProfesi());
//        payroll.setIuranProfesiNilai(itPayrollEntity2.getIuranProfesi());
//        payroll.setPotonganLainNilai(itPayrollEntity2.getPotonganLain());
//
//        //Gaji Bersih
//        payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity2.getGajiBersih(),"###,###"));
//        payroll.setTotalGajiBersihNilai(itPayrollEntity2.getGajiBersih());
//
//        if(itPayrollEntity2.getPphGaji() != null){
//            payroll.setPphGaji(CommonUtil.numbericFormat(itPayrollEntity2.getPphGaji(), "###,###")); //PPh Gaji
//            payroll.setPphGajiNilai(itPayrollEntity2.getPphGaji()); //PPh Gaji
//        }else{
//            payroll.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###")); //PPh Gaji
//            payroll.setPphGajiNilai(BigDecimal.valueOf(0)); //PPh Gaji
//        }
//
//        payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity2.getGajiBersih(), "###,###"));
//        payroll.setTotalGajiBersihNilai(itPayrollEntity2.getGajiBersih());
//
//        //macam peralihan
//        payroll.setStPeralihanGapok(CommonUtil.numbericFormat(itPayrollEntity2.getPeralihanGapok(), "###,###"));
//        payroll.setPeralihanGapok(itPayrollEntity2.getPeralihanGapok());
//        payroll.setStPeralihanSankhus(CommonUtil.numbericFormat(itPayrollEntity2.getPeralihanSankhus(), "###,###"));
//        payroll.setPeralihanSankhus(itPayrollEntity2.getPeralihanSankhus());
//        payroll.setStPeralihanTunjangan(CommonUtil.numbericFormat(itPayrollEntity2.getPeralihanTunjangan(), "###,###"));
//        payroll.setPeralihanTunjangan(itPayrollEntity2.getPeralihanTunjangan());
//
//        if(("12").equalsIgnoreCase(itPayrollEntity2.getBulan())){
//            payroll.setTotalLain11BulanNilai(itPayrollEntity2.getTotalLain11Bulan());
//            payroll.setPph11BulanNilai(itPayrollEntity2.getPph11Bulan());
//            payroll.setPphSeharusnyaNilai(itPayrollEntity2.getPphSeharusnya());
//            payroll.setSelisihPphNilai(itPayrollEntity2.getSelisihPph());
//
//            payroll.setTotalLain11Bulan(CommonUtil.numbericFormat(itPayrollEntity2.getTotalLain11Bulan(), "###,###"));
//            payroll.setPph11Bulan(CommonUtil.numbericFormat(itPayrollEntity2.getPph11Bulan(), "###,###"));
//            payroll.setPphSeharusnya(CommonUtil.numbericFormat(itPayrollEntity2.getPphSeharusnya(), "###,###"));
//            payroll.setSelisihPph(CommonUtil.numbericFormat(itPayrollEntity2.getSelisihPph(), "###,###"));
//        }
//
//        return payroll;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<Payroll> copyDataPayroll(List<Payroll> bean) throws GeneralBOException {
//        List<Payroll> resultPayroll = new ArrayList<>();
//        for(Payroll payroll : bean){
//            Payroll payroll2 = new Payroll();
//            payroll2.setPayrollId(payroll.getPayrollId());
//            payroll2.setBulan(payroll.getBulan());
//            payroll2.setTahun(payroll.getTahun());
//            payroll2.setBulan1(payroll.getBulan1());
//            payroll2.setTahun1(payroll.getTahun1());
//            payroll2.setNip(payroll.getNip());
//            payroll2.setNama(payroll.getNama());
//            payroll2.setNpwp(payroll.getNpwp());
//            payroll2.setKelompokId(payroll.getKelompokId());
//            payroll2.setKelompokName(payroll.getKelompokName());
//            payroll2.setPositionId(payroll.getPositionId());
//            payroll2.setPositionName(payroll.getPositionName());
//            payroll2.setGolonganId(payroll.getGolonganId());
//            payroll2.setGolonganName(payroll.getGolonganName());
//            payroll2.setDepartmentId(payroll.getDepartmentId());
//            payroll2.setDepartmentName(payroll.getDepartmentName());
//            payroll2.setBranchId(payroll.getBranchId());
//            payroll2.setBranchName(payroll.getBranchName());
//            payroll2.setPoint(payroll.getPoint());
//            payroll2.setStatusKeluarga(payroll.getStatusKeluarga());
//            payroll2.setStatusPegawai(payroll.getStatusPegawai());
//            payroll2.setJumlahAnak(payroll.getJumlahAnak());
//            payroll2.setFaktorKeluargaId(payroll.getFaktorKeluargaId());
//            payroll2.setNilaiFaktorKeluarga(payroll.getNilaiFaktorKeluarga());
//            payroll2.setMultifikator(payroll.getMultifikator());
//            payroll2.setGajiPensiunBpjs(payroll.getGajiPensiunBpjs());
//            payroll2.setGajiPensiunBpjsNilai(payroll.getGajiPensiunBpjsNilai());
//            payroll2.setGajiBpjs(payroll.getGajiBpjs());
//            payroll2.setGajiBpjsNilai(payroll.getGajiBpjsNilai());
//            payroll2.setGajiPensiun(payroll.getGajiPensiun());
//            payroll2.setGajiPensiunNilai(payroll.getGajiPensiunNilai());
//            payroll2.setGajiGolongan(payroll.getGajiGolongan());
//            payroll2.setGajiGolonganNilai(payroll.getGajiGolonganNilai());
//            payroll2.setTunjanganUmk(payroll.getTunjanganUmk());
//            payroll2.setTunjanganUmkNilai(payroll.getTunjanganUmkNilai());
//            payroll2.setTunjanganPeralihanNilai(payroll.getTunjanganPeralihanNilai());
//            payroll2.setTunjanganPeralihan(payroll.getTunjanganPeralihan());
//            payroll2.setTunjanganStruktural(payroll.getTunjanganStruktural());
//            payroll2.setTunjanganStrukturalNilai(payroll.getTunjanganStrukturalNilai());
//            payroll2.setTunjanganPendidikan(payroll.getTunjanganPendidikan());
//            payroll2.setTunjanganPendidikanNilai(payroll.getTunjanganPendidikanNilai());
//            payroll2.setTunjanganJabatanStruktural(payroll.getTunjanganJabatanStruktural());
//            payroll2.setTunjanganJabatanStrukturalNilai(payroll.getTunjanganJabatanStrukturalNilai());
//            payroll2.setTunjanganStrategis(payroll.getTunjanganStrategis());
//            payroll2.setTunjanganStrategisNilai(payroll.getTunjanganStrategisNilai());
//            payroll2.setKompensasi(payroll.getKompensasi());
//            payroll2.setKompensasiNilai(payroll.getKompensasiNilai());
//            payroll2.setTunjanganTransport(payroll.getTunjanganTransport());
//            payroll2.setTunjanganTransportNilai(payroll.getTunjanganTransportNilai());
//            payroll2.setTunjanganAirListrik(payroll.getTunjanganAirListrik());
//            payroll2.setTunjanganAirListrikNilai(payroll.getTunjanganAirListrikNilai());
//            payroll2.setTunjanganPengobatan(payroll.getTunjanganPengobatan());
//            payroll2.setTunjanganPengobatanNilai(payroll.getTunjanganPengobatanNilai());
//            payroll2.setTunjanganPerumahan(payroll.getTunjanganPerumahan());
//            payroll2.setTunjanganPerumahanNilai(payroll.getTunjanganPerumahanNilai());
//            payroll2.setTunjanganPph(payroll.getTunjanganPph());
//            payroll2.setTunjanganPphNilai(payroll.getTunjanganPphNilai());
//            payroll2.setTunjanganBajuDinas(payroll.getTunjanganBajuDinas());
//            payroll2.setTunjanganBajuDinasNilai(payroll.getTunjanganBajuDinasNilai());
//            payroll2.setTunjanganLain(payroll.getTunjanganLain());
//            payroll2.setTunjanganLainNilai(payroll.getTunjanganLainNilai());
//            payroll2.setTunjanganLembur(payroll.getTunjanganLembur());
//            payroll2.setTunjanganLemburNilai(payroll.getTunjanganLemburNilai());
//            payroll2.setUmr(payroll.getUmr());
//            payroll2.setGender(payroll.getGender());
//            payroll2.setTotalA(payroll.getTotalA());
//            payroll2.setTotalANilai(payroll.getTotalANilai());
//            payroll2.setTotalB(payroll.getTotalB());
//            payroll2.setTotalBNilai(payroll.getTotalBNilai());
//            payroll2.setTotalC(payroll.getTotalC());
//            payroll2.setTotalCNilai(payroll.getTotalCNilai());
//            payroll2.setPphGaji(payroll.getPphGaji());
//            payroll2.setPphGajiNilai(payroll.getPphGajiNilai());
//            payroll2.setPphPengobatan(payroll.getPphPengobatan());
//            payroll2.setPphPengobatanNilai(payroll.getPphPengobatanNilai());
//            payroll2.setIuranPensiun(payroll.getIuranPensiun());
//            payroll2.setIuranPensiunNilai(payroll.getIuranPensiunNilai());
//            payroll2.setIuranBpjsTk(payroll.getIuranBpjsTk());
//            payroll2.setIuranBpjsTkNilai(payroll.getIuranBpjsTkNilai());
//            payroll2.setIuranBpjsPensiun(payroll.getIuranBpjsPensiun());
//            payroll2.setIuranBpjsPensiunNilai(payroll.getIuranBpjsPensiunNilai());
//            payroll2.setIuranBpjsKesehatan(payroll.getIuranBpjsKesehatan());
//            payroll2.setIuranBpjsKesehatanNilai(payroll.getIuranBpjsKesehatanNilai());
//            payroll2.setUangMukaLainnya(payroll.getUangMukaLainnya());
//            payroll2.setUangMukaLainnyaNilai(payroll.getUangMukaLainnyaNilai());
//            payroll2.setKekuranganBpjsTk(payroll.getKekuranganBpjsTk());
//            payroll2.setKekuranganBpjsTkNilai(payroll.getKekuranganBpjsTkNilai());
//            payroll2.setPengobatan(payroll.getPengobatan());
//            payroll2.setPengobatanNilai(payroll.getPengobatanNilai());
//            payroll2.setKoperasi(payroll.getKoperasi());
//            payroll2.setKoperasiNilai(payroll.getKoperasiNilai());
//            payroll2.setDansos(payroll.getDansos());
//            payroll2.setDansosNilai(payroll.getDansosNilai());
//            payroll2.setSP(payroll.getSP());
//            payroll2.setSPNilai(payroll.getSPNilai());
//            payroll2.setBazis(payroll.getBazis());
//            payroll2.setBazisNilai(payroll.getBazisNilai());
//            payroll2.setBapor(payroll.getBapor());
//            payroll2.setBaporNilai(payroll.getBaporNilai());
//            payroll2.setZakat(payroll.getZakat());
//            payroll2.setZakatNilai(payroll.getZakatNilai());
//            payroll2.setLainLain(payroll.getLainLain());
//            payroll2.setLainLainNilai(payroll.getLainLainNilai());
//            payroll2.setApprovalFlag(payroll.getApprovalFlag());
//            payroll2.setApprovalId(payroll.getApprovalId());
//            payroll2.setApprovalDate(payroll.getApprovalDate());
//            payroll2.setStApprovalDate(payroll.getStApprovalDate());
//            payroll2.setFlagPayroll(payroll.getFlagPayroll());
//            payroll2.setFlagThr(payroll.getFlagThr());
//            payroll2.setFlagPendidikan(payroll.getFlagPendidikan());
//            payroll2.setFlagJasprod(payroll.getFlagJasprod());
//            payroll2.setFlagRapel(payroll.getFlagRapel());
//            payroll2.setFlagZakat(payroll.getFlagZakat());
//            payroll2.setFlagJubileum(payroll.getFlagJubileum());
//            payroll2.setFlagPensiun(payroll.getFlagPensiun());
//            payroll2.setFlagPromosi(payroll.getFlagPromosi());
//            payroll2.setFlagPjs(payroll.getFlagPjs());
//            payroll2.setDanaPensiunName(payroll.getDanaPensiunName());
//            payroll2.setDanaPensiun(payroll.getDanaPensiun());
//            payroll2.setDanaPensiunNilai(payroll.getDanaPensiunNilai());
//            payroll2.setBpjsJht(payroll.getBpjsJht());
//            payroll2.setBpjsJhtNilai(payroll.getBpjsJhtNilai());
//            payroll2.setBpjsPensiun(payroll.getBpjsPensiun());
//            payroll2.setBpjsPensiunNilai(payroll.getBpjsPensiunNilai());
//            payroll2.setTotalThr(payroll.getTotalThr());
//            payroll2.setTotalThrNilai(payroll.getTotalThrNilai());
//            payroll2.setTotalPendidikan(payroll.getTotalPendidikan());
//            payroll2.setTotalPendidikanNilai(payroll.getTotalPendidikanNilai());
//            payroll2.setTotalJasProd(payroll.getTotalJasProd());
//            payroll2.setTotalJasProdNilai(payroll.getTotalJasProdNilai());
//            payroll2.setTotalPensiun(payroll.getTotalPensiun());
//            payroll2.setTotalPensiunNilai(payroll.getTotalPensiunNilai());
//            payroll2.setPphPensiun(payroll.getPphPensiun());
//            payroll2.setPphPensiunNilai(payroll.getPphPensiunNilai());
//            payroll2.setTotalRapel(payroll.getTotalRapel());
//            payroll2.setTotalRapelNilai(payroll.getTotalRapelNilai());
//            payroll2.setBesarJubileum(payroll.getBesarJubileum());
//            payroll2.setBesarJubileumNilai(payroll.getBesarJubileumNilai());
//            payroll2.setTotalJubileum(payroll.getTotalJubileum());
//            payroll2.setTotalJubileumNilai(payroll.getTotalJubileumNilai());
//            payroll2.setTotalKaliJubileum(payroll.getTotalKaliJubileum());
//            payroll2.setTotalKaliJubileumNilai(payroll.getTotalKaliJubileumNilai());
//            payroll2.setTotalTambahan(payroll.getTotalTambahan());
//            payroll2.setTotalTambahanNilai(payroll.getTotalTambahanNilai());
//            payroll2.setTanggalJubileum(payroll.getTanggalJubileum());
//            payroll2.setTotalGajiBersih(payroll.getTotalGajiBersih());
//            payroll2.setTotalGajiBersihNilai(payroll.getTotalGajiBersihNilai());
//            payroll2.setStTanggalPayroll(payroll.getStTanggalPayroll());
//            payroll2.setStTanggalAktif(payroll.getStTanggalAktif());
//            payroll2.setStTanggalAktifSekarang(payroll.getStTanggalAktifSekarang());
//            payroll2.setStTanggalPensiun(payroll.getStTanggalPensiun());
//            payroll2.setTipePegawai(payroll.getTipePegawai());
//            payroll2.setTipePegawaiName(payroll.getTipePegawaiName());
//            payroll2.setStrukturGaji(payroll.getStrukturGaji());
//            payroll2.setBiodataGaji(payroll.getBiodataGaji());
//            payroll2.setMasaKerjaTahun(payroll.getMasaKerjaTahun());
//            payroll2.setMasaKerjaBulan(payroll.getMasaKerjaBulan());
//            payroll2.setLabelJubileum(payroll.getLabelJubileum());
//            payroll2.setLabelPensiun(payroll.getLabelPensiun());
//            payroll2.setTipe(payroll.getTipe());
//
//            payroll2.setFlagJubileumOn(payroll.isFlagJubileumOn());
//            payroll2.setFlagPensiunOn(payroll.isFlagPensiunOn());
//            payroll2.setFlagPromosiOn(payroll.isFlagPromosiOn());
//            payroll2.setFlagPerumahanOn(payroll.isFlagPerumahanOn());
//            payroll2.setFlagListrikAirOn(payroll.isFlagListrikAirOn());
//            payroll2.setFlagKonsistensi(payroll.isFlagKonsistensi());
//            payroll2.setJumlahPegawai(payroll.getJumlahPegawai());
//
//            payroll2.setCentangJubileum(payroll.getCentangJubileum());
//            payroll2.setCentangPensiun(payroll.getCentangPensiun());
//            payroll2.setCentangListrikAir(payroll.getCentangListrikAir());
//            payroll2.setCentangPerumahan(payroll.getCentangPerumahan());
//
//            resultPayroll.add(payroll2);
//        }
//
//        return resultPayroll;
//    }
//
//    @Override
//    public void editDataSys(Payroll payroll) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//
//        List<Payroll> listNewPayroll = new ArrayList<>();
//        List<PayrollPph> listNewPph = new ArrayList<>();
//        List<Payroll> listOfPayroll = (List<Payroll>) session.getAttribute("listDataPayrollSearch");
//        Payroll payrollPerson = (Payroll) session.getAttribute("listDataPayrollPerson");
//        List<Payroll> listOfPayrollBackup = (List<Payroll>) session.getAttribute("listDataPayrollBackup");
//        PayrollPph listOfPph = (PayrollPph) session.getAttribute("listDataPayrollPphPerson");
//        List<PayrollPotonganLain> listOfPotonganLain = (List<PayrollPotonganLain>) session.getAttribute("listOfPotonganLain");
//        List<PayrollPensiun> listOfResultPensiun = (List<PayrollPensiun>) session.getAttribute("listDataPayrollPensiun");
//        List<PayrollJubileum> listOfResultJubileum = (List<PayrollJubileum>) session.getAttribute("listDataPayrollJubileum");
//
//        if(payrollPerson != null){
//            if(payroll.getPayrollId().equalsIgnoreCase(payrollPerson.getPayrollId())){
//
//                if(payroll.getTipePegawai().equalsIgnoreCase("TP03")){
//                    payrollPerson.setGajiGolonganNilai(payroll.getGajiGolonganNilai());
//                    payrollPerson.setGajiGolongan(CommonUtil.numbericFormat(payroll.getGajiGolonganNilai(), "###,###"));
//                }
//
//                payrollPerson.setTunjanganPeralihanNilai(payroll.getTunjanganPeralihanNilai());
//                payrollPerson.setTunjanganPeralihan(CommonUtil.numbericFormat(payroll.getTunjanganPeralihanNilai(), "###,###"));
//                payrollPerson.setKompensasiNilai(payroll.getKompensasiNilai());
//                payrollPerson.setKompensasi(CommonUtil.numbericFormat(payroll.getKompensasiNilai(), "###,###"));
//                payrollPerson.setTunjanganTransportNilai(payroll.getTunjanganTransportNilai());
//                payrollPerson.setTunjanganTransport(CommonUtil.numbericFormat(payroll.getTunjanganTransportNilai(), "###,###"));
//                payrollPerson.setTunjanganLainNilai(payroll.getTunjanganLainNilai());
//                payrollPerson.setTunjanganLain(CommonUtil.numbericFormat(payroll.getTunjanganLainNilai(), "###,###"));
//                payrollPerson.setTunjanganLemburNilai(payroll.getTunjanganLemburNilai());
//                payrollPerson.setTunjanganLembur(CommonUtil.numbericFormat(payroll.getTunjanganLemburNilai(), "###,###"));
//
//                payrollPerson.setUangMukaLainnyaNilai(payroll.getUangMukaLainnyaNilai());
//                payrollPerson.setUangMukaLainnya(CommonUtil.numbericFormat(payroll.getUangMukaLainnyaNilai(), "###,###"));
//                payrollPerson.setKekuranganBpjsTkNilai(payroll.getKekuranganBpjsTkNilai());
//                payrollPerson.setKekuranganBpjsTk(CommonUtil.numbericFormat(payroll.getKekuranganBpjsTkNilai(), "###,###"));
//
//                payrollPerson.setKoperasiNilai(payroll.getKoperasiNilai());
//                payrollPerson.setKoperasi(CommonUtil.numbericFormat(payroll.getKoperasiNilai(), "###,###"));
//                payrollPerson.setDansosNilai(payroll.getDansosNilai());
//                payrollPerson.setDansos(CommonUtil.numbericFormat(payroll.getDansosNilai(), "###,###"));
//                payrollPerson.setSPNilai(payroll.getSPNilai());
//                payrollPerson.setSP(CommonUtil.numbericFormat(payroll.getSPNilai(), "###,###"));
//                payrollPerson.setBazisNilai(payroll.getBazisNilai());
//                payrollPerson.setBazis(CommonUtil.numbericFormat(payroll.getBazisNilai(), "###,###"));
//                payrollPerson.setBaporNilai(payroll.getBaporNilai());
//                payrollPerson.setBapor(CommonUtil.numbericFormat(payroll.getBaporNilai(), "###,###"));
//                payrollPerson.setLainLainNilai(payroll.getLainLainNilai());
//                payrollPerson.setLainLain(CommonUtil.numbericFormat(payroll.getLainLainNilai(), "###,###"));
//
//                if(payroll.getTipePegawai().equalsIgnoreCase("TP03")){
//                    payrollPerson.setGajiGolonganNilai(payroll.getGajiGolonganNilai());
//                }
//
//                //Centang Listrik Air
//                if(!payroll.getCentangListrikAir().equalsIgnoreCase(payrollPerson.getCentangListrikAir())){
//                    if(payroll.getCentangListrikAir().equalsIgnoreCase("Y")){
//                        payrollPerson.setTunjanganAirListrikNilai(getTunjanganAirListrik(payrollPerson.getGolonganId()));
//                        payrollPerson.setCentangListrikAir("Y");
//                    }else{
//                        payrollPerson.setTunjanganAirListrikNilai(BigDecimal.valueOf(0));
//                        payrollPerson.setCentangListrikAir("N");
//                    }
//                    payrollPerson.setTunjanganAirListrik(CommonUtil.numbericFormat(payrollPerson.getTunjanganAirListrikNilai(), "###,###"));
//                }
//
//                //Centang Perumahan
//                if(!payroll.getCentangPerumahan().equalsIgnoreCase(payrollPerson.getCentangPerumahan())){
//                    if(payroll.getCentangPerumahan().equalsIgnoreCase("Y")){
//                        if("KL00".equalsIgnoreCase(payrollPerson.getKelompokId()) || "KL01".equalsIgnoreCase(payrollPerson.getKelompokId())){
//                            payrollPerson.setTunjanganPerumahanNilai(BigDecimal.valueOf(0));
//                        }else{
//                            payrollPerson.setTunjanganPerumahanNilai(getTunjanganPerumahan(payrollPerson.getGolonganId(), payrollPerson.getKelompokId()));
//                        }
//                        payrollPerson.setCentangPerumahan("Y");
//                    }else{
//                        payrollPerson.setTunjanganPerumahanNilai(BigDecimal.valueOf(0));
//                        payrollPerson.setCentangPerumahan("N");
//                    }
//                    payrollPerson.setTunjanganPerumahan(CommonUtil.numbericFormat(payrollPerson.getTunjanganPerumahanNilai(), "###,###"));
//                }
//
//                BigDecimal gajiKotor = jumlahGajiKotor(payrollPerson.getGajiGolonganNilai(), payrollPerson.getTunjanganUmkNilai(), payrollPerson.getTunjanganStrukturalNilai(),
//                        payroll.getTunjanganPeralihanNilai(), payrollPerson.getTunjanganJabatanStrukturalNilai(), payrollPerson.getTunjanganStrategisNilai(),
//                        payroll.getKompensasiNilai(), payrollPerson.getTunjanganTransportNilai(), payrollPerson.getTunjanganAirListrikNilai(), payrollPerson.getTunjanganPengobatanNilai(),
//                        payrollPerson.getTunjanganPerumahanNilai(), payrollPerson.getTunjanganPphNilai(), payroll.getTunjanganLainNilai(), payrollPerson.getTunjanganLemburNilai());
//                payrollPerson.setTotalANilai(gajiKotor); //Jumlah A
//                payrollPerson.setTotalA(CommonUtil.numbericFormat(gajiKotor, "###,###")); //Jumlah A
//
//                BigDecimal totalJubileum = new BigDecimal(0);
//                BigDecimal jumlahJubileum = new BigDecimal(0);
//                BigDecimal nettoJubileum = new BigDecimal(0);
//                if(payrollPerson.getCentangJubileum().equalsIgnoreCase("Y")){
//                    jumlahJubileum = payrollPerson.getBesarJubileumNilai();
//                    totalJubileum = payrollPerson.getTotalKaliJubileumNilai();
//                    nettoJubileum = payrollPerson.getNettoJubileumNilai();
//                }
//
//                BigDecimal gaji = payroll.getGajiGolonganNilai();
//                BigDecimal umk = payroll.getTunjanganUmkNilai();
//                BigDecimal struktural = payroll.getTunjanganStrukturalNilai();
//                BigDecimal peralihan = payroll.getTunjanganPeralihanNilai();
//                BigDecimal jabatanStruktural = payroll.getTunjanganJabatanStrukturalNilai();
//                if(payrollPerson.getFlagPayroll().equalsIgnoreCase("N")){
//                    //mengambil Nilai Dari bln sebelumnya jika ada
//                    List<ItPayrollEntity> itPayrollEntity = null;
//                    itPayrollEntity = payrollDao.getLastPayroll(payrollPerson.getNip());
//                    if (itPayrollEntity.size() > 0) {
//                        for (ItPayrollEntity itPayrollEntity1 : itPayrollEntity) {
//                            gaji = itPayrollEntity1.getGajiGolongan();
//                            umk = itPayrollEntity1.getTunjanganUmk();
//                            struktural = itPayrollEntity1.getTunjanganStruktural();
//                            peralihan = itPayrollEntity1.getTunjanganPeralihan();
//                            jabatanStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                        }
//                    }
//                }
//
//                //jubileum
//                List<PayrollJubileum> payrollJubileumList = new ArrayList<>();
//                if(!payroll.getCentangJubileum().equalsIgnoreCase(payrollPerson.getCentangJubileum())){
//                    if(payroll.getCentangJubileum().equalsIgnoreCase("Y")){
//                        //jika di session tidak ada jubileum yg tersedia
//                        PayrollJubileum payrollJubileum = payrollJubileum(payrollPerson.getBulan(), payrollPerson.getTahun(), payroll.getNip(), payrollPerson.getBranchId(),
//                                gaji, umk, struktural, peralihan, jabatanStruktural, payrollPerson.getFlagPayroll());
//                        payrollPerson.setFlagJubileum("Y");
//                        payrollPerson.setCentangJubileum("Y");
//                        if(listOfResultJubileum == null){
//                            listOfResultJubileum = new ArrayList<>();
//                            listOfResultJubileum.add(payrollJubileum);
//                        }else{
//                            listOfResultJubileum.add(payrollJubileum);
//                        }
//                        jumlahJubileum = payrollJubileum.getBesarJubileumNilai();
//                        totalJubileum = payrollJubileum.getTotalJubileumNilai();
//                        nettoJubileum = payrollJubileum.getNettoJubileumNilai();
//
//                        session.removeAttribute("listDataPayrollJubileum");
//                        session.setAttribute("listDataPayrollJubileum", listOfResultJubileum);
//                    }else{
//                        if(listOfResultJubileum != null){
//                            for(PayrollJubileum payrollJubileum: listOfResultJubileum){
//                                //hapus session jubileum untuk nip yang di uncheck
//                                if(payroll.getNip().equalsIgnoreCase(payrollJubileum.getNip())){
//                                    jumlahJubileum = BigDecimal.valueOf(0);
//                                    totalJubileum = BigDecimal.valueOf(0);
//                                    nettoJubileum = BigDecimal.valueOf(0);
//                                }else{
//                                    payrollJubileumList.add(payrollJubileum);
//                                }
//                            }
//                            //payrollPerson.setFlagJubileum("N");
//                            payrollPerson.setCentangJubileum("N");
//
//                            session.removeAttribute("listDataPayrollJubileum");
//                            session.setAttribute("listDataPayrollJubileum", payrollJubileumList);
//                        }
//                    }
//                    payrollPerson.setBesarJubileumNilai(jumlahJubileum);
//                    payrollPerson.setBesarJubileum(CommonUtil.numbericFormat(jumlahJubileum, "###,###"));
//                    payrollPerson.setTotalKaliJubileumNilai(totalJubileum);
//                    payrollPerson.setTotalKaliJubileum(CommonUtil.numbericFormat(totalJubileum, "###,###"));
//                    payrollPerson.setNettoJubileum(CommonUtil.numbericFormat(nettoJubileum, "###,###"));
//                    payrollPerson.setNettoJubileumNilai(nettoJubileum);
//                }
//
//                //pensiun
//                BigDecimal totalPensiun = new BigDecimal(0);
//                BigDecimal pphPensiun = new BigDecimal(0);
//
//                List<PayrollPensiun> payrollPensiunList = new ArrayList<>();
//                if(!payroll.getCentangPensiun().equalsIgnoreCase(payrollPerson.getCentangPensiun())){
//                    if(payroll.getCentangPensiun().equalsIgnoreCase("Y")){
//
//                        PayrollPensiun payrollPensiun = getPensiun(payroll.getNip(), CommonUtil.convertStringToDate(payrollPerson.getStTanggalAktif()),
//                                CommonUtil.convertStringToDate(payrollPerson.getStTanggalPensiun()), payrollPerson.getStTanggalPayroll(), payrollPerson.getGolonganName(),
//                                payrollPerson.getPoint() + "", payrollPerson.getMasaKerjaTahun() + "", payrollPerson.getMasaKerjaBulan() + "", gaji, umk,
//                                struktural, jabatanStruktural, peralihan, payrollPerson.getFlagPayroll());
//                        payrollPensiun.setNip(payroll.getNip());
//                        totalPensiun = payrollPensiun.getJumlahBiayaPensiunNilai();
//
//                        if(listOfResultPensiun == null){
//                            listOfResultPensiun = new ArrayList<>();
//                            listOfResultPensiun.add(payrollPensiun);
//                        }else{
//                            listOfResultPensiun.add(payrollPensiun);
//                        }
//                        payrollPerson.setFlagPensiun("Y");
//                        payrollPerson.setCentangPensiun("Y");
//
//                        session.removeAttribute("listDataPayrollPensiun");
//                        session.setAttribute("listDataPayrollPensiun", listOfResultPensiun);
//
//                    }else{
//                        if(listOfResultPensiun != null){
//                            for(PayrollPensiun payrollPensiun1: listOfResultPensiun){
//                                //hapus session pensiun untuk nip yang di uncheck
//                                if(payroll.getNip().equalsIgnoreCase(payrollPensiun1.getNip())){
//                                    totalPensiun = BigDecimal.valueOf(0);
//                                }else{
//                                    payrollPensiunList.add(payrollPensiun1);
//                                }
//                            }
//                            payrollPerson.setFlagPensiun("N");
//                            payrollPerson.setCentangPensiun("N");
//
//                            session.removeAttribute("listDataPayrollPensiun");
//                            session.setAttribute("listDataPayrollPensiun", payrollPensiunList);
//                        }
//                    }
//                    payrollPerson.setTotalPensiunNilai(totalPensiun);
//                }
//
//                //pphGaji
//                PayrollPph payrollPph = null;
//                /*if(payrollPerson.getFlagPayroll().equalsIgnoreCase("Y")){
//                    payrollPph=  payrollPphGaji(payrollPerson.getNip(),payrollPerson.getBranchId(), payrollPerson.getBulan(), payrollPerson.getTahun(),
//                            payrollPerson.getGolonganId(), payrollPerson.getTanggalAktif(), payrollPerson.getPoint() + "",
//                            payrollPerson.getTunjanganPengobatanNilai(), payrollPerson.getGender(), payrollPerson.getStatusKeluarga(),
//                            payrollPerson.getJumlahAnak(), payrollPerson.getTipePegawai(), payrollPerson.getStatusPegawai(), payrollPerson.getGajiGolonganNilai(),
//                            payrollPerson.getTunjanganUmkNilai(), payrollPerson.getTunjanganStrukturalNilai(), payroll.getTunjanganPeralihanNilai(),
//                            payrollPerson.getTunjanganJabatanStrukturalNilai(), payrollPerson.getTunjanganStrategisNilai(), payroll.getKompensasiNilai(),
//                            payroll.getTunjanganTransportNilai(), payrollPerson.getTunjanganAirListrikNilai(), payrollPerson.getTunjanganPerumahanNilai(), payrollPerson.getTunjanganPphNilai(), payrollPerson.getTunjanganLemburNilai(), payroll.getTunjanganLainNilai(),
//                            payrollPerson.getTotalThrNilai(), payrollPerson.getTotalPendidikanNilai(), payrollPerson.getTotalJasProdNilai(), payrollPerson.getTotalRapelNilai(),
//                            totalPensiun, totalJubileum, payrollPerson.getIuranPensiunNilai(), payrollPerson.getIuranBpjsTkNilai(),
//                            payrollPerson.getIuranBpjsPensiunNilai(), payrollPerson.getTunjanganBajuDinasNilai(),
//                            payrollPerson.getBulan(), payrollPerson.getTahun(), payrollPerson.getKelompokId());
//                }else{
//                    PayrollThr payrollAsumsiThr = getAsumsiThr(payrollPerson.getNip(), gaji, payrollPerson.getTunjanganUmkNilai(),
//                            payrollPerson.getTunjanganStrukturalNilai(), payrollPerson.getTunjanganJabatanStrukturalNilai(), payrollPerson.getTunjanganStrategisNilai(),
//                            payrollPerson.getTunjanganPphNilai(), payrollPerson.getTunjanganPeralihanNilai(), payrollPerson.getBulan(), payrollPerson.getTahun(),
//                            payrollPerson.getBranchId());
//                    PayrollPendidikan payrollAsumsiPendidikan = getAsumsiPendidikan(payrollPerson.getNip(), gaji, payrollPerson.getTunjanganUmkNilai(), payrollPerson.getTunjanganStrukturalNilai(),
//                            payrollPerson.getTunjanganJabatanStrukturalNilai(), payrollPerson.getTunjanganStrategisNilai(), payrollPerson.getKompensasiNilai(),
//                            payrollPerson.getTunjanganAirListrikNilai(), payrollPerson.getPphGajiNilai(), payrollPerson.getTunjanganPeralihanNilai(), payrollPerson.getBulan(), payrollPerson.getTahun(),
//                            payrollPerson.getBranchId());
//                    BigDecimal nilaiAsumsiJasprod = getAsumsiJasprod(payrollPerson.getNip(), payrollPerson.getBulan(), payrollPerson.getTahun(), payrollPerson.getBranchId());
//
//                    payrollPph = payrollPphGaji2(payrollPerson.getNip(), payrollPerson.getGender(), payrollPerson.getStatusKeluarga(),
//                            payrollPerson.getJumlahAnak(), payrollPerson.getTipePegawai(), payrollPerson.getStatusPegawai(), payrollPerson.getTotalThrNilai(),
//                            payrollPerson.getTotalPendidikanNilai(), payrollPerson.getTotalJasProdNilai(), payrollPerson.getTotalInsentifNilai(),
//                            payrollPerson.getTotalRapelNilai(), totalPensiun, totalJubileum, payrollAsumsiThr.getTotalThrNilai(),
//                            payrollAsumsiPendidikan.getTotalPendidikanNilai(), nilaiAsumsiJasprod);
//                }*/
//
//                payrollPerson.setPphPensiunNilai(pphPensiun);
//                payrollPerson.setTotalPensiun(CommonUtil.numbericFormat(totalPensiun, "###,###"));
//                if(pphPensiun == null){
//                    pphPensiun = BigDecimal.valueOf(0) ;
//                }
//                payrollPerson.setPphPensiun(CommonUtil.numbericFormat(pphPensiun, "###,###"));
//
//                listOfPph = payrollPph;
//                /*for (PayrollPph payrollPph1: listOfPph) {
//                    if(payroll.getNip().equalsIgnoreCase(payrollPph1.getNip())){
//                        listNewPph.add(payrollPph);
//                    }else{
//                        listNewPph.add(payrollPph1);
//                    }
//                }*/
//
//                payrollPerson.setPphGaji(payrollPph.getPphGaji()); //Pph Gaji
//                payroll.setPphGajiNilai(payrollPph.getPphGajiNilai()); //Pph Gaji Nilai
//
//                BigDecimal jumlahB = hitungTotalB(payrollPph.getPphGajiNilai(), payrollPerson.getPphPengobatanNilai(), payrollPerson.getIuranPensiunNilai(),
//                        payrollPerson.getIuranBpjsTkNilai(), payrollPerson.getIuranBpjsPensiunNilai(), payrollPerson.getIuranBpjsKesehatanNilai(),payrollPerson.getUangMukaLainnyaNilai(),
//                        payrollPerson.getKekuranganBpjsTkNilai());
//
//                BigDecimal jumlahC = hitungTotalC(payrollPerson.getPengobatanNilai(), payroll.getKoperasiNilai(), payroll.getDansosNilai(), payroll.getSPNilai(),
//                        payroll.getBazisNilai(), payroll.getBaporNilai(), payrollPerson.getZakatNilai(), payroll.getLainLainNilai());
//
//                payrollPerson.setTotalBNilai(jumlahB);
//                payrollPerson.setTotalB(CommonUtil.numbericFormat(jumlahB, "###,###"));
//                payrollPerson.setTotalCNilai(jumlahC);
//                payrollPerson.setTotalC(CommonUtil.numbericFormat(jumlahC, "###,###"));
//
//                BigDecimal totalTambahan = payrollPerson.getTotalRapelNilai().add(payrollPerson.getTotalThrNilai()).add(payrollPerson.getTotalPendidikanNilai())
//                        .add(payrollPerson.getTotalJasProdNilai()).add(totalJubileum).add(totalPensiun);
//                BigDecimal gajiBersih = gajiKotor.subtract(jumlahB).subtract(jumlahC).add(totalTambahan);
//
//                payrollPerson.setTotalTambahanNilai(totalTambahan);
//                payrollPerson.setTotalTambahan(CommonUtil.numbericFormat(totalTambahan, "###,###"));
//                payrollPerson.setTotalGajiBersihNilai(gajiBersih);
//                payrollPerson.setTotalGajiBersih(CommonUtil.numbericFormat(gajiBersih, "###,###"));
//
//                listNewPayroll.add(payrollPerson);
//            }else{
//                listNewPayroll.add(payrollPerson);
//            }
//
//            session.removeAttribute("listDataPayrollPph");
//            session.removeAttribute("listDataPayrollPerson");
//            session.setAttribute("listDataPayroll", listNewPayroll);
//            session.setAttribute("listDataPayrollPphPerson", listOfPph);
//            session.setAttribute("listDataPayrollPerson", payrollPerson);
//        }
//    }
//
//    @Override
//    public void saveEditDataSys(Payroll payroll) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//        PayrollPph payrollPphPerson = (PayrollPph) session.getAttribute("listDataPayrollPphPerson");
//
//        ItPayrollEntity itPayrollEntity = payrollDao.getById("payrollId", payroll.getPayrollId(), "Y");
//
//        if(itPayrollEntity.getFlagPayroll().equalsIgnoreCase("Y") && itPayrollEntity.getFlagPayroll() != null ) {
//            if (itPayrollEntity.getPayrollId() != null) {
//                String perubahanPeralihan = "N";
//
//                if (payroll.getTunjanganPeralihanNilai().compareTo(itPayrollEntity.getTunjanganPeralihan()) > 0 || payroll.getTunjanganPeralihanNilai().compareTo(itPayrollEntity.getTunjanganPeralihan()) < 0) {
//                    perubahanPeralihan = "Y";
//                }
//
//                //update nilai pph
//                List<ItPayrollPphEntity> itPayrollPphEntities = payrollPphDao.getDataView(payroll.getPayrollId());
//                if (itPayrollPphEntities != null) {
//                    for (ItPayrollPphEntity itPayrollPphEntity1 : itPayrollPphEntities) {
//                        if (itPayrollPphEntity1.getPayrollId().equalsIgnoreCase(payroll.getPayrollId())){
//                            itPayrollPphEntity1.setPkp(payrollPphPerson.getPkpNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setPphGaji(payrollPphPerson.getPphGajiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setBruto(payrollPphPerson.getBrutoNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setReduce(payrollPphPerson.getReduceNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setNip(payrollPphPerson.getNip());
//                            itPayrollPphEntity1.setBulan(payrollPphPerson.getBulan());
//                            itPayrollPphEntity1.setTahun(payrollPphPerson.getTahun());
//                            itPayrollPphEntity1.setPtkp(payrollPphPerson.getPtkpNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setNetto(payrollPphPerson.getNettoNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setBiayaJabatan(payrollPphPerson.getBiayaJabatanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setHutangPph(payrollPphPerson.getHutangPphNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjanganPph(payrollPphPerson.getTunjanganPphNilaiBulan().setScale(2, RoundingMode.HALF_UP));
//
//
//                            itPayrollPphEntity1.setGaji(payrollPphPerson.getGajiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setSankhus(payrollPphPerson.getSankhusNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjanganJabatanStruktural(payrollPphPerson.getTunjanganJabatanStrukturalNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjanganStruktural(payrollPphPerson.getTunjanganStrukturalNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjanganStrategis(payrollPphPerson.getTunjanganStrategisNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjanganPeralihan(payrollPphPerson.getTunjanganPeralihanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTotalTunjLain(payrollPphPerson.getTotalTunjanganLainNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjTambahan(payrollPphPerson.getTunjanganTambahanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setPemondokan(payrollPphPerson.getPemondokanNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setKomunikasi(payrollPphPerson.getKomunikasiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTotalRlab(payrollPphPerson.getTotalRlabNilai().setScale(2, RoundingMode.HALF_UP));
//
//
//                            itPayrollPphEntity1.setIuranPegawai(payrollPphPerson.getIuranPegawaiNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjanganLembur(payrollPphPerson.getTunjanganLemburNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setTunjanganPensiun(payrollPphPerson.getTunjanganPensiunNilai().setScale(2, RoundingMode.HALF_UP));
//
//                            itPayrollPphEntity1.setBpjsTk(payrollPphPerson.getBpjsTkNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setBpjsKs(payrollPphPerson.getBpjsKsNilai().setScale(2, RoundingMode.HALF_UP));
//
//                            itPayrollPphEntity1.setBonus(payrollPphPerson.getBonusNilai().setScale(2, RoundingMode.HALF_UP));
//                            itPayrollPphEntity1.setKeterangan(payrollPphPerson.getKeterangan());
//
//                            itPayrollPphEntity1.setAction("U");
//                            itPayrollPphEntity1.setLastUpdate(payroll.getLastUpdate());
//                            itPayrollPphEntity1.setLastUpdateWho(payroll.getLastUpdateWho());
//
//                            payrollPphDao.updateAndSave(itPayrollPphEntity1);
//                        }
//                    }
//                }
//                itPayrollEntity.setTipePegawai(itPayrollEntity.getImBiodataEntity().getTipePegawai());
//                itPayrollEntity.setStatusPegawai(itPayrollEntity.getImBiodataEntity().getStatusPegawai());
//                itPayrollEntity.setTunjanganPeralihan(payroll.getTunjanganPeralihanNilai());
//                itPayrollEntity.setPemondokan(payroll.getPemondokanNilai());
//                itPayrollEntity.setKomunikasi(payroll.getKomunikasiNilai());
//                itPayrollEntity.setLainLain(payroll.getLainLainNilai());
//                itPayrollEntity.setGajiKotor(payroll.getGajiKotorNilai());
//                itPayrollEntity.setGajiBersih(payroll.getTotalGajiBersihNilai());
//                itPayrollEntity.setKopkar(payroll.getKopkarNilai());
//                itPayrollEntity.setIuranSp(payroll.getIuranSpNilai());
//                itPayrollEntity.setIuranPiikb(payroll.getIuranPiikbNilai());
//                itPayrollEntity.setBankBri(payroll.getBankBriNilai());
//                itPayrollEntity.setBankMandiri(payroll.getBankMandiriNilai());
//                itPayrollEntity.setInfaq(payroll.getInfaqNilai());
//                itPayrollEntity.setPerkesDanObat(payroll.getPerkesDanObatNilai());
//                itPayrollEntity.setListrik(payroll.getListrikNilai());
//                itPayrollEntity.setIuranProfesi(payroll.getIuranProfesiNilai());
//                itPayrollEntity.setPotonganLain(payroll.getPotonganLainNilai());
//                itPayrollEntity.setTunjanganPph(payroll.getTunjanganPphNilai());
//                itPayrollEntity.setPphGaji(payroll.getPphGajiNilai());
//                itPayrollEntity.setTotalPotonganLain(payroll.getTotalPotonganLainNilai());
//                itPayrollEntity.setSelisihPph(payroll.getSelisihPphNilai());
//                itPayrollEntity.setPphSeharusnya(payroll.getPphSeharusnyaNilai());
//                itPayrollEntity.setPph11Bulan(payroll.getPph11BulanNilai());
//
//                //peralihan
//                itPayrollEntity.setPeralihanGapok(payroll.getPeralihanGapok());
//                itPayrollEntity.setPeralihanSankhus(payroll.getPeralihanSankhus());
//                itPayrollEntity.setPeralihanTunjangan(payroll.getPeralihanTunjangan());
//
//                itPayrollEntity.setAction(payroll.getAction());
//                itPayrollEntity.setLastUpdateWho(payroll.getLastUpdateWho());
//                itPayrollEntity.setLastUpdate(payroll.getLastUpdate());
//
//                itPayrollEntity.setTotalA(payroll.getTotalANilai());
//                itPayrollEntity.setTotalB(payroll.getTotalBNilai());
//                itPayrollEntity.setTotalC(payroll.getTotalCNilai());
//                itPayrollEntity.setGajiBersih(payroll.getTotalGajiBersihNilai());
//                payrollDao.updateAndSave(itPayrollEntity);
//
//                //jika terjadi perubahan nilai tunjangan Peralihan
//                if (perubahanPeralihan.equalsIgnoreCase("Y")) {
//                }
//            }
//        }
//    }
//
//    @Override
//    public void saveEditDataJasprodSys(Payroll payroll) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//        Payroll payrollPerson = (Payroll) session.getAttribute("listDataPayrollPerson");
//        PayrollPph payrollPphPerson = (PayrollPph) session.getAttribute("listDataPayrollPphPerson");
//
//        ItPayrollEntity itPayrollEntity = payrollDao.getById("payrollId", payroll.getPayrollId(), "Y");
//        List<ItPayrollJasprodEntity> itPayrollJasprodEntity = payrollJasprodDao.getJasprod(payroll.getPayrollId());
//
//        String jasprodId = "";
//        if(itPayrollJasprodEntity.size() > 0){
//            for(ItPayrollJasprodEntity itPayrollJasprodEntity1: itPayrollJasprodEntity){
//                jasprodId = itPayrollJasprodEntity1.getJasprodId();
//            }
//
//            ItPayrollJasprodEntity itPayrollJasprodEntity1 = payrollJasprodDao.getById("jasprodId", jasprodId, "Y");
//
//            itPayrollJasprodEntity1.setPotKoperasi(payroll.getKoperasiNilai());
//            itPayrollJasprodEntity1.setPotTaliAsih(payroll.getDansosNilai());
//            itPayrollJasprodEntity1.setPotLain(payroll.getLainLainNilai());
//            itPayrollJasprodEntity1.setPphJasprod(payroll.getPphGajiNilai());
//            itPayrollJasprodEntity1.setFinalJasprodBersih(payrollPerson.getTotalGajiBersihNilai());
//
//            payrollJasprodDao.updateAndSave(itPayrollJasprodEntity1);
//
//            itPayrollEntity.setKoperasi(payroll.getKoperasiNilai());
//            itPayrollEntity.setDansos(payroll.getDansosNilai());
//            itPayrollEntity.setPphGaji(payroll.getPphGajiNilai());
//            itPayrollEntity.setLainLain(payroll.getLainLainNilai());
//            itPayrollEntity.setTotalB(payrollPerson.getTotalBNilai());
//            itPayrollEntity.setGajiBersih(payrollPerson.getTotalGajiBersihNilai());
//
//            itPayrollEntity.setAction(payroll.getAction());
//            itPayrollEntity.setLastUpdateWho(payroll.getLastUpdateWho());
//            itPayrollEntity.setLastUpdate(payroll.getLastUpdate());
//            payrollDao.updateAndSave(itPayrollEntity);
//        }
//
//
//    }
//
//    @Override
//    public void saveEditDataJanuari(Payroll bean) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//
//        ItPayrollEntity itPayrollEntity = payrollDao.getById("payrollId", bean.getPayrollId(), "Y");
//        ImPosition imPosition = positionDao.getById("positionId", itPayrollEntity.getPositionId(), "Y");
//        ItPayrollPphEntity itPayrollPphEntity = new ItPayrollPphEntity();
//        ItPayrollJubileumEntity itPayrollJubileumEntity = new ItPayrollJubileumEntity();
//        ItPayrollPensiunEntity itPayrollPensiunEntity = new ItPayrollPensiunEntity();
//
//        if(itPayrollEntity.getPayrollId() != null){
//
//            List<ItPayrollPphEntity> itPayrollPphEntities = payrollPphDao.getDataView(bean.getPayrollId());
//            if(itPayrollPphEntities != null){
//                for(ItPayrollPphEntity itPayrollPphEntity1: itPayrollPphEntities){
//                    itPayrollPphEntity = itPayrollPphEntity1;
//                }
//            }
//
//            itPayrollEntity.setTunjanganPengobatan(bean.getTunjanganPengobatanNilai());
//            itPayrollEntity.setTunjanganPph(bean.getTunjanganPphNilai());
//            itPayrollEntity.setPphGaji(bean.getPphGajiNilai());
//
//            BigDecimal gajiKotor = jumlahGajiKotor(itPayrollEntity.getGajiGolongan(), itPayrollEntity.getTunjanganUmk(), itPayrollEntity.getTunjanganStruktural(),
//                    itPayrollEntity.getTunjanganPeralihan(), itPayrollEntity.getTunjanganJabatanStruktural(), itPayrollEntity.getTunjanganStrategis(),
//                    itPayrollEntity.getKompensasi(), itPayrollEntity.getTunjanganTransport(), itPayrollEntity.getTunjanganAirListrik(), itPayrollEntity.getTunjanganPengobatan(),
//                    itPayrollEntity.getTunjanganPerumahan(), itPayrollEntity.getTunjanganPph(), itPayrollEntity.getTunjanganLain(), itPayrollEntity.getTunjanganLembur());
//
//            itPayrollEntity.setTotalA(gajiKotor); //Jumlah A
//            itPayrollPphEntity.setPphGaji(bean.getPphGajiNilai());
//            payrollPphDao.updateAndSave(itPayrollPphEntity);
//
//            BigDecimal jumlahB = hitungTotalB(itPayrollEntity.getPphGaji(), itPayrollEntity.getPphPengobatan(), itPayrollEntity.getIuranPensiun(),
//                    itPayrollEntity.getIuranBpjsTk(), itPayrollEntity.getIuranBpjsPensiun(), itPayrollEntity.getIuranBpjsKesehatan(), itPayrollEntity.getUangMukaLainnya(),
//                    itPayrollEntity.getKekuranganBpjsTk());
//
//            BigDecimal jumlahC = hitungTotalC(itPayrollEntity.getPengobatan(), itPayrollEntity.getKoperasi(), itPayrollEntity.getDansos(), itPayrollEntity.getSP(),
//                    itPayrollEntity.getBazis(), itPayrollEntity.getBapor(), itPayrollEntity.getZakat(), itPayrollEntity.getLainLain());
//
//            itPayrollEntity.setTotalB(jumlahB);
//            itPayrollEntity.setTotalC(jumlahC);
//
//            BigDecimal totalTambahan = itPayrollEntity.getTotalRapel().add(itPayrollEntity.getTotalThr()).add(itPayrollEntity.getTotalPendidikan())
//                    .add(itPayrollEntity.getTotalJasProd());
//            itPayrollEntity.setTotalD(totalTambahan);
//
//            BigDecimal gajiBersih = gajiKotor.subtract(jumlahB).subtract(jumlahC).add(totalTambahan);
//            itPayrollEntity.setGajiBersih(gajiBersih);
//        }
//
//        payrollDao.updateAndSave(itPayrollEntity);
//
//    }
//
//    @Override
//    public void saveEditDataSessionSys(Payroll payroll) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//
//        List<Payroll> listNewPayroll = new ArrayList<>();
//        List<PayrollPph> listNewPph = new ArrayList<>();
//        Payroll payrollPerson = (Payroll) session.getAttribute("listDataPayrollPerson");
//        List<Payroll> listDataPayroll = (List<Payroll>) session.getAttribute("listDataPayroll");
//        List<PayrollPph> listOfPph = (List<PayrollPph>) session.getAttribute("listDataPayrollPph");
//        List<PayrollPotonganLain> listOfPotonganLain = (List<PayrollPotonganLain>) session.getAttribute("listOfPotonganLain");
//        List<PayrollPensiun> listOfResultPensiun = (List<PayrollPensiun>) session.getAttribute("listDataPayrollPensiun");
//        List<PayrollJubileum> listOfResultJubileum = (List<PayrollJubileum>) session.getAttribute("listDataPayrollJubileum");
//
//         String branchId = payrollPerson.getBranchId();
//         List<ImBranches> imBranchesList = branchDao.getListBranchById(branchId);
//         ImBranches branches = new ImBranches();
//         for (ImBranches imBranches : imBranchesList){
//             branches.setPeriodeGajiAktif(imBranches.getPeriodeGajiAktif());
//         }
//        if(payrollPerson != null){
//            ImBiodataEntity biodataEntity = biodataDao.getById("nip",payrollPerson.getNip());
//            //if(payrollPerson.getTanggalJubileum() != null && payrollPerson.getTanggalJubileum() != null){
//            if(payrollPerson.getFlagPayroll().equalsIgnoreCase("N")){
//                if(payroll.getNip().equalsIgnoreCase(payrollPerson.getNip())){
//
//                    /*if(payroll.getTipePegawai().equalsIgnoreCase("TP03")){
//                        payrollPerson.setGajiGolonganNilai(payroll.getGajiGolonganNilai());
//                        payrollPerson.setGajiGolongan(CommonUtil.numbericFormat(payroll.getGajiGolonganNilai(), "###,###"));
//                    }*/
//
//                    payrollPerson.setTunjanganPeralihanNilai(payroll.getTunjanganPeralihanNilai());
//                    payrollPerson.setTunjanganPeralihan(CommonUtil.numbericFormat(payroll.getTunjanganPeralihanNilai(), "###,###"));
//                    payrollPerson.setPemondokan(CommonUtil.numbericFormat(payroll.getPemondokanNilai(), "###,###"));
//                    payrollPerson.setPemondokanNilai(payroll.getPemondokanNilai());
//                    payrollPerson.setKomunikasiNilai(payroll.getKomunikasiNilai());
//                    payrollPerson.setKomunikasi(CommonUtil.numbericFormat(payroll.getKomunikasiNilai(), "###,###"));
//
//
//                    payrollPerson.setKopkarNilai(payroll.getKopkarNilai());
//                    payrollPerson.setKopkar(CommonUtil.numbericFormat(payroll.getKopkarNilai(), "###,###"));
//                    payrollPerson.setIuranSpNilai(payroll.getIuranSpNilai());
//                    payrollPerson.setIuranSp(CommonUtil.numbericFormat(payroll.getIuranSpNilai(), "###,###"));
//                    payrollPerson.setIuranPiikbNilai(payroll.getIuranPiikbNilai());
//                    payrollPerson.setIuranPiikb(CommonUtil.numbericFormat(payroll.getIuranPiikbNilai(), "###,###"));
//                    payrollPerson.setBankBriNilai(payroll.getBankBriNilai());
//                    payrollPerson.setBankBri(CommonUtil.numbericFormat(payroll.getBankBriNilai(), "###,###"));
//                    payrollPerson.setBankMandiriNilai(payroll.getBankMandiriNilai());
//                    payrollPerson.setBankMandiri(CommonUtil.numbericFormat(payroll.getBankMandiriNilai(), "###,###"));
//
//                    payrollPerson.setInfaqNilai(payroll.getInfaqNilai());
//                    payrollPerson.setInfaq(CommonUtil.numbericFormat(payroll.getInfaqNilai(), "###,###"));
//                    payrollPerson.setPerkesDanObatNilai(payroll.getPerkesDanObatNilai());
//                    payrollPerson.setPerkesDanObat(CommonUtil.numbericFormat(payroll.getPerkesDanObatNilai(), "###,###"));
//                    payrollPerson.setListrikNilai(payroll.getListrikNilai());
//                    payrollPerson.setListrik(CommonUtil.numbericFormat(payroll.getListrikNilai(), "###,###"));
//                    payrollPerson.setIuranProfesiNilai(payroll.getIuranProfesiNilai());
//                    payrollPerson.setIuranProfesi(CommonUtil.numbericFormat(payroll.getIuranProfesiNilai(), "###,###"));
//                    payrollPerson.setPotonganLainNilai(payroll.getPotonganLainNilai());
//                    payrollPerson.setPotonganLain(CommonUtil.numbericFormat(payroll.getPotonganLainNilai(), "###,###"));
//
//                    payrollPerson.setLainLainNilai(payroll.getLainLainNilai());
//                    payrollPerson.setLainLain(CommonUtil.numbericFormat(payroll.getLainLainNilai(), "###,###"));
//                    payrollPerson.setIdLainLain(payroll.getIdLainLain());
//
//                    BigDecimal totalPotonganLain = payroll.getKopkarNilai().add(payroll.getIuranSpNilai())
//                            .add(payroll.getIuranPiikbNilai()).add(payroll.getBankBriNilai()).add(payroll.getBankMandiriNilai())
//                            .add(payroll.getInfaqNilai()).add(payroll.getPerkesDanObatNilai()).add(payroll.getListrikNilai())
//                            .add(payroll.getIuranProfesiNilai()).add(payroll.getPotonganLainNilai());
//
//                    payrollPerson.setTotalPotonganLainNilai(totalPotonganLain);
//                    payrollPerson.setTotalPotonganLain(CommonUtil.numbericFormat(totalPotonganLain, "###,###"));
//
//
//                    BigDecimal totalJubileum = new BigDecimal(0);
//                    BigDecimal jumlahJubileum = new BigDecimal(0);
//                    BigDecimal nettoJubileum  = new BigDecimal(0);
//
//
//                    //pphGaji
//                    BigDecimal pphFinal = new BigDecimal(0);
//                    PayrollPph payrollPph = new PayrollPph();
//                }
//
//                session.removeAttribute("listDataPayrollPph");
//                session.removeAttribute("listDataPayrollPerson");
//                session.setAttribute("listDataPayrollPph", listNewPph);
//                session.setAttribute("listDataPayrollPerson", payrollPerson);
//            }
//            //hanya proses jika ada perhitungan payroll
//            else if(payrollPerson.getFlagPayroll().equalsIgnoreCase("Y") && payrollPerson.getFlagPayroll() != null ){
//                if(payroll.getNip().equalsIgnoreCase(payrollPerson.getNip())){
//
//                    payrollPerson.setTunjanganPeralihanNilai(payroll.getTunjanganPeralihanNilai());
//                    payrollPerson.setTunjanganPeralihan(CommonUtil.numbericFormat(payroll.getTunjanganPeralihanNilai(), "###,###"));
//                    payrollPerson.setPemondokan(CommonUtil.numbericFormat(payroll.getPemondokanNilai(), "###,###"));
//                    payrollPerson.setPemondokanNilai(payroll.getPemondokanNilai());
//                    payrollPerson.setKomunikasiNilai(payroll.getKomunikasiNilai());
//                    payrollPerson.setKomunikasi(CommonUtil.numbericFormat(payroll.getKomunikasiNilai(), "###,###"));
//
//
//                    payrollPerson.setKopkarNilai(payroll.getKopkarNilai());
//                    payrollPerson.setKopkar(CommonUtil.numbericFormat(payroll.getKopkarNilai(), "###,###"));
//                    payrollPerson.setIuranSpNilai(payroll.getIuranSpNilai());
//                    payrollPerson.setIuranSp(CommonUtil.numbericFormat(payroll.getIuranSpNilai(), "###,###"));
//                    payrollPerson.setIuranPiikbNilai(payroll.getIuranPiikbNilai());
//                    payrollPerson.setIuranPiikb(CommonUtil.numbericFormat(payroll.getIuranPiikbNilai(), "###,###"));
//                    payrollPerson.setBankBriNilai(payroll.getBankBriNilai());
//                    payrollPerson.setBankBri(CommonUtil.numbericFormat(payroll.getBankBriNilai(), "###,###"));
//                    payrollPerson.setBankMandiriNilai(payroll.getBankMandiriNilai());
//                    payrollPerson.setBankMandiri(CommonUtil.numbericFormat(payroll.getBankMandiriNilai(), "###,###"));
//
//                    payrollPerson.setInfaqNilai(payroll.getInfaqNilai());
//                    payrollPerson.setInfaq(CommonUtil.numbericFormat(payroll.getInfaqNilai(), "###,###"));
//                    payrollPerson.setPerkesDanObatNilai(payroll.getPerkesDanObatNilai());
//                    payrollPerson.setPerkesDanObat(CommonUtil.numbericFormat(payroll.getPerkesDanObatNilai(), "###,###"));
//                    payrollPerson.setListrikNilai(payroll.getListrikNilai());
//                    payrollPerson.setListrik(CommonUtil.numbericFormat(payroll.getListrikNilai(), "###,###"));
//                    payrollPerson.setIuranProfesiNilai(payroll.getIuranProfesiNilai());
//                    payrollPerson.setIuranProfesi(CommonUtil.numbericFormat(payroll.getIuranProfesiNilai(), "###,###"));
//                    payrollPerson.setPotonganLainNilai(payroll.getPotonganLainNilai());
//                    payrollPerson.setPotonganLain(CommonUtil.numbericFormat(payroll.getPotonganLainNilai(), "###,###"));
//
//                    payrollPerson.setLainLainNilai(payroll.getLainLainNilai());
//                    payrollPerson.setLainLain(CommonUtil.numbericFormat(payroll.getLainLainNilai(), "###,###"));
//                    payrollPerson.setIdLainLain(payroll.getIdLainLain());
//
//                    //pphGaji
//                    PayrollPph payrollPph = null;
//                    payrollPph = kalkulasiGrossUpPphSimRs(payrollPerson.getNip(),payrollPerson.getBulan(),payrollPerson.getTahun(),
//                            payrollPerson.getBranchId(),payrollPerson.getGajiGolonganNilai(),payrollPerson.getTunjanganUmkNilai(),
//                            payrollPerson.getTunjanganJabatanStrukturalNilai(),payrollPerson.getTunjanganStrukturalNilai(),
//                            payrollPerson.getTunjanganStrategisNilai(),payrollPerson.getTunjanganPeralihanNilai(),
//                            payrollPerson.getTunjanganLainNilai(), payrollPerson.getTunjanganTambahanNilai(),
//                            payrollPerson.getPemondokanNilai(), payrollPerson.getKomunikasiNilai(),
//                            payrollPerson.getTotalRlabNilai(), payrollPerson.getTunjanganLemburNilai(),
//                            payrollPerson.getIuranDapenPershNilai(),payrollPerson.getTunjanganBpjsTkNilai(),payrollPerson.getTunjanganBpjsKsNilai(),payrollPerson.getLainLainNilai()
//                            ,payrollPerson.getIuranDapenPegNilai(),payrollPerson.getIuranBpjsTkKaryNilai(),payrollPerson.getIuranBpjsKsKaryNilai(),
//                            payrollPerson.getStatusKeluarga(), payrollPerson.getJumlahAnak(),biodataEntity.getNpwp());
//                    payrollPerson.setPphGajiNilai(payrollPph.getPphGajiNilai());
//                    payrollPerson.setPphGaji(payrollPph.getPphGaji());
//                    payrollPerson.setTunjanganPphNilai(payrollPph.getPphGajiNilai());
//                    payrollPerson.setTunjanganPph(payrollPph.getPphGaji());
//
//                    //set total A
//                    BigDecimal nilaiA = payrollPerson.getGajiGolonganNilai().add(payrollPerson.getTunjanganUmkNilai()).add(payrollPerson.getTunjanganJabatanStrukturalNilai())
//                            .add(payrollPerson.getTunjanganStrukturalNilai()).add(payrollPerson.getTunjanganStrategisNilai()).add(payrollPerson.getTunjanganPeralihanNilai())
//                            .add(payrollPerson.getTunjanganLainNilai()).add(payrollPerson.getTunjanganTambahanNilai()).add( payrollPerson.getPemondokanNilai())
//                    .add(payrollPerson.getKomunikasiNilai()).add(payrollPerson.getLainLainNilai());
//                    payrollPerson.setTotalA(CommonUtil.numbericFormat(nilaiA, "###,###")); //Total A
//                    payrollPerson.setTotalANilai(nilaiA); //Total A
//
//                    BigDecimal totalPotLain = payrollPerson.getKopkarNilai().add(payrollPerson.getIuranSpNilai()).add(payrollPerson.getIuranPiikbNilai())
//                            .add(payrollPerson.getBankBriNilai()).add(payrollPerson.getBankMandiriNilai()).add(payrollPerson.getInfaqNilai())
//                            .add(payrollPerson.getPerkesDanObatNilai()).add(payrollPerson.getListrikNilai()).add(payrollPerson.getIuranProfesiNilai())
//                            .add(payrollPerson.getPotonganLainNilai());
//
//                    BigDecimal totalPotonganLain = payroll.getKopkarNilai().add(payroll.getIuranSpNilai())
//                            .add(payroll.getIuranPiikbNilai()).add(payroll.getBankBriNilai()).add(payroll.getBankMandiriNilai())
//                            .add(payroll.getInfaqNilai()).add(payroll.getPerkesDanObatNilai()).add(payroll.getListrikNilai())
//                            .add(payroll.getIuranProfesiNilai()).add(payroll.getPotonganLainNilai());
//
//                    payrollPerson.setTotalPotonganLainNilai(totalPotonganLain);
//                    payrollPerson.setTotalPotonganLain(CommonUtil.numbericFormat(totalPotonganLain, "###,###"));
//
//                    BigDecimal nilaiC = payrollPerson.getIuranDapenPegNilai().add(payrollPerson.getIuranDapenPegNilai())
//                            .add(payrollPerson.getIuranBpjsTkKaryNilai()).add(payrollPerson.getIuranBpjsTkPersNilai())
//                            .add(payrollPerson.getIuranBpjsTkKaryNilai()).add(payrollPerson.getIuranBpjsTkPersNilai())
//                            .add(payrollPerson.getPphGajiNilai()).add(totalPotLain);
//
//                    payrollPerson.setTotalC(CommonUtil.numbericFormat(nilaiC, "###,###")); //Total C
//                    payrollPerson.setTotalCNilai(nilaiC); //Total C
//
//                    BigDecimal gajiBersih = nilaiA.add(payrollPerson.getTotalBNilai()).subtract(nilaiC);
//                    payrollPerson.setTotalGajiBersih(CommonUtil.numbericFormat(gajiBersih, "###,###")); //gaji bersih
//                    payrollPerson.setTotalGajiBersihNilai(gajiBersih); //gaji bersih
//
//
//                    }
//
//
//                session.removeAttribute("listDataPayrollPph");
//                session.removeAttribute("listDataPayrollPerson");
//                session.setAttribute("listDataPayrollPph", listNewPph);
//                session.setAttribute("listDataPayrollPerson", payrollPerson);
//            }
//        }
//    }
//
//    @Override
//    public void saveEditSessionDataUsingPayrollIdSys(Payroll payroll) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//        PayrollPph payrollPph = null;
//        Payroll payrollPerson = (Payroll) session.getAttribute("listDataPayrollPerson");
//        List<PayrollJubileum> listOfResultJubileum = new ArrayList<>();
//        if(payrollPerson != null){
//            if(payrollPerson.getFlagPayroll().equalsIgnoreCase("Y") && payrollPerson.getFlagPayroll() != null ){
//                if(payroll.getPayrollId().equalsIgnoreCase(payrollPerson.getPayrollId())){
//                    ImBiodataEntity biodataEntity = biodataDao.getById("nip",payrollPerson.getNip());
//                    //macam peralihan
//                    payrollPerson.setPeralihanGapok(payroll.getPeralihanGapok());
//                    payrollPerson.setPeralihanSankhus(payroll.getPeralihanSankhus());
//                    payrollPerson.setPeralihanTunjangan(payroll.getPeralihanTunjangan());
//                    payrollPerson.setStPeralihanGapok(CommonUtil.numbericFormat(payroll.getPeralihanGapok(), "###,###"));
//                    payrollPerson.setStPeralihanSankhus(CommonUtil.numbericFormat(payroll.getPeralihanSankhus(), "###,###"));
//                    payrollPerson.setStPeralihanTunjangan(CommonUtil.numbericFormat(payroll.getPeralihanTunjangan(), "###,###"));
//
//                    BigDecimal tunjanganPeralihan = payroll.getPeralihanGapok().add(payroll.getPeralihanSankhus().add(payroll.getPeralihanTunjangan()));
//                    payrollPerson.setTunjanganPeralihanNilai(tunjanganPeralihan);
//                    payrollPerson.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjanganPeralihan, "###,###"));
//                    payrollPerson.setPemondokan(CommonUtil.numbericFormat(payroll.getPemondokanNilai(), "###,###"));
//                    payrollPerson.setPemondokanNilai(payroll.getPemondokanNilai());
//                    payrollPerson.setKomunikasiNilai(payroll.getKomunikasiNilai());
//                    payrollPerson.setKomunikasi(CommonUtil.numbericFormat(payroll.getKomunikasiNilai(), "###,###"));
//
//                    payrollPerson.setLainLainNilai(payroll.getLainLainNilai());
//                    payrollPerson.setLainLain(CommonUtil.numbericFormat(payroll.getLainLainNilai(), "###,###"));
//
//                    payrollPerson.setKopkarNilai(payroll.getKopkarNilai());
//                    payrollPerson.setKopkar(CommonUtil.numbericFormat(payroll.getKopkarNilai(), "###,###"));
//                    payrollPerson.setIuranSpNilai(payroll.getIuranSpNilai());
//                    payrollPerson.setIuranSp(CommonUtil.numbericFormat(payroll.getIuranSpNilai(), "###,###"));
//                    payrollPerson.setIuranPiikbNilai(payroll.getIuranPiikbNilai());
//                    payrollPerson.setIuranPiikb(CommonUtil.numbericFormat(payroll.getIuranPiikbNilai(), "###,###"));
//                    payrollPerson.setBankBriNilai(payroll.getBankBriNilai());
//                    payrollPerson.setBankBri(CommonUtil.numbericFormat(payroll.getBankBriNilai(), "###,###"));
//                    payrollPerson.setBankMandiriNilai(payroll.getBankMandiriNilai());
//                    payrollPerson.setBankMandiri(CommonUtil.numbericFormat(payroll.getBankMandiriNilai(), "###,###"));
//
//                    payrollPerson.setInfaqNilai(payroll.getInfaqNilai());
//                    payrollPerson.setInfaq(CommonUtil.numbericFormat(payroll.getInfaqNilai(), "###,###"));
//                    payrollPerson.setPerkesDanObatNilai(payroll.getPerkesDanObatNilai());
//                    payrollPerson.setPerkesDanObat(CommonUtil.numbericFormat(payroll.getPerkesDanObatNilai(), "###,###"));
//                    payrollPerson.setListrikNilai(payroll.getListrikNilai());
//                    payrollPerson.setListrik(CommonUtil.numbericFormat(payroll.getListrikNilai(), "###,###"));
//                    payrollPerson.setIuranProfesiNilai(payroll.getIuranProfesiNilai());
//                    payrollPerson.setIuranProfesi(CommonUtil.numbericFormat(payroll.getIuranProfesiNilai(), "###,###"));
//                    payrollPerson.setPotonganLainNilai(payroll.getPotonganLainNilai());
//                    payrollPerson.setPotonganLain(CommonUtil.numbericFormat(payroll.getPotonganLainNilai(), "###,###"));
//
//                    //pphGaji
//                    payrollPph = kalkulasiGrossUpPphSimRs(payrollPerson.getNip(),payrollPerson.getBulan(),payrollPerson.getTahun(),
//                            payrollPerson.getBranchId(),payrollPerson.getGajiGolonganNilai(),payrollPerson.getTunjanganUmkNilai(),
//                            payrollPerson.getTunjanganJabatanStrukturalNilai(),payrollPerson.getTunjanganStrukturalNilai(),
//                            payrollPerson.getTunjanganStrategisNilai(),payrollPerson.getTunjanganPeralihanNilai(),
//                            payrollPerson.getTunjanganLainNilai(), payrollPerson.getTunjanganTambahanNilai(),
//                            payrollPerson.getPemondokanNilai(), payrollPerson.getKomunikasiNilai(),
//                            payrollPerson.getTotalRlabNilai(), payrollPerson.getTunjanganLemburNilai(),
//                            payrollPerson.getIuranDapenPershNilai(),payrollPerson.getTunjanganBpjsTkNilai(),payrollPerson.getTunjanganBpjsKsNilai(),
//                            payrollPerson.getLainLainNilai(),payrollPerson.getIuranDapenPegNilai(),payrollPerson.getIuranBpjsTkKaryNilai(),payrollPerson.getIuranBpjsKsKaryNilai(),
//                            payrollPerson.getStatusKeluarga(), payrollPerson.getJumlahAnak(),biodataEntity.getNpwp());
//                    payrollPerson.setPphGajiNilai(payrollPph.getPphGajiNilai());
//                    payrollPerson.setPphGaji(payrollPph.getPphGaji());
//                    payrollPerson.setTunjanganPphNilai(payrollPph.getPphGajiNilai());
//                    payrollPerson.setTunjanganPph(payrollPph.getPphGaji());
//
//                    //set total A
//                    BigDecimal nilaiA = payrollPerson.getGajiGolonganNilai().add(payrollPerson.getTunjanganUmkNilai()).add(payrollPerson.getTunjanganJabatanStrukturalNilai())
//                            .add(payrollPerson.getTunjanganStrukturalNilai()).add(payrollPerson.getTunjanganStrategisNilai()).add(payrollPerson.getTunjanganPeralihanNilai())
//                            .add(payrollPerson.getTunjanganLainNilai()).add(payrollPerson.getTunjanganTambahanNilai()).add( payrollPerson.getPemondokanNilai())
//                            .add(payrollPerson.getKomunikasiNilai()).add(payrollPerson.getTunjanganLemburNilai());
//                    payrollPerson.setTotalA(CommonUtil.numbericFormat(nilaiA, "###,###")); //Total A
//                    payrollPerson.setTotalANilai(nilaiA); //Total A
//
//                    BigDecimal totalPotonganLain = payroll.getKopkarNilai().add(payroll.getIuranSpNilai())
//                            .add(payroll.getIuranPiikbNilai()).add(payroll.getBankBriNilai()).add(payroll.getBankMandiriNilai())
//                            .add(payroll.getInfaqNilai()).add(payroll.getPerkesDanObatNilai()).add(payroll.getListrikNilai())
//                            .add(payroll.getIuranProfesiNilai()).add(payroll.getPotonganLainNilai());
//
//                    payrollPerson.setTotalPotonganLainNilai(totalPotonganLain);
//                    payrollPerson.setTotalPotonganLain(CommonUtil.numbericFormat(totalPotonganLain, "###,###"));
//
//                    if (payroll.getBulan().equalsIgnoreCase("12")){
//                        BigDecimal bruto11Bulan = payrollDao.getBruto11Bulan(payroll.getTahun(),payroll.getNip());
//                        BigDecimal pph11Bulan = payrollDao.getPPhGaji11Bulan(payroll.getTahun(),payroll.getNip());
//                        BigDecimal pphBonus = payrollDao.getPPhGajiBonusSetahun(payroll.getTahun(),payroll.getNip());
//                        BigDecimal tunjPPh11Bulan = payrollDao.getTunjanganPPhGaji11Bulan(payroll.getTahun(),payroll.getNip());
//                        BigDecimal tunjPphBonus = payrollDao.getTunjanganPPhGajiBonusSetahun(payroll.getTahun(),payroll.getNip());
//                        BigDecimal bonus11Bulan = payrollDao.getTotalBonusSetahun(payroll.getTahun(),payroll.getNip());
//                        BigDecimal ptt11Bulan = payrollDao.totalLain(payroll.getTahun(),payroll.getNip());
//                        BigDecimal pttBulan12 = payroll.getLainLainNilai();
//                        BigDecimal iuranPegawai11Bulan = payrollDao.getIuran11Bulan(payroll.getTahun(),payroll.getNip());
//
//                        PayrollPph pph12Bulan = pph21SimRs(payrollPerson.getGajiGolonganNilai(),payrollPerson.getTunjanganUmkNilai(),
//                                payrollPerson.getTunjanganJabatanStrukturalNilai(),payrollPerson.getTunjanganStrukturalNilai(),
//                                payrollPerson.getTunjanganStrategisNilai(),payrollPerson.getTunjanganPeralihanNilai(),
//                                payrollPerson.getTunjanganLainNilai(), payrollPerson.getTunjanganTambahanNilai(),
//                                payrollPerson.getPemondokanNilai(), payrollPerson.getKomunikasiNilai(),
//                                payrollPerson.getTotalRlabNilai(), payrollPerson.getTunjanganLemburNilai(),
//                                payrollPerson.getIuranDapenPershNilai(),payrollPerson.getTunjanganBpjsTkNilai(),payrollPerson.getTunjanganBpjsKsNilai(),
//                                bonus11Bulan,payrollPerson.getIuranDapenPegNilai(),payrollPerson.getIuranBpjsTkKaryNilai(),payrollPerson.getIuranBpjsKsKaryNilai(),
//                                payrollPerson.getStatusKeluarga(), payrollPerson.getJumlahAnak(),bruto11Bulan,tunjPPh11Bulan,tunjPphBonus,ptt11Bulan,iuranPegawai11Bulan,pttBulan12,pph11Bulan,pphBonus,biodataEntity.getNpwp());
//
//                        BigDecimal pphSeharusnya = pph12Bulan.getHutangPphNilai();
//                        BigDecimal selisihPph = pph12Bulan.getPphGajiNilai();
//
//                        if (selisihPph.compareTo(BigDecimal.ZERO)<0){
//                            selisihPph = BigDecimal.ZERO;
//                        }
//
//                        payrollPerson.setPphGajiNilai(selisihPph);
//                        payrollPerson.setPphGaji(CommonUtil.numbericFormat(selisihPph,"###,###"));
//                        payrollPerson.setTunjanganPphNilai(selisihPph);
//                        payrollPerson.setTunjanganPph(CommonUtil.numbericFormat(selisihPph,"###,###"));
//                        payrollPerson.setSelisihPphNilai(selisihPph);
//                        payrollPerson.setSelisihPph(CommonUtil.numbericFormat(selisihPph,"###,###"));
//
//                        payrollPerson.setPph11BulanNilai(pph11Bulan.add(pphBonus));
//                        payrollPerson.setPph11Bulan(CommonUtil.numbericFormat(pph11Bulan.add(pphBonus),"###,###"));
//                        payrollPerson.setPphSeharusnyaNilai(pphSeharusnya);
//                        payrollPerson.setPphSeharusnya(CommonUtil.numbericFormat(pphSeharusnya,"###,###"));
//
//                        payrollPerson.setTotalLain11BulanNilai(bonus11Bulan.add(ptt11Bulan).add(pttBulan12));
//                        payrollPerson.setTotalLain11Bulan(CommonUtil.numbericFormat(bonus11Bulan.add(ptt11Bulan).add(pttBulan12),"###,###"));
//                    }
//
//                    BigDecimal nilaiC = payrollPerson.getIuranDapenPegNilai().add(payrollPerson.getIuranDapenPershNilai())
//                            .add(payrollPerson.getIuranBpjsTkKaryNilai()).add(payrollPerson.getIuranBpjsTkPersNilai())
//                            .add(payrollPerson.getIuranBpjsKsKaryNilai()).add(payrollPerson.getIuranBpjsKsPersNilai())
//                            .add(payrollPerson.getPphGajiNilai()).add(totalPotonganLain);
//
//                    payrollPerson.setTotalC(CommonUtil.numbericFormat(nilaiC, "###,###")); //Total C
//                    payrollPerson.setTotalCNilai(nilaiC); //Total C
//
//                    BigDecimal nilaiB = payrollPerson.getTotalRlabNilai().add(payrollPerson.getTunjanganDapenNilai()).add(payrollPerson.getTunjanganBpjsKsNilai())
//                            .add(payrollPerson.getTunjanganBpjsTkNilai()).add(payrollPerson.getTunjanganPphNilai());
//
//                    payrollPerson.setTotalB(CommonUtil.numbericFormat(nilaiB, "###,###")); //Total B
//                    payrollPerson.setTotalBNilai(nilaiB); //Total B
//
//                    BigDecimal gajiBersih = nilaiA.add(nilaiB.add(payrollPerson.getLainLainNilai())).subtract(nilaiC);
//                    payrollPerson.setTotalGajiBersih(CommonUtil.numbericFormat(gajiBersih, "###,###")); //gaji bersih
//                    payrollPerson.setTotalGajiBersihNilai(gajiBersih);
//                }
//
//                session.removeAttribute("listDataPayrollPphPerson");
//                session.setAttribute("listDataPayrollPphPerson", payrollPph);
//                session.removeAttribute("listDataPayrollPerson");
//                session.setAttribute("listDataPayrollPerson", payrollPerson);
//            }else if(payrollPerson.getFlagJubileum().equalsIgnoreCase("Y")){
//
//                BigDecimal totalJubileum = new BigDecimal(0);
//                BigDecimal jumlahJubileum = new BigDecimal(0);
//                BigDecimal nettoJubileum = new BigDecimal(0);
//                if(payrollPerson.getCentangJubileum().equalsIgnoreCase("Y")){
//                    jumlahJubileum = payrollPerson.getBesarJubileumNilai();
//                    totalJubileum = payrollPerson.getTotalKaliJubileumNilai();
//                    nettoJubileum = payrollPerson.getNettoJubileumNilai();
//                }
//
//                BigDecimal gaji = new BigDecimal(0);
//                BigDecimal umk = new BigDecimal(0);
//                BigDecimal struktural = new BigDecimal(0);
//                BigDecimal peralihan = new BigDecimal(0);
//                BigDecimal jabatanStruktural = new BigDecimal(0);
//                if(payrollPerson.getFlagPayroll().equalsIgnoreCase("N")){
//                    //mengambil Nilai Dari bln sebelumnya jika ada
//                    List<ItPayrollEntity> itPayrollEntity = null;
//                    itPayrollEntity = payrollDao.getLastPayroll(payrollPerson.getNip());
//                    if (itPayrollEntity.size() > 0) {
//                        for (ItPayrollEntity itPayrollEntity1 : itPayrollEntity) {
//                            gaji = itPayrollEntity1.getGajiGolongan();
//                            umk = itPayrollEntity1.getTunjanganUmk();
//                            struktural = itPayrollEntity1.getTunjanganStruktural();
//                            peralihan = itPayrollEntity1.getTunjanganPeralihan();
//                            jabatanStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                        }
//                    }
//                }
//
//                //jubileum
//                List<PayrollJubileum> payrollJubileumList = new ArrayList<>();
//                if(!payroll.getCentangJubileum().equalsIgnoreCase(payrollPerson.getCentangJubileum())){
//                    if(payroll.getCentangJubileum().equalsIgnoreCase("Y")){
//                        //jika di session tidak ada jubileum yg tersedia
//                        PayrollJubileum payrollJubileum = payrollJubileum(payrollPerson.getBulan(), payrollPerson.getTahun(), payroll.getNip(), payrollPerson.getBranchId(),
//                                gaji, umk, struktural, peralihan, jabatanStruktural, payrollPerson.getFlagPayroll());
//                        payrollPerson.setFlagJubileum("Y");
//                        payrollPerson.setCentangJubileum("Y");
//                        if(listOfResultJubileum == null){
//                            listOfResultJubileum = new ArrayList<>();
//                            listOfResultJubileum.add(payrollJubileum);
//                        }else{
//                            listOfResultJubileum.add(payrollJubileum);
//                        }
//                        jumlahJubileum = payrollJubileum.getBesarJubileumNilai();
//                        totalJubileum = payrollJubileum.getTotalJubileumNilai();
//                        nettoJubileum = payrollJubileum.getNettoJubileumNilai();
//                        session.removeAttribute("listDataPayrollJubileum");
//                        session.setAttribute("listDataPayrollJubileum", payrollJubileum);
//                    }else{
//                        payrollPerson.setCentangJubileum("N");
//                        jumlahJubileum = BigDecimal.valueOf(0);
//                        totalJubileum = BigDecimal.valueOf(0);
//                        nettoJubileum = BigDecimal.valueOf(0);
//                    }
//                    payrollPerson.setTotalTambahanNilai(nettoJubileum);
//                    payrollPerson.setTotalTambahan(CommonUtil.numbericFormat(nettoJubileum, "###,###"));
//                    payrollPerson.setTotalGajiBersihNilai(nettoJubileum);
//                    payrollPerson.setTotalGajiBersih(CommonUtil.numbericFormat(nettoJubileum, "###,###"));
//
//
//                    payrollPerson.setBesarJubileumNilai(jumlahJubileum);
//                    payrollPerson.setBesarJubileum(CommonUtil.numbericFormat(jumlahJubileum, "###,###"));
//                    payrollPerson.setTotalKaliJubileumNilai(totalJubileum);
//                    payrollPerson.setTotalKaliJubileum(CommonUtil.numbericFormat(totalJubileum, "###,###"));
//                    payrollPerson.setNettoJubileumNilai(nettoJubileum);
//                    payrollPerson.setNettoJubileum(CommonUtil.numbericFormat(nettoJubileum, "###,###"));
//
//                    payrollPerson.setNettoPensiun(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//                    payrollPerson.setNettoPensiunNilai(BigDecimal.valueOf(0));
//                }
//
//                session.removeAttribute("listDataPayrollPerson");
//                session.setAttribute("listDataPayrollPerson", payrollPerson);
//            }else if(payrollPerson.getFlagPensiun().equalsIgnoreCase("Y")){
//                BigDecimal gaji = payroll.getGajiGolonganNilai();
//                BigDecimal umk = payroll.getTunjanganUmkNilai();
//                BigDecimal struktural = payroll.getTunjanganStrukturalNilai();
//                BigDecimal peralihan = payroll.getTunjanganPeralihanNilai();
//                BigDecimal jabatanStruktural = payroll.getTunjanganJabatanStrukturalNilai();
//                if(payrollPerson.getFlagPayroll().equalsIgnoreCase("N")){
//                    //mengambil Nilai Dari bln sebelumnya jika ada
//                    List<ItPayrollEntity> itPayrollEntity = null;
//                    itPayrollEntity = payrollDao.getLastPayroll(payrollPerson.getNip());
//                    if (itPayrollEntity.size() > 0) {
//                        for (ItPayrollEntity itPayrollEntity1 : itPayrollEntity) {
//                            gaji = itPayrollEntity1.getGajiGolongan();
//                            umk = itPayrollEntity1.getTunjanganUmk();
//                            struktural = itPayrollEntity1.getTunjanganStruktural();
//                            peralihan = itPayrollEntity1.getTunjanganPeralihan();
//                            jabatanStruktural = itPayrollEntity1.getTunjanganJabatanStruktural();
//                        }
//                    }
//                }
//
//                //pensiun
//                BigDecimal pphPensiun = new BigDecimal(0);
//                BigDecimal nettoPensiun = new BigDecimal(0);
//
//                List<PayrollPensiun> payrollPensiunList = new ArrayList<>();
//                if(!payroll.getCentangPensiun().equalsIgnoreCase(payrollPerson.getCentangPensiun())){
//                    if(payroll.getCentangPensiun().equalsIgnoreCase("Y")){
//
//                        PayrollPensiun payrollPensiun = getPensiun(payroll.getNip(), CommonUtil.convertStringToDate(payrollPerson.getStTanggalAktif()),
//                                CommonUtil.convertStringToDate(payrollPerson.getStTanggalPensiun()), payrollPerson.getStTanggalPayroll(), payrollPerson.getGolonganName(),
//                                payrollPerson.getPoint() + "", payrollPerson.getMasaKerjaTahun() + "", payrollPerson.getMasaKerjaBulan() + "", gaji, umk,
//                                struktural, jabatanStruktural, peralihan, payrollPerson.getFlagPayroll());
//                        payrollPensiun.setNip(payroll.getNip());
//
//                        nettoPensiun = payrollPensiun.getNettoPensiunNilai();
//                        pphPensiun = payrollPensiun.getPphPensiunNilai();
//
//                        payrollPerson.setCentangPensiun("Y");
//                    }else{
//                        nettoPensiun = BigDecimal.valueOf(0);
//                        pphPensiun = BigDecimal.valueOf(0);
//                        payrollPerson.setCentangPensiun("N");
//                    }
//
//                    payrollPerson.setPphPensiunNilai(pphPensiun);
//                    payrollPerson.setNettoPensiun(CommonUtil.numbericFormat(nettoPensiun, "###,###"));
//                    payrollPerson.setNettoPensiunNilai(nettoPensiun);
//                    if(pphPensiun == null){
//                        pphPensiun = BigDecimal.valueOf(0) ;
//                    }
//                    payrollPerson.setPphPensiun(CommonUtil.numbericFormat(pphPensiun, "###,###"));
//                    payrollPerson.setTotalTambahan(CommonUtil.numbericFormat(nettoPensiun, "###,###"));
//                    payrollPerson.setTotalTambahanNilai(nettoPensiun);
//                    payrollPerson.setTotalGajiBersih(CommonUtil.numbericFormat(nettoPensiun, "###,###"));
//                    payrollPerson.setTotalGajiBersihNilai(nettoPensiun);
//
//                    payrollPerson.setNettoJubileumNilai(BigDecimal.valueOf(0));
//                    payrollPerson.setNettoJubileum(CommonUtil.numbericFormat(BigDecimal.valueOf(0), "###,###"));
//
//                    session.removeAttribute("listDataPayrollPerson");
//                    session.setAttribute("listDataPayrollPerson", payrollPerson);
//                }
//            }
//
//        }
//    }
//
//    @Override
//    public void saveEditSessionDataUsingPayrollIdJasprodSys(Payroll payroll) throws GeneralBOException {
//        List<ItPayrollJasprodEntity> itPayrollJasprodEntities = payrollJasprodDao.getJasprod(payroll.getPayrollId());
//        HttpSession session = ServletActionContext.getRequest().getSession();
//
//        Payroll payrollPerson = (Payroll) session.getAttribute("listDataPayrollPerson");
//
//        BigDecimal lainLain = new BigDecimal(0);
//        BigDecimal pph = new BigDecimal(0);
//        BigDecimal netto = new BigDecimal(0);
//
//        lainLain = payroll.getKoperasiNilai()
//                .add(payroll.getDansosNilai()
//                .add(payroll.getLainLainNilai()));
//
//        PayrollJasprod payrollJasprod = new PayrollJasprod();
//        payrollJasprod.setPotKoperasi(payroll.getKoperasiNilai());
//        payrollJasprod.setPotTaliAsih(payroll.getDansosNilai());
//        payrollJasprod.setPotLain(payroll.getLainLainNilai());
//
//        payrollJasprod.setPotKoperasi(payroll.getKoperasiNilai());
//        payrollJasprod.setPotTaliAsih(payroll.getDansosNilai());
//        payrollJasprod.setPotLain(payroll.getLainLainNilai());
//
//        payrollPerson.setKoperasi(CommonUtil.numbericFormat(payroll.getKoperasiNilai(), "###,###"));
//        payrollPerson.setKoperasiNilai(payroll.getKoperasiNilai());
//        payrollPerson.setDansos(CommonUtil.numbericFormat(payroll.getDansosNilai(), "###,###"));
//        payrollPerson.setDansosNilai(payroll.getDansosNilai());
//        payrollPerson.setLainLain(CommonUtil.numbericFormat(payroll.getLainLainNilai(), "###,###"));
//        payrollPerson.setLainLainNilai(payroll.getLainLainNilai());
//        //payrollPerson.getDansosNilai(payroll.getDansosNilai());
//        //payrollPerson.setPotLa(payroll.getLainLainNilai());
//
//        if(itPayrollJasprodEntities.size() > 0){
//            for(ItPayrollJasprodEntity itPayrollJasprodEntities1: itPayrollJasprodEntities){
//                payrollJasprod.setJasprodId(itPayrollJasprodEntities1.getJasprodId());
//                payrollJasprod.setNilaiSmk(itPayrollJasprodEntities1.getNilaiSmk().doubleValue());
//                payrollJasprod.setGajiGolonganNilai(itPayrollJasprodEntities1.getGajiGolonganNilai());
//                payrollJasprod.setTunjanganUmkNilai(itPayrollJasprodEntities1.getTunjanganUmkNilai());
//                payrollJasprod.setTunjanganStrukturalNilai(itPayrollJasprodEntities1.getTunjanganStrukturalNilai());
//                payrollJasprod.setTunjPeralihanNilai(itPayrollJasprodEntities1.getTunjPeralihanNilai());
//                payrollJasprod.setTunjanganStrategisNilai(itPayrollJasprodEntities1.getTunjanganStrategisNilai());
//                payrollJasprod.setMasaKerja(itPayrollJasprodEntities1.getMasaKerja());
//                payrollJasprod.setGajiMasaKerjaNilai(itPayrollJasprodEntities1.getGajiMasaKerja());
//                payrollJasprod.setFaktor(itPayrollJasprodEntities1.getFaktorKali());
//                payrollJasprod.setPersenSmk(itPayrollJasprodEntities1.getPersenSmk().doubleValue());
//                payrollJasprod.setPerhitunganNilai(itPayrollJasprodEntities1.getGajiMasaKerjaFaktorSmk());
//                payrollJasprod.setPphJasprod(itPayrollJasprodEntities1.getPphJasprod());
//
//                payrollJasprod.setGajiBrutoNilai(itPayrollJasprodEntities1.getBruto());
//            }
//        }
//
//        if(payroll.getCentangKalkulasiPph().equalsIgnoreCase("Y")){
//
//            payrollPerson.setCentangJubileum("N");
//            payrollPerson.setFlagJubileum("N");
//            payrollPerson.setCentangPensiun("N");
//            payrollPerson.setFlagPensiun("N");
//            payrollPerson.setCentangListrikAir("N");
//            payrollPerson.setCentangPerumahan("N");
//            payrollPerson.setCentangKalkulasiPph(payroll.getCentangKalkulasiPph());
//            payrollPerson.setCentangKalkulasiPphPengobatan(payroll.getCentangKalkulasiPphPengobatan());
//
//            //saveEditSessionDataUsingPayrollIdSys(payrollPerson);
//        }else{
//        }
//        payrollPerson.setPphGaji(CommonUtil.numbericFormat(payroll.getPphGajiNilai(), "###,###"));
//        payrollPerson.setPphGajiNilai(payroll.getPphGajiNilai());
//        payrollJasprod.setPphJasprod(payroll.getPphGajiNilai());
//        payrollPerson.setTotalB(CommonUtil.numbericFormat(payroll.getPphGajiNilai(), "###,###"));
//        payrollPerson.setTotalBNilai(payroll.getPphGajiNilai());
//
//        netto = payrollJasprod.getGajiBrutoNilai()
//                .subtract(lainLain)
//                .subtract(payrollJasprod.getPphJasprod());
//
//        payrollJasprod.setJasprodNilaiFinal(netto);
//
//        payrollPerson.setTotalC(CommonUtil.numbericFormat(lainLain, "###,###"));
//        payrollPerson.setTotalCNilai(lainLain);
//
//        payrollPerson.setTotalGajiBersih(CommonUtil.numbericFormat(netto, "###,###"));
//        payrollPerson.setTotalGajiBersihNilai(netto);
//
//        session.removeAttribute("listDataPayrollPerson");
//        session.setAttribute("listDataPayrollPerson", payrollPerson);
//    }
//
//    @Override
//    public String cekJubileumSys(String nip) throws GeneralBOException {
//        String hasil = "";
//        List<ItPayrollEntity> itJubileum = null;
//        itJubileum = payrollDao.cekJubileum(nip);
//        if(itJubileum.size() > 0){
//            for(ItPayrollEntity itPayrollEntity : itJubileum){
//                hasil = CommonUtil.convertDateToString(itPayrollEntity.getTanggalAktif());
//            }
//        }
//
//        return hasil;
//    }
//
//    @Override
//    public String cekPensiunSys(String nip) throws GeneralBOException {
//        String hasil = "";
//        List<ItPayrollEntity> itPensiun = null;
//        itPensiun = payrollDao.cekPensiun(nip);
//        if(itPensiun.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPensiun){
//                hasil = CommonUtil.convertTimestampToString(itPayrollEntity.getApprovalDate());
//            }
//        }
//
//        return hasil;
//    }
//
//    @Override
//    public List<PayrollUpahHarian> upahHarianSys(PayrollUpahHarian upahHarian) throws GeneralBOException {
//        List<AbsensiPegawaiEntity> absensiPegawaiList = null;
//        List<ItPayrollEntity> upahHarianList = null;
//        List<PayrollUpahHarian> payrollUpahHarianList = new ArrayList<>();
//        java.sql.Date awal = CommonUtil.convertStringToDate(upahHarian.getStTanggalAwal());
//        java.sql.Date akhir = CommonUtil.convertStringToDate(upahHarian.getStTanggalAkhir());
//        ImBiodataEntity imBiodataEntity = biodataDao.getById("nip", upahHarian.getNip());
//
//        String stTanggalAwal = upahHarian.getStTanggalAwal();
//        String splitAwal[] = stTanggalAwal.split("-");
//        String stTanggalAkhir = upahHarian.getStTanggalAkhir();
//        String splitAkhir[] = stTanggalAkhir.split("-");
//        upahHarianList = payrollDao.getListBayarUpah(upahHarian.getNip(), splitAwal[1], splitAkhir[1], splitAwal[2], splitAkhir[2]);
//
//        HttpSession session = ServletActionContext.getRequest().getSession();
//        List<PayrollUpahHarian> listOfSessionGajiPkwt = (List<PayrollUpahHarian>) session.getAttribute("listOfGajiPkwt");
//
//        //mengambil data dari table absensi
//        absensiPegawaiList = absensiPegawaiDao.getDataUpahHarian(upahHarian.getNip(), upahHarian.getBranchId(), awal, akhir);
//
//        if(absensiPegawaiList != null){
//
//            for(AbsensiPegawaiEntity absensiPegawaiEntity: absensiPegawaiList){
//                PayrollUpahHarian payrollUpahHarian = new PayrollUpahHarian();
//                payrollUpahHarian.setStTnggal(CommonUtil.convertDateToString(absensiPegawaiEntity.getTanggal()));
//                payrollUpahHarian.setHari(CommonUtil.convertDateToDay(absensiPegawaiEntity.getTanggal()));
//                payrollUpahHarian.setAbsenMasuk(absensiPegawaiEntity.getJamMasuk());
//                payrollUpahHarian.setAbsenKeluar(absensiPegawaiEntity.getJamKeluar());
//                payrollUpahHarian.setGaji(CommonUtil.numbericFormat(imBiodataEntity.getGaji(), "###,###"));
//                payrollUpahHarian.setGajiNilai(imBiodataEntity.getGaji());
//
//                payrollUpahHarian.setStatus("N");
//                if(upahHarianList != null){
//                    for(ItPayrollEntity payrollEntity: upahHarianList){
//                        if(CommonUtil.convertDateToString(absensiPegawaiEntity.getTanggal()).equalsIgnoreCase(CommonUtil.convertDateToString(payrollEntity.getTanggal()))){
//                            payrollUpahHarian.setStatus("Y");
//                            break;
//                        }
//                    }
//                }
//                payrollUpahHarian.setChecked("N");
//                if(listOfSessionGajiPkwt != null){
//                    for(PayrollUpahHarian payrollUpahHarian1: listOfSessionGajiPkwt){
//                        if(absensiPegawaiEntity.getNip().equalsIgnoreCase(payrollUpahHarian1.getNip())){
//                            if(CommonUtil.convertDateToString(absensiPegawaiEntity.getTanggal()).equalsIgnoreCase(payrollUpahHarian1.getStTnggal())){
//                                payrollUpahHarian.setChecked("Y");
//                                break;
//                            }
//                        }
//                    }
//                }
//
//                payrollUpahHarianList.add(payrollUpahHarian);
//            }
//        }
//
//        return payrollUpahHarianList;
//    }
//
//    @Override
//    public void saveDataGajiPkwtSys(PayrollUpahHarian payrollUpahHarian) throws GeneralBOException {
//        List<ItPayrollUpahHarianEntity> itPayrollUpahHarianEntityList = payrollUpahHarianDao.getUpahHarian(payrollUpahHarian.getPayrollId());
//
//        String adaTanggal = "N";
//        if(itPayrollUpahHarianEntityList != null){
//            for(ItPayrollUpahHarianEntity itPayrollUpahHarianEntity : itPayrollUpahHarianEntityList){
//                if(payrollUpahHarian.getStTnggal().equalsIgnoreCase(itPayrollUpahHarianEntity.getStTnggal())){
//                    itPayrollUpahHarianEntity.setFlag("Y");
//
//                    String userLogin = CommonUtil.userLogin();
//                    Timestamp updateTime = new Timestamp(Calendar.getInstance().getTimeInMillis());
//                    itPayrollUpahHarianEntity.setCreatedDate(updateTime);
//                    itPayrollUpahHarianEntity.setCreatedWho(userLogin);
//                    itPayrollUpahHarianEntity.setLastUpdateWho(userLogin);
//                    itPayrollUpahHarianEntity.setLastUpdate(updateTime);
//                    adaTanggal = "Y";
//                    payrollUpahHarianDao.updateAndSave(itPayrollUpahHarianEntity);
//                    break;
//                }
//            }
//            if(adaTanggal.equalsIgnoreCase("N")){
//                ItPayrollUpahHarianEntity itPayrollUpahHarianEntity = new ItPayrollUpahHarianEntity();
//                itPayrollUpahHarianEntity.setUpahHarianId(payrollUpahHarianDao.getNextUpahHarianDao());
//                itPayrollUpahHarianEntity.setPayrollId(payrollUpahHarian.getPayrollId());
//                itPayrollUpahHarianEntity.setFlag("Y");
//
//                String userLogin = CommonUtil.userLogin();
//                Timestamp updateTime = new Timestamp(Calendar.getInstance().getTimeInMillis());
//                itPayrollUpahHarianEntity.setCreatedDate(updateTime);
//                itPayrollUpahHarianEntity.setCreatedWho(userLogin);
//                itPayrollUpahHarianEntity.setLastUpdateWho(userLogin);
//                itPayrollUpahHarianEntity.setLastUpdate(updateTime);
//                payrollUpahHarianDao.addAndSave(itPayrollUpahHarianEntity);
//            }
//        }
//    }
//
//    @Override
//    public void removeDataGajiPkwtSys(String payrollId) throws GeneralBOException {
//        List<ItPayrollUpahHarianEntity> itPayrollUpahHarianEntityList = payrollUpahHarianDao.getUpahHarian(payrollId);
//
//        if(itPayrollUpahHarianEntityList != null){
//            for(ItPayrollUpahHarianEntity itPayrollUpahHarianEntity : itPayrollUpahHarianEntityList){
//                itPayrollUpahHarianEntity.setFlag("N");
//
//                String userLogin = CommonUtil.userLogin();
//                Timestamp updateTime = new Timestamp(Calendar.getInstance().getTimeInMillis());
//                itPayrollUpahHarianEntity.setCreatedDate(updateTime);
//                itPayrollUpahHarianEntity.setCreatedWho(userLogin);
//                itPayrollUpahHarianEntity.setLastUpdateWho(userLogin);
//                itPayrollUpahHarianEntity.setLastUpdate(updateTime);
//
//                payrollUpahHarianDao.updateAndSave(itPayrollUpahHarianEntity);
//            }
//        }
//    }
//
//    @Override
//    public List<PayrollUpahHarian> upahHarianDataSys(PayrollUpahHarian upahHarian) throws GeneralBOException {
//        List<AbsensiPegawaiEntity> absensiPegawaiList = null;
//        List<ItPayrollEntity> upahHarianList = null;
//        List<PayrollUpahHarian> payrollUpahHarianList = new ArrayList<>();
//        java.sql.Date awal = CommonUtil.convertStringToDate(upahHarian.getStTanggalAwal());
//        java.sql.Date akhir = CommonUtil.convertStringToDate(upahHarian.getStTanggalAkhir());
//        ImBiodataEntity imBiodataEntity = biodataDao.getById("nip", upahHarian.getNip());
//
//        String stTanggalAwal = upahHarian.getStTanggalAwal();
//        String splitAwal[] = stTanggalAwal.split("-");
//        String stTanggalAkhir = upahHarian.getStTanggalAkhir();
//        String splitAkhir[] = stTanggalAkhir.split("-");
//        upahHarianList = payrollDao.getListBayarUpah(upahHarian.getNip(), splitAwal[1], splitAkhir[1], splitAwal[2], splitAkhir[2]);
//
//        //mengambil data dari table absensi
//        absensiPegawaiList = absensiPegawaiDao.getDataUpahHarian(upahHarian.getNip(), upahHarian.getBranchId(), awal, akhir);
//
//        if(absensiPegawaiList != null){
//
//            for(AbsensiPegawaiEntity absensiPegawaiEntity: absensiPegawaiList){
//                PayrollUpahHarian payrollUpahHarian = new PayrollUpahHarian();
//                payrollUpahHarian.setStTnggal(CommonUtil.convertDateToString(absensiPegawaiEntity.getTanggal()));
//                payrollUpahHarian.setHari(CommonUtil.convertDateToDay(absensiPegawaiEntity.getTanggal()));
//                payrollUpahHarian.setAbsenMasuk(absensiPegawaiEntity.getJamMasuk());
//                payrollUpahHarian.setAbsenKeluar(absensiPegawaiEntity.getJamKeluar());
//                payrollUpahHarian.setGaji(CommonUtil.numbericFormat(imBiodataEntity.getGaji(), "###,###"));
//                payrollUpahHarian.setGajiNilai(imBiodataEntity.getGaji());
//
//                payrollUpahHarian.setChecked("N");
//                payrollUpahHarian.setStatus("N");
//                if(upahHarianList != null){
//                    for(ItPayrollEntity payrollEntity: upahHarianList){
//                        if(CommonUtil.convertDateToString(absensiPegawaiEntity.getTanggal()).equalsIgnoreCase(CommonUtil.convertDateToString(payrollEntity.getTanggal()))){
//                            if(payrollEntity.getApprovalFlag().equalsIgnoreCase("B")){
//                                payrollUpahHarian.setChecked("Y");
//                            }else{
//                                payrollUpahHarian.setStatus("Y");
//                            }
//                            break;
//                        }
//                    }
//                }
//
//                payrollUpahHarianList.add(payrollUpahHarian);
//            }
//        }
//
//        return payrollUpahHarianList;
//    }
//
//    @Override
//    public void updateUpahHarianDataSys(PayrollUpahHarian upahHarian) throws GeneralBOException {
//        java.sql.Date tanggal = CommonUtil.convertStringToDate(upahHarian.getStTnggal());
//        List<ItPayrollUpahHarianEntity> itPayrollUpahHarianEntityList = payrollUpahHarianDao.getUpahHarianTanggal(upahHarian.getPayrollId(), tanggal);
//
//        if(itPayrollUpahHarianEntityList.size() > 0){
//            for(ItPayrollUpahHarianEntity itPayrollUpahHarianEntity: itPayrollUpahHarianEntityList){
//                itPayrollUpahHarianEntity.setFlag("Y");
//                itPayrollUpahHarianEntity.setAction("U");
//
//                String userLogin = CommonUtil.userLogin();
//                Timestamp updateTime = new Timestamp(Calendar.getInstance().getTimeInMillis());
//                itPayrollUpahHarianEntity.setCreatedDate(updateTime);
//                itPayrollUpahHarianEntity.setCreatedWho(userLogin);
//                itPayrollUpahHarianEntity.setLastUpdateWho(userLogin);
//                itPayrollUpahHarianEntity.setLastUpdate(updateTime);
//
//                payrollUpahHarianDao.updateAndSave(itPayrollUpahHarianEntity);
//            }
//        }else{
//            ItPayrollUpahHarianEntity itPayrollUpahHarianEntity = new ItPayrollUpahHarianEntity();
//            itPayrollUpahHarianEntity.setUpahHarianId(payrollUpahHarianDao.getNextUpahHarianDao());
//            itPayrollUpahHarianEntity.setPayrollId(upahHarian.getPayrollId());
//            itPayrollUpahHarianEntity.setTanggal(CommonUtil.convertStringToDate(upahHarian.getStTnggal()));
//            itPayrollUpahHarianEntity.setFlag("Y");
//            itPayrollUpahHarianEntity.setAction("C");
//
//            String userLogin = CommonUtil.userLogin();
//            Timestamp updateTime = new Timestamp(Calendar.getInstance().getTimeInMillis());
//            itPayrollUpahHarianEntity.setCreatedDate(updateTime);
//            itPayrollUpahHarianEntity.setCreatedWho(userLogin);
//            itPayrollUpahHarianEntity.setLastUpdateWho(userLogin);
//            itPayrollUpahHarianEntity.setLastUpdate(updateTime);
//            payrollUpahHarianDao.addAndSave(itPayrollUpahHarianEntity);
//        }
//    }
//
//    @Override
//    public PayrollPotonganLain getDataPotonganLainSys(String payrollId) throws GeneralBOException {
//        PayrollPotonganLain payrollPotonganLain = new PayrollPotonganLain();
//        List<ItPayrollPotonganLainEntity> itPayrollPotonganLainEntity = null;
//
//        itPayrollPotonganLainEntity = payrollPotonganLainDao.getDataPotongan(payrollId);
//        if(itPayrollPotonganLainEntity.size() > 0){
//            for(ItPayrollPotonganLainEntity itPayrollPotonganLainEntity1 : itPayrollPotonganLainEntity){
//                payrollPotonganLain.setNip(itPayrollPotonganLainEntity1.getNip());
//                payrollPotonganLain.setPayrollId(itPayrollPotonganLainEntity1.getPayrollId());
//                payrollPotonganLain.setKeterangan1(itPayrollPotonganLainEntity1.getKeterangan1());
//                payrollPotonganLain.setKeterangan2(itPayrollPotonganLainEntity1.getKeterangan2());
//                payrollPotonganLain.setKeterangan3(itPayrollPotonganLainEntity1.getKeterangan3());
//                payrollPotonganLain.setKeterangan4(itPayrollPotonganLainEntity1.getKeterangan4());
//                payrollPotonganLain.setKeterangan5(itPayrollPotonganLainEntity1.getKeterangan5());
//                payrollPotonganLain.setNilai1(itPayrollPotonganLainEntity1.getNilai1());
//                payrollPotonganLain.setNilai2(itPayrollPotonganLainEntity1.getNilai2());
//                payrollPotonganLain.setNilai3(itPayrollPotonganLainEntity1.getNilai3());
//                payrollPotonganLain.setNilai4(itPayrollPotonganLainEntity1.getNilai4());
//                payrollPotonganLain.setNilai5(itPayrollPotonganLainEntity1.getNilai5());
//            }
//        }
//        return payrollPotonganLain;
//    }
//
//    @Override
//    public void savePotonganLainData(PayrollPotonganLain bean) throws GeneralBOException {
//        List<ItPayrollPotonganLainEntity> itPayrollPotonganLainEntity = null;
//
//        itPayrollPotonganLainEntity = payrollPotonganLainDao.getDataPotongan(bean.getPayrollId());
//        if(itPayrollPotonganLainEntity.size() > 0){
//            for(ItPayrollPotonganLainEntity itPayrollPotonganLainEntity1 : itPayrollPotonganLainEntity){
//                itPayrollPotonganLainEntity1.setKeterangan1(bean.getKeterangan1());
//                itPayrollPotonganLainEntity1.setKeterangan2(bean.getKeterangan2());
//                itPayrollPotonganLainEntity1.setKeterangan3(bean.getKeterangan3());
//                itPayrollPotonganLainEntity1.setKeterangan4(bean.getKeterangan4());
//                itPayrollPotonganLainEntity1.setKeterangan5(bean.getKeterangan5());
//
//                itPayrollPotonganLainEntity1.setNilai1(bean.getNilai1());
//                itPayrollPotonganLainEntity1.setNilai2(bean.getNilai2());
//                itPayrollPotonganLainEntity1.setNilai3(bean.getNilai3());
//                itPayrollPotonganLainEntity1.setNilai4(bean.getNilai4());
//                itPayrollPotonganLainEntity1.setNilai5(bean.getNilai5());
//
//                payrollPotonganLainDao.updateAndSave(itPayrollPotonganLainEntity1);
//            }
//        }else{
//            ItPayrollPotonganLainEntity itPayrollPotonganLainEntity1 = new ItPayrollPotonganLainEntity();
//
//            itPayrollPotonganLainEntity1.setPotonganLainId(payrollPotonganLainDao.getNextPotonganLainId());
//            itPayrollPotonganLainEntity1.setPayrollId(bean.getPayrollId());
//
//            itPayrollPotonganLainEntity1.setKeterangan1(bean.getKeterangan1());
//            itPayrollPotonganLainEntity1.setKeterangan2(bean.getKeterangan2());
//            itPayrollPotonganLainEntity1.setKeterangan3(bean.getKeterangan3());
//            itPayrollPotonganLainEntity1.setKeterangan4(bean.getKeterangan4());
//            itPayrollPotonganLainEntity1.setKeterangan5(bean.getKeterangan5());
//
//            itPayrollPotonganLainEntity1.setNilai1(bean.getNilai1());
//            itPayrollPotonganLainEntity1.setNilai2(bean.getNilai2());
//            itPayrollPotonganLainEntity1.setNilai3(bean.getNilai3());
//            itPayrollPotonganLainEntity1.setNilai4(bean.getNilai4());
//            itPayrollPotonganLainEntity1.setNilai5(bean.getNilai5());
//
//            itPayrollPotonganLainEntity1.setFlag("Y");
//            itPayrollPotonganLainEntity1.setAction("C");
//
//            String userLogin = CommonUtil.userLogin();
//            Timestamp updateTime = new Timestamp(Calendar.getInstance().getTimeInMillis());
//            itPayrollPotonganLainEntity1.setCreatedDate(updateTime);
//            itPayrollPotonganLainEntity1.setCreatedWho(userLogin);
//            itPayrollPotonganLainEntity1.setLastUpdateWho(userLogin);
//            itPayrollPotonganLainEntity1.setLastUpdate(updateTime);
//            try {
//                payrollPotonganLainDao.addAndSave(itPayrollPotonganLainEntity1);
//            } catch (HibernateException e) {
//                logger.error("[PayrollBoImpl.saveDelete] Error, " + e.getMessage());
//                throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//            }
//        }
//    }


//uncomment by ferdi, 01 des 2020
//    @Override
//    public List<SmkHistoryEvaluasiPegawai> listPromosiSys(String nip) throws GeneralBOException {
//        List<ItSmkHistoryEvaluasiPegawaiEntity> listPromosi = null;
//        List<SmkHistoryEvaluasiPegawai> smkHistoryEvaluasiPegawais = new ArrayList<>();
//
//        listPromosi = smkHistoryEvaluasiPegawaiDao.getHistorySmk(nip);
//        if(listPromosi.size() > 0){
//            for(ItSmkHistoryEvaluasiPegawaiEntity itSmkHistoryEvaluasiPegawaiEntity: listPromosi){
//                SmkHistoryEvaluasiPegawai smkHistoryEvaluasiPegawai = new SmkHistoryEvaluasiPegawai();
//                smkHistoryEvaluasiPegawai.setPeriode(itSmkHistoryEvaluasiPegawaiEntity.getPeriode());
//                smkHistoryEvaluasiPegawai.setNilai(itSmkHistoryEvaluasiPegawaiEntity.getNilai());
//                smkHistoryEvaluasiPegawai.setNilaiPrestasi(itSmkHistoryEvaluasiPegawaiEntity.getNilaiPrestasi());
//                smkHistoryEvaluasiPegawai.setPoin(itSmkHistoryEvaluasiPegawaiEntity.getPoin());
//
//                smkHistoryEvaluasiPegawais.add(smkHistoryEvaluasiPegawai);
//            }
//        }
//
//        return smkHistoryEvaluasiPegawais;
//    }
//
//    @Override
//    public Map getDataForBilling(Payroll bean) throws GeneralBOException {
//        Map dataPayroll = new HashMap();
//        List<ItPayrollEntity> payrollEntityList;
//        List<ImPosition> positionDekom = new ArrayList<>();
//        List<ImPosition> positionDireksi = new ArrayList<>();
//        List<ImPosition> positionSelainDekomDanDirkom = new ArrayList<>();
//
//        List<Map> penghasilandekomlist = new ArrayList<>();
//        List<Map> tunjpphdekomlist = new ArrayList<>();
//        List<Map> tunjtransportkomdekomlist = new ArrayList<>();
//        List<Map> tunjrumahdekomlist = new ArrayList<>();
//        List<Map> tunjpelaksanatugasdekomlist = new ArrayList<>();
//        List<Map> tunjharirayadekomlist = new ArrayList<>();
//        List<Map> tunjcutidekomlist = new ArrayList<>();
//        List<Map> tunjtantiemdekomlist = new ArrayList<>();
//        List<Map> tunjasuransidekomlist = new ArrayList<>();
//        List<Map> tunjlainlaindekomlist = new ArrayList<>();
//        List<Map> pphList = new ArrayList<>();
//
//        List<Map> penghasilandireksilist = new ArrayList<>();
//        List<Map> tunjpphdireksilist = new ArrayList<>();
//        List<Map> tunjtransportkomdireksilist = new ArrayList<>();
//        List<Map> tunjrumahdireksilist = new ArrayList<>();
//        List<Map> tunjpelaksanatugasdireksilist = new ArrayList<>();
//        List<Map> tunjharirayadireksilist = new ArrayList<>();
//        List<Map> tunjcutidireksilist = new ArrayList<>();
//        List<Map> tunjtantiemdireksilist = new ArrayList<>();
//        List<Map> tunjasuransidireksilist = new ArrayList<>();
//        List<Map> tunjlainlaindireksilist = new ArrayList<>();
//
//        List<Map> gajikaryawantetaplist = new ArrayList<>();
//        List<Map> tunjjabatankaryawantetaplist = new ArrayList<>();
//        List<Map> tunjstrukturalkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjpajakkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjRLABkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjpensiunkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjbpjstkkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjbpjskskaryawantetaplist = new ArrayList<>();
//        List<Map> tunjkhususkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjlemburkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjperalihankaryawantetaplist = new ArrayList<>();
//        List<Map> tunjsupervisikaryawantetaplist = new ArrayList<>();
//        List<Map> tunjfungsionalkaryawantetaplist = new ArrayList<>();
//        List<Map> tunjlainnyakaryawantetaplist = new ArrayList<>();
//
//        List<Map> gajikaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjfungsionalkaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjtambahankaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjpajakkaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjbpjstkkaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjbpjskskaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjkhususkaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjlemburkaryawantidaktetaplist = new ArrayList<>();
//        List<Map> tunjlainnyakaryawantidaktetaplist = new ArrayList<>();
//
//        try {
//            payrollEntityList = payrollDao.getDataView(bean.getBranchId(),bean.getBulan(),bean.getTahun(),bean.getTipe());
//            positionDekom = positionDao.getListPositionDekom();
//            positionDireksi = positionDao.getListPositionDireksi();
//            positionSelainDekomDanDirkom = positionDao.getListPositionSelainDekomDanDirkom();
//        }catch (HibernateException e){
//            logger.error("[PayrollBoImpl.approvePayroll] Error, " + e.getMessage());
//            throw new GeneralBOException("Found problem when saving update data Payroll, please info to your admin..." + e.getMessage());
//        }
//
//        BigDecimal total = BigDecimal.ZERO;
//        //untuk Dekom
//        for (ImPosition posisi : positionDekom){
//            int jumlahdata = 0;
//            for (ItPayrollEntity payrollEntity : payrollEntityList){
//                if (posisi.getPositionId().equalsIgnoreCase(payrollEntity.getPositionId())){
//                    Map penghasilandekom = new HashMap();
//                    penghasilandekom.put("nilai",payrollEntity.getGajiGolongan());
//                    penghasilandekom.put("divisi_id",posisi.getKodering());
//                    penghasilandekomlist.add(penghasilandekom);
//                    total = total.add(payrollEntity.getGajiGolongan());
//
//                    Map tunjpphdekom = new HashMap();
//                    tunjpphdekom.put("nilai",payrollEntity.getTunjanganPph());
//                    tunjpphdekom.put("divisi_id",posisi.getKodering());
//                    tunjpphdekomlist.add(tunjpphdekom);
////                    total = total.add(payrollEntity.getTunjanganPph());
//
//                    Map tunjtransportkomdekom = new HashMap();
//                    tunjtransportkomdekom.put("nilai",BigDecimal.ZERO);
//                    tunjtransportkomdekom.put("divisi_id",posisi.getKodering());
//                    tunjtransportkomdekomlist.add(tunjtransportkomdekom);
//
//                    Map tunjrumahdekom = new HashMap();
//                    tunjrumahdekom.put("nilai",payrollEntity.getTunjanganRumah());
//                    tunjrumahdekom.put("divisi_id",posisi.getKodering());
//                    tunjrumahdekomlist.add(tunjrumahdekom);
//                    total = total.add(payrollEntity.getTunjanganRumah());
//
//                    Map tunjpelaksanatugasdekom = new HashMap();
//                    tunjpelaksanatugasdekom.put("nilai",BigDecimal.ZERO);
//                    tunjpelaksanatugasdekom.put("divisi_id",posisi.getKodering());
//                    tunjpelaksanatugasdekomlist.add(tunjpelaksanatugasdekom);
//
//                    if (("T").equalsIgnoreCase(bean.getTipe())){
//                        Map tunjharirayadekom = new HashMap();
//                        tunjharirayadekom.put("nilai",payrollEntity.getTambahanLain());
//                        tunjharirayadekom.put("divisi_id",posisi.getKodering());
//                        tunjharirayadekomlist.add(tunjharirayadekom);
//                        total = total.add(payrollEntity.getTambahanLain());
//                    }else{
//                        Map tunjharirayadekom = new HashMap();
//                        tunjharirayadekom.put("nilai",BigDecimal.ZERO);
//                        tunjharirayadekom.put("divisi_id",posisi.getKodering());
//                        tunjharirayadekomlist.add(tunjharirayadekom);
//                    }
//
//                    if (("CT").equalsIgnoreCase(bean.getTipe())||("CP").equalsIgnoreCase(bean.getTipe())){
//                        Map tunjcutidekom = new HashMap();
//                        tunjcutidekom.put("nilai",payrollEntity.getTambahanLain());
//                        tunjcutidekom.put("divisi_id",posisi.getKodering());
//                        tunjcutidekomlist.add(tunjcutidekom);
//                        total = total.add(payrollEntity.getTambahanLain());
//                    }else{
//                        Map tunjcutidekom = new HashMap();
//                        tunjcutidekom.put("nilai",BigDecimal.ZERO);
//                        tunjcutidekom.put("divisi_id",posisi.getKodering());
//                        tunjcutidekomlist.add(tunjcutidekom);
//                    }
//
//                    Map tunjtantiemdekom = new HashMap();
//                    tunjtantiemdekom.put("nilai",payrollEntity.getTambahanLain());
//                    tunjtantiemdekom.put("divisi_id",posisi.getKodering());
//                    tunjtantiemdekomlist.add(tunjtantiemdekom);
//                    total = total.add(payrollEntity.getTambahanLain());
//
//                    Map tunjasuransidekom = new HashMap();
//                    tunjasuransidekom.put("nilai",BigDecimal.ZERO);
//                    tunjasuransidekom.put("divisi_id",posisi.getKodering());
//                    tunjasuransidekomlist.add(tunjasuransidekom);
//
//                    Map tunjlainlaindekom = new HashMap();
//                    tunjlainlaindekom.put("nilai",BigDecimal.ZERO);
//                    tunjlainlaindekom.put("divisi_id",posisi.getKodering());
//                    tunjlainlaindekomlist.add(tunjlainlaindekom);
//
//                    jumlahdata=jumlahdata+1;
//                }
//            }
//            if (jumlahdata==0){
//                Map penghasilandekom = new HashMap();
//                penghasilandekom.put("nilai",BigDecimal.ZERO);
//                penghasilandekom.put("divisi_id",posisi.getKodering());
//                penghasilandekomlist.add(penghasilandekom);
//
//                Map tunjpphdekom = new HashMap();
//                tunjpphdekom.put("nilai",BigDecimal.ZERO);
//                tunjpphdekom.put("divisi_id",posisi.getKodering());
//                tunjpphdekomlist.add(tunjpphdekom);
//
//                Map tunjtransportkomdekom = new HashMap();
//                tunjtransportkomdekom.put("nilai",BigDecimal.ZERO);
//                tunjtransportkomdekom.put("divisi_id",posisi.getKodering());
//                tunjtransportkomdekomlist.add(tunjtransportkomdekom);
//
//                Map tunjrumahdekom = new HashMap();
//                tunjrumahdekom.put("nilai",BigDecimal.ZERO);
//                tunjrumahdekom.put("divisi_id",posisi.getKodering());
//                tunjrumahdekomlist.add(tunjrumahdekom);
//
//                Map tunjpelaksanatugasdekom = new HashMap();
//                tunjpelaksanatugasdekom.put("nilai",BigDecimal.ZERO);
//                tunjpelaksanatugasdekom.put("divisi_id",posisi.getKodering());
//                tunjpelaksanatugasdekomlist.add(tunjpelaksanatugasdekom);
//
//                Map tunjharirayadekom = new HashMap();
//                tunjharirayadekom.put("nilai",BigDecimal.ZERO);
//                tunjharirayadekom.put("divisi_id",posisi.getKodering());
//                tunjharirayadekomlist.add(tunjharirayadekom);
//
//                Map tunjcutidekom = new HashMap();
//                tunjcutidekom.put("nilai",BigDecimal.ZERO);
//                tunjcutidekom.put("divisi_id",posisi.getKodering());
//                tunjcutidekomlist.add(tunjcutidekom);
//
//                Map tunjtantiemdekom = new HashMap();
//                tunjtantiemdekom.put("nilai",BigDecimal.ZERO);
//                tunjtantiemdekom.put("divisi_id",posisi.getKodering());
//                tunjtantiemdekomlist.add(tunjtantiemdekom);
//
//                Map tunjasuransidekom = new HashMap();
//                tunjasuransidekom.put("nilai",BigDecimal.ZERO);
//                tunjasuransidekom.put("divisi_id",posisi.getKodering());
//                tunjasuransidekomlist.add(tunjasuransidekom);
//
//                Map tunjlainlaindekom = new HashMap();
//                tunjlainlaindekom.put("nilai",BigDecimal.ZERO);
//                tunjlainlaindekom.put("divisi_id",posisi.getKodering());
//                tunjlainlaindekomlist.add(tunjlainlaindekom);
//
//            }
//        }
//
//        //untuk Direksi
//        for (ImPosition posisi : positionDireksi){
//            int jumlahdata = 0;
//            for (ItPayrollEntity payrollEntity : payrollEntityList){
//                if (posisi.getPositionId().equalsIgnoreCase(payrollEntity.getPositionId())){
//                    Map penghasilandireksi = new HashMap();
//                    penghasilandireksi.put("nilai",payrollEntity.getGajiGolongan());
//                    penghasilandireksi.put("divisi_id",posisi.getKodering());
//                    penghasilandireksilist.add(penghasilandireksi);
//                    total = total.add(payrollEntity.getGajiGolongan());
//
//                    Map tunjpphdireksi = new HashMap();
//                    tunjpphdireksi.put("nilai",payrollEntity.getTunjanganPph());
//                    tunjpphdireksi.put("divisi_id",posisi.getKodering());
//                    tunjpphdireksilist.add(tunjpphdireksi);
////                    total = total.add(payrollEntity.getTunjanganPph());
//
//                    Map tunjtransportkomdireksi = new HashMap();
//                    tunjtransportkomdireksi.put("nilai",BigDecimal.ZERO);
//                    tunjtransportkomdireksi.put("divisi_id",posisi.getKodering());
//                    tunjtransportkomdireksilist.add(tunjtransportkomdireksi);
//
//                    Map tunjrumahdireksi = new HashMap();
//                    tunjrumahdireksi.put("nilai",payrollEntity.getTunjanganRumah());
//                    tunjrumahdireksi.put("divisi_id",posisi.getKodering());
//                    tunjrumahdireksilist.add(tunjrumahdireksi);
//                    total = total.add(payrollEntity.getTunjanganRumah());
//
//                    Map tunjpelaksanatugasdireksi = new HashMap();
//                    tunjpelaksanatugasdireksi.put("nilai",BigDecimal.ZERO);
//                    tunjpelaksanatugasdireksi.put("divisi_id",posisi.getKodering());
//                    tunjpelaksanatugasdireksilist.add(tunjpelaksanatugasdireksi);
//
//                    if (("T").equalsIgnoreCase(bean.getTipe())){
//                        Map tunjharirayadireksi = new HashMap();
//                        tunjharirayadireksi.put("nilai",payrollEntity.getTambahanLain());
//                        tunjharirayadireksi.put("divisi_id",posisi.getKodering());
//                        tunjharirayadireksilist.add(tunjharirayadireksi);
//                        total = total.add(payrollEntity.getTambahanLain());
//                    }else{
//                        Map tunjharirayadireksi = new HashMap();
//                        tunjharirayadireksi.put("nilai",BigDecimal.ZERO);
//                        tunjharirayadireksi.put("divisi_id",posisi.getKodering());
//                        tunjharirayadireksilist.add(tunjharirayadireksi);
//                    }
//
//                    if (("CP").equalsIgnoreCase(bean.getTipe())||("CT").equalsIgnoreCase(bean.getTipe())){
//                        Map tunjcutidireksi = new HashMap();
//                        tunjcutidireksi.put("nilai",payrollEntity.getTambahanLain());
//                        tunjcutidireksi.put("divisi_id",posisi.getKodering());
//                        tunjcutidireksilist.add(tunjcutidireksi);
//                        total = total.add(payrollEntity.getTambahanLain());
//                    }else{
//                        Map tunjcutidireksi = new HashMap();
//                        tunjcutidireksi.put("nilai",BigDecimal.ZERO);
//                        tunjcutidireksi.put("divisi_id",posisi.getKodering());
//                        tunjcutidireksilist.add(tunjcutidireksi);
//                    }
//
//                    Map tunjtantiemdireksi = new HashMap();
//                    tunjtantiemdireksi.put("nilai",BigDecimal.ZERO);
//                    tunjtantiemdireksi.put("divisi_id",posisi.getKodering());
//                    tunjtantiemdireksilist.add(tunjtantiemdireksi);
//
//                    Map tunjasuransidireksi = new HashMap();
//                    tunjasuransidireksi.put("nilai",BigDecimal.ZERO);
//                    tunjasuransidireksi.put("divisi_id",posisi.getKodering());
//                    tunjasuransidireksilist.add(tunjasuransidireksi);
//
//                    Map tunjlainlaindireksi = new HashMap();
//                    tunjlainlaindireksi.put("nilai",BigDecimal.ZERO);
//                    tunjlainlaindireksi.put("divisi_id",posisi.getKodering());
//                    tunjlainlaindireksilist.add(tunjlainlaindireksi);
//
//                    jumlahdata=jumlahdata+1;
//                }
//            }
//            if (jumlahdata==0){
//                Map penghasilandireksi = new HashMap();
//                penghasilandireksi.put("nilai",BigDecimal.ZERO);
//                penghasilandireksi.put("divisi_id",posisi.getKodering());
//                penghasilandireksilist.add(penghasilandireksi);
//
//                Map tunjpphdireksi = new HashMap();
//                tunjpphdireksi.put("nilai",BigDecimal.ZERO);
//                tunjpphdireksi.put("divisi_id",posisi.getKodering());
//                tunjpphdireksilist.add(tunjpphdireksi);
//
//                Map tunjtransportkomdireksi = new HashMap();
//                tunjtransportkomdireksi.put("nilai",BigDecimal.ZERO);
//                tunjtransportkomdireksi.put("divisi_id",posisi.getKodering());
//                tunjtransportkomdireksilist.add(tunjtransportkomdireksi);
//
//                Map tunjrumahdireksi = new HashMap();
//                tunjrumahdireksi.put("nilai",BigDecimal.ZERO);
//                tunjrumahdireksi.put("divisi_id",posisi.getKodering());
//                tunjrumahdireksilist.add(tunjrumahdireksi);
//
//                Map tunjpelaksanatugasdireksi = new HashMap();
//                tunjpelaksanatugasdireksi.put("nilai",BigDecimal.ZERO);
//                tunjpelaksanatugasdireksi.put("divisi_id",posisi.getKodering());
//                tunjpelaksanatugasdireksilist.add(tunjpelaksanatugasdireksi);
//
//                Map tunjharirayadireksi = new HashMap();
//                tunjharirayadireksi.put("nilai",BigDecimal.ZERO);
//                tunjharirayadireksi.put("divisi_id",posisi.getKodering());
//                tunjharirayadireksilist.add(tunjharirayadireksi);
//
//                Map tunjcutidireksi = new HashMap();
//                tunjcutidireksi.put("nilai",BigDecimal.ZERO);
//                tunjcutidireksi.put("divisi_id",posisi.getKodering());
//                tunjcutidireksilist.add(tunjcutidireksi);
//
//                Map tunjtantiemdireksi = new HashMap();
//                tunjtantiemdireksi.put("nilai",BigDecimal.ZERO);
//                tunjtantiemdireksi.put("divisi_id",posisi.getKodering());
//                tunjtantiemdireksilist.add(tunjtantiemdireksi);
//
//                Map tunjasuransidireksi = new HashMap();
//                tunjasuransidireksi.put("nilai",BigDecimal.ZERO);
//                tunjasuransidireksi.put("divisi_id",posisi.getKodering());
//                tunjasuransidireksilist.add(tunjasuransidireksi);
//
//                Map tunjlainlaindireksi = new HashMap();
//                tunjlainlaindireksi.put("nilai",BigDecimal.ZERO);
//                tunjlainlaindireksi.put("divisi_id",posisi.getKodering());
//                tunjlainlaindireksilist.add(tunjlainlaindireksi);
//
//            }
//        }
//
//        //untuk Posisi Selain dekom dan direksi
//        for (ImPosition posisi : positionSelainDekomDanDirkom){
//            int jumlahdataPt = 0;
//            int jumlahdataPtt = 0;
//            for (ItPayrollEntity payrollEntity : payrollEntityList){
//                if (posisi.getPositionId().equalsIgnoreCase(payrollEntity.getPositionId())){
//                    ImBiodataEntity biodataEntity = biodataDao.getById("nip",payrollEntity.getNip());
//                    //jika karyawan tetap
//                    if (("TP01").equalsIgnoreCase(biodataEntity.getTipePegawai())){
//                        Map gajikaryawantetap = new HashMap();
//                        gajikaryawantetap.put("nilai",payrollEntity.getGajiGolongan());
//                        gajikaryawantetap.put("divisi_id",posisi.getKodering());
//                        gajikaryawantetaplist.add(gajikaryawantetap);
//                        total = total.add(payrollEntity.getGajiGolongan());
//
//                        Map tunjjabatankaryawantetap = new HashMap();
//                        tunjjabatankaryawantetap.put("nilai",payrollEntity.getTunjanganJabatanStruktural());
//                        tunjjabatankaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjjabatankaryawantetaplist.add(tunjjabatankaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganJabatanStruktural());
//
//                        Map tunjstrukturalkaryawantetap = new HashMap();
//                        tunjstrukturalkaryawantetap.put("nilai",payrollEntity.getTunjanganStruktural());
//                        tunjstrukturalkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjstrukturalkaryawantetaplist.add(tunjstrukturalkaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganStruktural());
//
//                        Map tunjpajakkaryawantetap = new HashMap();
//                        tunjpajakkaryawantetap.put("nilai",payrollEntity.getTunjanganPph());
//                        tunjpajakkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjpajakkaryawantetaplist.add(tunjpajakkaryawantetap);
////                        total = total.add(payrollEntity.getTunjanganPph());
//
//                        Map tunjRLABkaryawantetap = new HashMap();
//                        tunjRLABkaryawantetap.put("nilai",payrollEntity.getTotalRlab());
//                        tunjRLABkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjRLABkaryawantetaplist.add(tunjRLABkaryawantetap);
//                        total = total.add(payrollEntity.getTotalRlab());
//
//                        Map tunjpensiunkaryawantetap = new HashMap();
//                        tunjpensiunkaryawantetap.put("nilai",payrollEntity.getTunjanganDapen());
//                        tunjpensiunkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjpensiunkaryawantetaplist.add(tunjpensiunkaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganDapen());
//
//                        Map tunjbpjstkkaryawantetap = new HashMap();
//                        tunjbpjstkkaryawantetap.put("nilai",payrollEntity.getTunjanganBpjsTk());
//                        tunjbpjstkkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjbpjstkkaryawantetaplist.add(tunjbpjstkkaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganBpjsTk());
//
//                        Map tunjbpjskskaryawantetap = new HashMap();
//                        tunjbpjskskaryawantetap.put("nilai",payrollEntity.getTunjanganBpjsKs());
//                        tunjbpjskskaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjbpjskskaryawantetaplist.add(tunjbpjskskaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganBpjsKs());
//
//                        Map tunjkhususkaryawantetap = new HashMap();
//                        tunjkhususkaryawantetap.put("nilai",payrollEntity.getTunjanganUmk());
//                        tunjkhususkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjkhususkaryawantetaplist.add(tunjkhususkaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganUmk());
//
//                        Map tunjlemburkaryawantetap = new HashMap();
//                        tunjlemburkaryawantetap.put("nilai",payrollEntity.getTunjanganLembur());
//                        tunjlemburkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjlemburkaryawantetaplist.add(tunjlemburkaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganLembur());
//
//                        Map tunjperalihankaryawantetap = new HashMap();
//                        tunjperalihankaryawantetap.put("nilai",payrollEntity.getTunjanganPeralihan());
//                        tunjperalihankaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjperalihankaryawantetaplist.add(tunjperalihankaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganPeralihan());
//
//                        Map tunjsupervisikaryawantetap = new HashMap();
//                        tunjsupervisikaryawantetap.put("nilai",BigDecimal.ZERO);
//                        tunjsupervisikaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjsupervisikaryawantetaplist.add(tunjsupervisikaryawantetap);
//
//                        Map tunjfungsionalkaryawantetap = new HashMap();
//                        tunjfungsionalkaryawantetap.put("nilai",payrollEntity.getTunjanganStrategis());
//                        tunjfungsionalkaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjfungsionalkaryawantetaplist.add(tunjfungsionalkaryawantetap);
//                        total = total.add(payrollEntity.getTunjanganStrategis());
//
//                        Map tunjlainnyakaryawantetap = new HashMap();
//                        tunjlainnyakaryawantetap.put("nilai",BigDecimal.ZERO);
//                        tunjlainnyakaryawantetap.put("divisi_id",posisi.getKodering());
//                        tunjlainnyakaryawantetaplist.add(tunjlainnyakaryawantetap);
//
//                        jumlahdataPt=jumlahdataPt+1;
//                    }else
//                        //jika karyawan tidak tetap
//                        if (("TP03").equalsIgnoreCase(biodataEntity.getTipePegawai())){
//                        Map gajikaryawantidaktetap = new HashMap();
//                        gajikaryawantidaktetap.put("nilai",payrollEntity.getGajiGolongan());
//                        gajikaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        gajikaryawantidaktetaplist.add(gajikaryawantidaktetap);
//                        total = total.add(payrollEntity.getGajiGolongan());
//
//                        Map tunjfungsionalkaryawantidaktetap = new HashMap();
//                        tunjfungsionalkaryawantidaktetap.put("nilai",payrollEntity.getTunjanganStrategis());
//                        tunjfungsionalkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjfungsionalkaryawantidaktetaplist.add(tunjfungsionalkaryawantidaktetap);
//                        total = total.add(payrollEntity.getTunjanganStrategis());
//
//                        Map tunjtambahankaryawantidaktetap = new HashMap();
//                        tunjtambahankaryawantidaktetap.put("nilai",payrollEntity.getTunjanganTambahan());
//                        tunjtambahankaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjtambahankaryawantidaktetaplist.add(tunjtambahankaryawantidaktetap);
//                        total = total.add(payrollEntity.getTunjanganTambahan());
//
//                        Map tunjpajakkaryawantidaktetap = new HashMap();
//                        tunjpajakkaryawantidaktetap.put("nilai",payrollEntity.getTunjanganPph());
//                        tunjpajakkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjpajakkaryawantidaktetaplist.add(tunjpajakkaryawantidaktetap);
////                        total = total.add(payrollEntity.getTunjanganPph());
//
//                        Map tunjbpjstkkaryawantidaktetap = new HashMap();
//                        tunjbpjstkkaryawantidaktetap.put("nilai",payrollEntity.getTunjanganBpjsTk());
//                        tunjbpjstkkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjbpjstkkaryawantidaktetaplist.add(tunjbpjstkkaryawantidaktetap);
//                        total = total.add(payrollEntity.getTunjanganBpjsTk());
//
//                        Map tunjbpjskskaryawantidaktetap = new HashMap();
//                        tunjbpjskskaryawantidaktetap.put("nilai",payrollEntity.getTunjanganBpjsKs());
//                        tunjbpjskskaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjbpjskskaryawantidaktetaplist.add(tunjbpjskskaryawantidaktetap);
//                        total = total.add(payrollEntity.getTunjanganBpjsKs());
//
//                        Map tunjkhususkaryawantidaktetap = new HashMap();
//                        tunjkhususkaryawantidaktetap.put("nilai",payrollEntity.getTunjanganUmk());
//                        tunjkhususkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjkhususkaryawantidaktetaplist.add(tunjkhususkaryawantidaktetap);
//                        total = total.add(payrollEntity.getTunjanganUmk());
//
//                        Map tunjlemburkaryawantidaktetap = new HashMap();
//                        tunjlemburkaryawantidaktetap.put("nilai",payrollEntity.getTunjanganLembur());
//                        tunjlemburkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjlemburkaryawantidaktetaplist.add(tunjlemburkaryawantidaktetap);
//                        total = total.add(payrollEntity.getTunjanganLembur());
//
//                        Map tunjlainnyakaryawantidaktetap = new HashMap();
//                        tunjlainnyakaryawantidaktetap.put("nilai",payrollEntity.getTunjanganLain());
//                        tunjlainnyakaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                        tunjlainnyakaryawantidaktetaplist.add(tunjlainnyakaryawantidaktetap);
//                        total = total.add(payrollEntity.getTunjanganLain());
//
//                        jumlahdataPtt=jumlahdataPtt+1;
//                    }
//
//                }
//            }
//
//            if (jumlahdataPt==0){
//                Map gajikaryawantetap = new HashMap();
//                gajikaryawantetap.put("nilai",BigDecimal.ZERO);
//                gajikaryawantetap.put("divisi_id",posisi.getKodering());
//                gajikaryawantetaplist.add(gajikaryawantetap);
//
//                Map tunjjabatankaryawantetap = new HashMap();
//                tunjjabatankaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjjabatankaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjjabatankaryawantetaplist.add(tunjjabatankaryawantetap);
//
//                Map tunjstrukturalkaryawantetap = new HashMap();
//                tunjstrukturalkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjstrukturalkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjstrukturalkaryawantetaplist.add(tunjstrukturalkaryawantetap);
//
//                Map tunjpajakkaryawantetap = new HashMap();
//                tunjpajakkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjpajakkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjpajakkaryawantetaplist.add(tunjpajakkaryawantetap);
//
//                Map tunjRLABkaryawantetap = new HashMap();
//                tunjRLABkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjRLABkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjRLABkaryawantetaplist.add(tunjRLABkaryawantetap);
//
//                Map tunjpensiunkaryawantetap = new HashMap();
//                tunjpensiunkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjpensiunkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjpensiunkaryawantetaplist.add(tunjpensiunkaryawantetap);
//
//                Map tunjbpjstkkaryawantetap = new HashMap();
//                tunjbpjstkkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjbpjstkkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjbpjstkkaryawantetaplist.add(tunjbpjstkkaryawantetap);
//
//                Map tunjbpjskskaryawantetap = new HashMap();
//                tunjbpjskskaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjbpjskskaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjbpjskskaryawantetaplist.add(tunjbpjskskaryawantetap);
//
//                Map tunjkhususkaryawantetap = new HashMap();
//                tunjkhususkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjkhususkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjkhususkaryawantetaplist.add(tunjkhususkaryawantetap);
//
//                Map tunjlemburkaryawantetap = new HashMap();
//                tunjlemburkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjlemburkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjlemburkaryawantetaplist.add(tunjlemburkaryawantetap);
//
//                Map tunjperalihankaryawantetap = new HashMap();
//                tunjperalihankaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjperalihankaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjperalihankaryawantetaplist.add(tunjperalihankaryawantetap);
//
//                Map tunjsupervisikaryawantetap = new HashMap();
//                tunjsupervisikaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjsupervisikaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjsupervisikaryawantetaplist.add(tunjsupervisikaryawantetap);
//
//                Map tunjfungsionalkaryawantetap = new HashMap();
//                tunjfungsionalkaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjfungsionalkaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjfungsionalkaryawantetaplist.add(tunjfungsionalkaryawantetap);
//
//                Map tunjlainnyakaryawantetap = new HashMap();
//                tunjlainnyakaryawantetap.put("nilai",BigDecimal.ZERO);
//                tunjlainnyakaryawantetap.put("divisi_id",posisi.getKodering());
//                tunjlainnyakaryawantetaplist.add(tunjlainnyakaryawantetap);
//
//            }else if (jumlahdataPtt==0){
//                Map gajikaryawantidaktetap = new HashMap();
//                gajikaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                gajikaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                gajikaryawantidaktetaplist.add(gajikaryawantidaktetap);
//
//                Map tunjfungsionalkaryawantidaktetap = new HashMap();
//                tunjfungsionalkaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjfungsionalkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjfungsionalkaryawantidaktetaplist.add(tunjfungsionalkaryawantidaktetap);
//
//                Map tunjtambahankaryawantidaktetap = new HashMap();
//                tunjtambahankaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjtambahankaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjtambahankaryawantidaktetaplist.add(tunjtambahankaryawantidaktetap);
//
//                Map tunjpajakkaryawantidaktetap = new HashMap();
//                tunjpajakkaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjpajakkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjpajakkaryawantidaktetaplist.add(tunjpajakkaryawantidaktetap);
//
//                Map tunjbpjstkkaryawantidaktetap = new HashMap();
//                tunjbpjstkkaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjbpjstkkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjbpjstkkaryawantidaktetaplist.add(tunjbpjstkkaryawantidaktetap);
//
//                Map tunjbpjskskaryawantidaktetap = new HashMap();
//                tunjbpjskskaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjbpjskskaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjbpjskskaryawantidaktetaplist.add(tunjbpjskskaryawantidaktetap);
//
//                Map tunjkhususkaryawantidaktetap = new HashMap();
//                tunjkhususkaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjkhususkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjkhususkaryawantidaktetaplist.add(tunjkhususkaryawantidaktetap);
//
//                Map tunjlemburkaryawantidaktetap = new HashMap();
//                tunjlemburkaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjlemburkaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjlemburkaryawantidaktetaplist.add(tunjlemburkaryawantidaktetap);
//
//                Map tunjlainnyakaryawantidaktetap = new HashMap();
//                tunjlainnyakaryawantidaktetap.put("nilai",BigDecimal.ZERO);
//                tunjlainnyakaryawantidaktetap.put("divisi_id",posisi.getKodering());
//                tunjlainnyakaryawantidaktetaplist.add(tunjlainnyakaryawantidaktetap);
//
//            }
//        }
//
//        //For PPh
//        for (ItPayrollEntity payrollEntity : payrollEntityList){
//            Map pphGaji = new HashMap();
//            pphGaji.put("nilai",payrollEntity.getPphGaji());
////            pphGaji.put("bukti",mappingJurnalDao.getNextInvoiceId("JKK",payrollEntity.getBranchId()));
//            pphGaji.put("master_id",payrollEntity.getNip());
//            pphList.add(pphGaji);
//        }
//
//        dataPayroll.put("penghasilan_dekom", penghasilandekomlist);
//        dataPayroll.put("tunj_pph_dekom", tunjpphdekomlist);
//        dataPayroll.put("tunj_transport_kom_dekom", tunjtransportkomdekomlist);
//        dataPayroll.put("tunj_rumah_dekom", tunjrumahdekomlist);
//        dataPayroll.put("tunj_pelaksana_tugas_dekom", tunjpelaksanatugasdekomlist);
//        dataPayroll.put("tunj_hariraya_dekom", tunjharirayadekomlist);
//        dataPayroll.put("tunj_cuti_dekom", tunjcutidekomlist);
//        dataPayroll.put("tunj_tantiem_dekom", tunjtantiemdekomlist);
//        dataPayroll.put("tunj_asuransi_dekom", tunjasuransidekomlist);
//        dataPayroll.put("tunj_lain_lain_dekom", tunjlainlaindekomlist);
//
//        dataPayroll.put("penghasilan_direksi", penghasilandireksilist);
//        dataPayroll.put("tunj_pph_direksi", tunjpphdireksilist);
//        dataPayroll.put("tunj_transport_kom_direksi", tunjtransportkomdireksilist);
//        dataPayroll.put("tunj_rumah_direksi", tunjrumahdireksilist);
//        dataPayroll.put("tunj_pelaksana_tugas_direksi", tunjpelaksanatugasdireksilist);
//        dataPayroll.put("tunj_hariraya_direksi", tunjharirayadireksilist);
//        dataPayroll.put("tunj_cuti_direksi", tunjcutidireksilist);
//        dataPayroll.put("tunj_tantiem_direksi", tunjtantiemdireksilist);
//        dataPayroll.put("tunj_asuransi_direksi", tunjasuransidireksilist);
//        dataPayroll.put("tunj_lain_lain_direksi", tunjlainlaindireksilist);
//
//        dataPayroll.put("gaji_karyawan_tetap", gajikaryawantetaplist);
//        dataPayroll.put("tunj_jabatan_karyawan_tetap", tunjjabatankaryawantetaplist);
//        dataPayroll.put("tunj_struktural_karyawan_tetap", tunjstrukturalkaryawantetaplist);
//        dataPayroll.put("tunj_pajak_karyawan_tetap", tunjpajakkaryawantetaplist);
//        dataPayroll.put("tunj_RLAB_karyawan_tetap", tunjRLABkaryawantetaplist);
//        dataPayroll.put("tunj_pensiun_karyawan_tetap", tunjpensiunkaryawantetaplist);
//        dataPayroll.put("tunj_bpjs_tk_karyawan_tetap", tunjbpjstkkaryawantetaplist);
//        dataPayroll.put("tunj_bpjs_ks_karyawan_tetap", tunjbpjskskaryawantetaplist);
//        dataPayroll.put("tunj_khusus_karyawan_tetap", tunjkhususkaryawantetaplist);
//        dataPayroll.put("tunj_lembur_karyawan_tetap", tunjlemburkaryawantetaplist);
//        dataPayroll.put("tunj_peralihan_karyawan_tetap", tunjperalihankaryawantetaplist);
//        dataPayroll.put("tunj_supervisi_karyawan_tetap", tunjsupervisikaryawantetaplist);
//        dataPayroll.put("tunj_fungsional_karyawan_tetap", tunjfungsionalkaryawantetaplist);
//        dataPayroll.put("tunj_lainnya_karyawan_tetap", tunjlainnyakaryawantetaplist);
//
//        dataPayroll.put("gaji_karyawan_tidak_tetap", gajikaryawantidaktetaplist);
//        dataPayroll.put("tunj_fungsional_karyawan_tidak_tetap", tunjfungsionalkaryawantidaktetaplist);
//        dataPayroll.put("tunj_tambahan_karyawan_tidak_tetap", tunjtambahankaryawantidaktetaplist);
//        dataPayroll.put("tunj_pajak_karyawan_tidak_tetap", tunjpajakkaryawantidaktetaplist);
//        dataPayroll.put("tunj_bpjs_tk_karyawan_tidak_tetap", tunjbpjstkkaryawantidaktetaplist);
//        dataPayroll.put("tunj_bpjs_ks_karyawan_tidak_tetap", tunjbpjskskaryawantidaktetaplist);
//        dataPayroll.put("tunj_khusus_karyawan_tidak_tetap", tunjkhususkaryawantidaktetaplist);
//        dataPayroll.put("tunj_lembur_karyawan_tidak_tetap", tunjlemburkaryawantidaktetaplist);
//        dataPayroll.put("tunj_lainnya_karyawan_tidak_tetap", tunjlainnyakaryawantidaktetaplist);
//
//        dataPayroll.put("pph_gaji",pphList);
//
//        if (bean.getBranchId().equalsIgnoreCase(CommonConstant.ID_KANPUS)||bean.isSdm()){
//            Map kas = new HashMap();
//            kas.put("metode_bayar","transfer");
//            kas.put("bank", CommonConstant.COA_PAYROLL);
//            kas.put("nilai",total);
//
//            dataPayroll.put("kas",kas);
//            return dataPayroll;
//        }else{
//            //membuat mapping rk
//            Map dataMap = new HashMap();
//
//            //mencari coa rk unit
//            List<ImBranches> branchesList = branchDao.getListBranchById(bean.getBranchId());
//            String coaRkUnit="";
//            for (ImBranches branches : branchesList){
//                coaRkUnit = branches.getCoaRk();
//            }
//
//            Map rkUnit = new HashMap();
//            rkUnit.put("nilai",total);
//            rkUnit.put("rekening_id",kodeRekeningDao.getRekeningIdByCoa(coaRkUnit));
//            dataMap.put("rk_kd_unit",rkUnit);
//
//            Map giro = new HashMap();
//            giro.put("nilai",total);
//            giro.put("rekening_id",kodeRekeningDao.getRekeningIdByCoa(CommonConstant.COA_PAYROLL));
//            dataMap.put("metode_bayar",giro);
//
//            return dataMap;
//        }
//    }
//
//    @Override
//    public void approvePayroll(Payroll bean) throws GeneralBOException {
//        if( bean.getBranchId().equalsIgnoreCase(CommonConstant.ID_KANPUS)){
//            payrollDao.approvePayrollAks(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getApprovalFlag(), bean.getTipe());
//            payrollDao.approvePayroll(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getApprovalFlag(), bean.getTipe());
//        }else{
//            payrollDao.approvePayrollAks(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getApprovalFlag(), bean.getTipe());
//        }
//    }
//    @Override
//    public void approvePayrollAks(Payroll bean) throws GeneralBOException {
//        payrollDao.approvePayroll(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getApprovalFlag(), bean.getTipe());
//    }
//
//    @Override
//    public void approvePayrollUnit(Payroll bean) throws GeneralBOException {
//        payrollDao.approvePayrollUnit(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getApprovalUnitFlag(), bean.getTipe());
//    }
//
//    @Override
//    public void approvePayrollSdm(Payroll bean) throws GeneralBOException {
//        payrollDao.approvePayrollSdm(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getApprovalSdmFlag(), bean.getTipe());
//
//    }


//uncomment by ferdi 01 des 2020
//    @Override
//    public PayrollKonsistensi showKonsistensiGaji(String nip, String bulan, String tahun) throws GeneralBOException {
//        PayrollKonsistensi payrollKonsistensi = new PayrollKonsistensi();
//        List<PayrollKonsistensi>listPayroll = new ArrayList<>();
//        List<ItPayrollEntity>listPayrollSebelumnya = new ArrayList<>();
//        List<ItPayrollEntity>listPayrollSekarang = new ArrayList<>();
//        int bulanSebelum = Integer.parseInt(bulan);
//        int tahunSebelumnya = Integer.parseInt(tahun);
//        String strBlnSebelumnya = bulan;
//        String strTahunSebelumnya = tahun ;
//
//        //Payroll Sebelum
//        if(bulanSebelum - 1 < 1){
//            strTahunSebelumnya = (tahunSebelumnya - 1) + "";
//            strBlnSebelumnya = "12";
//        }else{
//            strBlnSebelumnya = (bulanSebelum-1) + "";
//        }
//        listPayrollSebelumnya= payrollDao.getLastPayroll(nip, strBlnSebelumnya, strTahunSebelumnya);
//        if(listPayrollSebelumnya.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: listPayrollSebelumnya){
//                payrollKonsistensi.setStrGajiKotorSebelumnya(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payrollKonsistensi.setGajiKotorSebelumnya(itPayrollEntity.getTotalA());
//
//                payrollKonsistensi.setReduceSebelumnya(itPayrollEntity.getTotalB());
//                payrollKonsistensi.setStrReduceSebelumnya(CommonUtil.numbericFormat(itPayrollEntity.getTotalB(), "###,###"));
//
//                payrollKonsistensi.setLainLainSebelumnya(itPayrollEntity.getTotalC());
//                payrollKonsistensi.setStrLainLainSebelumnya(CommonUtil.numbericFormat(itPayrollEntity.getTotalC(), "###,###"));
//
//                payrollKonsistensi.setStrPenambahanSebelumnya(CommonUtil.numbericFormat(itPayrollEntity.getTotalD(), "###,###"));
//                payrollKonsistensi.setPenambahanSebelumnya(itPayrollEntity.getTotalD());
//
//                payrollKonsistensi.setStrNilaiSebelumnya(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payrollKonsistensi.setNilaiSebelumnya(itPayrollEntity.getGajiBersih());
//            }
//        }
//
//        HttpSession session = ServletActionContext.getRequest().getSession();
//        List<Payroll> sessionPayrollSekarang = (List<Payroll>) session.getAttribute("listDataPayroll");
//
//        if(sessionPayrollSekarang.size() > 0){
//            for(Payroll itPayrollEntity: sessionPayrollSekarang){
//                if(nip.equalsIgnoreCase(itPayrollEntity.getNip()) && !"".equalsIgnoreCase(nip) ){
//                    payrollKonsistensi.setGajiKotor(itPayrollEntity.getTotalANilai());
//                    payrollKonsistensi.setStrGajiKotor(itPayrollEntity.getTotalA());
//
//                    payrollKonsistensi.setReduce(itPayrollEntity.getTotalBNilai());
//                    payrollKonsistensi.setStrReduce(itPayrollEntity.getTotalB());
//
//                    payrollKonsistensi.setLainLain(itPayrollEntity.getTotalCNilai());
//                    payrollKonsistensi.setStrLainLain(itPayrollEntity.getTotalC());
//
//                    payrollKonsistensi.setPenambahan(itPayrollEntity.getTotalTambahanNilai());
//                    payrollKonsistensi.setStrPenambahan(itPayrollEntity.getTotalTambahan());
//
//                    payrollKonsistensi.setNilai(itPayrollEntity.getTotalGajiBersihNilai());
//                    payrollKonsistensi.setStrNilai(itPayrollEntity.getTotalGajiBersih());
//                }
//            }
//        }
//
//        return payrollKonsistensi;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollBulanSys(String bulan1, String tahun1, String unit, String statusPegawai ) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//        int i = 1;
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        List<StrukturJabatan> strukturJabatan = new ArrayList<>();
//        List<StrukturJabatan> strukturJabatanDireksi
//                = new ArrayList<>();
//        //strukturJabatan = getPerBagianSys(unit, statusPegawai);
//        if(statusPegawai.equalsIgnoreCase("KS")){
//            //strukturJabatanDireksi = getPerBagianSys(unit, statusPegawai);
//        }
//
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian();
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit, statusPegawai, bulan1, tahun1);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollBulan(bulan1, tahun1, unit, statusPegawai);
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//
//                if(!"".equalsIgnoreCase(itPayrollEntity.getGolonganName()) && itPayrollEntity.getGolonganName() != null){
//                    golonganId = itPayrollEntity.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + itPayrollEntity.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//
//                String status = "";
//                payroll.setNama(itPayrollEntity.getNama());
//                if(itPayrollEntity.getGender().equalsIgnoreCase("P")){
//                    status = "B/0";
//                }else if(itPayrollEntity.getJumlahAnak() > 3){
//                    status = itPayrollEntity.getStatusKeluarga() + "/3";
//                } else{
//                    status = itPayrollEntity.getStatusKeluarga() + "/" + itPayrollEntity.getJumlahAnak();
//                }
//
//                BigDecimal totalTunjLain = new BigDecimal(0);
//
//                totalTunjLain = itPayrollEntity.getTunjanganLain().add(itPayrollEntity.getTunjanganPph());
//                payroll.setStatusKeluarga(status);
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity.getGajiGolongan(), "###,###"));
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganUmk(), "###,###"));
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStruktural(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPeralihan(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStrategis(), "###,###"));
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                payroll.setKompensasi(CommonUtil.numbericFormat(itPayrollEntity.getKompensasi(), "###,###"));
//                payroll.setKompensasiNilai(itPayrollEntity.getKompensasi());
//                payroll.setTunjanganTransport(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganTransport(), "###,###"));
//                payroll.setTunjanganTransportNilai(itPayrollEntity.getTunjanganTransport());
//                payroll.setTunjanganAirListrik(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganAirListrik(), "###,###"));
//                payroll.setTunjanganAirListrikNilai(itPayrollEntity.getTunjanganAirListrik());
//                payroll.setTunjanganPengobatan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPengobatan(), "###,###"));
//                payroll.setTunjanganPengobatanNilai(itPayrollEntity.getTunjanganPengobatan());
//                payroll.setTunjanganLain(CommonUtil.numbericFormat(totalTunjLain, "###,###"));
//                payroll.setTunjanganLainNilai(totalTunjLain);
//                payroll.setTunjanganPerumahan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPerumahan(), "###,###"));
//                payroll.setTunjanganPerumahanNilai(itPayrollEntity.getTunjanganPerumahan());
//                payroll.setTunjanganLembur(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganLembur(), "###,###"));
//                payroll.setTunjanganLemburNilai(itPayrollEntity.getTunjanganLembur());
//
//                payroll.setTunjanganPph(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPph(), "###,###"));
//                payroll.setTunjanganPphNilai(itPayrollEntity.getTunjanganPph());
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//        BigDecimal gajiGolongan = new BigDecimal(0);
//        BigDecimal gajiUmk = new BigDecimal(0);
//        BigDecimal tunjStruktural = new BigDecimal(0);
//        BigDecimal tunjPeralihan = new BigDecimal(0);
//        BigDecimal tunjJabStruktural = new BigDecimal(0);
//        BigDecimal tunjStrategis = new BigDecimal(0);
//        BigDecimal tunjKompensasi = new BigDecimal(0);
//        BigDecimal tunjTransport = new BigDecimal(0);
//        BigDecimal tunjListrikAir = new BigDecimal(0);
//        BigDecimal tunjPengobatan = new BigDecimal(0);
//        BigDecimal tunjLain = new BigDecimal(0);
//        BigDecimal tunjPerumahan = new BigDecimal(0);
//        BigDecimal lembur = new BigDecimal(0);
//        BigDecimal tunjPph = new BigDecimal(0);
//        BigDecimal gajiKotor = new BigDecimal(0);
//        BigDecimal gajiBersih = new BigDecimal(0);
//
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//        BigDecimal totalGajiUmk = new BigDecimal(0);
//        BigDecimal totalTunjStruktural = new BigDecimal(0);
//        BigDecimal totalTunjPeralihan = new BigDecimal(0);
//        BigDecimal totalTunjJabStruktural = new BigDecimal(0);
//        BigDecimal totalTunjStrategis = new BigDecimal(0);
//        BigDecimal totalTunjKompensasi = new BigDecimal(0);
//        BigDecimal totalTunjTransport = new BigDecimal(0);
//        BigDecimal totalTunjListrikAir = new BigDecimal(0);
//        BigDecimal totalTunjPengobatan = new BigDecimal(0);
//        BigDecimal totalTunjLain = new BigDecimal(0);
//        BigDecimal totalTunjPerumahan = new BigDecimal(0);
//        BigDecimal totalLembur = new BigDecimal(0);
//        BigDecimal totalTunjPph = new BigDecimal(0);
//        BigDecimal totalGajiKotor = new BigDecimal(0);
//        BigDecimal totalGajiBersih = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayroll(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll payroll = new Payroll();
//                payroll.setGajiGolonganNilai(gajiGolongan);
//                payroll.setTunjanganUmkNilai(gajiUmk);
//                payroll.setTunjanganStrukturalNilai(tunjStruktural);
//                payroll.setTunjanganPeralihanNilai(tunjPeralihan);
//                payroll.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//                payroll.setTunjanganStrategisNilai(tunjStrategis);
//                payroll.setKompensasiNilai(tunjKompensasi);
//                payroll.setTunjanganTransportNilai(tunjTransport);
//                payroll.setTunjanganAirListrikNilai(tunjListrikAir);
//                payroll.setPengobatanNilai(tunjPengobatan);
//                payroll.setTunjanganLainNilai(tunjLain);
//                payroll.setTunjanganPerumahanNilai(tunjPerumahan);
//                payroll.setTunjanganLemburNilai(lembur);
//                payroll.setTunjanganPphNilai(tunjPph);
//                payroll.setTotalANilai(gajiKotor);
//                payroll.setTotalGajiBersihNilai(gajiBersih);
//
//                hasilPayrollList.addAll(headerPayrollTotal(imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(gajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(gajiUmk, "###,###"),
//                        CommonUtil.numbericFormat(tunjStruktural, "###,###"),
//                        CommonUtil.numbericFormat(tunjPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(tunjJabStruktural, "###,###"),
//                        CommonUtil.numbericFormat(tunjStrategis, "###,###"),
//
//                        CommonUtil.numbericFormat(tunjKompensasi, "###,###"),
//                        CommonUtil.numbericFormat(tunjTransport, "###,###"),
//                        CommonUtil.numbericFormat(tunjListrikAir, "###,###"),
//                        CommonUtil.numbericFormat(tunjPengobatan, "###,###"),
//                        CommonUtil.numbericFormat(tunjLain, "###,###"),
//                        CommonUtil.numbericFormat(tunjPerumahan, "###,###"),
//                        CommonUtil.numbericFormat(lembur, "###,###"),
//
//                        CommonUtil.numbericFormat(tunjPph, "###,###"),
//                        CommonUtil.numbericFormat(gajiKotor, "###,###"),
//                        CommonUtil.numbericFormat(gajiBersih, "###,###"), payroll));
//
//                totalGajiGolongan = totalGajiGolongan.add(gajiGolongan);
//                totalGajiUmk = totalGajiUmk.add(gajiUmk);
//                totalTunjStruktural = totalTunjStruktural.add(tunjStruktural);
//                totalTunjPeralihan = totalTunjPeralihan.add(tunjPeralihan);
//                totalTunjJabStruktural = totalTunjJabStruktural.add(tunjJabStruktural);
//                totalTunjStrategis = totalTunjStrategis.add(tunjStrategis);
//                totalTunjKompensasi = totalTunjKompensasi.add(tunjKompensasi);
//                totalTunjTransport = totalTunjTransport.add(tunjTransport);
//                totalTunjListrikAir = totalTunjListrikAir.add(tunjListrikAir);
//                totalTunjPengobatan = totalTunjPengobatan.add(tunjPengobatan);
//                totalTunjLain = totalTunjLain.add(tunjLain);
//                totalTunjPerumahan = totalTunjPerumahan.add(tunjPerumahan);
//                totalLembur = totalLembur.add(lembur);
//                totalTunjPph = totalTunjPph.add(tunjPph);
//                totalGajiKotor = totalGajiKotor.add(gajiKotor);
//                totalGajiBersih = totalGajiBersih.add(gajiBersih);
//
//                gajiGolongan = new BigDecimal(0);
//                gajiUmk = new BigDecimal(0);
//                tunjStruktural = new BigDecimal(0);
//                tunjPeralihan = new BigDecimal(0);
//                tunjJabStruktural = new BigDecimal(0);
//                tunjStrategis = new BigDecimal(0);
//                tunjKompensasi = new BigDecimal(0);
//                tunjTransport = new BigDecimal(0);
//                tunjListrikAir = new BigDecimal(0);
//                tunjPengobatan = new BigDecimal(0);
//                tunjLain = new BigDecimal(0);
//                tunjPerumahan = new BigDecimal(0);
//                lembur = new BigDecimal(0);
//                tunjPph = new BigDecimal(0);
//                gajiKotor = new BigDecimal(0);
//                gajiBersih = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null &&
//                        !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//                        gajiGolongan = gajiGolongan.add(payroll.getGajiGolonganNilai());
//                        gajiUmk = gajiUmk.add(payroll.getTunjanganUmkNilai());
//                        tunjStruktural = tunjStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        tunjPeralihan = tunjPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        tunjJabStruktural = tunjJabStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        tunjStrategis = tunjStrategis.add(payroll.getTunjanganStrategisNilai());
//                        tunjKompensasi = tunjKompensasi.add(payroll.getKompensasiNilai());
//                        tunjTransport = tunjTransport.add(payroll.getTunjanganTransportNilai());
//                        tunjListrikAir = tunjListrikAir.add(payroll.getTunjanganAirListrikNilai());
//                        tunjPengobatan = tunjPengobatan.add(payroll.getTunjanganPengobatanNilai());
//                        tunjLain = tunjLain.add(payroll.getTunjanganLainNilai());
//                        tunjPerumahan = tunjPerumahan.add(payroll.getTunjanganPerumahanNilai());
//                        lembur = lembur.add(payroll.getTunjanganLemburNilai());
//                        tunjPph = tunjPph.add(payroll.getTunjanganPphNilai());
//                        gajiKotor = gajiKotor.add(payroll.getTotalANilai());
//                        gajiBersih = gajiBersih.add(payroll.getTotalGajiBersihNilai());
//
//                        /*totalGajiUmk = totalGajiUmk.add(payroll.getTunjanganUmkNilai());
//                        totalTunjStruktural = totalTunjStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalTunjPeralihan = totalTunjPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        totalTunjJabStruktural = totalTunjJabStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalTunjStrategis = totalTunjStrategis.add(payroll.getTunjanganStrategisNilai());
//                        totalTunjKompensasi = totalTunjKompensasi.add(payroll.getKompensasiNilai());
//                        totalTunjTransport = totalTunjTransport.add(payroll.getTunjanganTransportNilai());
//                        totalTunjListrikAir = totalTunjListrikAir.add(payroll.getTunjanganAirListrikNilai());
//                        totalTunjPengobatan = totalTunjPengobatan.add(payroll.getTunjanganPengobatanNilai());
//                        totalTunjLain =  totalTunjLain.add(payroll.getTunjanganLainNilai());
//                        totalTunjPerumahan = totalTunjPerumahan.add(payroll.getTunjanganPerumahanNilai());
//                        totalLembur = totalLembur.add(payroll.getTunjanganLemburNilai());
//                        totalTunjPph = totalTunjPph.add(payroll.getTunjanganPphNilai());
//                        totalGajiKotor = totalGajiKotor.add(payroll.getTotalANilai());
//                        totalGajiBersih = totalGajiBersih.add(payroll.getTotalGajiBersihNilai());*/
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll subTotalPayroll = new Payroll();
//        subTotalPayroll.setGajiGolonganNilai(gajiGolongan);
//        subTotalPayroll.setTunjanganUmkNilai(gajiUmk);
//        subTotalPayroll.setTunjanganStrukturalNilai(tunjStruktural);
//        subTotalPayroll.setTunjanganPeralihanNilai(tunjPeralihan);
//        subTotalPayroll.setTunjanganJabatanStrukturalNilai(tunjJabStruktural);
//        subTotalPayroll.setTunjanganStrategisNilai(tunjStrategis);
//        subTotalPayroll.setKompensasiNilai(tunjKompensasi);
//        subTotalPayroll.setTunjanganTransportNilai(tunjTransport);
//        subTotalPayroll.setTunjanganAirListrikNilai(tunjListrikAir);
//        subTotalPayroll.setPengobatanNilai(tunjPengobatan);
//        subTotalPayroll.setTunjanganLainNilai(tunjLain);
//        subTotalPayroll.setTunjanganPerumahanNilai(tunjPerumahan);
//        subTotalPayroll.setTunjanganLemburNilai(lembur);
//        subTotalPayroll.setTunjanganPphNilai(tunjPph);
//        subTotalPayroll.setTotalANilai(gajiKotor);
//        subTotalPayroll.setTotalGajiBersihNilai(gajiBersih);
//
//        totalGajiGolongan = totalGajiGolongan.add(gajiGolongan);
//        totalGajiUmk = totalGajiUmk.add(gajiUmk);
//        totalTunjStruktural = totalTunjStruktural.add(tunjStruktural);
//        totalTunjPeralihan = totalTunjPeralihan.add(tunjPeralihan);
//        totalTunjJabStruktural = totalTunjJabStruktural.add(tunjJabStruktural);
//        totalTunjStrategis = totalTunjStrategis.add(tunjStrategis);
//        totalTunjKompensasi = totalTunjKompensasi.add(tunjKompensasi);
//        totalTunjTransport = totalTunjTransport.add(tunjTransport);
//        totalTunjListrikAir = totalTunjListrikAir.add(tunjListrikAir);
//        totalTunjPengobatan = totalTunjPengobatan.add(tunjPengobatan);
//        totalTunjLain = totalTunjLain.add(tunjLain);
//        totalTunjPerumahan = totalTunjPerumahan.add(tunjPerumahan);
//        totalLembur = totalLembur.add(lembur);
//        totalTunjPph = totalTunjPph.add(tunjPph);
//        totalGajiKotor = totalGajiKotor.add(gajiKotor);
//        totalGajiBersih = totalGajiBersih.add(gajiBersih);
//
//        Payroll totalPayroll = new Payroll();
//        totalPayroll.setGajiGolonganNilai(totalGajiGolongan);
//        totalPayroll.setTunjanganUmkNilai(totalGajiUmk);
//        totalPayroll.setTunjanganStrukturalNilai(totalTunjStruktural);
//        totalPayroll.setTunjanganPeralihanNilai(totalTunjPeralihan);
//        totalPayroll.setTunjanganJabatanStrukturalNilai(totalTunjJabStruktural);
//        totalPayroll.setTunjanganStrategisNilai(totalTunjStrategis);
//        totalPayroll.setKompensasiNilai(totalTunjKompensasi);
//        totalPayroll.setTunjanganTransportNilai(totalTunjTransport);
//        totalPayroll.setTunjanganAirListrikNilai(totalTunjListrikAir);
//        totalPayroll.setPengobatanNilai(totalTunjPengobatan);
//        totalPayroll.setTunjanganLainNilai(totalTunjLain);
//        totalPayroll.setTunjanganPerumahanNilai(totalTunjPerumahan);
//        totalPayroll.setTunjanganLemburNilai(totalLembur);
//        totalPayroll.setTunjanganPphNilai(totalTunjPph);
//        totalPayroll.setTotalANilai(totalGajiKotor);
//        totalPayroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//        hasilPayrollList.addAll(payrollTotal(
//                CommonUtil.numbericFormat(gajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(gajiUmk, "###,###"),
//                CommonUtil.numbericFormat(tunjStruktural, "###,###"),
//                CommonUtil.numbericFormat(tunjPeralihan, "###,###"),
//                CommonUtil.numbericFormat(tunjJabStruktural, "###,###"),
//                CommonUtil.numbericFormat(tunjStrategis, "###,###"),
//                CommonUtil.numbericFormat(tunjKompensasi, "###,###"),
//                CommonUtil.numbericFormat(tunjTransport, "###,###"),
//                CommonUtil.numbericFormat(tunjListrikAir, "###,###"),
//                CommonUtil.numbericFormat(tunjPengobatan, "###,###"),
//                CommonUtil.numbericFormat(tunjLain, "###,###"),
//                CommonUtil.numbericFormat(tunjPerumahan, "###,###"),
//                CommonUtil.numbericFormat(lembur, "###,###"),
//                CommonUtil.numbericFormat(tunjPph, "###,###"),
//                CommonUtil.numbericFormat(gajiKotor, "###,###"),
//                CommonUtil.numbericFormat(gajiBersih, "###,###"),
//                subTotalPayroll,
//
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalGajiUmk, "###,###"),
//                CommonUtil.numbericFormat(totalTunjStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalTunjPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalTunjJabStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalTunjStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalTunjKompensasi, "###,###"),
//                CommonUtil.numbericFormat(totalTunjTransport, "###,###"),
//                CommonUtil.numbericFormat(totalTunjListrikAir, "###,###"),
//                CommonUtil.numbericFormat(totalTunjPengobatan, "###,###"),
//                CommonUtil.numbericFormat(totalTunjLain, "###,###"),
//                CommonUtil.numbericFormat(totalTunjPerumahan, "###,###"),
//                CommonUtil.numbericFormat(totalLembur, "###,###"),
//                CommonUtil.numbericFormat(totalTunjPph, "###,###"),
//                CommonUtil.numbericFormat(totalGajiKotor, "###,###"),
//                CommonUtil.numbericFormat(totalGajiBersih, "###,###"),
//                totalPayroll));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollPotonganDinasSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//        int i = 1;
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian();
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit,
//                        statusPegawai, bulan1, tahun1);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        try{
//            itPayrollEntities = payrollDao.getDataPayrollPotonganDinas(bulan1, tahun1, unit);
//            if(itPayrollEntities.size() > 0){
//                for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                    Payroll payroll = new Payroll();
//                    String golonganId[];
//
//                    payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                    payroll.setNip(itPayrollEntity.getNip());
//                    payroll.setNama(itPayrollEntity.getNama());
//
//                    if(!"".equalsIgnoreCase(itPayrollEntity.getGolonganName()) && itPayrollEntity.getGolonganName() != null){
//                        golonganId = itPayrollEntity.getGolonganName().split(" ");
//                        payroll.setGolonganId(golonganId[1] + "/" + itPayrollEntity.getPoint());
//                    }else{
//                        payroll.setGolonganId("-");
//                    }
//
//                    payroll.setPphGaji(CommonUtil.numbericFormat(itPayrollEntity.getPphGaji(), "###,###"));
//                    payroll.setPphGajiNilai(itPayrollEntity.getPphGaji());
//                    payroll.setPphPengobatan(CommonUtil.numbericFormat(itPayrollEntity.getPphPengobatan(), "###,###"));
//                    payroll.setPphPengobatanNilai(itPayrollEntity.getPphPengobatan());
//                    payroll.setTotalC(CommonUtil.numbericFormat(itPayrollEntity.getPphPengobatan().add(itPayrollEntity.getPphGaji()), "###,###"));
//                    payroll.setTotalCNilai(itPayrollEntity.getPphPengobatan().add(itPayrollEntity.getPphGaji()));
//                    payroll.setIuranPensiun(CommonUtil.numbericFormat(itPayrollEntity.getIuranPensiun(), "###,###"));
//                    payroll.setIuranPensiunNilai(itPayrollEntity.getIuranPensiun());
//                    payroll.setBpjsJht(CommonUtil.numbericFormat(itPayrollEntity.getIuranBpjsTk(), "###,###"));
//                    payroll.setBpjsJhtNilai(itPayrollEntity.getIuranBpjsTk());
//                    payroll.setIuranBpjsKesehatan(CommonUtil.numbericFormat(itPayrollEntity.getIuranBpjsKesehatan(), "###,###"));
//                    payroll.setIuranBpjsKesehatanNilai(itPayrollEntity.getIuranBpjsKesehatan());
//                    payroll.setBpjsPensiun(CommonUtil.numbericFormat(itPayrollEntity.getIuranBpjsPensiun(), "###,###"));
//                    payroll.setBpjsPensiunNilai(itPayrollEntity.getIuranBpjsPensiun());
//                    payroll.setUangMukaLainnya(CommonUtil.numbericFormat(itPayrollEntity.getUangMukaLainnya(), "###,###"));
//                    payroll.setUangMukaLainnyaNilai(itPayrollEntity.getUangMukaLainnya());
//                    payroll.setKekuranganBpjsTk(CommonUtil.numbericFormat(itPayrollEntity.getKekuranganBpjsTk(), "###,###"));
//                    payroll.setKekuranganBpjsTkNilai(itPayrollEntity.getKekuranganBpjsTk());
//                    payroll.setTotalB(CommonUtil.numbericFormat(itPayrollEntity.getTotalB(), "###,###"));
//                    payroll.setTotalBNilai(itPayrollEntity.getTotalB());
//                    payrollList.add(payroll);
//                }
//            }
//        }catch (Exception e){
//            logger.error("[PayrollBoImpl printReportPayrollPotonganDinasSys] Error, " + e.getMessage());
//            throw new GeneralBOException("Error read report," + e.getMessage());
//        }
//
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal pphGaji = new BigDecimal(0);
//        BigDecimal pphPengobatan = new BigDecimal(0);
//        BigDecimal jumlahPph = new BigDecimal(0);
//        BigDecimal iuranPensiun = new BigDecimal(0);
//        BigDecimal bpjsJht = new BigDecimal(0);
//        BigDecimal bpjsKesehatan = new BigDecimal(0);
//        BigDecimal bpjsPensiun = new BigDecimal(0);
//        BigDecimal umLainLain = new BigDecimal(0);
//        BigDecimal kurIrpDanAset = new BigDecimal(0);
//        BigDecimal jmlPotongan = new BigDecimal(0);
//
//        BigDecimal totalPphGaji = new BigDecimal(0);
//        BigDecimal totalPphPengobatan = new BigDecimal(0);
//        BigDecimal totalJumlahPph = new BigDecimal(0);
//        BigDecimal totalIuranPensiun = new BigDecimal(0);
//        BigDecimal totalBpjsJht = new BigDecimal(0);
//        BigDecimal totalBpjsKesehatan = new BigDecimal(0);
//        BigDecimal totalBpjsPensiun = new BigDecimal(0);
//        BigDecimal totalUmLainLain = new BigDecimal(0);
//        BigDecimal totalKurIrpDanAset = new BigDecimal(0);
//        BigDecimal totalJmlPotongan = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollPotonganDinas(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalPayroll = new Payroll();
//
//                totalPayroll.setPphGajiNilai(pphGaji);
//                totalPayroll.setPphPengobatanNilai(pphPengobatan);
//                totalPayroll.setTotalCNilai(jumlahPph);
//                totalPayroll.setIuranPensiunNilai(iuranPensiun);
//                totalPayroll.setBpjsJhtNilai(bpjsJht);
//                totalPayroll.setIuranBpjsKesehatanNilai(bpjsKesehatan);
//                totalPayroll.setBpjsPensiunNilai(bpjsPensiun);
//                totalPayroll.setUangMukaLainnyaNilai(umLainLain);
//                totalPayroll.setKekuranganBpjsTkNilai(kurIrpDanAset); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//                totalPayroll.setTotalBNilai(jmlPotongan);
//
//                hasilPayrollList.addAll(headerPayrollTotalPotonganDinas(imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(pphGaji, "###,###"),
//                        CommonUtil.numbericFormat(pphPengobatan, "###,###"),
//                        CommonUtil.numbericFormat(jumlahPph, "###,###"),
//                        CommonUtil.numbericFormat(iuranPensiun, "###,###"),
//                        CommonUtil.numbericFormat(bpjsJht, "###,###"),
//                        CommonUtil.numbericFormat(bpjsKesehatan, "###,###"),
//                        CommonUtil.numbericFormat(bpjsPensiun, "###,###"),
//                        CommonUtil.numbericFormat(umLainLain, "###,###"),
//                        CommonUtil.numbericFormat(kurIrpDanAset, "###,###"),
//                        CommonUtil.numbericFormat(jmlPotongan, "###,###"),
//                        totalPayroll
//                ));
//                pphGaji = new BigDecimal(0);
//                pphPengobatan = new BigDecimal(0);
//                jumlahPph = new BigDecimal(0);
//                iuranPensiun = new BigDecimal(0);
//                bpjsJht = new BigDecimal(0);
//                bpjsKesehatan = new BigDecimal(0);
//                bpjsPensiun = new BigDecimal(0);
//                umLainLain = new BigDecimal(0);
//                kurIrpDanAset = new BigDecimal(0);
//                jmlPotongan = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//                        pphGaji = pphGaji.add(payroll.getPphGajiNilai());
//                        pphPengobatan = pphPengobatan.add(payroll.getPphPengobatanNilai());
//                        jumlahPph = pphGaji.add(pphPengobatan);
//
//                        iuranPensiun = iuranPensiun.add(payroll.getIuranPensiunNilai());
//                        bpjsJht = bpjsJht.add(payroll.getBpjsJhtNilai());
//                        bpjsKesehatan = bpjsKesehatan.add(payroll.getIuranBpjsKesehatanNilai());
//                        bpjsPensiun = bpjsPensiun.add(payroll.getBpjsPensiunNilai());
//                        umLainLain = umLainLain.add(payroll.getUangMukaLainnyaNilai());
//                        kurIrpDanAset = kurIrpDanAset.add(payroll.getKekuranganBpjsTkNilai());
//
//                        jmlPotongan = jmlPotongan.add(payroll.getTotalBNilai());
//
//                        totalPphGaji = totalPphGaji.add(payroll.getPphGajiNilai());
//                        totalPphPengobatan = totalPphPengobatan.add(payroll.getPphPengobatanNilai());
//                        totalJumlahPph = totalPphGaji.add(totalPphPengobatan);
//                        totalIuranPensiun = totalIuranPensiun.add(payroll.getIuranPensiunNilai());
//                        totalBpjsJht = totalBpjsJht.add(payroll.getBpjsJhtNilai());
//                        totalBpjsKesehatan = totalBpjsKesehatan.add(payroll.getIuranBpjsKesehatanNilai());
//                        totalBpjsPensiun = totalBpjsPensiun.add(payroll.getBpjsPensiunNilai());
//                        totalUmLainLain = totalUmLainLain.add(payroll.getUangMukaLainnyaNilai());
//                        totalKurIrpDanAset = totalKurIrpDanAset.add(payroll.getKekuranganBpjsTkNilai());
//                        totalJmlPotongan = totalJmlPotongan.add(payroll.getTotalBNilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll subTotal = new Payroll();
//        Payroll totalPayroll = new Payroll();
//
//        subTotal.setPphGajiNilai(pphGaji);
//        subTotal.setPphPengobatanNilai(pphPengobatan);
//        subTotal.setTotalCNilai(jumlahPph);
//        subTotal.setIuranPensiunNilai(iuranPensiun);
//        subTotal.setBpjsJhtNilai(bpjsJht);
//        subTotal.setIuranBpjsKesehatanNilai(bpjsKesehatan);
//        subTotal.setBpjsPensiunNilai(bpjsPensiun);
//        subTotal.setUangMukaLainnyaNilai(umLainLain);
//        subTotal.setKekuranganBpjsTkNilai(kurIrpDanAset); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        subTotal.setTotalBNilai(jmlPotongan);
//
//        totalPayroll.setPphGajiNilai(totalPphGaji);
//        totalPayroll.setPphPengobatanNilai(totalPphPengobatan);
//        totalPayroll.setTotalCNilai(totalJumlahPph);
//        totalPayroll.setIuranPensiunNilai(totalIuranPensiun);
//        totalPayroll.setBpjsJhtNilai(totalBpjsJht);
//        totalPayroll.setIuranBpjsKesehatanNilai(totalBpjsKesehatan);
//        totalPayroll.setBpjsPensiunNilai(totalBpjsPensiun);
//        totalPayroll.setUangMukaLainnyaNilai(totalUmLainLain);
//        totalPayroll.setKekuranganBpjsTkNilai(totalKurIrpDanAset); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        totalPayroll.setTotalBNilai(totalJmlPotongan);
//
//        hasilPayrollList.addAll(payrollTotalPotonganDinas(
//                CommonUtil.numbericFormat(pphGaji, "###,###"),
//                CommonUtil.numbericFormat(pphPengobatan, "###,###"),
//                CommonUtil.numbericFormat(jumlahPph, "###,###"),
//                CommonUtil.numbericFormat(iuranPensiun, "###,###"),
//                CommonUtil.numbericFormat(bpjsJht, "###,###"),
//                CommonUtil.numbericFormat(bpjsKesehatan, "###,###"),
//                CommonUtil.numbericFormat(bpjsPensiun, "###,###"),
//                CommonUtil.numbericFormat(umLainLain, "###,###"),
//                CommonUtil.numbericFormat(kurIrpDanAset, "###,###"),
//                CommonUtil.numbericFormat(jmlPotongan, "###,###"),
//                subTotal,
//                CommonUtil.numbericFormat(totalPphGaji, "###,###"),
//                CommonUtil.numbericFormat(totalPphPengobatan, "###,###"),
//                CommonUtil.numbericFormat(totalJumlahPph, "###,###"),
//                CommonUtil.numbericFormat(totalIuranPensiun, "###,###"),
//                CommonUtil.numbericFormat(totalBpjsJht, "###,###"),
//                CommonUtil.numbericFormat(totalBpjsKesehatan, "###,###"),
//                CommonUtil.numbericFormat(totalBpjsPensiun, "###,###"),
//                CommonUtil.numbericFormat(totalUmLainLain, "###,###"),
//                CommonUtil.numbericFormat(totalKurIrpDanAset, "###,###"),
//                CommonUtil.numbericFormat(totalJmlPotongan, "###,###"),
//                totalPayroll));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollPotonganLainLainSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//        int i = 1;
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian();
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit,
//                        statusPegawai, bulan1, tahun1);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollPotonganLainLain(bulan1, tahun1, unit);
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//
//                payroll.setPengobatan(CommonUtil.numbericFormat(itPayrollEntity.getPengobatan(), "###,###"));
//                payroll.setPengobatanNilai(itPayrollEntity.getPengobatan());
//                payroll.setKoperasi(CommonUtil.numbericFormat(itPayrollEntity.getKoperasi(), "###,###"));
//                payroll.setKoperasiNilai(itPayrollEntity.getKoperasi());
//                payroll.setDansos(CommonUtil.numbericFormat(itPayrollEntity.getDansos(), "###,###"));
//                payroll.setDansosNilai(itPayrollEntity.getDansos());
//                payroll.setSP(CommonUtil.numbericFormat(itPayrollEntity.getSP(), "###,###"));
//                payroll.setSPNilai(itPayrollEntity.getSP());
//                payroll.setBazis(CommonUtil.numbericFormat(itPayrollEntity.getBazis(), "###,###"));
//                payroll.setBazisNilai(itPayrollEntity.getBazis());
//                payroll.setBapor(CommonUtil.numbericFormat(itPayrollEntity.getBapor(), "###,###"));
//                payroll.setBaporNilai(itPayrollEntity.getBapor());
//                payroll.setLainLain(CommonUtil.numbericFormat(itPayrollEntity.getLainLain(), "###,###"));
//                payroll.setLainLainNilai(itPayrollEntity.getLainLain());
//                payroll.setZakat(CommonUtil.numbericFormat(itPayrollEntity.getZakat(), "###,###"));
//                payroll.setZakatNilai(itPayrollEntity.getZakat());
//
//                payroll.setTotalC(CommonUtil.numbericFormat(itPayrollEntity.getTotalC(), "###,###"));
//                payroll.setTotalCNilai(itPayrollEntity.getTotalC());
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal pengobatan = new BigDecimal(0);
//        BigDecimal koperasi = new BigDecimal(0);
//        BigDecimal sp = new BigDecimal(0);
//        BigDecimal bazis = new BigDecimal(0);
//        BigDecimal dansos = new BigDecimal(0);
//        BigDecimal bapor = new BigDecimal(0);
//        BigDecimal lainLain = new BigDecimal(0);
//        BigDecimal zakat = new BigDecimal(0);
//        BigDecimal totalC = new BigDecimal(0);
//
//        BigDecimal totalPengobatan = new BigDecimal(0);
//        BigDecimal totalKoperasi = new BigDecimal(0);
//        BigDecimal totalSp = new BigDecimal(0);
//        BigDecimal totalBazis = new BigDecimal(0);
//        BigDecimal totalDansos = new BigDecimal(0);
//        BigDecimal totalBapor = new BigDecimal(0);
//        BigDecimal totalLainLain = new BigDecimal(0);
//        BigDecimal totalZakat = new BigDecimal(0);
//        BigDecimal grandTotalC = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollPotonganLainLain(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalLain = new Payroll();
//                totalLain.setPengobatanNilai(pengobatan);
//                totalLain.setKoperasiNilai(koperasi);
//                totalLain.setDansosNilai(dansos);
//                totalLain.setSPNilai(sp);
//                totalLain.setBazisNilai(bazis);
//                totalLain.setBaporNilai(bapor);
//                totalLain.setLainLainNilai(lainLain);
//                totalLain.setZakatNilai(zakat);
//                totalLain.setTotalCNilai(totalC);
//
//                hasilPayrollList.addAll(headerPayrollTotalPotonganLainLain(totalLain,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(pengobatan, "###,###"),
//                        CommonUtil.numbericFormat(koperasi, "###,###"),
//                        CommonUtil.numbericFormat(dansos, "###,###"),
//                        CommonUtil.numbericFormat(sp, "###,###"),
//                        CommonUtil.numbericFormat(bazis, "###,###"),
//                        CommonUtil.numbericFormat(bapor, "###,###"),
//                        CommonUtil.numbericFormat(lainLain, "###,###"),
//                        CommonUtil.numbericFormat(zakat, "###,###"),
//                        CommonUtil.numbericFormat(totalC, "###,###")
//                ));
//
//                pengobatan = new BigDecimal(0);
//                koperasi = new BigDecimal(0);
//                dansos = new BigDecimal(0);
//                sp = new BigDecimal(0);
//                bazis = new BigDecimal(0);
//                bapor = new BigDecimal(0);
//                lainLain = new BigDecimal(0);
//                zakat = new BigDecimal(0);
//                totalC = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        pengobatan = pengobatan.add(payroll.getPengobatanNilai());
//                        koperasi = koperasi.add(payroll.getKoperasiNilai());
//                        dansos = dansos.add(payroll.getDansosNilai());
//                        sp = sp.add(payroll.getSPNilai());
//                        bazis = bazis.add(payroll.getBazisNilai());
//                        bapor = bapor.add(payroll.getBaporNilai());
//                        lainLain = lainLain.add(payroll.getLainLainNilai());
//                        zakat = zakat.add(payroll.getZakatNilai());
//                        totalC = totalC.add(payroll.getTotalCNilai());
//
//                        totalPengobatan = totalPengobatan.add(payroll.getPengobatanNilai());
//                        totalKoperasi = totalKoperasi.add(payroll.getKoperasiNilai());
//                        totalDansos = totalDansos.add(payroll.getDansosNilai());
//                        totalSp = totalSp.add(payroll.getSPNilai());
//                        totalBazis = totalBazis.add(payroll.getBazisNilai());
//                        totalBapor = totalBapor.add(payroll.getBaporNilai());
//                        totalZakat = totalZakat.add(payroll.getZakatNilai());
//                        totalLainLain = totalLainLain.add(payroll.getLainLainNilai());
//                        grandTotalC = grandTotalC.add(payroll.getTotalCNilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalLain = new Payroll();
//        Payroll subTotalLain = new Payroll();
//        subTotalLain.setPengobatanNilai(pengobatan);
//        subTotalLain.setKoperasiNilai(koperasi);
//        subTotalLain.setDansosNilai(dansos);
//        subTotalLain.setSPNilai(sp);
//        subTotalLain.setBazisNilai(bazis);
//        subTotalLain.setBaporNilai(bapor);
//        subTotalLain.setLainLainNilai(lainLain);
//        subTotalLain.setZakatNilai(zakat);
//        subTotalLain.setTotalCNilai(totalC);
//
//        /*totalPengobatan = totalPengobatan.add(pengobatan);
//        totalKoperasi = totalKoperasi.add(koperasi);
//        totalDansos = totalDansos.add(dansos);
//        totalSp = totalSp.add(sp);
//        totalBazis = totalBazis.add(bazis);
//        totalBapor = totalBapor.add(bapor);
//        totalZakat = totalZakat.add(zakat);
//        totalLainLain = totalLainLain.add(lainLain);
//        grandTotalC = grandTotalC.add(totalC);*/
//
//        totalLain.setPengobatanNilai(totalPengobatan);
//        totalLain.setKoperasiNilai(totalKoperasi);
//        totalLain.setDansosNilai(totalDansos);
//        totalLain.setSPNilai(totalSp);
//        totalLain.setBazisNilai(totalBazis);
//        totalLain.setBaporNilai(totalBapor);
//        totalLain.setLainLainNilai(totalLainLain);
//        totalLain.setZakatNilai(totalZakat);
//        totalLain.setTotalCNilai(grandTotalC);
//
//        hasilPayrollList.addAll(payrollTotalPotonganLainLain(CommonUtil.numbericFormat(pengobatan, "###,###"),
//                CommonUtil.numbericFormat(koperasi, "###,###"),
//                CommonUtil.numbericFormat(dansos, "###,###"),
//                CommonUtil.numbericFormat(sp, "###,###"),
//                CommonUtil.numbericFormat(bazis, "###,###"),
//                CommonUtil.numbericFormat(bapor, "###,###"),
//                CommonUtil.numbericFormat(lainLain, "###,###"),
//                CommonUtil.numbericFormat(zakat, "###,###"),
//                CommonUtil.numbericFormat(totalC, "###,###"),
//                subTotalLain,
//                CommonUtil.numbericFormat(totalPengobatan, "###,###"),
//                CommonUtil.numbericFormat(totalKoperasi, "###,###"),
//                CommonUtil.numbericFormat(totalDansos, "###,###"),
//                CommonUtil.numbericFormat(totalSp, "###,###"),
//                CommonUtil.numbericFormat(totalBazis, "###,###"),
//                CommonUtil.numbericFormat(totalBapor, "###,###"),
//                CommonUtil.numbericFormat(totalLainLain, "###,###"),
//                CommonUtil.numbericFormat(totalZakat, "###,###"),
//                CommonUtil.numbericFormat(grandTotalC, "###,###"),totalLain));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollPenghasilanKaryawanSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian();
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit,
//                        statusPegawai, bulan1, tahun1);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollPenghasilanKaryawan(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                String tmp = i + " - " + itPayrollEntity.getNip();
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//
//                if(!"".equalsIgnoreCase(itPayrollEntity.getGolonganName()) && itPayrollEntity.getGolonganName() != null){
//                    golonganId = itPayrollEntity.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + itPayrollEntity.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//                payroll.setStatusKeluarga(itPayrollEntity.getStatusKeluarga() + "/" + itPayrollEntity.getJumlahAnak());
//
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//                payroll.setTotalB(CommonUtil.numbericFormat(itPayrollEntity.getTotalB(), "###,###"));
//                payroll.setTotalBNilai(itPayrollEntity.getTotalB());
//                payroll.setTotalC(CommonUtil.numbericFormat(itPayrollEntity.getTotalC(), "###,###"));
//                payroll.setTotalCNilai(itPayrollEntity.getTotalC());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity.getTotalA().subtract(itPayrollEntity.getTotalB()), "###,###"));
//                payroll.setGajiGolonganNilai(itPayrollEntity.getTotalA().subtract(itPayrollEntity.getTotalB()));
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(payroll.getGajiGolonganNilai().subtract(payroll.getTotalCNilai()), "###,###"));
//                payroll.setTotalGajiBersihNilai(payroll.getGajiGolonganNilai().subtract(payroll.getTotalCNilai()));
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalA = new BigDecimal(0);
//        BigDecimal totalB = new BigDecimal(0);
//        BigDecimal penghasilanBersih = new BigDecimal(0);
//        BigDecimal totalC = new BigDecimal(0);
//        BigDecimal penerimaBersih = new BigDecimal(0);
//
//        BigDecimal grandTotalA = new BigDecimal(0);
//        BigDecimal grandTotalB = new BigDecimal(0);
//        BigDecimal grandPenghasilanBersih = new BigDecimal(0);
//        BigDecimal grandTotalC = new BigDecimal(0);
//        BigDecimal grandPenerimaBersih = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollPenghasilanKaryawan(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//                totalRekap.setTotalANilai(totalA);
//                totalRekap.setTotalBNilai(totalB);
//                totalRekap.setGajiGolonganNilai(penghasilanBersih);
//                totalRekap.setTotalCNilai(totalC);
//                totalRekap.setTotalGajiBersihNilai(penerimaBersih);
//
//                hasilPayrollList.addAll(headerPayrollTotalPenghasilanKaryawan(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalA, "###,###"),
//                        CommonUtil.numbericFormat(totalB, "###,###"),
//                        CommonUtil.numbericFormat(penghasilanBersih, "###,###"),
//                        CommonUtil.numbericFormat(totalC, "###,###"),
//                        CommonUtil.numbericFormat(penerimaBersih, "###,###")
//                ));
//                totalA = new BigDecimal(0);
//                totalB = new BigDecimal(0);
//                penghasilanBersih = new BigDecimal(0);
//                totalC = new BigDecimal(0);
//                penerimaBersih = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalA = totalA.add(payroll.getTotalANilai());
//                        totalB = totalB.add(payroll.getTotalBNilai());
//
//                        penghasilanBersih = totalA.subtract(totalB);
//                        totalC = totalC.add(payroll.getTotalCNilai());
//
//                        penerimaBersih = penghasilanBersih.subtract(totalC);
//
//                        grandTotalA = grandTotalA.add(payroll.getTotalANilai());
//                        grandTotalB = grandTotalB.add(payroll.getTotalBNilai());
//                        grandPenghasilanBersih = grandTotalA.subtract(grandTotalB);
//                        grandTotalC = grandTotalC.add(payroll.getTotalCNilai());
//                        grandPenerimaBersih = grandPenerimaBersih.add(payroll.getTotalGajiBersihNilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//        subRekap.setTotalANilai(totalA);
//        subRekap.setTotalBNilai(totalB);
//        subRekap.setGajiGolonganNilai(penghasilanBersih);
//        subRekap.setTotalCNilai(totalC);
//        subRekap.setTotalGajiBersihNilai(penerimaBersih);
//
//        totalRekap.setTotalANilai(grandTotalA);
//        totalRekap.setTotalBNilai(grandTotalB);
//        totalRekap.setGajiGolonganNilai(grandPenghasilanBersih);
//        totalRekap.setTotalCNilai(grandTotalC);
//        totalRekap.setTotalGajiBersihNilai(grandPenerimaBersih);
//
//        hasilPayrollList.addAll(payrollTotalPenghasilanKaryawan(
//                CommonUtil.numbericFormat(totalA, "###,###"),
//                CommonUtil.numbericFormat(totalB, "###,###"),
//                CommonUtil.numbericFormat(penghasilanBersih, "###,###"),
//                CommonUtil.numbericFormat(totalC, "###,###"),
//                CommonUtil.numbericFormat(penerimaBersih, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandTotalA, "###,###"),
//                CommonUtil.numbericFormat(grandTotalB, "###,###"),
//                CommonUtil.numbericFormat(grandPenghasilanBersih, "###,###"),
//                CommonUtil.numbericFormat(grandTotalC, "###,###"),
//                CommonUtil.numbericFormat(grandPenerimaBersih, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollPendidikanSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "where bagian_id not in ('PB023')  ";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit, statusPegawai);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollPendidikan(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                String tmp = i + " - " + itPayrollEntity.getNip();
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//
//                if(!"".equalsIgnoreCase(itPayrollEntity.getGolonganName()) && itPayrollEntity.getGolonganName() != null){
//                    golonganId = itPayrollEntity.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + itPayrollEntity.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//                payroll.setStatusKeluarga(itPayrollEntity.getStatusKeluarga() + "/" + itPayrollEntity.getJumlahAnak());
//                payroll.setBulan(itPayrollEntity.getBulan());
//
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPeralihan(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganUmk(), "###,###"));
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStruktural(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStrategis(), "###,###"));
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                payroll.setKompensasi(CommonUtil.numbericFormat(itPayrollEntity.getKompensasi(), "###,###"));
//                payroll.setKompensasiNilai(itPayrollEntity.getKompensasi());
//                payroll.setTunjanganAirListrik(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganAirListrik(), "###,###"));
//                payroll.setTunjanganAirListrikNilai(itPayrollEntity.getTunjanganAirListrik());
//                payroll.setTunjanganPph(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPph(), "###,###"));
//                payroll.setTunjanganPphNilai(itPayrollEntity.getTunjanganPph());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity.getGajiGolongan(), "###,###"));
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTotalPendidikan(CommonUtil.numbericFormat(itPayrollEntity.getTotalPendidikan(), "###,###"));
//                payroll.setTotalPendidikanNilai(itPayrollEntity.getTotalPendidikan());
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//                payroll.setPphGaji(CommonUtil.numbericFormat(itPayrollEntity.getPphGaji(), "###,###"));
//                payroll.setPphGajiNilai(itPayrollEntity.getPphGaji());
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalStrategis = new BigDecimal(0);
//        BigDecimal totalKompensasi = new BigDecimal(0);
//        BigDecimal totalPeralihan = new BigDecimal(0);
//        BigDecimal totalTunjanganAirListrik = new BigDecimal(0);
//        BigDecimal totalTunjanganPph = new BigDecimal(0);
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//        BigDecimal totalPendidikan = new BigDecimal(0);
//        BigDecimal totalPendidikanBersih = new BigDecimal(0);
//        BigDecimal totalPphGaji = new BigDecimal(0);
//        BigDecimal totalA = new BigDecimal(0);
//
//        BigDecimal grandPeralihan = new BigDecimal(0);
//        BigDecimal grandUmk = new BigDecimal(0);
//        BigDecimal grandStruktural = new BigDecimal(0);
//        BigDecimal grandJabatanStruktural = new BigDecimal(0);
//        BigDecimal grandStrategis = new BigDecimal(0);
//        BigDecimal grandKompensasi = new BigDecimal(0);
//        BigDecimal grandTunjanganAirListrik = new BigDecimal(0);
//        BigDecimal grandTunjanganPph = new BigDecimal(0);
//        BigDecimal grandGajiGolongan = new BigDecimal(0);
//        BigDecimal grandPendidikan = new BigDecimal(0);
//        BigDecimal grandPendidikanBersih = new BigDecimal(0);
//        BigDecimal grandPphGaji = new BigDecimal(0);
//        BigDecimal grandTotalA = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollPendidikan(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//                totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//                totalRekap.setTunjanganStrategisNilai(totalStrategis);
//                totalRekap.setKompensasiNilai(totalKompensasi);
//                totalRekap.setTunjanganAirListrikNilai(totalTunjanganAirListrik);
//                totalRekap.setTunjanganPphNilai(totalTunjanganPph);
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//                totalRekap.setTotalPendidikanNilai(totalPendidikan);
//                totalRekap.setTotalGajiBersihNilai(totalPendidikanBersih);
//                totalRekap.setPphGajiNilai(totalPphGaji);
//                totalRekap.setTotalANilai(totalA);
//
//                hasilPayrollList.addAll(headerPayrollTotalPendidikan(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalKompensasi, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganAirListrik, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganPph, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalPendidikan, "###,###"),
//                        CommonUtil.numbericFormat(totalPendidikanBersih, "###,###"),
//                        CommonUtil.numbericFormat(totalPphGaji, "###,###"),
//                        CommonUtil.numbericFormat(totalA, "###,###")
//                ));
//                totalPeralihan = new BigDecimal(0);
//                totalUmk = new BigDecimal(0);
//                totalStruktural = new BigDecimal(0);
//                totalJabatanStruktural = new BigDecimal(0);
//                totalStrategis = new BigDecimal(0);
//                totalKompensasi = new BigDecimal(0);
//                totalTunjanganAirListrik = new BigDecimal(0);
//                totalTunjanganPph = new BigDecimal(0);
//                totalGajiGolongan = new BigDecimal(0);
//                totalPendidikan = new BigDecimal(0);
//                totalPendidikanBersih = new BigDecimal(0);
//                totalPphGaji = new BigDecimal(0);
//                totalA = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalStrategis = totalStrategis.add(payroll.getTunjanganStrategisNilai());
//                        totalKompensasi = totalKompensasi.add(payroll.getKompensasiNilai());
//                        totalTunjanganAirListrik = totalTunjanganAirListrik.add(payroll.getTunjanganAirListrikNilai());
//                        totalTunjanganPph = totalTunjanganPph.add(payroll.getTunjanganPphNilai());
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        totalPendidikan = totalPendidikan.add(payroll.getTotalPendidikanNilai());
//                        totalPendidikanBersih = totalPendidikanBersih.add(payroll.getTotalGajiBersihNilai());
//                        totalPphGaji = totalPphGaji.add(payroll.getPphGajiNilai());
//                        totalA = totalA.add(payroll.getTotalANilai());
//
//                        grandPeralihan= grandPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        grandUmk = grandUmk.add(payroll.getTunjanganUmkNilai());
//                        grandStruktural = grandStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        grandJabatanStruktural = grandJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        grandStrategis = grandStrategis.add(payroll.getTunjanganStrategisNilai());
//                        grandKompensasi = grandKompensasi.add(payroll.getKompensasiNilai());
//                        grandTunjanganAirListrik = grandTunjanganAirListrik.add(payroll.getTunjanganAirListrikNilai());
//                        grandTunjanganPph = grandTunjanganPph.add(payroll.getTunjanganPphNilai());
//                        grandGajiGolongan = grandGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        grandPendidikan = grandPendidikan.add(payroll.getTotalPendidikanNilai());
//                        grandPendidikanBersih = grandPendidikanBersih.add(payroll.getTotalGajiBersihNilai());
//                        grandPphGaji = grandPphGaji.add(payroll.getPphGajiNilai());
//                        grandTotalA = grandTotalA.add(payroll.getTotalANilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//        subRekap.setTunjanganPeralihanNilai(totalPeralihan);
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setTunjanganStrukturalNilai(totalStruktural);
//        subRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        subRekap.setTunjanganStrategisNilai(totalStrategis);
//        subRekap.setKompensasiNilai(totalKompensasi);
//        subRekap.setTunjanganAirListrikNilai(totalTunjanganAirListrik);
//        subRekap.setTunjanganPphNilai(totalTunjanganPph);
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//        subRekap.setTotalPendidikanNilai(totalPendidikan);
//        subRekap.setTotalGajiBersihNilai(totalPendidikanBersih);
//        subRekap.setPphGajiNilai(totalPphGaji);
//        subRekap.setTotalANilai(totalA);
//
//        /*grandPeralihan = grandPeralihan.add(totalPeralihan);
//        grandUmk = grandUmk.add(totalUmk);
//        grandStruktural = grandStruktural.add(totalStruktural);
//        grandJabatanStruktural = grandJabatanStruktural.add(totalJabatanStruktural);
//        grandStrategis = grandStrategis.add(totalStrategis);
//        grandKompensasi = grandKompensasi.add(totalKompensasi);
//        grandTunjanganAirListrik = grandTunjanganAirListrik.add(totalTunjanganAirListrik);
//        grandTunjanganPph = grandTunjanganPph.add(totalTunjanganPph);
//        grandGajiGolongan = grandGajiGolongan.add(totalGajiGolongan);
//        grandPendidikan = grandPendidikan.add(totalPendidikan);
//        grandPendidikanBersih = grandPendidikanBersih.add(totalPendidikanBersih);
//        grandPphGaji = grandPphGaji.add(totalPphGaji);
//        grandTotalA = grandTotalA.add(totalA);*/
//
//        totalRekap.setTunjanganPeralihanNilai(grandPeralihan);
//        totalRekap.setTunjanganUmkNilai(grandUmk);
//        totalRekap.setTunjanganStrukturalNilai(grandStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(grandJabatanStruktural);
//        totalRekap.setTunjanganStrategisNilai(grandStrategis);
//        totalRekap.setKompensasiNilai(grandKompensasi);
//        totalRekap.setTunjanganAirListrikNilai(grandTunjanganAirListrik);
//        totalRekap.setTunjanganPphNilai(grandTunjanganPph);
//        totalRekap.setGajiGolonganNilai(grandGajiGolongan);
//        totalRekap.setTotalPendidikanNilai(grandPendidikan);
//        totalRekap.setTotalGajiBersihNilai(grandPendidikanBersih);
//        totalRekap.setPphGajiNilai(grandPphGaji);
//        totalRekap.setTotalANilai(grandTotalA);
//
//        hasilPayrollList.addAll(payrollTotalPendidikan(
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalKompensasi, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganAirListrik, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganPph, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalPendidikan, "###,###"),
//                CommonUtil.numbericFormat(totalPendidikanBersih, "###,###"),
//                CommonUtil.numbericFormat(totalPphGaji, "###,###"),
//                CommonUtil.numbericFormat(totalA, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandKompensasi, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganAirListrik, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganPph, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandPendidikan, "###,###"),
//                CommonUtil.numbericFormat(grandPendidikanBersih, "###,###"),
//                CommonUtil.numbericFormat(grandPphGaji, "###,###"),
//                CommonUtil.numbericFormat(grandTotalA, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollRapelSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit, statusPegawai);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<PayrollRapel> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollRapel(bulan1, tahun1, unit, statusPegawai);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(PayrollRapel payrollRapelLoop: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(payrollRapelLoop.getNip());
//                String tmp = i + " - " + payrollRapelLoop.getNip();
//                payroll.setNip(payrollRapelLoop.getNip());
//                payroll.setNama(payrollRapelLoop.getNama());
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganName()) && payrollRapelLoop.getGolonganName() != null){
//                    golonganId = payrollRapelLoop.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + payrollRapelLoop.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//                payroll.setStatusKeluarga(payrollRapelLoop.getStatusKeluarga() + "/" + payrollRapelLoop.getJumlahAnak());
//                payroll.setBulan(payrollRapelLoop.getJumlahBulan() + "");
//
//                payroll.setGolonganIdLama(payrollRapelLoop.getGolonganIdLama() + "/" + payrollRapelLoop.getPointLama());
//                payroll.setGolonganId(payrollRapelLoop.getGolonganIdBaru() +  "/" + payrollRapelLoop.getPointBaru());
//
//                // lama
//                payroll.setTunjanganUmkLama(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganUmkLamaNilai(), "###,###"));
//                payroll.setTunjanganUmkLamaNilai(payrollRapelLoop.getTunjanganUmkLamaNilai());
//                payroll.setTunjanganStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganStrukturalLamaNilai(), "###,###"));
//                payroll.setTunjanganStrukturalLamaNilai(payrollRapelLoop.getTunjanganStrukturalLamaNilai());
//                payroll.setTunjanganJabatanStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganJabatanStrukturalLamaNilai(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalLamaNilai(payrollRapelLoop.getTunjanganJabatanStrukturalLamaNilai());
//                payroll.setTunjanganStrategisLama(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganStrategisLamaNilai(), "###,###"));
//                payroll.setTunjanganStrategisLamaNilai(payrollRapelLoop.getTunjanganStrategisLamaNilai());
//                payroll.setTunjanganAirListrikLama(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganAirListrikLamaNilai(), "###,###"));
//                payroll.setTunjanganAirListrikLamaNilai(payrollRapelLoop.getTunjanganAirListrikLamaNilai());
//                payroll.setTunjanganPerumahanLama(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganAirListrikLamaNilai(), "###,###"));
//                payroll.setTunjanganPerumahanLamaNilai(payrollRapelLoop.getTunjanganAirListrikLamaNilai());
//                payroll.setGajiGolonganLama(CommonUtil.numbericFormat(payrollRapelLoop.getGajiGolonganLamaNilai(), "###,###"));
//                payroll.setGajiGolonganLamaNilai(payrollRapelLoop.getGajiGolonganLamaNilai());
//
//                // baru
//                payroll.setTunjanganUmkBaru(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganUmkBaruNilai(), "###,###"));
//                payroll.setTunjanganUmkBaruNilai(payrollRapelLoop.getTunjanganUmkBaruNilai());
//                payroll.setTunjanganStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganStrukturalBaruNilai(), "###,###"));
//                payroll.setTunjanganStrukturalBaruNilai(payrollRapelLoop.getTunjanganStrukturalBaruNilai());
//                payroll.setTunjanganJabatanStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganJabatanStrukturalBaruNilai(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalBaruNilai(payrollRapelLoop.getTunjanganJabatanStrukturalBaruNilai());
//                payroll.setTunjanganStrategisBaru(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganStrategisBaruNilai(), "###,###"));
//                payroll.setTunjanganStrategisBaruNilai(payrollRapelLoop.getTunjanganStrategisBaruNilai());
//                payroll.setTunjanganAirListrikBaru(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganAirListrikBaruNilai(), "###,###"));
//                payroll.setTunjanganAirListrikBaruNilai(payrollRapelLoop.getTunjanganAirListrikBaruNilai());
//                payroll.setTunjanganPerumahanBaru(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganAirListrikBaruNilai(), "###,###"));
//                payroll.setTunjanganPerumahanBaruNilai(payrollRapelLoop.getTunjanganAirListrikBaruNilai());
//                payroll.setGajiGolonganBaru(CommonUtil.numbericFormat(payrollRapelLoop.getGajiGolonganBaruNilai(), "###,###"));
//                payroll.setGajiGolonganBaruNilai(payrollRapelLoop.getGajiGolonganBaruNilai());
//
//                // selisih
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganUmkNilai(), "###,###"));
//                payroll.setTunjanganUmkNilai(payrollRapelLoop.getTunjanganUmkNilai());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganStrukturalNilai(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(payrollRapelLoop.getTunjanganStrukturalNilai());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganJabatanStrukturalNilai(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(payrollRapelLoop.getTunjanganJabatanStrukturalNilai());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganStrategisNilai(), "###,###"));
//                payroll.setTunjanganStrategisNilai(payrollRapelLoop.getTunjanganStrategisNilai());
//                payroll.setTunjanganAirListrik(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganAirListrikNilai(), "###,###"));
//                payroll.setTunjanganAirListrikNilai(payrollRapelLoop.getTunjanganAirListrikNilai());
//                payroll.setTunjanganPerumahan(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganAirListrikNilai(), "###,###"));
//                payroll.setTunjanganPerumahanNilai(payrollRapelLoop.getTunjanganAirListrikNilai());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(payrollRapelLoop.getGajiGolonganNilai(), "###,###"));
//                payroll.setGajiGolonganNilai(payrollRapelLoop.getGajiGolonganNilai());
//
//                payroll.setTotalPendidikan(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelPendidikanNilai(), "###,###"));
//                payroll.setTotalPendidikanNilai(payrollRapelLoop.getTotalRapelPendidikanNilai());
//                payroll.setTotalThr(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelThrNilai(), "###,###"));
//                payroll.setTotalThrNilai(payrollRapelLoop.getTotalRapelThrNilai());
//                payroll.setTotalInsentif(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelInsentifNilai(), "###,###"));
//                payroll.setTotalInsentifNilai(payrollRapelLoop.getTotalRapelInsentifNilai());
//                payroll.setTotalJubileum(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelJubileumNilai(), "###,###"));
//                payroll.setTotalJubileumNilai(payrollRapelLoop.getTotalRapelJubileumNilai());
//                payroll.setTotalLembur(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelLemburNilai(), "###,###"));
//                payroll.setTotalLemburNilai(payrollRapelLoop.getTotalRapelLemburNilai());
//
//                payroll.setTotalRapel(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelNilai(), "###,###"));
//                payroll.setTotalRapelNilai(payrollRapelLoop.getTotalRapelNilai());
//                payroll.setTotalB(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelBulanNilai(), "###,###"));
//                payroll.setTotalBNilai(payrollRapelLoop.getTotalRapelBulanNilai());
//                payroll.setTotalA(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelFinalNilai(), "###,###"));
//                payroll.setTotalANilai(payrollRapelLoop.getTotalRapelFinalNilai());
//
//                payroll.setPphGaji(CommonUtil.numbericFormat(payrollRapelLoop.getPphRapelNilai(), "###,###"));
//                payroll.setPphGajiNilai(payrollRapelLoop.getPphRapelNilai());
//                payroll.setTunjanganPph(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganPphNilai(), "###,###"));
//                payroll.setTunjanganPphNilai(payrollRapelLoop.getTunjanganPphNilai());
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(payrollRapelLoop.getRapelBersihNilai(), "###,###"));
//                payroll.setTotalGajiBersihNilai(payrollRapelLoop.getRapelBersihNilai());
//                payroll.setPotPph(CommonUtil.numbericFormat(payrollRapelLoop.getPphRapelPribadiNilai(), "###,###"));
//                payroll.setPotPphNilai(payrollRapelLoop.getPphRapelPribadiNilai());
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        // Lama
//        BigDecimal totalUmkLama = new BigDecimal(0);
//        BigDecimal totalStrukturalLama = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal totalStrategisLama = new BigDecimal(0);
//        BigDecimal totalTunjanganAirListrikLama = new BigDecimal(0);
//        BigDecimal totalTunjanganPerumahanLama = new BigDecimal(0);
//        BigDecimal totalGajiGolonganLama = new BigDecimal(0);
//
//        // Baru
//        BigDecimal totalUmkBaru = new BigDecimal(0);
//        BigDecimal totalStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalStrategisBaru = new BigDecimal(0);
//        BigDecimal totalTunjanganAirListrikBaru = new BigDecimal(0);
//        BigDecimal totalTunjanganPerumahanBaru = new BigDecimal(0);
//        BigDecimal totalGajiGolonganBaru = new BigDecimal(0);
//
//        // Selisih
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalStrategis = new BigDecimal(0);
//        BigDecimal totalTunjanganAirListrik = new BigDecimal(0);
//        BigDecimal totalTunjanganPerumahan = new BigDecimal(0);
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//
//        BigDecimal totalPendidikan = new BigDecimal(0);
//        BigDecimal totalThr = new BigDecimal(0);
//        BigDecimal totalInsentif = new BigDecimal(0);
//        BigDecimal totalJubileum = new BigDecimal(0);
//        BigDecimal totalLembur = new BigDecimal(0);
//
//        BigDecimal totalRapel = new BigDecimal(0);
//        BigDecimal totalRapelBulan = new BigDecimal(0);
//        BigDecimal totalRapelFinal = new BigDecimal(0);
//
//        BigDecimal totalPph = new BigDecimal(0);
//        BigDecimal totalPphPribadi = new BigDecimal(0);
//        BigDecimal totalTunjanganPph = new BigDecimal(0);
//        BigDecimal totalRapelBersih = new BigDecimal(0);
//
//        // Lama
//        BigDecimal grandUmkLama = new BigDecimal(0);
//        BigDecimal grandStrukturalLama = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal grandStrategisLama = new BigDecimal(0);
//        BigDecimal grandTunjanganPerumahanLama = new BigDecimal(0);
//        BigDecimal grandTunjanganAirListrikLama = new BigDecimal(0);
//        BigDecimal grandGajiGolonganLama = new BigDecimal(0);
//
//        // Baru
//        BigDecimal grandUmkBaru = new BigDecimal(0);
//        BigDecimal grandStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandStrategisBaru = new BigDecimal(0);
//        BigDecimal grandTunjanganPerumahanBaru = new BigDecimal(0);
//        BigDecimal grandTunjanganAirListrikBaru = new BigDecimal(0);
//        BigDecimal grandGajiGolonganBaru = new BigDecimal(0);
//
//        // Selisih
//        BigDecimal grandUmk = new BigDecimal(0);
//        BigDecimal grandStruktural = new BigDecimal(0);
//        BigDecimal grandJabatanStruktural = new BigDecimal(0);
//        BigDecimal grandStrategis = new BigDecimal(0);
//        BigDecimal grandTunjanganPerumahan = new BigDecimal(0);
//        BigDecimal grandTunjanganAirListrik = new BigDecimal(0);
//        BigDecimal grandGajiGolongan = new BigDecimal(0);
//
//        BigDecimal grandPendidikan = new BigDecimal(0);
//        BigDecimal grandThr = new BigDecimal(0);
//        BigDecimal grandInsentif = new BigDecimal(0);
//        BigDecimal grandJubileum = new BigDecimal(0);
//        BigDecimal grandLembur = new BigDecimal(0);
//
//        BigDecimal grandRapel = new BigDecimal(0);
//        BigDecimal grandRapelBulan = new BigDecimal(0);
//        BigDecimal grandRapelFinal = new BigDecimal(0);
//
//        BigDecimal grandPph = new BigDecimal(0);
//        BigDecimal grandPphPribadi = new BigDecimal(0);
//        BigDecimal grandTunjanganPph = new BigDecimal(0);
//        BigDecimal grandRapelBersih = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollRapel(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                // lama
//                totalRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//                totalRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//                totalRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//                totalRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//                totalRekap.setTunjanganAirListrikLamaNilai(totalTunjanganAirListrikLama);
//                totalRekap.setTunjanganPerumahanLamaNilai(totalTunjanganPerumahanLama);
//                totalRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//
//                // baru
//                totalRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//                totalRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//                totalRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//                totalRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//                totalRekap.setTunjanganAirListrikBaruNilai(totalTunjanganAirListrikBaru);
//                totalRekap.setTunjanganPerumahanBaruNilai(totalTunjanganPerumahanBaru);
//                totalRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//
//                // selisih
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//                totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//                totalRekap.setTunjanganStrategisNilai(totalStrategis);
//                totalRekap.setTunjanganAirListrikNilai(totalTunjanganAirListrik);
//                totalRekap.setTunjanganPerumahanNilai(totalTunjanganPerumahan);
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//
//                totalRekap.setTotalPendidikanNilai(totalPendidikan);
//                totalRekap.setTotalThrNilai(totalThr);
//                totalRekap.setTotalInsentifNilai(totalInsentif);
//                totalRekap.setTotalJubileumNilai(totalJubileum);
//                totalRekap.setTotalLemburNilai(totalLembur);
//
//                totalRekap.setTotalRapelNilai(totalRapel);
//                totalRekap.setTotalBNilai(totalRapelBulan);
//                totalRekap.setTotalANilai(totalRapelFinal);
//
//                totalRekap.setPphGajiNilai(totalPph);
//                totalRekap.setPotPphNilai(totalPphPribadi);
//                totalRekap.setTunjanganPphNilai(totalTunjanganPph);
//                totalRekap.setTotalGajiBersihNilai(totalRapelBersih);
//
//                hasilPayrollList.addAll(headerPayrollTotalRapel(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganAirListrik, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganPerumahan, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganAirListrik, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganPerumahan, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganAirListrik, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganPerumahan, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalPendidikan, "###,###"),
//                        CommonUtil.numbericFormat(totalThr, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentif, "###,###"),
//                        CommonUtil.numbericFormat(totalJubileum, "###,###"),
//                        CommonUtil.numbericFormat(totalLembur, "###,###"),
//                        CommonUtil.numbericFormat(totalRapel, "###,###"),
//                        CommonUtil.numbericFormat(totalRapelBulan, "###,###"),
//                        CommonUtil.numbericFormat(totalRapelFinal, "###,###"),
//                        CommonUtil.numbericFormat(totalPph, "###,###"),
//                        CommonUtil.numbericFormat(totalPphPribadi, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganPph, "###,###"),
//                        CommonUtil.numbericFormat(totalRapelBersih, "###,###")
//                ));
//                totalUmkLama = new BigDecimal(0);
//                totalStrukturalLama = new BigDecimal(0);
//                totalJabatanStrukturalLama = new BigDecimal(0);
//                totalStrategisLama = new BigDecimal(0);
//                totalTunjanganAirListrikLama = new BigDecimal(0);
//                totalTunjanganPerumahanLama = new BigDecimal(0);
//                totalGajiGolonganLama = new BigDecimal(0);
//
//                totalUmkBaru = new BigDecimal(0);
//                totalStrukturalBaru = new BigDecimal(0);
//                totalJabatanStrukturalBaru = new BigDecimal(0);
//                totalStrategisBaru = new BigDecimal(0);
//                totalTunjanganAirListrikBaru = new BigDecimal(0);
//                totalTunjanganPerumahanBaru = new BigDecimal(0);
//                totalGajiGolonganBaru = new BigDecimal(0);
//
//                totalUmk = new BigDecimal(0);
//                totalStruktural = new BigDecimal(0);
//                totalJabatanStruktural = new BigDecimal(0);
//                totalStrategis = new BigDecimal(0);
//                totalTunjanganAirListrik = new BigDecimal(0);
//                totalTunjanganPerumahan = new BigDecimal(0);
//                totalGajiGolongan = new BigDecimal(0);
//
//                totalPendidikan = new BigDecimal(0);
//                totalThr = new BigDecimal(0);
//                totalInsentif = new BigDecimal(0);
//                totalJubileum = new BigDecimal(0);
//                totalLembur = new BigDecimal(0);
//
//                totalRapel = new BigDecimal(0);
//                totalRapelBulan = new BigDecimal(0);
//                totalRapelFinal = new BigDecimal(0);
//
//                totalPph = new BigDecimal(0);
//                totalPphPribadi = new BigDecimal(0);
//                totalTunjanganPph = new BigDecimal(0);
//                totalRapelBersih = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalUmkLama = totalUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        totalStrukturalLama = totalStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        totalJabatanStrukturalLama = totalJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        totalStrategisLama = totalStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        totalTunjanganAirListrikLama = totalTunjanganAirListrikLama.add(payroll.getTunjanganAirListrikLamaNilai());
//                        totalTunjanganPerumahanLama = totalTunjanganPerumahanLama.add(payroll.getTunjanganPerumahanLamaNilai());
//                        totalGajiGolonganLama = totalGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//
//                        totalUmkBaru = totalUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        totalStrukturalBaru = totalStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        totalJabatanStrukturalBaru = totalJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        totalStrategisBaru = totalStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        totalTunjanganAirListrikBaru = totalTunjanganAirListrikBaru.add(payroll.getTunjanganAirListrikBaruNilai());
//                        totalTunjanganPerumahanBaru = totalTunjanganPerumahanBaru.add(payroll.getTunjanganPerumahanBaruNilai());
//                        totalGajiGolonganBaru = totalGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalStrategis = totalStrategis.add(payroll.getTunjanganStrategisNilai());
//                        totalTunjanganAirListrik = totalTunjanganAirListrik.add(payroll.getTunjanganAirListrikNilai());
//                        totalTunjanganPerumahan = totalTunjanganPerumahan.add(payroll.getTunjanganPerumahanNilai());
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//
//                        totalPendidikan = totalPendidikan.add(payroll.getTotalPendidikanNilai());
//                        totalThr = totalThr.add(payroll.getTotalThrNilai());
//                        totalInsentif = totalInsentif.add(payroll.getTotalInsentifNilai());
//                        totalJubileum = totalJubileum.add(payroll.getTotalJubileumNilai());
//                        totalLembur = totalLembur.add(payroll.getTotalLemburNilai());
//
//                        totalRapel = totalRapel.add(payroll.getTotalRapelNilai());
//                        totalRapelBulan = totalRapelBulan.add(payroll.getTotalBNilai());
//                        totalRapelFinal = totalRapelFinal.add(payroll.getTotalANilai());
//
//                        totalPph = totalPph.add(payroll.getPphGajiNilai());
//                        totalPphPribadi = totalPphPribadi.add(payroll.getPotPphNilai());
//                        totalTunjanganPph = totalTunjanganPph.add(payroll.getTunjanganPphNilai());
//                        totalRapelBersih = totalRapelBersih.add(payroll.getTotalGajiBersihNilai());
//
//                        grandUmkLama = grandUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        grandStrukturalLama = grandStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        grandJabatanStrukturalLama = grandJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        grandStrategisLama = grandStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        grandTunjanganAirListrikLama = grandTunjanganAirListrikLama.add(payroll.getTunjanganAirListrikLamaNilai());
//                        grandTunjanganPerumahanLama = grandTunjanganPerumahanLama.add(payroll.getTunjanganPerumahanLamaNilai());
//                        grandGajiGolonganLama = grandGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//
//                        grandUmkBaru = grandUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        grandStrukturalBaru = grandStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        grandJabatanStrukturalBaru = grandJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        grandStrategisBaru = grandStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        grandTunjanganAirListrikBaru = grandTunjanganAirListrikBaru.add(payroll.getTunjanganAirListrikBaruNilai());
//                        grandTunjanganPerumahanBaru = grandTunjanganPerumahanBaru.add(payroll.getTunjanganPerumahanBaruNilai());
//                        grandGajiGolonganBaru = grandGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//
//                        grandUmk = grandUmk.add(payroll.getTunjanganUmkNilai());
//                        grandStruktural = grandStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        grandJabatanStruktural = grandJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        grandStrategis = grandStrategis.add(payroll.getTunjanganStrategisNilai());
//                        grandTunjanganAirListrik = grandTunjanganAirListrik.add(payroll.getTunjanganAirListrikNilai());
//                        grandTunjanganPerumahan = grandTunjanganPerumahan.add(payroll.getTunjanganPerumahanNilai());
//                        grandGajiGolongan = grandGajiGolongan.add(payroll.getGajiGolonganNilai());
//
//                        grandPendidikan = grandPendidikan.add(payroll.getTotalPendidikanNilai());
//                        grandThr = grandThr.add(payroll.getTotalThrNilai());
//                        grandInsentif = grandInsentif.add(payroll.getTotalInsentifNilai());
//                        grandJubileum = grandJubileum.add(payroll.getTotalJubileumNilai());
//                        grandLembur = grandLembur.add(payroll.getTotalLemburNilai());
//
//                        grandRapel = grandRapel.add(payroll.getTotalRapelNilai());
//                        grandRapelBulan = grandRapelBulan.add(payroll.getTotalBNilai());
//                        grandRapelFinal = grandRapelFinal.add(payroll.getTotalANilai());
//
//                        grandPph = grandPph.add(payroll.getPphGajiNilai());
//                        grandPphPribadi = grandPphPribadi.add(payroll.getPotPphNilai());
//                        grandTunjanganPph = grandTunjanganPph.add(payroll.getTunjanganPphNilai());
//                        grandRapelBersih = grandRapelBersih.add(payroll.getTotalGajiBersihNilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//
//        subRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//        subRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//        subRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//        subRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//        subRekap.setTunjanganAirListrikLamaNilai(totalTunjanganAirListrikLama);
//        subRekap.setTunjanganPerumahanLamaNilai(totalTunjanganPerumahanLama);
//        subRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//
//        subRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//        subRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//        subRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//        subRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//        subRekap.setTunjanganAirListrikBaruNilai(totalTunjanganAirListrikBaru);
//        subRekap.setTunjanganPerumahanBaruNilai(totalTunjanganPerumahanBaru);
//        subRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setTunjanganStrukturalNilai(totalStruktural);
//        subRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        subRekap.setTunjanganStrategisNilai(totalStrategis);
//        subRekap.setTunjanganAirListrikNilai(totalTunjanganAirListrik);
//        subRekap.setTunjanganPerumahanNilai(totalTunjanganPerumahan);
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//
//        subRekap.setTotalPendidikanNilai(totalPendidikan);
//        subRekap.setTotalThrNilai(totalThr);
//        subRekap.setTotalInsentifNilai(totalInsentif);
//        subRekap.setTotalJubileumNilai(totalJubileum);
//        subRekap.setTotalLemburNilai(totalLembur);
//
//        subRekap.setTotalRapelNilai(totalRapel);
//        subRekap.setTotalBNilai(totalRapelBulan);
//        subRekap.setTotalANilai(totalRapelFinal);
//
//        subRekap.setPphGajiNilai(totalPph);
//        subRekap.setPotPphNilai(totalPphPribadi);
//        subRekap.setTunjanganPphNilai(totalTunjanganPph);
//        subRekap.setTotalGajiBersihNilai(totalRapelBersih);
//
//        totalRekap.setTunjanganUmkLamaNilai(grandUmkLama);
//        totalRekap.setTunjanganStrukturalLamaNilai(grandStrukturalLama);
//        totalRekap.setTunjanganJabatanStrukturalLamaNilai(grandJabatanStrukturalLama);
//        totalRekap.setTunjanganStrategisLamaNilai(grandStrategisLama);
//        totalRekap.setTunjanganAirListrikLamaNilai(grandTunjanganAirListrikLama);
//        totalRekap.setTunjanganPerumahanLamaNilai(grandTunjanganPerumahanLama);
//        totalRekap.setGajiGolonganLamaNilai(grandGajiGolonganLama);
//
//        totalRekap.setTunjanganUmkBaruNilai(grandUmkBaru);
//        totalRekap.setTunjanganStrukturalBaruNilai(grandStrukturalBaru);
//        totalRekap.setTunjanganJabatanStrukturalBaruNilai(grandJabatanStrukturalBaru);
//        totalRekap.setTunjanganStrategisBaruNilai(grandStrategisBaru);
//        totalRekap.setTunjanganAirListrikBaruNilai(grandTunjanganAirListrikBaru);
//        totalRekap.setTunjanganPerumahanBaruNilai(grandTunjanganPerumahanBaru);
//        totalRekap.setGajiGolonganBaruNilai(grandGajiGolonganBaru);
//
//        totalRekap.setTunjanganUmkNilai(grandUmk);
//        totalRekap.setTunjanganStrukturalNilai(grandStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(grandJabatanStruktural);
//        totalRekap.setTunjanganStrategisNilai(grandStrategis);
//        totalRekap.setTunjanganAirListrikNilai(grandTunjanganAirListrik);
//        totalRekap.setTunjanganPerumahanNilai(grandTunjanganPerumahan);
//        totalRekap.setGajiGolonganNilai(grandGajiGolongan);
//
//        totalRekap.setTotalPendidikanNilai(grandPendidikan);
//        totalRekap.setTotalThrNilai(grandThr);
//        totalRekap.setTotalInsentifNilai(grandInsentif);
//        totalRekap.setTotalJubileumNilai(grandJubileum);
//        totalRekap.setTotalLemburNilai(grandLembur);
//
//        totalRekap.setTotalRapelNilai(grandRapel);
//        totalRekap.setTotalBNilai(grandRapelBulan);
//        totalRekap.setTotalANilai(grandRapelFinal);
//
//        totalRekap.setPphGajiNilai(grandPph);
//        totalRekap.setPotPphNilai(grandPphPribadi);
//        totalRekap.setTunjanganPphNilai(grandTunjanganPph);
//        totalRekap.setTotalGajiBersihNilai(grandRapelBersih);
//
//        hasilPayrollList.addAll(payrollTotalRapel(
//                CommonUtil.numbericFormat(totalUmkLama, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalStrategisLama, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganAirListrikLama, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganPerumahanLama, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganLama, "###,###"),
//                CommonUtil.numbericFormat(totalUmkBaru, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalStrategisBaru, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganAirListrikBaru, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganPerumahanBaru, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganBaru, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganAirListrik, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganPerumahan, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalPendidikan, "###,###"),
//                CommonUtil.numbericFormat(totalThr, "###,###"),
//                CommonUtil.numbericFormat(totalInsentif, "###,###"),
//                CommonUtil.numbericFormat(totalJubileum, "###,###"),
//                CommonUtil.numbericFormat(totalLembur, "###,###"),
//                CommonUtil.numbericFormat(totalRapel, "###,###"),
//                CommonUtil.numbericFormat(totalRapelBulan, "###,###"),
//                CommonUtil.numbericFormat(totalRapelFinal, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandUmkLama, "###,###"),
//                CommonUtil.numbericFormat(grandStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(grandStrategisLama, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganAirListrikLama, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganPerumahanLama, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolonganLama, "###,###"),
//                CommonUtil.numbericFormat(grandUmkBaru, "###,###"),
//                CommonUtil.numbericFormat(grandStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(grandStrategisBaru, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganAirListrikBaru, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganPerumahanBaru, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolonganBaru, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganAirListrik, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganPerumahan, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandPendidikan, "###,###"),
//                CommonUtil.numbericFormat(grandThr, "###,###"),
//                CommonUtil.numbericFormat(grandInsentif, "###,###"),
//                CommonUtil.numbericFormat(grandJubileum, "###,###"),
//                CommonUtil.numbericFormat(grandLembur, "###,###"),
//                CommonUtil.numbericFormat(grandRapel, "###,###"),
//                CommonUtil.numbericFormat(grandRapelBulan, "###,###"),
//                CommonUtil.numbericFormat(grandRapelFinal, "###,###"),
//                CommonUtil.numbericFormat(grandPph, "###,###"),
//                CommonUtil.numbericFormat(grandPphPribadi, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganPph, "###,###"),
//                CommonUtil.numbericFormat(grandRapelBersih, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    // Rapel THR
//    @Override
//    public List<Payroll> printReportPayrollRapelThrSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit, statusPegawai);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<PayrollRapelThr> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollRapelThr(bulan1, tahun1, unit, statusPegawai);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(PayrollRapelThr payrollRapelLoop: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//                String golonganIdLama[];
//
//                payroll.setPayrollId(payrollRapelLoop.getPayrollId());
//                String tmp = i + " - " + payrollRapelLoop.getNip();
//                payroll.setNip(payrollRapelLoop.getNip());
//                payroll.setNama(payrollRapelLoop.getNama());
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganName()) && payrollRapelLoop.getGolonganName() != null){
//                    golonganId = payrollRapelLoop.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + payrollRapelLoop.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganNameLama()) && payrollRapelLoop.getGolonganNameLama() != null){
//                    golonganIdLama = payrollRapelLoop.getGolonganNameLama().split(" ");
//                    payroll.setGolonganIdLama(golonganIdLama[1] + "/" + payrollRapelLoop.getPointLama());
//                }else{
//                    payroll.setGolonganIdLama("-");
//                }
//
//                payroll.setStatusKeluarga(payrollRapelLoop.getStatusKeluarga() + "/" + payrollRapelLoop.getJumlahAnak());
//
//                // lama
//                payroll.setTunjanganUmkLama(CommonUtil.numbericFormat(payrollRapelLoop.getThrUmkNilaiLama(), "###,###"));
//                payroll.setTunjanganUmkLamaNilai(payrollRapelLoop.getThrUmkNilaiLama());
//                payroll.setTunjanganPeralihanLama(CommonUtil.numbericFormat(payrollRapelLoop.getThrPeralihanNilaiLama(), "###,###"));
//                payroll.setTunjanganPeralihanLamaNilai(payrollRapelLoop.getThrPeralihanNilaiLama());
//                payroll.setTunjanganStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getThrStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganStrukturalLamaNilai(payrollRapelLoop.getThrStrukturalNilaiLama());
//                payroll.setTunjanganJabatanStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getThrJabStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalLamaNilai(payrollRapelLoop.getThrJabStrukturalNilaiLama());
//                payroll.setTunjanganStrategisLama(CommonUtil.numbericFormat(payrollRapelLoop.getThrStrategisNilaiLama(), "###,###"));
//                payroll.setTunjanganStrategisLamaNilai(payrollRapelLoop.getThrStrategisNilaiLama());
//                payroll.setGajiGolonganLama(CommonUtil.numbericFormat(payrollRapelLoop.getThrGajiGolonganNilaiLama(), "###,###"));
//                payroll.setGajiGolonganLamaNilai(payrollRapelLoop.getThrGajiGolonganNilaiLama());
//
//                // baru
//                payroll.setTunjanganUmkBaru(CommonUtil.numbericFormat(payrollRapelLoop.getThrUmkNilaiBaru(), "###,###"));
//                payroll.setTunjanganUmkBaruNilai(payrollRapelLoop.getThrUmkNilaiBaru());
//                payroll.setTunjanganPeralihanBaru(CommonUtil.numbericFormat(payrollRapelLoop.getThrPeralihanNilaiBaru(), "###,###"));
//                payroll.setTunjanganPeralihanBaruNilai(payrollRapelLoop.getThrPeralihanNilaiBaru());
//                payroll.setTunjanganStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getThrStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganStrukturalBaruNilai(payrollRapelLoop.getThrStrukturalNilaiBaru());
//                payroll.setTunjanganJabatanStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getThrJabStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalBaruNilai(payrollRapelLoop.getThrJabStrukturalNilaiBaru());
//                payroll.setTunjanganStrategisBaru(CommonUtil.numbericFormat(payrollRapelLoop.getThrStrategisNilaiBaru(), "###,###"));
//                payroll.setTunjanganStrategisBaruNilai(payrollRapelLoop.getThrStrategisNilaiBaru());
//                payroll.setGajiGolonganBaru(CommonUtil.numbericFormat(payrollRapelLoop.getThrGajiGolonganNilaiBaru(), "###,###"));
//                payroll.setGajiGolonganBaruNilai(payrollRapelLoop.getThrGajiGolonganNilaiBaru());
//
//                //selisih
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(payrollRapelLoop.getThrUmkNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganUmkNilai(payrollRapelLoop.getThrUmkNilaiSelisihBaru());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(payrollRapelLoop.getThrPeralihanNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(payrollRapelLoop.getThrPeralihanNilaiSelisihBaru());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getThrStrukturalNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(payrollRapelLoop.getThrStrukturalNilaiSelisihBaru());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getThrJabStrukturalNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(payrollRapelLoop.getThrJabStrukturalNilaiSelisihBaru());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(payrollRapelLoop.getThrStrategisNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganStrategisNilai(payrollRapelLoop.getThrStrategisNilaiSelisihBaru());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(payrollRapelLoop.getThrGajiGolonganNilaiSelisihBaru(), "###,###"));
//                payroll.setGajiGolonganNilai(payrollRapelLoop.getThrGajiGolonganNilaiSelisihBaru());
//
//                payroll.setTotalThr(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelNilaiSelisihBaru(), "###,###"));
//                payroll.setTotalThrNilai(payrollRapelLoop.getTotalRapelNilaiSelisihBaru());
//
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalUmkLama = new BigDecimal(0);
//        BigDecimal totalPeralihanLama = new BigDecimal(0);
//        BigDecimal totalStrukturalLama = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal totalStrategisLama = new BigDecimal(0);
//        BigDecimal totalGajiGolonganLama = new BigDecimal(0);
//
//        BigDecimal totalUmkBaru = new BigDecimal(0);
//        BigDecimal totalPeralihanBaru = new BigDecimal(0);
//        BigDecimal totalStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalStrategisBaru = new BigDecimal(0);
//        BigDecimal totalGajiGolonganBaru = new BigDecimal(0);
//
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalPeralihan = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalStrategis = new BigDecimal(0);
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//
//        BigDecimal totalThr = new BigDecimal(0);
//
//        BigDecimal grandUmkLama = new BigDecimal(0);
//        BigDecimal grandPeralihanLama = new BigDecimal(0);
//        BigDecimal grandStrukturalLama = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal grandStrategisLama = new BigDecimal(0);
//        BigDecimal grandGajiGolonganLama = new BigDecimal(0);
//
//        BigDecimal grandUmkBaru = new BigDecimal(0);
//        BigDecimal grandPeralihanBaru = new BigDecimal(0);
//        BigDecimal grandStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandStrategisBaru = new BigDecimal(0);
//        BigDecimal grandGajiGolonganBaru = new BigDecimal(0);
//
//        BigDecimal grandUmk = new BigDecimal(0);
//        BigDecimal grandPeralihan = new BigDecimal(0);
//        BigDecimal grandStruktural = new BigDecimal(0);
//        BigDecimal grandJabatanStruktural = new BigDecimal(0);
//        BigDecimal grandStrategis = new BigDecimal(0);
//        BigDecimal grandGajiGolongan = new BigDecimal(0);
//        BigDecimal grandTotalThr = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollRapel(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//                totalRekap.setTunjanganPeralihanLamaNilai(totalPeralihanLama);
//                totalRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//                totalRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//                totalRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//                totalRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//
//                totalRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//                totalRekap.setTunjanganPeralihanBaruNilai(totalPeralihanBaru);
//                totalRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//                totalRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//                totalRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//                totalRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//                totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//                totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//                totalRekap.setTunjanganStrategisNilai(totalStrategis);
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//
//                totalRekap.setTotalThrNilai(totalThr);
//
//                hasilPayrollList.addAll(headerPayrollTotalRapelThr(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalUmkLama, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihanLama, "###,###"),
//                        CommonUtil.numbericFormat(totalStrukturalLama, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStrukturalLama, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategisLama, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolonganLama, "###,###"),
//                        CommonUtil.numbericFormat(totalUmkBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihanBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalStrukturalBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStrukturalBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategisBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolonganBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalThr, "###,###")
//                ));
//                totalUmkLama = new BigDecimal(0);
//                totalPeralihanLama = new BigDecimal(0);
//                totalStrukturalLama = new BigDecimal(0);
//                totalJabatanStrukturalLama = new BigDecimal(0);
//                totalStrategisLama = new BigDecimal(0);
//                totalGajiGolonganLama = new BigDecimal(0);
//
//                totalUmkBaru = new BigDecimal(0);
//                totalPeralihanBaru = new BigDecimal(0);
//                totalStrukturalBaru = new BigDecimal(0);
//                totalJabatanStrukturalBaru = new BigDecimal(0);
//                totalStrategisBaru = new BigDecimal(0);
//                totalGajiGolonganBaru = new BigDecimal(0);
//
//                totalUmk = new BigDecimal(0);
//                totalPeralihan = new BigDecimal(0);
//                totalStruktural = new BigDecimal(0);
//                totalJabatanStruktural = new BigDecimal(0);
//                totalStrategis = new BigDecimal(0);
//                totalGajiGolongan = new BigDecimal(0);
//
//                totalThr = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalUmkLama = totalUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        totalPeralihanLama = totalPeralihanLama.add(payroll.getTunjanganPeralihanLamaNilai());
//                        totalStrukturalLama = totalStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        totalJabatanStrukturalLama = totalJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        totalStrategisLama = totalStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        totalGajiGolonganLama = totalGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//
//                        totalUmkBaru = totalUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        totalPeralihanBaru = totalPeralihanBaru.add(payroll.getTunjanganPeralihanBaruNilai());
//                        totalStrukturalBaru = totalStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        totalJabatanStrukturalBaru = totalJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        totalStrategisBaru = totalStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        totalGajiGolonganBaru = totalGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalStrategis = totalStrategis.add(payroll.getTunjanganStrategisNilai());
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//
//                        totalThr = totalThr.add(payroll.getTotalThrNilai());
//
//                        grandUmkLama = grandUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        grandPeralihanLama = grandPeralihanLama.add(payroll.getTunjanganPeralihanLamaNilai());
//                        grandStrukturalLama = grandStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        grandJabatanStrukturalLama = grandJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        grandStrategisLama = grandStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        grandGajiGolonganLama = grandGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//
//                        grandUmkBaru = grandUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        grandPeralihanBaru = grandPeralihanBaru.add(payroll.getTunjanganPeralihanBaruNilai());
//                        grandStrukturalBaru = grandStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        grandJabatanStrukturalBaru = grandJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        grandStrategisBaru = grandStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        grandGajiGolonganBaru = grandGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//
//                        grandUmk = grandUmk.add(payroll.getTunjanganUmkNilai());
//                        grandPeralihan = grandPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        grandStruktural = grandStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        grandJabatanStruktural = grandJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        grandStrategis = grandStrategis.add(payroll.getTunjanganStrategisNilai());
//                        grandGajiGolongan = grandGajiGolongan.add(payroll.getGajiGolonganNilai());
//
//                        grandTotalThr = grandTotalThr.add(payroll.getTotalThrNilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//
//        subRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//        subRekap.setTunjanganPeralihanLamaNilai(totalPeralihanLama);
//        subRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//        subRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//        subRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//        subRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//
//        subRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//        subRekap.setTunjanganPeralihanBaruNilai(totalPeralihanBaru);
//        subRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//        subRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//        subRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//        subRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setTunjanganPeralihanNilai(totalPeralihan);
//        subRekap.setTunjanganStrukturalNilai(totalStruktural);
//        subRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        subRekap.setTunjanganStrategisNilai(totalStrategis);
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//
//        subRekap.setTotalThrNilai(totalThr);
//
//        totalRekap.setTunjanganUmkLamaNilai(grandUmkLama);
//        totalRekap.setTunjanganPeralihanLamaNilai(grandPeralihanLama);
//        totalRekap.setTunjanganStrukturalLamaNilai(grandStrukturalLama);
//        totalRekap.setTunjanganJabatanStrukturalLamaNilai(grandJabatanStrukturalLama);
//        totalRekap.setTunjanganStrategisLamaNilai(grandStrategisLama);
//        totalRekap.setGajiGolonganLamaNilai(grandGajiGolonganLama);
//
//        totalRekap.setTunjanganUmkBaruNilai(grandUmkBaru);
//        totalRekap.setTunjanganPeralihanBaruNilai(grandPeralihanBaru);
//        totalRekap.setTunjanganStrukturalBaruNilai(grandStrukturalBaru);
//        totalRekap.setTunjanganJabatanStrukturalBaruNilai(grandJabatanStrukturalBaru);
//        totalRekap.setTunjanganStrategisBaruNilai(grandStrategisBaru);
//        totalRekap.setGajiGolonganBaruNilai(grandGajiGolonganBaru);
//
//        totalRekap.setTunjanganUmkNilai(grandUmk);
//        totalRekap.setTunjanganPeralihanNilai(grandPeralihan);
//        totalRekap.setTunjanganStrukturalNilai(grandStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(grandJabatanStruktural);
//        totalRekap.setTunjanganStrategisNilai(grandStrategis);
//        totalRekap.setGajiGolonganNilai(grandGajiGolongan);
//
//        totalRekap.setTotalThrNilai(grandTotalThr);
//
//        hasilPayrollList.addAll(payrollTotalRapelThr(
//                CommonUtil.numbericFormat(totalUmkLama, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihanLama, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalStrategisLama, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganLama, "###,###"),
//                CommonUtil.numbericFormat(totalUmkBaru, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihanBaru, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalStrategisBaru, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganBaru, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalThr, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandUmkLama, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihanLama, "###,###"),
//                CommonUtil.numbericFormat(grandStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(grandStrategisLama, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolonganLama, "###,###"),
//                CommonUtil.numbericFormat(grandUmkBaru, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihanBaru, "###,###"),
//                CommonUtil.numbericFormat(grandStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(grandStrategisBaru, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolonganBaru, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandTotalThr, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    // Report Jubileum
//    @Override
//    public List<Payroll> printReportPayrollRapelJubileumSys(String bulan1, String tahun1, String unit, String status) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<PayrollRapelJubileum> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollRapelJubileum(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(PayrollRapelJubileum payrollRapelLoop: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(payrollRapelLoop.getPayrollId());
//                String tmp = i + " - " + payrollRapelLoop.getNip();
//                payroll.setNip(payrollRapelLoop.getNip());
//                payroll.setNama(payrollRapelLoop.getNama());
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganName()) && payrollRapelLoop.getGolonganName() != null){
//                    golonganId = payrollRapelLoop.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + payrollRapelLoop.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//                payroll.setStatusKeluarga(payrollRapelLoop.getStatusKeluarga() + "/" + payrollRapelLoop.getJumlahAnak());
//
//                // lama
//                payroll.setTunjanganUmkLama(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumUmkNilaiLama(), "###,###"));
//                payroll.setTunjanganUmkLamaNilai(payrollRapelLoop.getJubileumUmkNilaiLama());
//                payroll.setTunjanganStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganStrukturalLamaNilai(payrollRapelLoop.getJubileumStrukturalNilaiLama());
//                payroll.setTunjanganJabatanStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumJabStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalLamaNilai(payrollRapelLoop.getJubileumJabStrukturalNilaiLama());
//                payroll.setTunjanganPeralihanLama(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumPeralihanNilaiLama(), "###,###"));
//                payroll.setTunjanganPeralihanLamaNilai(payrollRapelLoop.getJubileumPeralihanNilaiLama());
//                payroll.setGajiGolonganLama(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumGajiGolonganNilaiLama(), "###,###"));
//                payroll.setGajiGolonganLamaNilai(payrollRapelLoop.getJubileumGajiGolonganNilaiLama());
//
//                // baru
//                payroll.setTunjanganUmkBaru(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumUmkNilaiBaru(), "###,###"));
//                payroll.setTunjanganUmkBaruNilai(payrollRapelLoop.getJubileumUmkNilaiBaru());
//                payroll.setTunjanganStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganStrukturalBaruNilai(payrollRapelLoop.getJubileumStrukturalNilaiBaru());
//                payroll.setTunjanganJabatanStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumJabStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalBaruNilai(payrollRapelLoop.getJubileumJabStrukturalNilaiBaru());
//                payroll.setTunjanganPeralihanBaru(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumPeralihanNilaiBaru(), "###,###"));
//                payroll.setTunjanganPeralihanBaruNilai(payrollRapelLoop.getJubileumPeralihanNilaiBaru());
//                payroll.setGajiGolonganBaru(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumGajiGolonganNilaiBaru(), "###,###"));
//                payroll.setGajiGolonganBaruNilai(payrollRapelLoop.getJubileumGajiGolonganNilaiBaru());
//
//                //selisih
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumUmkNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganUmkNilai(payrollRapelLoop.getJubileumUmkNilaiSelisihBaru());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumStrukturalNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(payrollRapelLoop.getJubileumStrukturalNilaiSelisihBaru());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumJabStrukturalNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(payrollRapelLoop.getJubileumJabStrukturalNilaiSelisihBaru());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumPeralihanNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(payrollRapelLoop.getJubileumPeralihanNilaiSelisihBaru());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(payrollRapelLoop.getJubileumGajiGolonganNilaiSelisihBaru(), "###,###"));
//                payroll.setGajiGolonganNilai(payrollRapelLoop.getJubileumGajiGolonganNilaiSelisihBaru());
//
//                payroll.setTotalA(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelNilaiSelisihBaru(), "###,###"));
//                payroll.setTotalANilai(payrollRapelLoop.getTotalRapelNilaiSelisihBaru());
//                payroll.setTotalJubileum(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelJubileumNilai(), "###,###"));
//                payroll.setTotalJubileumNilai(payrollRapelLoop.getTotalRapelJubileumNilai());
//                payroll.setTanggalJubileum(CommonUtil.convertDateToString(payrollRapelLoop.getTanggalJubileum()));
//
//                if(payrollRapelLoop.getGolonganName() != null && !payrollRapelLoop.getGolonganName().equalsIgnoreCase("")){
//                    payroll.setGolonganName(payrollRapelLoop.getGolonganName().substring(9) + payrollRapelLoop.getPoint());
//                }else{
//                    payroll.setGolonganName("");
//                }
//
//                if(payrollRapelLoop.getGolonganNameLama() != null && !payrollRapelLoop.getGolonganNameLama().equalsIgnoreCase("")){
//                    payroll.setGolonganNameLama(payrollRapelLoop.getGolonganNameLama().substring(9) + payrollRapelLoop.getPointLama());
//                }else{
//                    payroll.setGolonganNameLama("");
//                }
//
//
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalUmkLama = new BigDecimal(0);
//        BigDecimal totalStrukturalLama = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal totalPeralihanLama = new BigDecimal(0);
//        BigDecimal totalGajiGolonganLama = new BigDecimal(0);
//
//        BigDecimal totalUmkBaru = new BigDecimal(0);
//        BigDecimal totalStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalPeralihanBaru = new BigDecimal(0);
//        BigDecimal totalGajiGolonganBaru = new BigDecimal(0);
//
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalPeralihan = new BigDecimal(0);
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//
//        BigDecimal totalSelisihJubileum = new BigDecimal(0);
//        BigDecimal totalJubileum = new BigDecimal(0);
//
//
//        hasilPayrollList.addAll(headerPayrollJubileum());
//        Payroll totalRekap = new Payroll();
//
//        for(Payroll payroll: payrollList){
//            payroll.setNip(i + " - " + payroll.getNip());
//            i++;
//            hasilPayrollList.add(payroll);
//            totalUmkLama = totalUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//            totalStrukturalLama = totalStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//            totalJabatanStrukturalLama = totalJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//            totalPeralihanLama = totalPeralihanLama.add(payroll.getTunjanganPeralihanLamaNilai());
//            totalGajiGolonganLama = totalGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//
//            totalUmkBaru = totalUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//            totalStrukturalBaru = totalStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//            totalJabatanStrukturalBaru = totalJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//            totalPeralihanBaru = totalPeralihanBaru.add(payroll.getTunjanganPeralihanBaruNilai());
//            totalGajiGolonganBaru = totalGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//
//            totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//            totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//            totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//            totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//            totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//
//            totalSelisihJubileum = totalSelisihJubileum.add(payroll.getTotalANilai());;
//            totalJubileum = totalJubileum.add(payroll.getTotalJubileumNilai());
//        }
//
//        totalRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//        totalRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//        totalRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//        totalRekap.setTunjanganPeralihanLamaNilai(totalPeralihanLama);
//        totalRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//
//        totalRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//        totalRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//        totalRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//        totalRekap.setTunjanganPeralihanBaruNilai(totalPeralihanBaru);
//        totalRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//
//        totalRekap.setTunjanganUmkNilai(totalUmk);
//        totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//        totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//
//        totalRekap.setTotalANilai(totalSelisihJubileum);
//        totalRekap.setTotalJubileumNilai(totalJubileum);
//
//        hasilPayrollList.addAll(headerPayrollTotalRapelJubileum(totalRekap,
//                CommonUtil.numbericFormat(totalUmkLama, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihanLama, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganLama, "###,###"),
//                CommonUtil.numbericFormat(totalUmkBaru, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihanBaru, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganBaru, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalSelisihJubileum, "###,###"),
//                CommonUtil.numbericFormat(totalJubileum, "###,###")
//        ));
//
//        return hasilPayrollList;
//    }
//
//    // Rapel Pendidikan
//    @Override
//    public List<Payroll> printReportPayrollRapelPendidikanSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit, statusPegawai);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<PayrollRapelPendidikan> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollRapelPendidikan(bulan1, tahun1, unit, statusPegawai);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(PayrollRapelPendidikan payrollRapelLoop: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//                String golonganIdLama[];
//
//                payroll.setPayrollId(payrollRapelLoop.getPayrollId());
//                String tmp = i + " - " + payrollRapelLoop.getNip();
//                payroll.setNip(payrollRapelLoop.getNip());
//                payroll.setNama(payrollRapelLoop.getNama());
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganName()) && payrollRapelLoop.getGolonganName() != null){
//                    golonganId = payrollRapelLoop.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + payrollRapelLoop.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganNameLama()) && payrollRapelLoop.getGolonganNameLama() != null){
//                    golonganIdLama = payrollRapelLoop.getGolonganNameLama().split(" ");
//                    payroll.setGolonganIdLama(golonganIdLama[1] + "/" + payrollRapelLoop.getPointLama());
//                }else{
//                    payroll.setGolonganIdLama("-");
//                }
//                payroll.setStatusKeluarga(payrollRapelLoop.getStatusKeluarga() + "/" + payrollRapelLoop.getJumlahAnak());
//
//                payroll.setTunjanganUmkLama(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanUmkNilaiLama(), "###,###"));
//                payroll.setTunjanganUmkLamaNilai(payrollRapelLoop.getPendidikanUmkNilaiLama());
//                payroll.setTunjanganPeralihanLama(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanPeralihanNilaiLama(), "###,###"));
//                payroll.setTunjanganPeralihanLamaNilai(payrollRapelLoop.getPendidikanPeralihanNilaiLama());
//                payroll.setTunjanganStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganStrukturalLamaNilai(payrollRapelLoop.getPendidikanStrukturalNilaiLama());
//                payroll.setTunjanganJabatanStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanJabStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalLamaNilai(payrollRapelLoop.getPendidikanJabStrukturalNilaiLama());
//                payroll.setTunjanganStrategisLama(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanStrategisNilaiLama(), "###,###"));
//                payroll.setTunjanganStrategisLamaNilai(payrollRapelLoop.getPendidikanStrategisNilaiLama());
//                payroll.setGajiGolonganLama(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanGajiGolonganNilaiLama(), "###,###"));
//                payroll.setGajiGolonganLamaNilai(payrollRapelLoop.getPendidikanGajiGolonganNilaiLama());
//                payroll.setTunjanganAirListrikLama(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanAirListrikNilaiLama(), "###,###"));
//                payroll.setTunjanganAirListrikLamaNilai(payrollRapelLoop.getPendidikanAirListrikNilaiLama());
//
//                payroll.setTunjanganUmkBaru(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanUmkNilaiBaru(), "###,###"));
//                payroll.setTunjanganUmkBaruNilai(payrollRapelLoop.getPendidikanUmkNilaiBaru());
//                payroll.setTunjanganPeralihanBaru(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanPeralihanNilaiBaru(), "###,###"));
//                payroll.setTunjanganPeralihanBaruNilai(payrollRapelLoop.getPendidikanPeralihanNilaiBaru());
//                payroll.setTunjanganStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganStrukturalBaruNilai(payrollRapelLoop.getPendidikanStrukturalNilaiBaru());
//                payroll.setTunjanganJabatanStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanJabStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalBaruNilai(payrollRapelLoop.getPendidikanJabStrukturalNilaiBaru());
//                payroll.setTunjanganStrategisBaru(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanStrategisNilaiBaru(), "###,###"));
//                payroll.setTunjanganStrategisBaruNilai(payrollRapelLoop.getPendidikanStrategisNilaiBaru());
//                payroll.setGajiGolonganBaru(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanGajiGolonganNilaiBaru(), "###,###"));
//                payroll.setGajiGolonganBaruNilai(payrollRapelLoop.getPendidikanGajiGolonganNilaiBaru());
//                payroll.setTunjanganAirListrikBaru(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanAirListrikNilaiBaru(), "###,###"));
//                payroll.setTunjanganAirListrikBaruNilai(payrollRapelLoop.getPendidikanAirListrikNilaiBaru());
//
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanUmkNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganUmkNilai(payrollRapelLoop.getPendidikanUmkNilaiSelisihBaru());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanPeralihanNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(payrollRapelLoop.getPendidikanPeralihanNilaiSelisihBaru());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanStrukturalNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(payrollRapelLoop.getPendidikanStrukturalNilaiSelisihBaru());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanJabStrukturalNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(payrollRapelLoop.getPendidikanJabStrukturalNilaiSelisihBaru());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanStrategisNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganStrategisNilai(payrollRapelLoop.getPendidikanStrategisNilaiSelisihBaru());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanGajiGolonganNilaiSelisihBaru(), "###,###"));
//                payroll.setGajiGolonganNilai(payrollRapelLoop.getPendidikanGajiGolonganNilaiSelisihBaru());
//                payroll.setTunjanganAirListrik(CommonUtil.numbericFormat(payrollRapelLoop.getPendidikanAirListrikNilaiSelisihBaru(), "###,###"));
//                payroll.setTunjanganAirListrikNilai(payrollRapelLoop.getPendidikanAirListrikNilaiSelisihBaru());
//
//                payroll.setTotalPendidikan(CommonUtil.numbericFormat(payrollRapelLoop.getTotalRapelNilaiSelisihBaru(), "###,###"));
//                payroll.setTotalPendidikanNilai(payrollRapelLoop.getTotalRapelNilaiSelisihBaru());
//
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalUmkLama = new BigDecimal(0);
//        BigDecimal totalPeralihanLama = new BigDecimal(0);
//        BigDecimal totalStrukturalLama = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal totalStrategisLama = new BigDecimal(0);
//        BigDecimal totalGajiGolonganLama = new BigDecimal(0);
//        BigDecimal totalAirListrikLama = new BigDecimal(0);
//
//        BigDecimal totalUmkBaru = new BigDecimal(0);
//        BigDecimal totalPeralihanBaru = new BigDecimal(0);
//        BigDecimal totalStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalStrategisBaru = new BigDecimal(0);
//        BigDecimal totalGajiGolonganBaru = new BigDecimal(0);
//        BigDecimal totalAirListrikBaru = new BigDecimal(0);
//
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalPeralihan = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalStrategis = new BigDecimal(0);
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//        BigDecimal totalAirListrik = new BigDecimal(0);
//
//        BigDecimal totalPendidikan = new BigDecimal(0);
//
//        BigDecimal grandUmkLama = new BigDecimal(0);
//        BigDecimal grandPeralihanLama = new BigDecimal(0);
//        BigDecimal grandStrukturalLama = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal grandStrategisLama = new BigDecimal(0);
//        BigDecimal grandGajiGolonganLama = new BigDecimal(0);
//        BigDecimal grandAirListrikLama = new BigDecimal(0);
//        BigDecimal grandTotalPendidikanLama = new BigDecimal(0);
//
//        BigDecimal grandUmkBaru = new BigDecimal(0);
//        BigDecimal grandPeralihanBaru = new BigDecimal(0);
//        BigDecimal grandStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandStrategisBaru = new BigDecimal(0);
//        BigDecimal grandGajiGolonganBaru = new BigDecimal(0);
//        BigDecimal grandAirListrikBaru = new BigDecimal(0);
//        BigDecimal grandTotalPendidikanBaru = new BigDecimal(0);
//
//        BigDecimal grandUmk = new BigDecimal(0);
//        BigDecimal grandPeralihan = new BigDecimal(0);
//        BigDecimal grandStruktural = new BigDecimal(0);
//        BigDecimal grandJabatanStruktural = new BigDecimal(0);
//        BigDecimal grandStrategis = new BigDecimal(0);
//        BigDecimal grandGajiGolongan = new BigDecimal(0);
//        BigDecimal grandAirListrik = new BigDecimal(0);
//        BigDecimal grandTotalPendidikan = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollRapel(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setTunjanganPeralihanLamaNilai(totalPeralihanLama);
//                totalRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//                totalRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//                totalRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//                totalRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//                totalRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//                totalRekap.setTunjanganAirListrikLamaNilai(totalAirListrikLama);
//
//                totalRekap.setTunjanganPeralihanBaruNilai(totalPeralihanBaru);
//                totalRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//                totalRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//                totalRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//                totalRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//                totalRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//                totalRekap.setTunjanganAirListrikBaruNilai(totalAirListrikBaru);
//
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//                totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//                totalRekap.setTunjanganStrategisNilai(totalStrategis);
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//                totalRekap.setTunjanganAirListrikNilai(totalAirListrik);
//
//                totalRekap.setTotalPendidikanNilai(totalPendidikan);
//
//                hasilPayrollList.addAll(headerPayrollTotalRapelPendidikan(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalUmkLama, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihanLama, "###,###"),
//                        CommonUtil.numbericFormat(totalStrukturalLama, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStrukturalLama, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategisLama, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolonganLama, "###,###"),
//                        CommonUtil.numbericFormat(totalAirListrikLama, "###,###"),
//                        CommonUtil.numbericFormat(totalUmkBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihanBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalStrukturalBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStrukturalBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategisBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolonganBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalAirListrikBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalAirListrik, "###,###"),
//                        CommonUtil.numbericFormat(totalPendidikan, "###,###")
//                ));
//                totalUmkLama = new BigDecimal(0);
//                totalPeralihanLama = new BigDecimal(0);
//                totalStrukturalLama = new BigDecimal(0);
//                totalJabatanStrukturalLama = new BigDecimal(0);
//                totalStrategisLama = new BigDecimal(0);
//                totalGajiGolonganLama = new BigDecimal(0);
//                totalAirListrikLama = new BigDecimal(0);
//
//                totalPeralihanBaru = new BigDecimal(0);
//                totalUmkBaru = new BigDecimal(0);
//                totalStrukturalBaru = new BigDecimal(0);
//                totalJabatanStrukturalBaru = new BigDecimal(0);
//                totalStrategisBaru = new BigDecimal(0);
//                totalGajiGolonganBaru = new BigDecimal(0);
//                totalAirListrikBaru = new BigDecimal(0);
//
//                totalPeralihan = new BigDecimal(0);
//                totalUmk = new BigDecimal(0);
//                totalStruktural = new BigDecimal(0);
//                totalJabatanStruktural = new BigDecimal(0);
//                totalStrategis = new BigDecimal(0);
//                totalGajiGolongan = new BigDecimal(0);
//                totalAirListrik = new BigDecimal(0);
//
//                totalPendidikan = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalUmkLama = totalUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        totalPeralihanLama = totalPeralihanLama.add(payroll.getTunjanganPeralihanLamaNilai());
//                        totalStrukturalLama = totalStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        totalJabatanStrukturalLama = totalJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        totalStrategisLama = totalStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        totalGajiGolonganLama = totalGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//                        totalAirListrikLama = totalAirListrikLama.add(payroll.getTunjanganAirListrikLamaNilai());
//
//                        totalUmkBaru = totalUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        totalPeralihanBaru = totalPeralihanBaru.add(payroll.getTunjanganPeralihanBaruNilai());
//                        totalStrukturalBaru = totalStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        totalJabatanStrukturalBaru = totalJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        totalStrategisBaru = totalStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        totalGajiGolonganBaru = totalGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//                        totalAirListrikBaru = totalAirListrikBaru.add(payroll.getTunjanganAirListrikBaruNilai());
//
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalStrategis = totalStrategis.add(payroll.getTunjanganStrategisNilai());
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        totalAirListrik = totalAirListrik.add(payroll.getTunjanganAirListrikNilai());
//
//                        totalPendidikan = totalPendidikan.add(payroll.getTotalPendidikanNilai());
//
//                        grandUmkLama = grandUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        grandPeralihanLama = grandPeralihanLama.add(payroll.getTunjanganPeralihanLamaNilai());
//                        grandStrukturalLama = grandStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        grandJabatanStrukturalLama = grandJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        grandStrategisLama = grandStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        grandGajiGolonganLama = grandGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//                        grandAirListrikLama  = grandAirListrikLama.add(payroll.getTunjanganAirListrikLamaNilai());
//
//                        grandUmkBaru = grandUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        grandPeralihanBaru = grandPeralihanBaru.add(payroll.getTunjanganPeralihanBaruNilai());
//                        grandStrukturalBaru = grandStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        grandJabatanStrukturalBaru = grandJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        grandStrategisBaru = grandStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        grandGajiGolonganBaru = grandGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//                        grandAirListrikBaru  = grandAirListrikBaru.add(payroll.getTunjanganAirListrikBaruNilai());
//
//                        grandUmk = grandUmk.add(payroll.getTunjanganUmkNilai());
//                        grandPeralihan = grandPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        grandStruktural = grandStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        grandJabatanStruktural = grandJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        grandStrategis = grandStrategis.add(payroll.getTunjanganStrategisNilai());
//                        grandGajiGolongan = grandGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        grandAirListrik  = grandAirListrik.add(payroll.getTunjanganAirListrikNilai());
//
//                        grandTotalPendidikan = grandTotalPendidikan.add(payroll.getTotalPendidikanNilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//
//        subRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//        subRekap.setTunjanganPeralihanLamaNilai(totalPeralihanLama);
//        subRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//        subRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//        subRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//        subRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//        subRekap.setTunjanganAirListrikLamaNilai(totalAirListrikLama);
//
//        subRekap.setTunjanganPeralihanBaruNilai(totalPeralihanBaru);
//        subRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//        subRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//        subRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//        subRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//        subRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//        subRekap.setTunjanganAirListrikBaruNilai(totalAirListrikBaru);
//
//        subRekap.setTunjanganPeralihanNilai(totalPeralihan);
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setTunjanganStrukturalNilai(totalStruktural);
//        subRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        subRekap.setTunjanganStrategisNilai(totalStrategis);
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//        subRekap.setTunjanganAirListrikNilai(totalAirListrik);
//
//        subRekap.setTotalPendidikanNilai(totalPendidikan);
//
//        totalRekap.setTunjanganPeralihanLamaNilai(grandPeralihanLama);
//        totalRekap.setTunjanganUmkLamaNilai(grandUmkLama);
//        totalRekap.setTunjanganStrukturalLamaNilai(grandStrukturalLama);
//        totalRekap.setTunjanganJabatanStrukturalLamaNilai(grandJabatanStrukturalLama);
//        totalRekap.setTunjanganStrategisLamaNilai(grandStrategisLama);
//        totalRekap.setGajiGolonganLamaNilai(grandGajiGolonganLama);
//        totalRekap.setTunjanganAirListrikLamaNilai(grandAirListrikLama);
//
//        totalRekap.setTunjanganPeralihanBaruNilai(grandPeralihanBaru);
//        totalRekap.setTunjanganUmkBaruNilai(grandUmkBaru);
//        totalRekap.setTunjanganStrukturalBaruNilai(grandStrukturalBaru);
//        totalRekap.setTunjanganJabatanStrukturalBaruNilai(grandJabatanStrukturalBaru);
//        totalRekap.setTunjanganStrategisBaruNilai(grandStrategisBaru);
//        totalRekap.setGajiGolonganBaruNilai(grandGajiGolonganBaru);
//        totalRekap.setTunjanganAirListrikBaruNilai(grandAirListrikBaru);
//
//        totalRekap.setTunjanganPeralihanNilai(grandPeralihan);
//        totalRekap.setTunjanganUmkNilai(grandUmk);
//        totalRekap.setTunjanganStrukturalNilai(grandStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(grandJabatanStruktural);
//        totalRekap.setTunjanganStrategisNilai(grandStrategis);
//        totalRekap.setGajiGolonganNilai(grandGajiGolongan);
//        totalRekap.setTunjanganAirListrikNilai(grandAirListrik);
//
//        totalRekap.setTotalPendidikanNilai(grandTotalPendidikan);
//
//        hasilPayrollList.addAll(payrollTotalRapelPendidikan(
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalAirListrik, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalAirListrik, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalAirListrik, "###,###"),
//                CommonUtil.numbericFormat(totalPendidikan, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandAirListrik, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandAirListrik, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandAirListrik, "###,###"),
//                CommonUtil.numbericFormat(grandTotalPendidikan, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    // Rapel Lembur
//    @Override
//    public List<Payroll> printReportPayrollRapelLemburSys(String bulan1, String tahun1, String unit, String status) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit, status);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<PayrollRapelLembur> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollRapelLembur(bulan1, tahun1, unit, status);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(PayrollRapelLembur payrollRapelLoop: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(payrollRapelLoop.getPayrollId());
//                String tmp = i + " - " + payrollRapelLoop.getNip();
//                payroll.setNip(payrollRapelLoop.getNip());
//                payroll.setNama(payrollRapelLoop.getNama());
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganName()) && payrollRapelLoop.getGolonganName() != null){
//                    golonganId = payrollRapelLoop.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + payrollRapelLoop.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//                payroll.setStatusKeluarga(payrollRapelLoop.getStatusKeluarga() + "/" + payrollRapelLoop.getJumlahAnak());
//
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganUmkBaru(), "###,###"));
//                payroll.setTunjanganUmkNilai(payrollRapelLoop.getTunjanganUmkBaru());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(payrollRapelLoop.getGajiGolonganBaru(), "###,###"));
//                payroll.setGajiGolonganNilai(payrollRapelLoop.getGajiGolonganBaru());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(payrollRapelLoop.getTunjanganPeralihanBaru(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(payrollRapelLoop.getTunjanganPeralihanBaru());
//
//                payroll.setFaktorKali(payrollRapelLoop.getFaktorPengali() + "");
//                payroll.setJamLembur(BigDecimal.valueOf(payrollRapelLoop.getJamLembur()));
//                payroll.setStrJamLembur(payrollRapelLoop.getJamLembur() + "");
//
//                payroll.setBiayaLemburBaru(payrollRapelLoop.getBiayaLemburBaru());
//                payroll.setStrBiayaLemburBaru(CommonUtil.numbericFormat(payrollRapelLoop.getBiayaLemburBaru(), "###,###"));
//                payroll.setBiayaLemburLama(payrollRapelLoop.getBiayaLemburLama());
//                payroll.setStrBiayaLemburLama(CommonUtil.numbericFormat(payrollRapelLoop.getBiayaLemburLama(), "###,###"));
//                payroll.setSelisihBiayaLemburBaru(payrollRapelLoop.getSelisihBiayaLemburBaru());
//                payroll.setStrselisihBiayaLemburBaru(CommonUtil.numbericFormat(payrollRapelLoop.getSelisihBiayaLemburBaru(), "###,###"));
//
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalUmk = new BigDecimal(0);;
//        BigDecimal totalPeralihan = new BigDecimal(0);;
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//
//        BigDecimal totalBiayaLemburLama = new BigDecimal(0);
//        BigDecimal totalJumlahJam = new BigDecimal(0);
//        BigDecimal totalBiayaLemburBaru = new BigDecimal(0);
//        BigDecimal totalFaktorKali = new BigDecimal(0);
//        BigDecimal totalSelisihBiayaLemburBaru = new BigDecimal(0);
//
//        BigDecimal grandJumlahJam = new BigDecimal(0);;
//        BigDecimal grandTotalUmk = new BigDecimal(0);;
//        BigDecimal grandTotalPeralihan = new BigDecimal(0);;
//        BigDecimal grandTotalGajiGolongan = new BigDecimal(0);
//
//        BigDecimal grandBiayaLemburLama = new BigDecimal(0);
//        BigDecimal grandBiayaLemburBaru = new BigDecimal(0);
//        BigDecimal grandFaktorKali = new BigDecimal(0);
//        BigDecimal grandSelisihBiayaLemburBaru = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollRapelLembur(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//
//                totalRekap.setBiayaLemburLama(totalBiayaLemburLama);
//                totalRekap.setBiayaLemburBaru(totalBiayaLemburBaru);
//                totalRekap.setJamLembur(totalJumlahJam);
//                totalRekap.setSelisihBiayaLemburBaru(totalSelisihBiayaLemburBaru);
//
//
//                hasilPayrollList.addAll(headerPayrollTotalRapelLembur(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalBiayaLemburLama, "###,###"),
//                        CommonUtil.numbericFormat(totalBiayaLemburBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalSelisihBiayaLemburBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalJumlahJam, "###,###")
//                ));
//
//                totalUmk = new BigDecimal(0);
//                totalGajiGolongan = new BigDecimal(0);
//                totalPeralihan = new BigDecimal(0);
//
//                totalBiayaLemburBaru = new BigDecimal(0);
//                totalBiayaLemburLama = new BigDecimal(0);
//                totalJumlahJam = new BigDecimal(0);
//                totalSelisihBiayaLemburBaru = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//
//                        totalBiayaLemburLama = totalBiayaLemburLama.add(payroll.getBiayaLemburLama());
//                        totalBiayaLemburBaru = totalBiayaLemburBaru.add(payroll.getBiayaLemburBaru());
//                        totalJumlahJam = totalJumlahJam.add(payroll.getJamLembur());
//                        totalSelisihBiayaLemburBaru = totalSelisihBiayaLemburBaru.add(payroll.getSelisihBiayaLemburBaru());
//
//
//                        grandTotalUmk = grandTotalUmk.add(payroll.getTunjanganUmkNilai());
//                        grandTotalGajiGolongan = grandTotalGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        grandTotalPeralihan = grandTotalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//
//                        grandJumlahJam = grandJumlahJam.add(payroll.getJamLembur());
//                        grandBiayaLemburLama= grandBiayaLemburLama.add(payroll.getBiayaLemburLama());
//                        grandBiayaLemburBaru = grandBiayaLemburBaru.add(payroll.getBiayaLemburBaru());
//                        grandSelisihBiayaLemburBaru= grandSelisihBiayaLemburBaru.add(payroll.getSelisihBiayaLemburBaru());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//        subRekap.setTunjanganPeralihanNilai(totalPeralihan);
//
//        subRekap.setJamLembur(totalJumlahJam);
//        subRekap.setBiayaLemburLama(totalBiayaLemburLama);
//        subRekap.setBiayaLemburBaru(totalBiayaLemburBaru);
//        subRekap.setSelisihBiayaLemburBaru(totalSelisihBiayaLemburBaru);
//
//        totalRekap.setTunjanganUmkNilai(grandTotalUmk);
//        totalRekap.setGajiGolonganNilai(grandTotalGajiGolongan);
//        totalRekap.setTunjanganPeralihanNilai(grandTotalPeralihan);
//
//        totalRekap.setJamLembur(grandJumlahJam);
//        totalRekap.setBiayaLemburLama(grandBiayaLemburLama);
//        totalRekap.setBiayaLemburBaru(grandBiayaLemburBaru);
//        totalRekap.setSelisihBiayaLemburBaru(grandSelisihBiayaLemburBaru);
//
//        hasilPayrollList.addAll(payrollTotalRapelLembur(
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalJumlahJam, "###,###"),
//                CommonUtil.numbericFormat(totalBiayaLemburLama, "###,###"),
//                CommonUtil.numbericFormat(totalBiayaLemburBaru, "###,###"),
//                CommonUtil.numbericFormat(totalSelisihBiayaLemburBaru, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandTotalUmk, "###,###"),
//                CommonUtil.numbericFormat(grandTotalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandTotalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandJumlahJam, "###,###"),
//                CommonUtil.numbericFormat(grandBiayaLemburLama, "###,###"),
//                CommonUtil.numbericFormat(grandBiayaLemburBaru, "###,###"),
//                CommonUtil.numbericFormat(grandSelisihBiayaLemburBaru, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    // Rapel Insentif
//    @Override
//    public List<Payroll> printReportPayrollRapelInsentifSys(String bulan1, String tahun1, String unit, String statusPegawai) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagian(imPositionBagianEntity.getBagianId(), unit, statusPegawai);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<PayrollRapelInsentif> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollRapelInsentif(bulan1, tahun1, unit, statusPegawai);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(PayrollRapelInsentif payrollRapelLoop: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//                String golonganIdLama[];
//
//                payroll.setPayrollId(payrollRapelLoop.getPayrollId());
//                String tmp = i + " - " + payrollRapelLoop.getNip();
//                payroll.setNip(payrollRapelLoop.getNip());
//                payroll.setNama(payrollRapelLoop.getNama());
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganName()) && payrollRapelLoop.getGolonganName() != null){
//                    golonganId = payrollRapelLoop.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + payrollRapelLoop.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//
//                if(!"".equalsIgnoreCase(payrollRapelLoop.getGolonganNameLama()) && payrollRapelLoop.getGolonganNameLama() != null){
//                    golonganIdLama = payrollRapelLoop.getGolonganNameLama().split(" ");
//                    payroll.setGolonganIdLama(golonganIdLama[1] + "/" + payrollRapelLoop.getPointLama());
//                }else{
//                    payroll.setGolonganIdLama("-");
//                }
//
//                payroll.setStatusKeluarga(payrollRapelLoop.getStatusKeluarga() + "/" + payrollRapelLoop.getJumlahAnak());
//
//                payroll.setTunjanganUmkLama(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifUmkNilaiLama(), "###,###"));
//                payroll.setTunjanganUmkLamaNilai(payrollRapelLoop.getInsentifUmkNilaiLama());
//                payroll.setTunjanganStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganStrukturalLamaNilai(payrollRapelLoop.getInsentifStrukturalNilaiLama());
//                payroll.setTunjanganJabatanStrukturalLama(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifJabStrukturalNilaiLama(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalLamaNilai(payrollRapelLoop.getInsentifJabStrukturalNilaiLama());
//                payroll.setTunjanganStrategisLama(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifStrategisNilaiLama(), "###,###"));
//                payroll.setTunjanganStrategisLamaNilai(payrollRapelLoop.getInsentifStrategisNilaiLama());
//                payroll.setGajiGolonganLama(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifGajiGolonganNilaiLama(), "###,###"));
//                payroll.setGajiGolonganLamaNilai(payrollRapelLoop.getInsentifGajiGolonganNilaiLama());
//                payroll.setTunjanganPeralihanLama(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifPeralihanNilaiLama(), "###,###"));
//                payroll.setTunjanganPeralihanLamaNilai(payrollRapelLoop.getInsentifPeralihanNilaiLama());
//
//                payroll.setTunjanganUmkBaru(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifUmkNilaiBaru(), "###,###"));
//                payroll.setTunjanganUmkBaruNilai(payrollRapelLoop.getInsentifUmkNilaiBaru());
//                payroll.setTunjanganStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganStrukturalBaruNilai(payrollRapelLoop.getInsentifStrukturalNilaiBaru());
//                payroll.setTunjanganJabatanStrukturalBaru(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifJabStrukturalNilaiBaru(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalBaruNilai(payrollRapelLoop.getInsentifJabStrukturalNilaiBaru());
//                payroll.setTunjanganStrategisBaru(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifStrategisNilaiBaru(), "###,###"));
//                payroll.setTunjanganStrategisBaruNilai(payrollRapelLoop.getInsentifStrategisNilaiBaru());
//                payroll.setGajiGolonganBaru(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifGajiGolonganNilaiBaru(), "###,###"));
//                payroll.setGajiGolonganBaruNilai(payrollRapelLoop.getInsentifGajiGolonganNilaiBaru());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifPeralihanNilaiBaru(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(payrollRapelLoop.getInsentifPeralihanNilaiBaru());
//
//                payroll.setBrutoInsentifLama(CommonUtil.numbericFormat(payrollRapelLoop.getBrutoInsentifLamaNilai(), "###,###"));
//                payroll.setBrutoInsentifLamaNilai(payrollRapelLoop.getBrutoInsentifLamaNilai());
//                payroll.setTotalA(CommonUtil.numbericFormat(payrollRapelLoop.getBrutoInsentifNilai(), "###,###"));
//                payroll.setTotalANilai(payrollRapelLoop.getBrutoInsentifNilai());
//                payroll.setPotonganInsentifIndividu(CommonUtil.numbericFormat(payrollRapelLoop.getPotonganInsentifIndividuNilai(), "###,###"));
//                payroll.setPotonganInsentifIndividuNilai(payrollRapelLoop.getPotonganInsentifIndividuNilai());
//                payroll.setPotonganInsentifIndividuLama(CommonUtil.numbericFormat(payrollRapelLoop.getPotonganInsentifIndividuLamaNilai(), "###,###"));
//                payroll.setPotonganInsentifIndividuLamaNilai(payrollRapelLoop.getPotonganInsentifIndividuLamaNilai());
//
//                payroll.setPotonganInsentif(payrollRapelLoop.getPotonganInsentifNilai() + "");
//                payroll.setPotonganInsentifNilai(payrollRapelLoop.getPotonganInsentifNilai());
//                payroll.setMasaKerja(payrollRapelLoop.getMasaKerja() + "");
//                payroll.setSmkStandart(payrollRapelLoop.getSmkStandart());
//                payroll.setSmkStandartNilai(payrollRapelLoop.getSmkStandartNilai());
//                payroll.setSmkHuruf(payrollRapelLoop.getSmkHuruf());
//                payroll.setSmkAngka(payrollRapelLoop.getSmkAngkaNilai() + "");
//                payroll.setSmkAngkaNilai(payrollRapelLoop.getSmkAngkaNilai());
//
//                payroll.setInsentifDiterimaLama(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifYangDiterimaLamaNilai(), "###,###"));
//                payroll.setInsentifDiterimaLamaNilai(payrollRapelLoop.getInsentifYangDiterimaLamaNilai());
//                payroll.setInsentifDiterima(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifYangDiterimaBaruNilai(), "###,###"));
//                payroll.setInsentifDiterimaNilai(payrollRapelLoop.getInsentifYangDiterimaBaruNilai());
//                payroll.setTotalInsentif(CommonUtil.numbericFormat(payrollRapelLoop.getInsentifYangDiterimaSelisihNilai(), "###,###"));
//                payroll.setTotalInsentifNilai(payrollRapelLoop.getInsentifYangDiterimaSelisihNilai());
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalUmkLama = new BigDecimal(0);
//        BigDecimal totalStrukturalLama = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal totalStrategisLama = new BigDecimal(0);
//        BigDecimal totalGajiGolonganLama = new BigDecimal(0);
//        BigDecimal totalPeralihanLama = new BigDecimal(0);
//
//        BigDecimal totalUmkBaru = new BigDecimal(0);
//        BigDecimal totalStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal totalStrategisBaru = new BigDecimal(0);
//        BigDecimal totalGajiGolonganBaru = new BigDecimal(0);
//        BigDecimal totalPeralihanBaru = new BigDecimal(0);
//
//        BigDecimal totalBrutoInsentifLama = new BigDecimal(0);
//        BigDecimal totalBrutoInsentifBaru = new BigDecimal(0);
//        BigDecimal totalInsentifIndividuLama = new BigDecimal(0);
//        BigDecimal totalInsentifIndividu = new BigDecimal(0);
//        BigDecimal totalInsentifDiterimaLama = new BigDecimal(0);
//        BigDecimal totalInsentifDiterimaBaru = new BigDecimal(0);
//        BigDecimal totalInsentifDiterimaSelisih = new BigDecimal(0);
//
//        BigDecimal grandUmkLama = new BigDecimal(0);
//        BigDecimal grandStrukturalLama = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalLama = new BigDecimal(0);
//        BigDecimal grandStrategisLama = new BigDecimal(0);
//        BigDecimal grandGajiGolonganLama = new BigDecimal(0);
//        BigDecimal grandPeralihanLama = new BigDecimal(0);
//
//        BigDecimal grandUmkBaru = new BigDecimal(0);
//        BigDecimal grandStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandJabatanStrukturalBaru = new BigDecimal(0);
//        BigDecimal grandStrategisBaru = new BigDecimal(0);
//        BigDecimal grandGajiGolonganBaru = new BigDecimal(0);
//        BigDecimal grandPeralihanBaru = new BigDecimal(0);
//
//        BigDecimal grandTotalBrutoInsentifLama = new BigDecimal(0);
//        BigDecimal grandTotalBrutoInsentifBaru = new BigDecimal(0);
//        BigDecimal grandTotalInsentifIndividuLama = new BigDecimal(0);
//        BigDecimal grandTotalInsentifIndividu = new BigDecimal(0);
//        BigDecimal grandTotalInsentifDiterimaLama = new BigDecimal(0);
//        BigDecimal grandTotalInsentifDiterimaBaru = new BigDecimal(0);
//        BigDecimal grandTotalInsentifDiterimaSelisih = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollRapelInsentif(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//                totalRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//                totalRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//                totalRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//                totalRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//                totalRekap.setTunjanganPeralihanLamaNilai(totalPeralihanLama);
//
//                totalRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//                totalRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//                totalRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//                totalRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//                totalRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihanBaru);
//
//                totalRekap.setTotalANilai(totalBrutoInsentifBaru);
//                totalRekap.setPotonganInsentifIndividuLamaNilai(totalInsentifIndividuLama);
//                totalRekap.setPotonganInsentifIndividuNilai(totalInsentifIndividu);
//                totalRekap.setInsentifDiterimaLamaNilai(totalInsentifDiterimaLama);
//                totalRekap.setInsentifDiterimaNilai(totalInsentifDiterimaBaru);
//                totalRekap.setTotalInsentifNilai(totalInsentifDiterimaSelisih);
//                totalRekap.setBrutoInsentifLamaNilai(totalBrutoInsentifLama);
//
//                hasilPayrollList.addAll(headerPayrollTotalRapelInsentif(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalUmkLama, "###,###"),
//                        CommonUtil.numbericFormat(totalStrukturalLama, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStrukturalLama, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategisLama, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolonganLama, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihanLama, "###,###"),
//                        CommonUtil.numbericFormat(totalUmkBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalStrukturalBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStrukturalBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategisBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolonganBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihanBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalBrutoInsentifLama, "###,###"),
//                        CommonUtil.numbericFormat(totalBrutoInsentifBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentifIndividuLama, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentifIndividu, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentifDiterimaLama, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentifDiterimaBaru, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentifDiterimaSelisih, "###,###")
//                ));
//                totalUmkLama = new BigDecimal(0);
//                totalStrukturalLama = new BigDecimal(0);
//                totalJabatanStrukturalLama = new BigDecimal(0);
//                totalStrategisLama = new BigDecimal(0);
//                totalGajiGolonganLama = new BigDecimal(0);
//                totalPeralihanLama = new BigDecimal(0);
//
//                totalUmkBaru = new BigDecimal(0);
//                totalStrukturalBaru = new BigDecimal(0);
//                totalJabatanStrukturalBaru = new BigDecimal(0);
//                totalStrategisBaru = new BigDecimal(0);
//                totalGajiGolonganBaru = new BigDecimal(0);
//                totalPeralihanBaru = new BigDecimal(0);
//
//                totalBrutoInsentifLama = new BigDecimal(0);
//                totalBrutoInsentifBaru = new BigDecimal(0);
//                totalInsentifIndividuLama = new BigDecimal(0);
//                totalInsentifIndividu = new BigDecimal(0);
//                totalInsentifDiterimaLama = new BigDecimal(0);
//                totalInsentifDiterimaBaru = new BigDecimal(0);
//                totalInsentifDiterimaSelisih = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalUmkLama = totalUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        totalStrukturalLama = totalStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        totalJabatanStrukturalLama = totalJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        totalStrategisLama = totalStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        totalGajiGolonganLama = totalGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//                        totalPeralihanLama = totalPeralihanLama.add(payroll.getTunjanganPeralihanLamaNilai());
//
//                        totalUmkBaru = totalUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        totalStrukturalBaru = totalStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        totalJabatanStrukturalBaru = totalJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        totalStrategisBaru = totalStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        totalGajiGolonganBaru = totalGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//                        totalPeralihanBaru = totalPeralihanBaru.add(payroll.getTunjanganPeralihanNilai());
//
//                        totalBrutoInsentifLama = totalBrutoInsentifLama.add(payroll.getBrutoInsentifLamaNilai());
//                        totalBrutoInsentifBaru = totalBrutoInsentifBaru.add(payroll.getTotalANilai());
//                        totalInsentifIndividuLama = totalInsentifIndividuLama.add(payroll.getPotonganInsentifIndividuLamaNilai());
//                        totalInsentifIndividu = totalInsentifIndividu.add(payroll.getPotonganInsentifIndividuNilai());
//                        totalInsentifDiterimaLama = totalInsentifDiterimaLama.add(payroll.getInsentifDiterimaLamaNilai());
//                        totalInsentifDiterimaBaru = totalInsentifDiterimaBaru.add(payroll.getInsentifDiterimaNilai());
//                        totalInsentifDiterimaSelisih = totalInsentifDiterimaSelisih.add(payroll.getTotalInsentifNilai());
//
//                        grandUmkLama = grandUmkLama.add(payroll.getTunjanganUmkLamaNilai());
//                        grandStrukturalLama = grandStrukturalLama.add(payroll.getTunjanganStrukturalLamaNilai());
//                        grandJabatanStrukturalLama = grandJabatanStrukturalLama.add(payroll.getTunjanganJabatanStrukturalLamaNilai());
//                        grandStrategisLama = grandStrategisLama.add(payroll.getTunjanganStrategisLamaNilai());
//                        grandGajiGolonganLama = grandGajiGolonganLama.add(payroll.getGajiGolonganLamaNilai());
//                        grandPeralihanLama  = grandPeralihanLama.add(payroll.getTunjanganPeralihanLamaNilai());
//
//                        grandUmkBaru = grandUmkBaru.add(payroll.getTunjanganUmkBaruNilai());
//                        grandStrukturalBaru = grandStrukturalBaru.add(payroll.getTunjanganStrukturalBaruNilai());
//                        grandJabatanStrukturalBaru = grandJabatanStrukturalBaru.add(payroll.getTunjanganJabatanStrukturalBaruNilai());
//                        grandStrategisBaru = grandStrategisBaru.add(payroll.getTunjanganStrategisBaruNilai());
//                        grandGajiGolonganBaru = grandGajiGolonganBaru.add(payroll.getGajiGolonganBaruNilai());
//                        grandPeralihanBaru  = grandPeralihanBaru.add(payroll.getTunjanganPeralihanNilai());
//
//                        grandTotalBrutoInsentifLama = grandTotalBrutoInsentifLama.add(payroll.getBrutoInsentifLamaNilai());
//                        grandTotalBrutoInsentifBaru = grandTotalBrutoInsentifBaru.add(payroll.getTotalANilai());
//                        grandTotalInsentifIndividuLama = grandTotalInsentifIndividuLama.add(payroll.getPotonganInsentifIndividuLamaNilai());
//                        grandTotalInsentifIndividu = grandTotalInsentifIndividu.add(payroll.getPotonganInsentifIndividuNilai());
//                        grandTotalInsentifDiterimaLama = grandTotalInsentifDiterimaLama.add(payroll.getInsentifDiterimaLamaNilai());
//                        grandTotalInsentifDiterimaBaru = grandTotalInsentifDiterimaBaru.add(payroll.getInsentifDiterimaNilai());
//                        grandTotalInsentifDiterimaSelisih = grandTotalInsentifDiterimaSelisih.add(payroll.getTotalInsentifNilai());
//
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//
//        subRekap.setTunjanganUmkLamaNilai(totalUmkLama);
//        subRekap.setTunjanganStrukturalLamaNilai(totalStrukturalLama);
//        subRekap.setTunjanganJabatanStrukturalLamaNilai(totalJabatanStrukturalLama);
//        subRekap.setTunjanganStrategisLamaNilai(totalStrategisLama);
//        subRekap.setGajiGolonganLamaNilai(totalGajiGolonganLama);
//        subRekap.setTunjanganPeralihanLamaNilai(totalPeralihanLama);
//
//        subRekap.setTunjanganUmkBaruNilai(totalUmkBaru);
//        subRekap.setTunjanganStrukturalBaruNilai(totalStrukturalBaru);
//        subRekap.setTunjanganJabatanStrukturalBaruNilai(totalJabatanStrukturalBaru);
//        subRekap.setTunjanganStrategisBaruNilai(totalStrategisBaru);
//        subRekap.setGajiGolonganBaruNilai(totalGajiGolonganBaru);
//        subRekap.setTunjanganPeralihanNilai(totalPeralihanBaru);
//
//        subRekap.setTotalANilai(totalBrutoInsentifBaru);
//        subRekap.setPotonganInsentifIndividuLamaNilai(totalInsentifIndividuLama);
//        subRekap.setPotonganInsentifIndividuNilai(totalInsentifIndividu);
//        subRekap.setInsentifDiterimaLamaNilai(totalInsentifDiterimaLama);
//        subRekap.setInsentifDiterimaNilai(totalInsentifDiterimaBaru);
//        subRekap.setTotalInsentifNilai(totalInsentifDiterimaSelisih);
//        subRekap.setBrutoInsentifLamaNilai(totalBrutoInsentifLama);
//
//        totalRekap.setTunjanganUmkLamaNilai(grandUmkLama);
//        totalRekap.setTunjanganStrukturalLamaNilai(grandStrukturalLama);
//        totalRekap.setTunjanganJabatanStrukturalLamaNilai(grandJabatanStrukturalLama);
//        totalRekap.setTunjanganStrategisLamaNilai(grandStrategisLama);
//        totalRekap.setGajiGolonganLamaNilai(grandGajiGolonganLama);
//        totalRekap.setTunjanganPeralihanLamaNilai(grandPeralihanLama);
//
//        totalRekap.setTunjanganUmkBaruNilai(grandUmkBaru);
//        totalRekap.setTunjanganStrukturalBaruNilai(grandStrukturalBaru);
//        totalRekap.setTunjanganJabatanStrukturalBaruNilai(grandJabatanStrukturalBaru);
//        totalRekap.setTunjanganStrategisBaruNilai(grandStrategisBaru);
//        totalRekap.setGajiGolonganBaruNilai(grandGajiGolonganBaru);
//        totalRekap.setTunjanganPeralihanNilai(grandPeralihanBaru);
//
//        totalRekap.setTotalANilai(grandTotalBrutoInsentifBaru);
//        totalRekap.setPotonganInsentifIndividuLamaNilai(grandTotalInsentifIndividuLama);
//        totalRekap.setPotonganInsentifIndividuNilai(grandTotalInsentifIndividu);
//        totalRekap.setInsentifDiterimaLamaNilai(grandTotalInsentifDiterimaLama);
//        totalRekap.setInsentifDiterimaNilai(grandTotalInsentifDiterimaBaru);
//        totalRekap.setTotalInsentifNilai(grandTotalInsentifDiterimaSelisih);
//        totalRekap.setBrutoInsentifLamaNilai(grandTotalBrutoInsentifLama);
//
//        hasilPayrollList.addAll(payrollTotalRapelInsentif(
//                CommonUtil.numbericFormat(totalUmkLama, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(totalStrategisLama, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganLama, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihanLama, "###,###"),
//                CommonUtil.numbericFormat(totalUmkBaru, "###,###"),
//                CommonUtil.numbericFormat(totalStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(totalStrategisBaru, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolonganBaru, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihanBaru, "###,###"),
//                CommonUtil.numbericFormat(totalBrutoInsentifLama, "###,###"),
//                CommonUtil.numbericFormat(totalBrutoInsentifBaru, "###,###"),
//                CommonUtil.numbericFormat(totalInsentifIndividuLama, "###,###"),
//                CommonUtil.numbericFormat(totalInsentifIndividu, "###,###"),
//                CommonUtil.numbericFormat(totalInsentifDiterimaLama, "###,###"),
//                CommonUtil.numbericFormat(totalInsentifDiterimaBaru, "###,###"),
//                CommonUtil.numbericFormat(totalInsentifDiterimaSelisih, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandUmkLama, "###,###"),
//                CommonUtil.numbericFormat(grandStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStrukturalLama, "###,###"),
//                CommonUtil.numbericFormat(grandStrategisLama, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolonganLama, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihanLama, "###,###"),
//                CommonUtil.numbericFormat(grandUmkBaru, "###,###"),
//                CommonUtil.numbericFormat(grandStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStrukturalBaru, "###,###"),
//                CommonUtil.numbericFormat(grandStrategisBaru, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolonganBaru, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihanBaru, "###,###"),
//                CommonUtil.numbericFormat(grandTotalBrutoInsentifLama, "###,###"),
//                CommonUtil.numbericFormat(grandTotalBrutoInsentifBaru, "###,###"),
//                CommonUtil.numbericFormat(grandTotalInsentifIndividuLama, "###,###"),
//                CommonUtil.numbericFormat(grandTotalInsentifIndividu, "###,###"),
//                CommonUtil.numbericFormat(grandTotalInsentifDiterimaLama, "###,###"),
//                CommonUtil.numbericFormat(grandTotalInsentifDiterimaBaru, "###,###"),
//                CommonUtil.numbericFormat(grandTotalInsentifDiterimaSelisih, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollThrSys(String bulan1, String tahun1, String unit, String status) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagianThr(imPositionBagianEntity.getBagianId(), unit, status, bulan1, tahun1);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollThr(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                String tmp = i + " - " + itPayrollEntity.getNip();
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//
//                if(!"".equalsIgnoreCase(itPayrollEntity.getGolonganName()) && itPayrollEntity.getGolonganName() != null){
//                    golonganId = itPayrollEntity.getGolonganName().split(" ");
//                    payroll.setGolonganId(golonganId[1] + "/" + itPayrollEntity.getPoint());
//                }else{
//                    payroll.setGolonganId("-");
//                }
//                payroll.setStatusKeluarga(itPayrollEntity.getStatusKeluarga() + "/" + itPayrollEntity.getJumlahAnak());
//                payroll.setBulan(itPayrollEntity.getBulan());
//
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPeralihan(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganUmk(), "###,###"));
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStruktural(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStrategis(), "###,###"));
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//
//                payroll.setTunjanganPph(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPph(), "###,###"));
//                payroll.setTunjanganPphNilai(itPayrollEntity.getTunjanganPph());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity.getGajiGolongan(), "###,###"));
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTotalThr(CommonUtil.numbericFormat(itPayrollEntity.getTotalThr(), "###,###"));
//                payroll.setTotalThrNilai(itPayrollEntity.getTotalThr());
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//                payroll.setPphGaji(CommonUtil.numbericFormat(itPayrollEntity.getPphGaji(), "###,###"));
//                payroll.setPphGajiNilai(itPayrollEntity.getPphGaji());
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalStrategis = new BigDecimal(0);
//
//        BigDecimal totalPeralihan = new BigDecimal(0);
//        BigDecimal totalTunjanganPph = new BigDecimal(0);
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//        BigDecimal totalThr = new BigDecimal(0);
//        BigDecimal totalThrBersih = new BigDecimal(0);
//        BigDecimal totalPphGaji = new BigDecimal(0);
//        BigDecimal totalA = new BigDecimal(0);
//
//        BigDecimal grandPeralihan = new BigDecimal(0);
//        BigDecimal grandUmk = new BigDecimal(0);
//        BigDecimal grandStruktural = new BigDecimal(0);
//        BigDecimal grandJabatanStruktural = new BigDecimal(0);
//        BigDecimal grandStrategis = new BigDecimal(0);
//
//        BigDecimal grandTunjanganPph = new BigDecimal(0);
//        BigDecimal grandGajiGolongan = new BigDecimal(0);
//        BigDecimal grandThr = new BigDecimal(0);
//        BigDecimal grandThrBersih = new BigDecimal(0);
//        BigDecimal grandPphGaji = new BigDecimal(0);
//        BigDecimal grandTotalA = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollThr(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//                totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//                totalRekap.setTunjanganStrategisNilai(totalStrategis);
//                totalRekap.setTunjanganPphNilai(totalTunjanganPph);
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//                totalRekap.setTotalThrNilai(totalThr);
//                totalRekap.setTotalGajiBersihNilai(totalThrBersih);
//                totalRekap.setPphGajiNilai(totalPphGaji);
//                totalRekap.setTotalANilai(totalA);
//
//                hasilPayrollList.addAll(headerPayrollTotalThr(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalTunjanganPph, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalThr, "###,###"),
//                        CommonUtil.numbericFormat(totalThrBersih, "###,###"),
//                        CommonUtil.numbericFormat(totalPphGaji, "###,###"),
//                        CommonUtil.numbericFormat(totalA, "###,###")
//                ));
//                totalPeralihan = new BigDecimal(0);
//                totalUmk = new BigDecimal(0);
//                totalStruktural = new BigDecimal(0);
//                totalJabatanStruktural = new BigDecimal(0);
//                totalStrategis = new BigDecimal(0);
//                totalTunjanganPph = new BigDecimal(0);
//                totalGajiGolongan = new BigDecimal(0);
//                totalThr = new BigDecimal(0);
//                totalThrBersih = new BigDecimal(0);
//                totalPphGaji = new BigDecimal(0);
//                totalA = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalStrategis = totalStrategis.add(payroll.getTunjanganStrategisNilai());
//                        totalTunjanganPph = totalTunjanganPph.add(payroll.getTunjanganPphNilai());
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        totalThr = totalThr.add(payroll.getTotalThrNilai());
//                        totalThrBersih = totalThrBersih.add(payroll.getTotalGajiBersihNilai());
//                        totalPphGaji = totalPphGaji.add(payroll.getPphGajiNilai());
//                        totalA = totalA.add(payroll.getTotalANilai());
//
//                        grandPeralihan= grandPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        grandUmk = grandUmk.add(payroll.getTunjanganUmkNilai());
//                        grandStruktural = grandStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        grandJabatanStruktural = grandJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        grandStrategis = grandStrategis.add(payroll.getTunjanganStrategisNilai());
//                        grandTunjanganPph = grandTunjanganPph.add(payroll.getTunjanganPphNilai());
//                        grandGajiGolongan = grandGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        grandThr = grandThr.add(payroll.getTotalThrNilai());
//                        grandThrBersih = grandThrBersih.add(payroll.getTotalGajiBersihNilai());
//                        grandPphGaji = grandPphGaji.add(payroll.getPphGajiNilai());
//                        grandTotalA = grandTotalA.add(payroll.getTotalANilai());
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//        subRekap.setTunjanganPeralihanNilai(totalPeralihan);
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setTunjanganStrukturalNilai(totalStruktural);
//        subRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        subRekap.setTunjanganStrategisNilai(totalStrategis);
//
//        subRekap.setTunjanganPphNilai(totalTunjanganPph);
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//        subRekap.setTotalThrNilai(totalThr);
//        subRekap.setTotalGajiBersihNilai(totalThrBersih);
//        subRekap.setPphGajiNilai(totalPphGaji);
//        subRekap.setTotalANilai(totalA);
//
//        totalRekap.setTunjanganPeralihanNilai(grandPeralihan);
//        totalRekap.setTunjanganUmkNilai(grandUmk);
//        totalRekap.setTunjanganStrukturalNilai(grandStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(grandJabatanStruktural);
//        totalRekap.setTunjanganStrategisNilai(grandStrategis);
//        totalRekap.setTunjanganPphNilai(grandTunjanganPph);
//        totalRekap.setGajiGolonganNilai(grandGajiGolongan);
//        totalRekap.setTotalThrNilai(grandThr);
//        totalRekap.setTotalGajiBersihNilai(grandThrBersih);
//        totalRekap.setPphGajiNilai(grandPphGaji);
//        totalRekap.setTotalANilai(grandTotalA);
//
//        hasilPayrollList.addAll(payrollTotalThr(
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalTunjanganPph, "###,###"),
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalThr, "###,###"),
//                CommonUtil.numbericFormat(totalThrBersih, "###,###"),
//                CommonUtil.numbericFormat(totalPphGaji, "###,###"),
//                CommonUtil.numbericFormat(totalA, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandTunjanganPph, "###,###"),
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandThr, "###,###"),
//                CommonUtil.numbericFormat(grandThrBersih, "###,###"),
//                CommonUtil.numbericFormat(grandPphGaji, "###,###"),
//                CommonUtil.numbericFormat(grandTotalA, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollJasprodSys(String bulan1, String tahun1, String unit, String status) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian();
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagianJasprod(imPositionBagianEntity.getBagianId(), unit, status, bulan1, tahun1);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollJasprod(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                String tmp = i + " - " + itPayrollEntity.getNip();
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity.getGajiGolongan(), "###,###"));
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganUmk(), "###,###"));
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStruktural(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPeralihan(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStrategis(), "###,###"));
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                //gaji bruto
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//                payroll.setMasaKerja(itPayrollEntity.getMasaKerja() + "");
//                payroll.setGajiMasaKerja(CommonUtil.numbericFormat(itPayrollEntity.getGajiMasaKerja(), "###,###"));
//                payroll.setGajiMasaKerjaNilai(itPayrollEntity.getGajiMasaKerja());
//                payroll.setFaktorKali(itPayrollEntity.getFaktorKali() + "");
//                payroll.setFaktorKaliNilai(itPayrollEntity.getFaktorKali());
//
//                payroll.setPersenSmkNilai(itPayrollEntity.getPersenSmk());
//                payroll.setPersenSmk(itPayrollEntity.getPersenSmk() + "");
//                payroll.setNilaiSmk(itPayrollEntity.getNilaiSmk() + "");
//                payroll.setNilaiSmkNilai(itPayrollEntity.getNilaiSmk());
//                // nilai perhitungan
//                payroll.setPerhitungan(CommonUtil.numbericFormat(itPayrollEntity.getGajiMasaKerjaFaktorSmk(), "###,###"));
//                payroll.setPerhitunganNilai(itPayrollEntity.getGajiMasaKerjaFaktorSmk());
//                // Gaji X Faktor Normal
//                payroll.setGajiXfaktorNormal(CommonUtil.numbericFormat(itPayrollEntity.getGajiMasaKerjaFaktor(), "###,###"));
//                payroll.setGajiXfaktorNormalNilai(itPayrollEntity.getGajiMasaKerjaFaktor());
//
//                payroll.setTambahan(CommonUtil.numbericFormat(itPayrollEntity.getTambahan(), "###,###"));
//                payroll.setTambahanNilai(itPayrollEntity.getTambahan());
//
//                payroll.setPphJasprod(CommonUtil.numbericFormat(itPayrollEntity.getPphGaji(), "###,###"));
//                payroll.setPphJasprodNilai(itPayrollEntity.getPphGaji());
//                payroll.setNettoJasprod(CommonUtil.numbericFormat(itPayrollEntity.getTotalJasProd(), "###,###"));
//                payroll.setNettoJasprodNilai(itPayrollEntity.getTotalJasProd());
//                payroll.setBrutoJasprod(CommonUtil.numbericFormat(itPayrollEntity.getBrutoJasprod(), "###,###"));
//                payroll.setBrutoJasprodNilai(itPayrollEntity.getBrutoJasprod());
//
//                payroll.setKoperasi(CommonUtil.numbericFormat(itPayrollEntity.getKoperasi(), "###,###"));
//                payroll.setKoperasiNilai(itPayrollEntity.getKoperasi());
//                payroll.setDansos(CommonUtil.numbericFormat(itPayrollEntity.getDansos(), "###,###"));
//                payroll.setDansosNilai(itPayrollEntity.getDansos());
//                payroll.setLainLain(CommonUtil.numbericFormat(itPayrollEntity.getLainLain(), "###,###"));
//                payroll.setLainLainNilai(itPayrollEntity.getLainLain());
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalPeralihan = new BigDecimal(0);
//        BigDecimal totalStrategis = new BigDecimal(0);
//
//        BigDecimal totalGajiBruto = new BigDecimal(0);
//        BigDecimal totalGajiXmasaKerja = new BigDecimal(0);
//        BigDecimal totalPersenSmk = new BigDecimal(0);
//        BigDecimal totalNilaiSmk = new BigDecimal(0);
//        BigDecimal totalPerhitungan = new BigDecimal(0);
//
//        BigDecimal totalGajiXfaktorNormal = new BigDecimal(0);
//        BigDecimal totalTambahan = new BigDecimal(0);
//        BigDecimal totalBruto = new BigDecimal(0);
//        BigDecimal totalPajak = new BigDecimal(0);
//        BigDecimal totalBersih = new BigDecimal(0);
//
//        BigDecimal totalKoperasi = new BigDecimal(0);
//        BigDecimal totalDansos = new BigDecimal(0);
//        BigDecimal totalLain = new BigDecimal(0);
//
//        BigDecimal grandGajiGolongan = new BigDecimal(0);
//        BigDecimal grandUmk = new BigDecimal(0);
//        BigDecimal grandStruktural = new BigDecimal(0);
//        BigDecimal grandJabatanStruktural = new BigDecimal(0);
//        BigDecimal grandPeralihan = new BigDecimal(0);
//        BigDecimal grandStrategis = new BigDecimal(0);
//
//        BigDecimal grandGajiBruto = new BigDecimal(0);
//        BigDecimal grandGajiXmasaKerja = new BigDecimal(0);
//        BigDecimal grandPersenSmk = new BigDecimal(0);
//        BigDecimal grandNilaiSmk = new BigDecimal(0);
//        BigDecimal grandPerhitungan = new BigDecimal(0);
//
//        BigDecimal grandGajiXfaktorNormal = new BigDecimal(0);
//        BigDecimal grandTambahan = new BigDecimal(0);
//        BigDecimal grandBruto = new BigDecimal(0);
//        BigDecimal grandPajak = new BigDecimal(0);
//        BigDecimal grandBersih = new BigDecimal(0);
//
//        BigDecimal grandKoperasi = new BigDecimal(0);
//        BigDecimal grandDansos = new BigDecimal(0);
//        BigDecimal grandLain = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollJasprod(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//                totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//                totalRekap.setTunjanganStrategisNilai(totalStrategis);
//
//                totalRekap.setTotalANilai(totalGajiBruto);
//                totalRekap.setGajiMasaKerjaNilai(totalGajiXmasaKerja);
//                totalRekap.setPersenSmkNilai(totalPersenSmk);
//                totalRekap.setNilaiSmkNilai(totalNilaiSmk);
//                totalRekap.setPerhitunganNilai(totalPerhitungan);
//
//                totalRekap.setGajiXfaktorNormalNilai(totalGajiXfaktorNormal);
//                totalRekap.setTambahanNilai(totalTambahan);
//                totalRekap.setBrutoJasprodNilai(totalBruto);
//                totalRekap.setPphJasprodNilai(totalPajak);
//                totalRekap.setNettoJasprodNilai(totalBersih);
//
//                totalRekap.setKoperasiNilai(totalKoperasi);
//                totalRekap.setDansosNilai(totalDansos);
//                totalRekap.setLainLainNilai(totalLain);
//
//                hasilPayrollList.addAll(headerPayrollTotalJasprod(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiBruto, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiXmasaKerja, "###,###"),
//                        totalPersenSmk + "",
//                        totalNilaiSmk + "",
//                        CommonUtil.numbericFormat(totalPerhitungan, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiXfaktorNormal, "###,###"),
//                        CommonUtil.numbericFormat(totalTambahan, "###,###"),
//                        CommonUtil.numbericFormat(totalBruto, "###,###"),
//                        CommonUtil.numbericFormat(totalPajak, "###,###"),
//                        CommonUtil.numbericFormat(totalBersih, "###,###"),
//                        CommonUtil.numbericFormat(totalKoperasi, "###,###"),
//                        CommonUtil.numbericFormat(totalDansos, "###,###"),
//                        CommonUtil.numbericFormat(totalLain, "###,###")
//                ));
//                totalGajiGolongan = new BigDecimal(0);
//                totalUmk = new BigDecimal(0);
//                totalStruktural = new BigDecimal(0);
//                totalJabatanStruktural = new BigDecimal(0);
//                totalPeralihan = new BigDecimal(0);
//                totalStrategis = new BigDecimal(0);
//
//                totalGajiBruto = new BigDecimal(0);
//                totalGajiXmasaKerja = new BigDecimal(0);
//                totalPersenSmk = new BigDecimal(0);
//                totalNilaiSmk = new BigDecimal(0);
//                totalPerhitungan = new BigDecimal(0);
//
//                totalGajiXfaktorNormal = new BigDecimal(0);
//                totalTambahan = new BigDecimal(0);
//                totalBruto = new BigDecimal(0);
//                totalPajak = new BigDecimal(0);
//                totalBersih = new BigDecimal(0);
//                totalKoperasi = new BigDecimal(0);
//                totalDansos = new BigDecimal(0);
//                totalLain = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        totalStrategis = totalStrategis.add(payroll.getTunjanganStrategisNilai());
//
//                        totalGajiBruto = totalGajiBruto.add(payroll.getTotalANilai());
//                        totalGajiXmasaKerja = totalGajiXmasaKerja.add(payroll.getGajiMasaKerjaNilai());
//                        totalPersenSmk = totalPersenSmk.add(payroll.getPersenSmkNilai());
//                        totalNilaiSmk = totalNilaiSmk.add(payroll.getNilaiSmkNilai());
//                        totalPerhitungan = totalPerhitungan.add(payroll.getPerhitunganNilai());
//
//                        totalGajiXfaktorNormal = totalGajiXfaktorNormal.add(payroll.getGajiXfaktorNormalNilai());
//                        totalTambahan = totalTambahan.add(payroll.getTambahanNilai());
//                        totalBruto = totalBruto.add(payroll.getBrutoJasprodNilai());
//                        totalPajak = totalPajak.add(payroll.getPphJasprodNilai());
//                        totalBersih = totalBersih.add(payroll.getNettoJasprodNilai());
//                        totalKoperasi = totalKoperasi.add(payroll.getKoperasiNilai());
//                        totalDansos = totalDansos.add(payroll.getDansosNilai());
//                        totalLain = totalLain.add(payroll.getLainLainNilai());
//
//                        grandGajiGolongan = grandGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        grandUmk = grandUmk.add(payroll.getTunjanganUmkNilai());
//                        grandStruktural = grandStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        grandJabatanStruktural = grandJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        grandPeralihan= grandPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        grandStrategis = grandStrategis.add(payroll.getTunjanganStrategisNilai());
//
//                        grandGajiBruto = grandGajiBruto.add(payroll.getTotalANilai());
//                        grandGajiXmasaKerja = grandGajiXmasaKerja.add(payroll.getGajiMasaKerjaNilai());
//                        grandPersenSmk = grandPersenSmk.add(payroll.getPersenSmkNilai());
//                        grandNilaiSmk = grandNilaiSmk.add(payroll.getNilaiSmkNilai());
//                        grandPerhitungan = grandPerhitungan.add(payroll.getPerhitunganNilai());
//
//                        grandGajiXfaktorNormal = grandGajiXfaktorNormal.add(payroll.getGajiXfaktorNormalNilai());
//                        grandTambahan = grandTambahan.add(payroll.getTambahanNilai());
//                        grandBruto = grandBruto.add(payroll.getBrutoJasprodNilai());
//                        grandPajak = grandPajak.add(payroll.getPphJasprodNilai());
//                        grandBersih = grandBersih.add(payroll.getNettoJasprodNilai());
//                        grandKoperasi = grandKoperasi.add(payroll.getKoperasiNilai());
//                        grandDansos = grandDansos.add(payroll.getDansosNilai());
//                        grandLain = grandLain.add(payroll.getLainLainNilai());
//
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setTunjanganStrukturalNilai(totalStruktural);
//        subRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        subRekap.setTunjanganPeralihanNilai(totalPeralihan);
//        subRekap.setTunjanganStrategisNilai(totalStrategis);
//
//        subRekap.setTotalANilai(totalGajiBruto);
//        subRekap.setGajiMasaKerjaNilai(totalGajiXmasaKerja);
//        subRekap.setPersenSmkNilai(totalPersenSmk);
//        subRekap.setNilaiSmkNilai(totalNilaiSmk);
//        subRekap.setPerhitunganNilai(totalPerhitungan);
//
//        subRekap.setGajiXfaktorNormalNilai(totalGajiXfaktorNormal);
//        subRekap.setTambahanNilai(totalTambahan);
//        subRekap.setBrutoJasprodNilai(totalBruto);
//        subRekap.setPphJasprodNilai(totalPajak);
//        subRekap.setNettoJasprodNilai(totalBersih);
//        subRekap.setKoperasiNilai(totalKoperasi);
//        subRekap.setDansosNilai(totalDansos);
//        subRekap.setLainLainNilai(totalLain);
//
//
//        totalRekap.setGajiGolonganNilai(grandGajiGolongan);
//        totalRekap.setTunjanganUmkNilai(grandUmk);
//        totalRekap.setTunjanganStrukturalNilai(grandStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(grandJabatanStruktural);
//        totalRekap.setTunjanganPeralihanNilai(grandPeralihan);
//        totalRekap.setTunjanganStrategisNilai(grandStrategis);
//        totalRekap.setTotalANilai(grandGajiBruto);
//        totalRekap.setGajiMasaKerjaNilai(grandGajiXmasaKerja);
//        totalRekap.setPersenSmkNilai(grandPersenSmk);
//        totalRekap.setNilaiSmkNilai(grandNilaiSmk);
//        totalRekap.setPerhitunganNilai(grandPerhitungan);
//
//        totalRekap.setGajiXfaktorNormalNilai(grandGajiXfaktorNormal);
//        totalRekap.setTambahanNilai(grandTambahan);
//        totalRekap.setBrutoJasprodNilai(grandBruto);
//        totalRekap.setPphJasprodNilai(grandPajak);
//        totalRekap.setNettoJasprodNilai(grandBersih);
//        totalRekap.setKoperasiNilai(grandKoperasi);
//        totalRekap.setDansosNilai(grandDansos);
//        totalRekap.setLainLainNilai(grandLain);
//
//
//        hasilPayrollList.addAll(payrollTotalJasprod(
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalGajiBruto, "###,###"),
//                CommonUtil.numbericFormat(totalGajiXmasaKerja, "###,###"),
//                totalPersenSmk + "",
//                totalNilaiSmk + "",
//                CommonUtil.numbericFormat(totalPerhitungan, "###,###"),
//                CommonUtil.numbericFormat(totalGajiXfaktorNormal, "###,###"),
//                CommonUtil.numbericFormat(totalTambahan, "###,###"),
//                CommonUtil.numbericFormat(totalBruto, "###,###"),
//                CommonUtil.numbericFormat(totalPajak, "###,###"),
//                CommonUtil.numbericFormat(totalBersih, "###,###"),
//                CommonUtil.numbericFormat(totalKoperasi, "###,###"),
//                CommonUtil.numbericFormat(totalDansos, "###,###"),
//                CommonUtil.numbericFormat(totalLain, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandGajiBruto, "###,###"),
//                CommonUtil.numbericFormat(grandGajiXmasaKerja, "###,###"),
//                grandPersenSmk + "",
//                grandNilaiSmk + "",
//                CommonUtil.numbericFormat(grandPerhitungan, "###,###"),
//                CommonUtil.numbericFormat(grandGajiXfaktorNormal, "###,###"),
//                CommonUtil.numbericFormat(grandTambahan, "###,###"),
//                CommonUtil.numbericFormat(grandBruto, "###,###"),
//                CommonUtil.numbericFormat(grandPajak, "###,###"),
//                CommonUtil.numbericFormat(grandBersih, "###,###"),
//                CommonUtil.numbericFormat(grandKoperasi, "###,###"),
//                CommonUtil.numbericFormat(grandDansos, "###,###"),
//                CommonUtil.numbericFormat(grandLain, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> printReportPayrollInsentifSys(String bulan1, String tahun1, String unit, String status) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        List<Payroll> hasilPayrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//        String txtWhere = "where bagian_id not in ('PB023', 'PB010')  ";
//        List<ImPositionBagianEntity> imPositionBagianEntities = positionBagianDao.getAllDataPositionBagian(txtWhere);
//        if(imPositionBagianEntities.size() > 0){
//            for(ImPositionBagianEntity imPositionBagianEntity: imPositionBagianEntities){
//                List<ImPositionBagianEntity> posisiPerBagian = positionBagianDao.getPosisiPerBagianInsentif(imPositionBagianEntity.getBagianId(), unit, status, bulan1, tahun1);
//                if(posisiPerBagian.size() > 0){
//                    int x = 0;
//                    ImPositionBagianEntity bagian = new ImPositionBagianEntity();
//                    for(ImPositionBagianEntity imPositionBagianEntity1: posisiPerBagian){
//                        bagian = new ImPositionBagianEntity();
//                        bagian.setBagianId(imPositionBagianEntity.getBagianId());
//                        bagian.setBagianName(imPositionBagianEntity.getBagianName());
//                        bagian.setNip(imPositionBagianEntity1.getNip());
//
//                        finalPosisiBagian.add(bagian);
//                    }
//                }
//            }
//        }
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.getDataPayrollInsentif(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itPayrollEntities){
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setPayrollId(itPayrollEntity.getPayrollId());
//                String tmp = i + " - " + itPayrollEntity.getNip();
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setGajiGolongan(CommonUtil.numbericFormat(itPayrollEntity.getGajiGolongan(), "###,###"));
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmk(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganUmk(), "###,###"));
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStruktural(), "###,###"));
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganJabatanStruktural(), "###,###"));
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganPeralihan(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganPeralihan(), "###,###"));
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganStrategis(CommonUtil.numbericFormat(itPayrollEntity.getTunjanganStrategis(), "###,###"));
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                //gaji bruto
//                payroll.setTotalA(CommonUtil.numbericFormat(itPayrollEntity.getTotalA(), "###,###"));
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//                payroll.setMasaKerja(itPayrollEntity.getMasaKerja() + "");
//                payroll.setPphGaji(CommonUtil.numbericFormat(itPayrollEntity.getPphGaji(), "###,###"));
//                payroll.setPphGajiNilai(itPayrollEntity.getPphGaji());
//                payroll.setTotalInsentif(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalInsentifNilai(itPayrollEntity.getGajiBersih());
//
//                payroll.setPotonganInsentif(itPayrollEntity.getPotonganInsentif() + "");
//
//                payroll.setPotonganInsentifIndividu(CommonUtil.numbericFormat(itPayrollEntity.getPotonganInsentifIndividu(), "###,###"));
//                payroll.setPotonganInsentifIndividuNilai(itPayrollEntity.getPotonganInsentifIndividu());
//                payroll.setSmkStandart(itPayrollEntity.getSmkStandart() + "");
//                payroll.setSmkHuruf(itPayrollEntity.getSmkHuruf());
//                payroll.setSmkAngka(itPayrollEntity.getSmkAngka() + "");
//                payroll.setTahun(itPayrollEntity.getTahun());
//
//                payroll.setPotPphLain(CommonUtil.numbericFormat(itPayrollEntity.getPotPphLain(), "###,###"));
//                payroll.setPotPphLainNilai(itPayrollEntity.getPotPphLain());
//
//                payroll.setInsentifDiterima(CommonUtil.numbericFormat(itPayrollEntity.getInsentifDiterima(), "###,###"));
//                payroll.setInsentifDiterimaNilai(itPayrollEntity.getInsentifDiterima());
//
//                payrollList.add(payroll);
//            }
//        }
//
//        int x = 0;
//        String bagian = "";
//
//        BigDecimal totalGajiGolongan = new BigDecimal(0);
//        BigDecimal totalUmk = new BigDecimal(0);
//        BigDecimal totalStruktural = new BigDecimal(0);
//        BigDecimal totalJabatanStruktural = new BigDecimal(0);
//        BigDecimal totalPeralihan = new BigDecimal(0);
//        BigDecimal totalStrategis = new BigDecimal(0);
//        BigDecimal totalGajiBruto = new BigDecimal(0);
//
//        BigDecimal totalPotInsentifIndividu = new BigDecimal(0);
//        BigDecimal totalInsentifDiterima = new BigDecimal(0);
//        BigDecimal totalPphGaji = new BigDecimal(0);
//        BigDecimal totalPphLain = new BigDecimal(0);
//        BigDecimal totalInsentif = new BigDecimal(0);
//
//        BigDecimal grandGajiGolongan = new BigDecimal(0);
//        BigDecimal grandUmk = new BigDecimal(0);
//        BigDecimal grandStruktural = new BigDecimal(0);
//        BigDecimal grandJabatanStruktural = new BigDecimal(0);
//        BigDecimal grandPeralihan = new BigDecimal(0);
//        BigDecimal grandStrategis = new BigDecimal(0);
//        BigDecimal grandGajiBruto = new BigDecimal(0);
//
//        BigDecimal grandPotInsentifIndividu = new BigDecimal(0);
//        BigDecimal grandInsentifDiterima = new BigDecimal(0);
//        BigDecimal grandPphGaji = new BigDecimal(0);
//        BigDecimal grandPphLain = new BigDecimal(0);
//        BigDecimal grandInsentif = new BigDecimal(0);
//
//        for(ImPositionBagianEntity imPositionBagianEntity: finalPosisiBagian){
//            if(x == 0){
//                hasilPayrollList.addAll(headerPayrollInsentif(imPositionBagianEntity.getBagianName()));
//            } else if(!imPositionBagianEntity.getBagianName().equalsIgnoreCase(bagian)){
//                Payroll totalRekap = new Payroll();
//
//                totalRekap.setGajiGolonganNilai(totalGajiGolongan);
//                totalRekap.setTunjanganUmkNilai(totalUmk);
//                totalRekap.setTunjanganStrukturalNilai(totalStruktural);
//                totalRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//                totalRekap.setTunjanganPeralihanNilai(totalPeralihan);
//                totalRekap.setTunjanganStrategisNilai(totalStrategis);
//                totalRekap.setTotalANilai(totalGajiBruto);
//
//                totalRekap.setPotonganInsentifIndividuNilai(totalPotInsentifIndividu);
//                totalRekap.setInsentifDiterimaNilai(totalInsentifDiterima);
//                totalRekap.setPphGajiNilai(totalPphGaji);
//                totalRekap.setPotPphLainNilai(totalPphLain);
//                totalRekap.setTotalInsentifNilai(totalInsentif);
//
//                hasilPayrollList.addAll(headerPayrollTotalInsentif(totalRekap,
//                        imPositionBagianEntity.getBagianName(),
//                        CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                        CommonUtil.numbericFormat(totalUmk, "###,###"),
//                        CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                        CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                        CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                        CommonUtil.numbericFormat(totalGajiBruto, "###,###"),
//                        CommonUtil.numbericFormat(totalPotInsentifIndividu, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentifDiterima, "###,###"),
//                        CommonUtil.numbericFormat(totalPphGaji, "###,###"),
//                        CommonUtil.numbericFormat(totalPphLain, "###,###"),
//                        CommonUtil.numbericFormat(totalInsentif, "###,###")
//                ));
//                totalGajiGolongan = new BigDecimal(0);
//                totalUmk = new BigDecimal(0);
//                totalStruktural = new BigDecimal(0);
//                totalJabatanStruktural = new BigDecimal(0);
//                totalPeralihan = new BigDecimal(0);
//                totalStrategis = new BigDecimal(0);
//                totalGajiBruto = new BigDecimal(0);
//
//                totalPotInsentifIndividu = new BigDecimal(0);
//                totalInsentifDiterima = new BigDecimal(0);
//                totalPphGaji = new BigDecimal(0);
//                totalPphLain = new BigDecimal(0);
//                totalInsentif = new BigDecimal(0);
//            }
//
//            for(Payroll payroll: payrollList){
//                if(!"".equalsIgnoreCase(imPositionBagianEntity.getNip()) && imPositionBagianEntity.getNip() != null && !"".equalsIgnoreCase(payroll.getNip()) && payroll.getNip() != null){
//                    if(imPositionBagianEntity.getNip().equalsIgnoreCase(payroll.getNip())){
//                        payroll.setNip(i + " - " + imPositionBagianEntity.getNip());
//                        i++;
//                        hasilPayrollList.add(payroll);
//                        bagian = imPositionBagianEntity.getBagianName();
//
//                        totalGajiGolongan = totalGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        totalUmk = totalUmk.add(payroll.getTunjanganUmkNilai());
//                        totalStruktural = totalStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        totalJabatanStruktural = totalJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        totalPeralihan = totalPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        totalStrategis = totalStrategis.add(payroll.getTunjanganStrategisNilai());
//
//                        totalGajiBruto = totalGajiBruto.add(payroll.getTotalANilai());
//
//                        totalPotInsentifIndividu = totalPotInsentifIndividu.add(payroll.getPotonganInsentifIndividuNilai());
//                        totalInsentifDiterima = totalInsentifDiterima.add(payroll.getInsentifDiterimaNilai());
//                        totalPphGaji = totalPphGaji.add(payroll.getPphGajiNilai());
//                        totalPphLain = totalPphLain.add(payroll.getPotPphLainNilai());
//                        totalInsentif = totalInsentif.add(payroll.getTotalInsentifNilai());
//
//                        grandGajiGolongan = grandGajiGolongan.add(payroll.getGajiGolonganNilai());
//                        grandUmk = grandUmk.add(payroll.getTunjanganUmkNilai());
//                        grandStruktural = grandStruktural.add(payroll.getTunjanganStrukturalNilai());
//                        grandJabatanStruktural = grandJabatanStruktural.add(payroll.getTunjanganJabatanStrukturalNilai());
//                        grandPeralihan= grandPeralihan.add(payroll.getTunjanganPeralihanNilai());
//                        grandStrategis = grandStrategis.add(payroll.getTunjanganStrategisNilai());
//                        grandGajiBruto = grandGajiBruto.add(payroll.getTotalANilai());
//
//                        grandPotInsentifIndividu = grandPotInsentifIndividu.add(payroll.getPotonganInsentifIndividuNilai());
//                        grandInsentifDiterima = grandInsentifDiterima.add(payroll.getInsentifDiterimaNilai());
//                        grandPphGaji = grandPphGaji.add(payroll.getPphGajiNilai());
//                        grandPphLain = grandPphLain.add(payroll.getPotPphLainNilai());
//                        grandInsentif = grandInsentif.add(payroll.getTotalInsentifNilai());
//
//                        break;
//                    }
//                }
//            }
//            x++;
//        }
//
//        Payroll totalRekap = new Payroll();
//        Payroll subRekap = new Payroll();
//        subRekap.setGajiGolonganNilai(totalGajiGolongan);
//        subRekap.setTunjanganUmkNilai(totalUmk);
//        subRekap.setTunjanganStrukturalNilai(totalStruktural);
//        subRekap.setTunjanganJabatanStrukturalNilai(totalJabatanStruktural);
//        subRekap.setTunjanganPeralihanNilai(totalPeralihan);
//        subRekap.setTunjanganStrategisNilai(totalStrategis);
//        subRekap.setTotalANilai(totalGajiBruto);
//
//        subRekap.setPotonganInsentifIndividuNilai(totalPotInsentifIndividu);
//        subRekap.setInsentifDiterimaNilai(totalInsentifDiterima);
//        subRekap.setPphGajiNilai(totalPphGaji);
//        subRekap.setPotPphLainNilai(totalPphLain);
//        subRekap.setTotalInsentifNilai(totalInsentif);
//
//        totalRekap.setGajiGolonganNilai(grandGajiGolongan);
//        totalRekap.setTunjanganUmkNilai(grandUmk);
//        totalRekap.setTunjanganStrukturalNilai(grandStruktural);
//        totalRekap.setTunjanganJabatanStrukturalNilai(grandJabatanStruktural);
//        totalRekap.setTunjanganPeralihanNilai(grandPeralihan);
//        totalRekap.setTunjanganStrategisNilai(grandStrategis);
//        totalRekap.setTotalANilai(grandGajiBruto);
//        totalRekap.setPotonganInsentifIndividuNilai(grandPotInsentifIndividu);
//        totalRekap.setInsentifDiterimaNilai(grandInsentifDiterima);
//        totalRekap.setPphGajiNilai(grandPphGaji);
//        totalRekap.setPotPphLainNilai(grandPphLain);
//        totalRekap.setTotalInsentifNilai(grandInsentif);
//
//
//        hasilPayrollList.addAll(payrollTotalInsentif(
//                CommonUtil.numbericFormat(totalGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(totalUmk, "###,###"),
//                CommonUtil.numbericFormat(totalStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(totalPeralihan, "###,###"),
//                CommonUtil.numbericFormat(totalStrategis, "###,###"),
//                CommonUtil.numbericFormat(totalGajiBruto, "###,###"),
//                CommonUtil.numbericFormat(totalPotInsentifIndividu, "###,###"),
//                CommonUtil.numbericFormat(totalInsentifDiterima, "###,###"),
//                CommonUtil.numbericFormat(totalPphLain, "###,###"),
//                CommonUtil.numbericFormat(totalPphGaji, "###,###"),
//                CommonUtil.numbericFormat(totalInsentif, "###,###"),
//                subRekap,
//                CommonUtil.numbericFormat(grandGajiGolongan, "###,###"),
//                CommonUtil.numbericFormat(grandUmk, "###,###"),
//                CommonUtil.numbericFormat(grandStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandJabatanStruktural, "###,###"),
//                CommonUtil.numbericFormat(grandPeralihan, "###,###"),
//                CommonUtil.numbericFormat(grandStrategis, "###,###"),
//                CommonUtil.numbericFormat(grandGajiBruto, "###,###"),
//                CommonUtil.numbericFormat(grandPotInsentifIndividu, "###,###"),
//                CommonUtil.numbericFormat(grandInsentifDiterima, "###,###"),
//                CommonUtil.numbericFormat(grandPphGaji, "###,###"),
//                CommonUtil.numbericFormat(grandPphLain, "###,###"),
//                CommonUtil.numbericFormat(grandInsentif, "###,###"),
//                totalRekap
//        ));
//
//        return hasilPayrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportDanaPensiunSys(String bulan1, String tahun1, String unit) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportDanaPensiunSys(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String dapen = "";
//            int x = 0;
//            BigDecimal jumlahPhdp = new BigDecimal(0);
//            BigDecimal jumlahIuranPensiun = new BigDecimal(0);
//            BigDecimal jumlahIuranPensiunPerusahaan = new BigDecimal(0);
//            BigDecimal total = new BigDecimal(0);
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                if (!dapen.equalsIgnoreCase(itPayrollEntity.getDanaPensiunName()) && x > 0) {
//                    payroll = new Payroll();
//                    payroll.setNip("");
//                    payroll.setNama("");
//                    payroll.setGolonganName("");
//                    payroll.setNama("");
//                    payroll.setStatusKeluarga("");
//                    payroll.setDanaPensiunName("");
//                    payroll.setGajiPensiun(CommonUtil.numbericFormat(jumlahPhdp, "###,###"));
//                    payroll.setGajiPensiunNilai(jumlahPhdp);
//                    payroll.setIuranPensiun(CommonUtil.numbericFormat(jumlahIuranPensiun, "###,###"));
//                    payroll.setIuranPensiunNilai(jumlahIuranPensiun);
//                    payroll.setIuranPensiunPerusahaan(CommonUtil.numbericFormat(jumlahIuranPensiunPerusahaan, "###,###"));
//                    payroll.setIuranPensiunPerusahaanNilai(jumlahIuranPensiunPerusahaan);
//                    payroll.setIuranPensiunJumlah(CommonUtil.numbericFormat(total, "###,###"));
//                    payroll.setIuranPensiunJumlahNilai(total);
//
//                    jumlahPhdp = new BigDecimal(0);
//                    jumlahIuranPensiun = new BigDecimal(0);
//                    jumlahIuranPensiunPerusahaan = new BigDecimal(0);
//                    total = new BigDecimal(0);
//
//                    payrollList.add(payroll);
//                    payroll = new Payroll();
//                }
//
//                payroll.setGolonganName("");
//                if(itPayrollEntity.getGolonganName() != null){
//                    String []splitGolongan = itPayrollEntity.getGolonganName().split(" ");
//                    payroll.setGolonganName(splitGolongan[1] + "/" + itPayrollEntity.getPoint());
//                }
//
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setStatusKeluarga(itPayrollEntity.getStatusKeluarga() + "/" + itPayrollEntity.getJumlahAnak());
//                payroll.setDanaPensiunName(itPayrollEntity.getDanaPensiunName());
//
//                payroll.setGajiPensiun(CommonUtil.numbericFormat(itPayrollEntity.getGajiPensiunBpjs(), "###,###"));
//                payroll.setGajiPensiunNilai(itPayrollEntity.getGajiPensiunBpjs());
//                payroll.setIuranPensiun(CommonUtil.numbericFormat(itPayrollEntity.getIuranBpjsPensiun(), "###,###"));
//                payroll.setIuranPensiunNilai(itPayrollEntity.getIuranBpjsPensiun());
//                payroll.setIuranPensiunPerusahaan(CommonUtil.numbericFormat(itPayrollEntity.getIuranPensiunPerusahaan(), "###,###"));
//                payroll.setIuranPensiunPerusahaanNilai(itPayrollEntity.getIuranPensiunPerusahaan());
//                payroll.setIuranPensiunJumlah(CommonUtil.numbericFormat(itPayrollEntity.getIuranPensiunJumlah(), "###,###"));
//                payroll.setIuranPensiunJumlahNilai(itPayrollEntity.getIuranPensiunJumlah());
//
//                jumlahPhdp = jumlahPhdp.add(itPayrollEntity.getGajiPensiunBpjs());
//                jumlahIuranPensiun = jumlahIuranPensiun.add(itPayrollEntity.getIuranBpjsPensiun());
//                jumlahIuranPensiunPerusahaan = jumlahIuranPensiunPerusahaan.add(itPayrollEntity.getIuranPensiunPerusahaan());
//                total = total.add(itPayrollEntity.getIuranPensiunJumlah());
//
//                dapen = itPayrollEntity.getDanaPensiunName();
//                payrollList.add(payroll);
//                x++;
//            }
//        }
//
//        return payrollList;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<Payroll> searchReportBpjs(String bulan1, String tahun1, String unit) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportBpjsSys(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String dapen = "";
//            int x = 0;
//            BigDecimal jumlahBpjs = new BigDecimal(0);
//            BigDecimal jumlahBpjsTk = new BigDecimal(0);
//            BigDecimal jumlahIuranBpjsPensiun = new BigDecimal(0);
//            BigDecimal jumlahIuranBpjsKesehatan = new BigDecimal(0);
//            BigDecimal total = new BigDecimal(0);
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//                String golonganId[];
//                String dapen2 = "";
//
//                if(itPayrollEntity.getDanaPensiunName() == null){
//                    dapen2 = "-";
//                }else{
//                    dapen2 = itPayrollEntity.getDanaPensiunName();
//                }
//                if (!dapen.equalsIgnoreCase(dapen2) && x > 0) {
//                    payroll = new Payroll();
//                    payroll.setNip("");
//                    payroll.setNama("");
//                    payroll.setGolonganName("");
//                    payroll.setNama("");
//                    payroll.setStatusKeluarga("");
//                    payroll.setDanaPensiunName("");
//
//                    payroll.setGajiBpjs(CommonUtil.numbericFormat(jumlahBpjs, "###,###"));
//                    payroll.setGajiBpjsNilai(jumlahBpjs);
//                    payroll.setIuranBpjsTk(CommonUtil.numbericFormat(jumlahBpjsTk, "###,###"));
//                    payroll.setIuranBpjsTkNilai(jumlahBpjsTk);
//                    payroll.setIuranBpjsPensiun(CommonUtil.numbericFormat(jumlahIuranBpjsPensiun, "###,###"));
//                    payroll.setIuranBpjsPensiunNilai(jumlahIuranBpjsPensiun);
//                    payroll.setIuranBpjsKesehatan(CommonUtil.numbericFormat(jumlahIuranBpjsKesehatan, "###,###"));
//                    payroll.setIuranBpjsKesehatanNilai(jumlahIuranBpjsKesehatan);
//
//
//                    payroll.setIuranPensiunJumlah(CommonUtil.numbericFormat(total, "###,###"));
//                    payroll.setIuranPensiunJumlahNilai(total);
//
//                    jumlahBpjs = new BigDecimal(0);
//                    jumlahBpjsTk = new BigDecimal(0);
//                    jumlahIuranBpjsPensiun = new BigDecimal(0);
//                    jumlahIuranBpjsKesehatan = new BigDecimal(0);
//                    total = new BigDecimal(0);
//
//                    payrollList.add(payroll);
//                    payroll = new Payroll();
//                }
//
//                String []splitGolongan= new String[2];
//                if(itPayrollEntity.getGolonganName() != null && !itPayrollEntity.getGolonganName().equalsIgnoreCase("")){
//                    splitGolongan = itPayrollEntity.getGolonganName().split(" ");
//                    payroll.setGolonganName(splitGolongan[1] + "/" + itPayrollEntity.getPoint());
//                }
//
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setStatusKeluarga(itPayrollEntity.getStatusKeluarga() + "/" + itPayrollEntity.getJumlahAnak());
//                payroll.setDanaPensiunName(itPayrollEntity.getDanaPensiunName());
//
//                payroll.setGajiBpjs(CommonUtil.numbericFormat(itPayrollEntity.getGajiPensiunBpjs(), "###,###"));
//                payroll.setGajiBpjsNilai(itPayrollEntity.getGajiPensiunBpjs());
//                payroll.setIuranBpjsTk(CommonUtil.numbericFormat(itPayrollEntity.getIuranBpjsTk(), "###,###"));
//                payroll.setIuranBpjsTkNilai(itPayrollEntity.getIuranBpjsTk());
//                payroll.setIuranBpjsPensiun(CommonUtil.numbericFormat(itPayrollEntity.getIuranBpjsPensiun(), "###,###"));
//                payroll.setIuranBpjsPensiunNilai(itPayrollEntity.getIuranBpjsPensiun());
//                payroll.setIuranBpjsKesehatan(CommonUtil.numbericFormat(itPayrollEntity.getIuranBpjsKesehatan(), "###,###"));
//                payroll.setIuranBpjsKesehatanNilai(itPayrollEntity.getIuranBpjsKesehatan());
//
//                payroll.setIuranPensiunJumlah(CommonUtil.numbericFormat(itPayrollEntity.getIuranPensiunJumlah(), "###,###"));
//                payroll.setIuranPensiunJumlahNilai(itPayrollEntity.getIuranPensiunJumlah());
//
//                jumlahBpjs = jumlahBpjs.add(itPayrollEntity.getGajiPensiunBpjs());
//                jumlahBpjsTk = jumlahBpjsTk.add(itPayrollEntity.getIuranBpjsTk());
//                jumlahIuranBpjsPensiun = jumlahIuranBpjsPensiun.add(itPayrollEntity.getIuranBpjsPensiun());
//                jumlahIuranBpjsKesehatan = jumlahIuranBpjsKesehatan.add(itPayrollEntity.getIuranBpjsKesehatan());
//                total = total.add(itPayrollEntity.getIuranPensiunJumlah());
//
//                if(itPayrollEntity.getDanaPensiunName() == null){
//                    dapen = "-";
//                }else{
//                    dapen = itPayrollEntity.getDanaPensiunName();
//                }
//                payrollList.add(payroll);
//                x++;
//            }
//        }
//
//        return payrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportRekapGajiSys(String bulan1, String tahun1, String unit, String statusPegawai, String strWhere) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportRekapGajiSysV2(bulan1, tahun1, unit, statusPegawai, strWhere);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String dapen = "";
//            int x = 0;
//            int jumlahPegawai = 0;
//            BigDecimal jumlahGajiGolongan = new BigDecimal(0);
//            BigDecimal jumlahTunjUmk = new BigDecimal(0);
//            BigDecimal jumlahStruktural = new BigDecimal(0);
//            BigDecimal jumlahPeralihan = new BigDecimal(0);
//            BigDecimal jumlahTunjJabStr = new BigDecimal(0);
//            BigDecimal jumlahStrategis = new BigDecimal(0);
//            BigDecimal jumlahKompensasi = new BigDecimal(0);
//            BigDecimal jumlahTransport = new BigDecimal(0);
//            BigDecimal jumlahTunjanganAirListrik = new BigDecimal(0);
//            BigDecimal jumlahTunjanganPengobatan = new BigDecimal(0);
//            BigDecimal jumlahTunjanganPerumahan = new BigDecimal(0);
//            BigDecimal jumlahTunjanganLembur = new BigDecimal(0);
//            BigDecimal jumlahTunjanganPph = new BigDecimal(0);
//            BigDecimal jumlahTunjanganLain = new BigDecimal(0);
//            BigDecimal jumlahA = new BigDecimal(0);
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setNamaBagian(itPayrollEntity.getNamaBagian());
//                payroll.setJumlahPegawai(itPayrollEntity.getJumlahPegawai());
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                payroll.setKompensasiNilai(itPayrollEntity.getKompensasi());
//                payroll.setTunjanganTransportNilai(itPayrollEntity.getTunjanganTransport());
//                payroll.setTunjanganAirListrikNilai(itPayrollEntity.getTunjanganAirListrik());
//                payroll.setTunjanganPengobatanNilai(itPayrollEntity.getTunjanganPengobatan());
//                payroll.setTunjanganPerumahanNilai(itPayrollEntity.getTunjanganPerumahan());
//                payroll.setTunjanganPphNilai(itPayrollEntity.getTunjanganPph());
//                payroll.setTunjanganLemburNilai(itPayrollEntity.getTunjanganLembur());
//                payroll.setTunjanganLainNilai(itPayrollEntity.getTunjanganLain());
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//
//                jumlahPegawai += itPayrollEntity.getJumlahPegawai();
//                jumlahGajiGolongan = jumlahGajiGolongan.add(itPayrollEntity.getGajiGolongan());
//                jumlahTunjUmk = jumlahTunjUmk.add(itPayrollEntity.getTunjanganUmk());
//                jumlahStruktural = jumlahStruktural.add(itPayrollEntity.getTunjanganStruktural());
//                jumlahPeralihan = jumlahPeralihan.add(itPayrollEntity.getTunjanganPeralihan());
//                jumlahTunjJabStr = jumlahTunjJabStr.add(itPayrollEntity.getTunjanganJabatanStruktural());
//                jumlahStrategis = jumlahStrategis.add(itPayrollEntity.getTunjanganStrategis());
//                jumlahKompensasi = jumlahKompensasi.add(itPayrollEntity.getKompensasi());
//                jumlahTransport = jumlahTransport.add(itPayrollEntity.getTunjanganTransport());
//                jumlahTunjanganAirListrik = jumlahTunjanganAirListrik.add(itPayrollEntity.getTunjanganAirListrik());
//                jumlahTunjanganPengobatan = jumlahTunjanganPengobatan.add(itPayrollEntity.getTunjanganPengobatan());
//                jumlahTunjanganPph = jumlahTunjanganPph.add(itPayrollEntity.getTunjanganPph());
//                jumlahTunjanganPerumahan = jumlahTunjanganPerumahan.add(itPayrollEntity.getTunjanganPerumahan());
//                jumlahTunjanganLembur = jumlahTunjanganLembur.add(itPayrollEntity.getTunjanganLembur());
//                jumlahTunjanganLain = jumlahTunjanganLain.add(itPayrollEntity.getTunjanganLain());
//                jumlahA = jumlahA.add(itPayrollEntity.getTotalA());
//
//                payrollList.add(payroll);
//                x++;
//            }
//
//            Payroll payroll = new Payroll();
//            payroll.setNamaBagian("Total : ");
//            payroll.setJumlahPegawai(jumlahPegawai);
//            payroll.setGajiGolonganNilai(jumlahGajiGolongan);
//            payroll.setTunjanganUmkNilai(jumlahTunjUmk);
//            payroll.setTunjanganStrukturalNilai(jumlahStruktural);
//            payroll.setTunjanganPeralihanNilai(jumlahPeralihan);
//            payroll.setTunjanganJabatanStrukturalNilai(jumlahTunjJabStr);
//            payroll.setTunjanganStrategisNilai(jumlahStrategis);
//            payroll.setKompensasiNilai(jumlahKompensasi);
//            payroll.setTunjanganTransportNilai(jumlahTransport);
//            payroll.setTunjanganAirListrikNilai(jumlahTunjanganAirListrik);
//            payroll.setTunjanganPengobatanNilai(jumlahTunjanganPengobatan);
//            payroll.setTunjanganPerumahanNilai(jumlahTunjanganPerumahan);
//            payroll.setTunjanganPphNilai(jumlahTunjanganPph);
//            payroll.setTunjanganLemburNilai(jumlahTunjanganLembur);
//            payroll.setTunjanganLainNilai(jumlahTunjanganLain);
//            payroll.setTotalANilai(jumlahA);
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<Payroll> searchReportRekapThrSys(String bulan1, String tahun1, String unit, String statusPegawai, String strWhere) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportRekapThr(bulan1, tahun1, unit, statusPegawai, strWhere);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String dapen = "";
//            int x = 0;
//            int jumlahPegawai = 0;
//            BigDecimal jumlahGajiGolongan = new BigDecimal(0);
//            BigDecimal jumlahTunjUmk = new BigDecimal(0);
//            BigDecimal jumlahStruktural = new BigDecimal(0);
//            BigDecimal jumlahTunjJabStr = new BigDecimal(0);
//            BigDecimal jumlahPeralihan = new BigDecimal(0);
//            BigDecimal jumlahStrategis = new BigDecimal(0);
//            BigDecimal jumlahTunjanganPph = new BigDecimal(0);
//            BigDecimal jumlahPotPph = new BigDecimal(0);
//            BigDecimal jumlahA = new BigDecimal(0);
//            BigDecimal jumlahThrBersih = new BigDecimal(0);
//
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setNamaBagian(itPayrollEntity.getNamaBagian());
//                payroll.setJumlahPegawai(itPayrollEntity.getJumlahPegawai());
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                payroll.setTunjanganPphNilai(itPayrollEntity.getTunjanganPph());
//                payroll.setPotPphNilai(itPayrollEntity.getPotPph());
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//                payroll.setTotalThrNilai(itPayrollEntity.getTotalThr());
//
//                jumlahPegawai += itPayrollEntity.getJumlahPegawai();
//                jumlahGajiGolongan = jumlahGajiGolongan.add(itPayrollEntity.getGajiGolongan());
//                jumlahTunjUmk = jumlahTunjUmk.add(itPayrollEntity.getTunjanganUmk());
//                jumlahStruktural = jumlahStruktural.add(itPayrollEntity.getTunjanganStruktural());
//                jumlahPeralihan = jumlahPeralihan.add(itPayrollEntity.getTunjanganPeralihan());
//                jumlahTunjJabStr = jumlahTunjJabStr.add(itPayrollEntity.getTunjanganJabatanStruktural());
//                jumlahStrategis = jumlahStrategis.add(itPayrollEntity.getTunjanganStrategis());
//                jumlahTunjanganPph = jumlahTunjanganPph.add(itPayrollEntity.getTunjanganPph());
//                jumlahPotPph = jumlahPotPph.add(itPayrollEntity.getPotPph());
//                jumlahThrBersih = jumlahThrBersih.add(itPayrollEntity.getTotalThr());
//                jumlahA = jumlahA.add(itPayrollEntity.getTotalA());
//
//                payrollList.add(payroll);
//                x++;
//            }
//
//            Payroll payroll = new Payroll();
//            payroll.setNamaBagian("Total : ");
//            payroll.setJumlahPegawai(jumlahPegawai);
//            payroll.setGajiGolonganNilai(jumlahGajiGolongan);
//            payroll.setTunjanganUmkNilai(jumlahTunjUmk);
//            payroll.setTunjanganStrukturalNilai(jumlahStruktural);
//            payroll.setTunjanganPeralihanNilai(jumlahPeralihan);
//            payroll.setTunjanganJabatanStrukturalNilai(jumlahTunjJabStr);
//            payroll.setTunjanganStrategisNilai(jumlahStrategis);
//            payroll.setTunjanganPphNilai(jumlahTunjanganPph);
//            payroll.setPotPphNilai(jumlahPotPph);
//            payroll.setTotalThrNilai(jumlahThrBersih);
//            payroll.setTotalANilai(jumlahA);
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportRekapJasprodSys(String bulan1, String tahun1, String unit, String statusPegawai, String strWhere) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportRekapJasprod(bulan1, tahun1, unit, statusPegawai, strWhere);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String dapen = "";
//            int x = 0;
//            int jumlahPegawai = 0;
//            BigDecimal jumlahGajiGolongan = new BigDecimal(0);
//            BigDecimal jumlahTunjUmk = new BigDecimal(0);
//            BigDecimal jumlahStruktural = new BigDecimal(0);
//            BigDecimal jumlahTunjJabStr = new BigDecimal(0);
//            BigDecimal jumlahPeralihan = new BigDecimal(0);
//            BigDecimal jumlahStrategis = new BigDecimal(0);
//
//            BigDecimal jumlahGajiBruto = new BigDecimal(0);
//            BigDecimal jumlahGajiMasaKerja = new BigDecimal(0);
//            BigDecimal jumlahNilaiSmk = new BigDecimal(0);
//            BigDecimal jumlahPerhitungan = new BigDecimal(0);
//            BigDecimal jumlahGajiFaktorNormal = new BigDecimal(0);
//            BigDecimal jumlahTambahan = new BigDecimal(0);
//            BigDecimal jumlahBruto = new BigDecimal(0);
//            BigDecimal jumlahPotPph = new BigDecimal(0);
//            BigDecimal jumlahPotKoperasi = new BigDecimal(0);
//            BigDecimal jumlahPotTaliAsih = new BigDecimal(0);
//            BigDecimal jumlahPotLain = new BigDecimal(0);
//            BigDecimal jumlahJasprodBersih = new BigDecimal(0);
//
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setNamaBagian(itPayrollEntity.getNamaBagian());
//                payroll.setJumlahPegawai(itPayrollEntity.getJumlahPegawai());
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//                payroll.setGajiMasaKerjaNilai(itPayrollEntity.getGajiMasaKerja());
//                payroll.setNilaiSmkNilai(itPayrollEntity.getNilaiSmk());
//                payroll.setGajiMasaKerjaFaktorSmkNilai(itPayrollEntity.getGajiMasaKerjaFaktorSmk());
//                payroll.setGajiMasaKerjaFaktorNilai(itPayrollEntity.getGajiMasaKerjaFaktor());
//                payroll.setTambahanNilai(itPayrollEntity.getTambahan());
//                payroll.setBrutoJasprodNilai(itPayrollEntity.getBrutoJasprod());
//
//                payroll.setPotPphNilai(itPayrollEntity.getPotPph());
//                payroll.setKoperasiNilai(itPayrollEntity.getKoperasi());
//                payroll.setDansosNilai(itPayrollEntity.getDansos());
//                payroll.setLainLainNilai(itPayrollEntity.getLainLain());
//                payroll.setTotalJasProdNilai(itPayrollEntity.getTotalJasProd());
//
//                jumlahPegawai += itPayrollEntity.getJumlahPegawai();
//                jumlahGajiGolongan = jumlahGajiGolongan.add(itPayrollEntity.getGajiGolongan());
//                jumlahTunjUmk = jumlahTunjUmk.add(itPayrollEntity.getTunjanganUmk());
//                jumlahStruktural = jumlahStruktural.add(itPayrollEntity.getTunjanganStruktural());
//                jumlahPeralihan = jumlahPeralihan.add(itPayrollEntity.getTunjanganPeralihan());
//                jumlahTunjJabStr = jumlahTunjJabStr.add(itPayrollEntity.getTunjanganJabatanStruktural());
//                jumlahStrategis = jumlahStrategis.add(itPayrollEntity.getTunjanganStrategis());
//
//                jumlahGajiBruto = jumlahGajiBruto.add(itPayrollEntity.getTotalA());
//                jumlahGajiMasaKerja = jumlahGajiMasaKerja.add(itPayrollEntity.getGajiMasaKerja());
//                jumlahNilaiSmk = jumlahNilaiSmk.add(itPayrollEntity.getNilaiSmk());
//                jumlahPerhitungan = jumlahPerhitungan.add(itPayrollEntity.getGajiMasaKerjaFaktorSmk());
//                jumlahGajiFaktorNormal = jumlahGajiFaktorNormal.add(itPayrollEntity.getGajiMasaKerjaFaktor());
//                jumlahTambahan = jumlahTambahan.add(itPayrollEntity.getTambahan());
//                jumlahBruto = jumlahBruto.add(itPayrollEntity.getBrutoJasprod());
//
//                jumlahPotPph = jumlahPotPph.add(itPayrollEntity.getPotPph());
//                jumlahPotKoperasi = jumlahPotKoperasi.add(itPayrollEntity.getKoperasi());
//                jumlahPotTaliAsih = jumlahPotTaliAsih.add(itPayrollEntity.getDansos());
//                jumlahPotLain = jumlahPotLain.add(itPayrollEntity.getLainLain());
//                jumlahJasprodBersih = jumlahJasprodBersih.add(itPayrollEntity.getTotalJasProd());
//
//                payrollList.add(payroll);
//                x++;
//            }
//
//            Payroll payroll = new Payroll();
//            payroll.setNamaBagian("Total : ");
//            payroll.setJumlahPegawai(jumlahPegawai);
//            payroll.setGajiGolonganNilai(jumlahGajiGolongan);
//            payroll.setTunjanganUmkNilai(jumlahTunjUmk);
//            payroll.setTunjanganStrukturalNilai(jumlahStruktural);
//            payroll.setTunjanganPeralihanNilai(jumlahPeralihan);
//            payroll.setTunjanganJabatanStrukturalNilai(jumlahTunjJabStr);
//            payroll.setTunjanganStrategisNilai(jumlahStrategis);
//
//            payroll.setTotalANilai(jumlahGajiBruto);
//            payroll.setGajiMasaKerjaNilai(jumlahGajiMasaKerja);
//            payroll.setNilaiSmkNilai(jumlahNilaiSmk);
//            payroll.setGajiMasaKerjaFaktorSmkNilai(jumlahPerhitungan);
//            payroll.setGajiMasaKerjaFaktorNilai(jumlahGajiFaktorNormal);
//            payroll.setTambahanNilai(jumlahTambahan);
//            payroll.setBrutoJasprodNilai(jumlahBruto);
//
//            payroll.setPotPphNilai(jumlahPotPph);
//            payroll.setKoperasiNilai(jumlahPotKoperasi);
//            payroll.setDansosNilai(jumlahPotTaliAsih);
//            payroll.setLainLainNilai(jumlahPotLain);
//            payroll.setTotalJasProdNilai(jumlahJasprodBersih);
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportRekapInsentifSys(String bulan1, String tahun1, String unit, String statusPegawai, String strWhere) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportRekapInsentif(bulan1, tahun1, unit, statusPegawai, strWhere);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String dapen = "";
//            int x = 0;
//            int jumlahPegawai = 0;
//            BigDecimal jumlahGajiGolongan = new BigDecimal(0);
//            BigDecimal jumlahTunjUmk = new BigDecimal(0);
//            BigDecimal jumlahStruktural = new BigDecimal(0);
//            BigDecimal jumlahTunjJabStr = new BigDecimal(0);
//            BigDecimal jumlahPeralihan = new BigDecimal(0);
//            BigDecimal jumlahStrategis = new BigDecimal(0);
//            BigDecimal jumlahGajiBruto = new BigDecimal(0);
//
//            BigDecimal jumlahPotInsentifIndividu = new BigDecimal(0);
//            BigDecimal jumlahInsentifDiterima = new BigDecimal(0);
//            BigDecimal jumlahPph = new BigDecimal(0);
//            BigDecimal jumlahFinalInsentif = new BigDecimal(0);
//
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//                String golonganId[];
//
//                payroll.setNamaBagian(itPayrollEntity.getNamaBagian());
//                payroll.setJumlahPegawai(itPayrollEntity.getJumlahPegawai());
//                payroll.setGajiGolonganNilai(itPayrollEntity.getGajiGolongan());
//                payroll.setTunjanganUmkNilai(itPayrollEntity.getTunjanganUmk());
//                payroll.setTunjanganStrukturalNilai(itPayrollEntity.getTunjanganStruktural());
//                payroll.setTunjanganPeralihanNilai(itPayrollEntity.getTunjanganPeralihan());
//                payroll.setTunjanganJabatanStrukturalNilai(itPayrollEntity.getTunjanganJabatanStruktural());
//                payroll.setTunjanganStrategisNilai(itPayrollEntity.getTunjanganStrategis());
//                payroll.setTotalANilai(itPayrollEntity.getTotalA());
//
//                payroll.setPotonganInsentifIndividuNilai(itPayrollEntity.getPotonganInsentifIndividu());
//                payroll.setInsentifDiterimaNilai(itPayrollEntity.getInsentifDiterima());
//                payroll.setPphGajiNilai(itPayrollEntity.getJumlahPph());
//                payroll.setTotalInsentifNilai(itPayrollEntity.getTotalInsentif());
//
//
//                jumlahPegawai += itPayrollEntity.getJumlahPegawai();
//                jumlahGajiGolongan = jumlahGajiGolongan.add(itPayrollEntity.getGajiGolongan());
//                jumlahTunjUmk = jumlahTunjUmk.add(itPayrollEntity.getTunjanganUmk());
//                jumlahStruktural = jumlahStruktural.add(itPayrollEntity.getTunjanganStruktural());
//                jumlahPeralihan = jumlahPeralihan.add(itPayrollEntity.getTunjanganPeralihan());
//                jumlahTunjJabStr = jumlahTunjJabStr.add(itPayrollEntity.getTunjanganJabatanStruktural());
//                jumlahStrategis = jumlahStrategis.add(itPayrollEntity.getTunjanganStrategis());
//                jumlahGajiBruto = jumlahGajiBruto.add(itPayrollEntity.getTotalA());
//
//                jumlahPotInsentifIndividu = jumlahPotInsentifIndividu.add(itPayrollEntity.getPotonganInsentifIndividu());
//                jumlahInsentifDiterima = jumlahInsentifDiterima.add(itPayrollEntity.getInsentifDiterima());
//                jumlahPph = jumlahPph.add(itPayrollEntity.getJumlahPph());
//                jumlahFinalInsentif = jumlahFinalInsentif.add(itPayrollEntity.getTotalInsentif());
//
//                payrollList.add(payroll);
//                x++;
//            }
//
//            Payroll payroll = new Payroll();
//            payroll.setNamaBagian("Total : ");
//            payroll.setJumlahPegawai(jumlahPegawai);
//            payroll.setGajiGolonganNilai(jumlahGajiGolongan);
//            payroll.setTunjanganUmkNilai(jumlahTunjUmk);
//            payroll.setTunjanganStrukturalNilai(jumlahStruktural);
//            payroll.setTunjanganPeralihanNilai(jumlahPeralihan);
//            payroll.setTunjanganJabatanStrukturalNilai(jumlahTunjJabStr);
//            payroll.setTunjanganStrategisNilai(jumlahStrategis);
//            payroll.setTotalANilai(jumlahGajiBruto);
//
//            payroll.setPotonganInsentifIndividuNilai(jumlahPotInsentifIndividu);
//            payroll.setInsentifDiterimaNilai(jumlahInsentifDiterima);
//            payroll.setPphGajiNilai(jumlahPph);
//            payroll.setTotalInsentifNilai(jumlahFinalInsentif);
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportRekapPotonganSys(String bulan1, String tahun1, String unit, String statusPegawai, String strWhere) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportRekapPotonganSysV2(bulan1, tahun1, unit, statusPegawai, strWhere);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String dapen = "";
//            int x = 0;
//            int jumlahPegawai = 0;
//            BigDecimal jumlahGajiGolongan = new BigDecimal(0);
//            BigDecimal jumlahPPhGaji = new BigDecimal(0);
//            BigDecimal jumlahPphPengobatan = new BigDecimal(0);
//            BigDecimal jumlahPph = new BigDecimal(0);
//            BigDecimal jumlahIuranPensiun = new BigDecimal(0);
//            BigDecimal jumlahBpjsTk = new BigDecimal(0);
//            BigDecimal jumlahBpjsKesehatan = new BigDecimal(0);
//            BigDecimal jumlahBpjsPensiun = new BigDecimal(0);
//            BigDecimal jumlahUangMukaLain = new BigDecimal(0);
//            BigDecimal jumlahKekuranganBpjs = new BigDecimal(0);
//            BigDecimal jumlahTotalB = new BigDecimal(0);
//            BigDecimal jumlahPengobatan = new BigDecimal(0);
//            BigDecimal jumlahKoperasi = new BigDecimal(0);
//            BigDecimal jumlahDansos = new BigDecimal(0);
//            BigDecimal jumlahSp = new BigDecimal(0);
//            BigDecimal jumlahBazis = new BigDecimal(0);
//            BigDecimal jumlahBapor = new BigDecimal(0);
//            BigDecimal jumlahLainLain = new BigDecimal(0);
//            BigDecimal jumlahTotalC = new BigDecimal(0);
//            BigDecimal jumlahGajiBersih = new BigDecimal(0);
//
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//
//                payroll.setNamaBagian(itPayrollEntity.getNamaBagian());
//                payroll.setJumlahPegawai(itPayrollEntity.getJumlahPegawai());
//                payroll.setPphGajiNilai(itPayrollEntity.getPphGaji());
//                payroll.setPphPengobatanNilai(itPayrollEntity.getPphPengobatan());
//                payroll.setJumlahPph(itPayrollEntity.getJumlahPph());
//                payroll.setIuranPensiunNilai(itPayrollEntity.getIuranPensiun());
//                payroll.setIuranBpjsTkNilai(itPayrollEntity.getIuranBpjsTk());
//                payroll.setIuranBpjsKesehatanNilai(itPayrollEntity.getIuranBpjsKesehatan());
//                payroll.setIuranBpjsPensiunNilai(itPayrollEntity.getIuranBpjsPensiun());
//                payroll.setUangMukaLainnyaNilai(itPayrollEntity.getUangMukaLainnya());
//                payroll.setKekuranganBpjsTkNilai(itPayrollEntity.getKekuranganBpjsTk());
//                payroll.setTotalBNilai(itPayrollEntity.getTotalB());
//                payroll.setPengobatanNilai(itPayrollEntity.getPengobatan());
//                payroll.setKoperasiNilai(itPayrollEntity.getKoperasi());
//                payroll.setDansosNilai(itPayrollEntity.getDansos());
//                payroll.setSPNilai(itPayrollEntity.getSP());
//                payroll.setBazisNilai(itPayrollEntity.getBazis());
//                payroll.setBaporNilai(itPayrollEntity.getBapor());
//                payroll.setLainLainNilai(itPayrollEntity.getLainLain());
//                payroll.setTotalCNilai(itPayrollEntity.getTotalC());
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//
//                jumlahPegawai += itPayrollEntity.getJumlahPegawai();
//                jumlahPPhGaji = jumlahPPhGaji.add(itPayrollEntity.getPphGaji());
//                jumlahPphPengobatan = jumlahPphPengobatan.add(itPayrollEntity.getPphPengobatan());
//                jumlahPph = jumlahPph.add(itPayrollEntity.getJumlahPph());
//                jumlahIuranPensiun = jumlahIuranPensiun.add(itPayrollEntity.getIuranPensiun());
//                jumlahBpjsTk = jumlahBpjsTk.add(itPayrollEntity.getIuranBpjsTk());
//                jumlahBpjsKesehatan = jumlahBpjsKesehatan.add(itPayrollEntity.getIuranBpjsKesehatan());
//                jumlahBpjsPensiun = jumlahBpjsPensiun.add(itPayrollEntity.getIuranBpjsPensiun());
//                jumlahUangMukaLain = jumlahUangMukaLain.add(itPayrollEntity.getUangMukaLainnya());
//                jumlahKekuranganBpjs = jumlahKekuranganBpjs.add(itPayrollEntity.getKekuranganBpjsTk());
//                jumlahTotalB = jumlahTotalB.add(itPayrollEntity.getTotalB());
//                jumlahPengobatan = jumlahPengobatan.add(itPayrollEntity.getPengobatan());
//                jumlahKoperasi = jumlahKoperasi.add(itPayrollEntity.getKoperasi());
//                jumlahDansos = jumlahDansos.add(itPayrollEntity.getDansos());
//                jumlahSp = jumlahSp.add(itPayrollEntity.getSP());
//                jumlahBazis = jumlahBazis.add(itPayrollEntity.getBazis());
//                jumlahBapor = jumlahBapor.add(itPayrollEntity.getBapor());
//                jumlahLainLain = jumlahLainLain.add(itPayrollEntity.getLainLain());
//                jumlahTotalC = jumlahTotalC.add(itPayrollEntity.getTotalC());
//                jumlahGajiBersih = jumlahGajiBersih.add(itPayrollEntity.getGajiBersih());
//
//                payrollList.add(payroll);
//                x++;
//            }
//
//            Payroll payroll = new Payroll();
//            payroll.setNamaBagian("Total ");
//            payroll.setJumlahPegawai(jumlahPegawai);
//            payroll.setPphGajiNilai(jumlahPPhGaji);
//            payroll.setPphPengobatanNilai(jumlahPphPengobatan);
//            payroll.setJumlahPph(jumlahPph);
//            payroll.setIuranPensiunNilai(jumlahIuranPensiun);
//            payroll.setIuranBpjsTkNilai(jumlahBpjsTk);
//            payroll.setIuranBpjsKesehatanNilai(jumlahBpjsKesehatan);
//            payroll.setIuranBpjsPensiunNilai(jumlahBpjsPensiun);
//            payroll.setUangMukaLainnyaNilai(jumlahUangMukaLain);
//            payroll.setKekuranganBpjsTkNilai(jumlahKekuranganBpjs);
//            payroll.setTotalBNilai(jumlahTotalB);
//            payroll.setPengobatanNilai(jumlahPengobatan);
//            payroll.setKoperasiNilai(jumlahKoperasi);
//            payroll.setDansosNilai(jumlahDansos);
//            payroll.setSPNilai(jumlahSp);
//            payroll.setBazisNilai(jumlahBazis);
//            payroll.setBaporNilai(jumlahBapor);
//            payroll.setLainLainNilai(jumlahLainLain);
//            payroll.setTotalCNilai(jumlahTotalC);
//            payroll.setTotalGajiBersihNilai(jumlahGajiBersih);
//
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportTransferGajiSys(String bulan1, String tahun1, String unit) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportTransferGajiSys(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String namaBank = "";
//            int x = 0;
//            BigDecimal totalGajiBersih = new BigDecimal(0);
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//
//                /*if (!namaBank.equalsIgnoreCase(itPayrollEntity.getNamaBank()) && x > 0) {
//                    payroll = new Payroll();
//                    payroll.setNip("");
//                    payroll.setNama("Jumlah Bank " + namaBank);
//                    payroll.setNamaBank("");
//                    payroll.setCabangBank("");
//                    payroll.setNoRek("Total ");
//
//                    payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//                    payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//                    totalGajiBersih = new BigDecimal(0);
//
//                    payrollList.add(payroll);
//                    payroll = new Payroll();
//                }*/
//
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setNamaBank(itPayrollEntity.getNamaBank());
//                payroll.setCabangBank(itPayrollEntity.getCabangBank());
//                payroll.setNoRek(itPayrollEntity.getNoRek());
//
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//
//                totalGajiBersih = totalGajiBersih.add(itPayrollEntity.getGajiBersih());
//
//                namaBank = itPayrollEntity.getNamaBank();
//                payrollList.add(payroll);
//                x++;
//            }
//            /*Payroll payroll = new Payroll();
//            payroll.setNip("");
//            payroll.setNama("Jumlah Bank " + namaBank);
//            payroll.setNamaBank("");
//            payroll.setCabangBank("");
//            payroll.setNoRek("Total ");
//
//            payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//            payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//            totalGajiBersih = new BigDecimal(0);
//
//            payrollList.add(payroll); */
//        }
//
//        return payrollList;
//    }
//
//    private List<Payroll> headerPayroll(String bagian){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setGolonganId("Gol");
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGajiGolongan("Gaji Dasar");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganJabatanStruktural("T. Jab Struktural");
//        payroll2.setTunjanganStrategis("Strategis");
//        payroll2.setKompensasi("Kompensasi");
//        payroll2.setTunjanganTransport("T. Transport");
//        payroll2.setTunjanganAirListrik("T. Listrik Air");
//        payroll2.setTunjanganPengobatan("T. Pengobatan");
//        payroll2.setTunjanganLain("T. Lain");
//        payroll2.setTunjanganPerumahan("T. Perumahan");
//        payroll2.setTunjanganLembur("Lembur");
//        payroll2.setTotalA("Penghasilan Kotor");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollPotonganDinas(String bagian){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setPphGaji("PPh Gaji");
//        payroll2.setPphPengobatan("PPh Pengobatan");
//        payroll2.setTotalC("Jumlah PPh"); //Digunakan sementara unttuk menampung jumlah PPh
//        payroll2.setIuranPensiun("Iuran pensiun");
//        payroll2.setBpjsJht("BPJS JHT");
//        payroll2.setIuranBpjsKesehatan("BPJS Kesehatan");
//        payroll2.setBpjsPensiun("BPJS Pensiun");
//        payroll2.setUangMukaLainnya("UM. Lain-lain");
//        payroll2.setKekuranganBpjsTk("Kur.Irp & AST"); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payroll2.setTotalB("Jml. Potongan");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollPotonganLainLain(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setPengobatan("Biaya Pengobatan");
//        payroll2.setKoperasi("Koperasi");
//        payroll2.setDansos("Dansos");
//        payroll2.setSP("SP");
//        payroll2.setBazis("Bazis");
//        payroll2.setBapor("Bapor");
//        payroll2.setLainLain("Lain Lain");
//        payroll2.setZakat("Zakat");
//        payroll2.setTotalC("Jumlah");
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollPenghasilanKaryawan(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setTotalA("Jumlah Penghasilan Kotor");
//        payroll2.setTotalB("Jumlah Potongan Dinas");
//        payroll2.setGajiGolongan("Jumlah Penghasilan");
//        payroll2.setTotalC("Jumlah Potongan Lain-lain");
//        payroll2.setTotalGajiBersih("Jumlah Penerima Bersih");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollPendidikan(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setKompensasi("T. Kompensasi");
//        payroll2.setTunjanganAirListrik("T. Listrik Air");
//        payroll2.setTunjanganPph("T. PPh");
//        payroll2.setGajiGolongan("Gaji Dasar");
//        payroll2.setTotalPendidikan("Pendidikan");
//        payroll2.setTotalGajiBersih("Biaya Pendidikan");
//        payroll2.setPphGaji("Pot. Pph");
//        payroll2.setTotalA("Final Pendidikan");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollRapel(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setTunjanganAirListrik("T. Listrik Air");
//        payroll2.setTunjanganPerumahan("T. Perumahan");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setGajiGolongan("Gaji Dasar");
//
//        payroll2.setTotalPendidikan("Pendidikan");
//        payroll2.setTotalThr("Total Rekap Thr");
//        payroll2.setTotalInsentif("Insentif");
//        payroll2.setTotalJubileum("Jubileum");
//        payroll2.setTotalLembur("Lembur");
//
//        payroll2.setPotonganInsentif("Pot. insentif ");
//        payroll2.setPotonganInsentifIndividu("Pot. insentif individu");
//        payroll2.setSmkAngka("SMK Angka");
//        payroll2.setSmkStandart("SMK Nilai");
//        payroll2.setSmkHuruf("SMK Huruf");
//
//
//        payroll2.setTotalRapel("Rapel");
//        payroll2.setTotalB("Rapel x Bulan");
//        payroll2.setTotalA("Total Rapel");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollJubileum(){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama("Nama");
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganUmkLama("T. Umk Lama");
//        payroll2.setTunjanganStrukturalLama("T. Struktural Lama");
//        payroll2.setTunjanganJabatanStrukturalLama("T. Jab. Struktural Lama");
//        payroll2.setTunjanganStrategisLama("T. Strategis Lama");
//        payroll2.setTunjanganAirListrikLama("T. Listrik Air Lama");
//        payroll2.setTunjanganPerumahanLama("T. Perumahan Lama");
//        payroll2.setTunjanganPeralihanLama("T. Peralihan Lama");
//        payroll2.setGajiGolonganLama("Gaji Dasar Lama");
//
//        payroll2.setTunjanganUmkBaru("T. Umk Baru");
//        payroll2.setTunjanganStrukturalBaru("T. Struktural Baru");
//        payroll2.setTunjanganJabatanStrukturalBaru("T. Jab. Struktural Baru");
//        payroll2.setTunjanganStrategisBaru("T. Strategis Baru");
//        payroll2.setTunjanganAirListrikBaru("T. Listrik Air Baru");
//        payroll2.setTunjanganPerumahanBaru("T. Perumahan Baru");
//        payroll2.setTunjanganPeralihanBaru("T. Peralihan Baru");
//        payroll2.setGajiGolonganBaru("Gaji Dasar Baru");
//
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setTunjanganAirListrik("T. Listrik Air");
//        payroll2.setTunjanganPerumahan("T. Perumahan");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setGajiGolongan("Gaji Dasar");
//
//        payroll2.setTotalPendidikan("Pendidikan");
//        payroll2.setTotalThr("Total Rekap Thr");
//        payroll2.setTotalInsentif("Insentif");
//        payroll2.setTotalJubileum("Jubileum");
//        payroll2.setTotalLembur("Lembur");
//
//        payroll2.setPotonganInsentif("Pot. insentif ");
//        payroll2.setPotonganInsentifIndividu("Pot. insentif individu");
//        payroll2.setSmkAngka("SMK Angka");
//        payroll2.setSmkStandart("SMK Nilai");
//        payroll2.setSmkHuruf("SMK Huruf");
//
//
//        payroll2.setTotalRapel("Rapel Jubileum");
//        payroll2.setTotalB("Rapel x Bulan");
//        payroll2.setTotalA("Total Selisih Rapel");
//        payroll2.setTanggalJubileum("Tanggal Jubileum");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollRapelInsentif(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setMasaKerja("MK");
//
//        payroll2.setTunjanganUmkBaru("T. Umk Baru");
//        payroll2.setTunjanganStrukturalBaru("T. Struktural Baru");
//        payroll2.setTunjanganJabatanStrukturalBaru("T. Jab. Struktural Baru");
//        payroll2.setTunjanganStrategisBaru("T. Strategis Baru");
//        payroll2.setTunjanganPeralihan("T. Peralihan Baru");
//        payroll2.setGajiGolonganBaru("Gaji Dasar Baru");
//
//        payroll2.setPotonganInsentif("Pot. insentif ");
//        payroll2.setPotonganInsentifIndividu("Pot. insentif individu Baru");
//        payroll2.setPotonganInsentifIndividuLama("Pot. insentif individu Lama");
//        payroll2.setSmkAngka("SMK Angka");
//        payroll2.setSmkStandart("SMK Standart");
//        payroll2.setSmkHuruf("SMK Huruf");
//        payroll2.setInsentifDiterimaLama("Insentif lama");
//        payroll2.setInsentifDiterima("Insentif baru");
//        payroll2.setTotalInsentif("Total Rapel Insentif");
//
//        payroll2.setTotalA("Bruto Baru");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollRapelLembur(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganUmk("T. Umk Baru");
//        payroll2.setGajiGolongan("Gaji Dasar Baru");
//        payroll2.setTunjanganPeralihan("T. Peralihan Baru");
//
//        payroll2.setStrJamLembur("Jam Lembur");
//        payroll2.setStrBiayaLemburLama("Biaya Lembur Lama");
//        payroll2.setStrBiayaLemburBaru("Biaya Lembur Baru");
//        payroll2.setStrselisihBiayaLemburBaru("Selisih Biaya Lembur");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollJasprod(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//
//        payroll2.setGajiGolongan("Gaji");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganStrategis("T. Strategis");
//
//        payroll2.setTotalA("Gaji Bruto");
//        payroll2.setMasaKerja("MK");
//
//        payroll2.setGajiMasaKerja("Gaji x Masa Kerja");
//        payroll2.setFaktorKali("Fakt");
//        payroll2.setPersenSmk("%");
//        payroll2.setNilaiSmk("SMK");
//        payroll2.setPerhitungan("Perhitungan");
//        payroll2.setGajiXfaktorNormal("Gaji x Faktor Normal");
//        payroll2.setTambahan("Tambahan");
//        payroll2.setBrutoJasprod("Bruto");
//        payroll2.setPphJasprod("Pajak");
//        payroll2.setKoperasi("Pot. Koperasi");
//        payroll2.setDansos("Pot. Taliasih");
//        payroll2.setLainLain("Pot. Lain");
//        payroll2.setNettoJasprod("Netto");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollInsentif(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//
//        payroll2.setGajiGolongan("Gaji");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganStrategis("T. Strategis");
//
//        payroll2.setTotalA("Gaji Bruto");
//        payroll2.setMasaKerja("MK");
//        payroll2.setPotonganInsentif("Pot Insentif");
//        payroll2.setSmkStandart("Smk Standart");
//        payroll2.setSmkHuruf("Smk Huruf");
//        payroll2.setSmkAngka("Smk Angka");
//        payroll2.setPotonganInsentifIndividu("Pot Insentif Individu");
//        payroll2.setInsentifDiterima("Insentif Diterima");
//        payroll2.setPphGaji("PPh");
//        payroll2.setPotPphLain("Pot Lain");
//        payroll2.setTotalInsentif("Netto");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollThr(String bagian){
//        Payroll payroll2 = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setTunjanganPph("T. PPh");
//        payroll2.setGajiGolongan("Gaji Dasar");
//        payroll2.setTotalThr("Thr");
//        payroll2.setTotalGajiBersih("Biaya Thr");
//        payroll2.setPphGaji("Pot. Pph");
//        payroll2.setTotalA("Final Thr");
//
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotal(String bagian, String total, String tunjUmk, String tunjStruktural, String tunjPeralihan,
//                                             String tunjJabatanStruktural,
//                                             String tunjStrategis,
//                                             String tunjKompensasi,
//                                             String tunjTransport,
//                                             String tunjListrikAir,
//                                             String tunjPengobatan,
//                                             String tunjLain,
//                                             String tunjPerumahan,
//                                             String lembur,
//                                             String tunjPph,
//                                             String gajiKotor,
//                                             String gajiBersih,
//                                             Payroll payrollNilai){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGajiGolongan(total);
//        payrollTotal.setTunjanganUmk(tunjUmk);
//        payrollTotal.setTunjanganStruktural(tunjStruktural);
//        payrollTotal.setTunjanganPeralihan(tunjPeralihan);
//        payrollTotal.setTunjanganJabatanStruktural(tunjJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(tunjStrategis);
//        payrollTotal.setKompensasi(tunjKompensasi);
//        payrollTotal.setTunjanganTransport(tunjTransport);
//        payrollTotal.setTunjanganAirListrik(tunjListrikAir);
//        payrollTotal.setTunjanganPengobatan(tunjPengobatan);
//        payrollTotal.setTunjanganLain(tunjLain);
//        payrollTotal.setTunjanganPerumahan(tunjPerumahan);
//        payrollTotal.setTunjanganLembur(lembur);
//        payrollTotal.setTunjanganPph(tunjPph);
//        payrollTotal.setTotalA(gajiKotor);
//        payrollTotal.setTotalGajiBersih(gajiBersih);
//
//        payrollTotal.setGajiGolonganNilai(payrollNilai.getGajiGolonganNilai());
//        payrollTotal.setTunjanganUmkNilai(payrollNilai.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(payrollNilai.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganPeralihanNilai(payrollNilai.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(payrollNilai.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(payrollNilai.getTunjanganStrategisNilai());
//        payrollTotal.setKompensasiNilai(payrollNilai.getKompensasiNilai());
//        payrollTotal.setTunjanganTransportNilai(payrollNilai.getTunjanganTransportNilai());
//        payrollTotal.setTunjanganAirListrikNilai(payrollNilai.getTunjanganAirListrikNilai());
//        payrollTotal.setTunjanganPengobatanNilai(payrollNilai.getPengobatanNilai());
//        payrollTotal.setTunjanganLainNilai(payrollNilai.getTunjanganLainNilai());
//        payrollTotal.setTunjanganPerumahanNilai(payrollNilai.getTunjanganPerumahanNilai());
//        payrollTotal.setTunjanganLemburNilai(payrollNilai.getTunjanganLemburNilai());
//        payrollTotal.setTunjanganPphNilai(payrollNilai.getTunjanganPphNilai());
//        payrollTotal.setTotalANilai(payrollNilai.getTotalANilai());
//        payrollTotal.setTotalGajiBersihNilai(payrollNilai.getTotalGajiBersihNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setGolonganId("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganTransport("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPengobatan("");
//        payroll1.setTunjanganLain("");
//        payroll1.setTunjanganPerumahan("");
//        payroll1.setTunjanganLembur("");
//        payroll1.setTunjanganPph("");
//        payroll1.setTotalA("");
//        payroll1.setTotalGajiBersih("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setGolonganId("Gol");
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGajiGolongan("Gaji Dasar");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganJabatanStruktural("T. Jab Struktural");
//        payroll2.setTunjanganStrategis("Strategis");
//        payroll2.setKompensasi("Kompensasi");
//        payroll2.setTunjanganTransport("T. Transport");
//        payroll2.setTunjanganAirListrik("T. Listrik Air");
//        payroll2.setTunjanganPengobatan("T. Pengobatan");
//        payroll2.setTunjanganLain("T. Lain");
//        payroll2.setTunjanganPerumahan("T. Perumahan");
//        payroll2.setTunjanganLembur("Lembur");
//
//        payroll2.setTunjanganPph("T.Pph");
//        payroll2.setTotalA("Gaji Kotor");
//        payroll2.setTotalGajiBersih("Gaji Bersih");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalPotonganDinas(String bagian,
//                                                          String pphGaji,
//                                                          String pphPengobatan,
//                                                          String jumlahPph,
//                                                          String iuranPensiun,
//                                                          String bpjsJht,
//                                                          String bpjsKesehatan,
//                                                          String bpjsPensiun,
//                                                          String umLainLain,
//                                                          String kurIrpDanAset,
//                                                          String jmlPotongan,
//                                                          Payroll totalPayroll){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setPphGaji(pphGaji);
//        payrollTotal.setPphPengobatan(pphPengobatan);
//        payrollTotal.setTotalC(jumlahPph); //Digunakan sementara unttuk menampung jumlah PPh
//        payrollTotal.setIuranPensiun(iuranPensiun);
//        payrollTotal.setBpjsJht(bpjsJht);
//        payrollTotal.setIuranBpjsKesehatan(bpjsKesehatan);
//        payrollTotal.setBpjsPensiun(bpjsPensiun);
//        payrollTotal.setUangMukaLainnya(umLainLain);
//        payrollTotal.setKekuranganBpjsTk(kurIrpDanAset); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payrollTotal.setTotalB(jmlPotongan);
//
//        payrollTotal.setPphGajiNilai(totalPayroll.getPphGajiNilai());
//        payrollTotal.setPphPengobatanNilai(totalPayroll.getPphPengobatanNilai());
//        payrollTotal.setTotalCNilai(totalPayroll.getTotalCNilai());
//        payrollTotal.setIuranPensiunNilai(totalPayroll.getIuranPensiunNilai());
//        payrollTotal.setBpjsJhtNilai(totalPayroll.getBpjsJhtNilai());
//        payrollTotal.setIuranBpjsKesehatanNilai(totalPayroll.getIuranBpjsKesehatanNilai());
//        payrollTotal.setBpjsPensiunNilai(totalPayroll.getBpjsPensiunNilai());
//        payrollTotal.setUangMukaLainnyaNilai(totalPayroll.getUangMukaLainnyaNilai());
//        payrollTotal.setKekuranganBpjsTkNilai(totalPayroll.getKekuranganBpjsTkNilai()); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payrollTotal.setTotalBNilai(totalPayroll.getTotalBNilai());
//
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setPphGaji("");
//        payroll1.setPphPengobatan("");
//        payroll1.setTotalC(""); //Digunakan sementara unttuk menampung jumlah PPh
//        payroll1.setIuranPensiun("");
//        payroll1.setBpjsJht("");
//        payroll1.setIuranBpjsKesehatan("");
//        payroll1.setBpjsPensiun("");
//        payroll1.setUangMukaLainnya("");
//        payroll1.setKekuranganBpjsTk(""); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payroll1.setTotalB("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setPphGaji("PPh Gaji");
//        payroll2.setPphPengobatan("PPh Pengobatan");
//        payroll2.setTotalC("Jumlah PPh"); //Digunakan sementara unttuk menampung jumlah PPh
//        payroll2.setIuranPensiun("Iuran pensiun");
//        payroll2.setBpjsJht("BPJS JHT");
//        payroll2.setIuranBpjsKesehatan("BPJS Kesehatan");
//        payroll2.setBpjsPensiun("BPJS Pensiun");
//        payroll2.setUangMukaLainnya("UM. Lain-lain");
//        payroll2.setKekuranganBpjsTk("Kur.Irp & AST"); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payroll2.setTotalB("Jml. Potongan");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalPotonganLainLain(Payroll totalLain,
//                                                             String bagian,
//                                                             String pengobatan,
//                                                             String koperasi,
//                                                             String dansos,
//                                                             String sp,
//                                                             String bazis,
//                                                             String bapor,
//                                                             String lainLain,
//                                                             String zakat,
//                                                             String totalC){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setPengobatan(pengobatan);
//        payrollTotal.setKoperasi(koperasi);
//        payrollTotal.setDansos(dansos);
//        payrollTotal.setSP(sp);
//        payrollTotal.setBazis(bazis);
//        payrollTotal.setBapor(bapor);
//        payrollTotal.setLainLain(lainLain);
//        payrollTotal.setZakat(zakat);
//        payrollTotal.setTotalC(totalC);
//
//        payrollTotal.setPengobatanNilai(totalLain.getPengobatanNilai());
//        payrollTotal.setKoperasiNilai(totalLain.getKoperasiNilai());
//        payrollTotal.setDansosNilai(totalLain.getDansosNilai());
//        payrollTotal.setSPNilai(totalLain.getSPNilai());
//        payrollTotal.setBazisNilai(totalLain.getBazisNilai());
//        payrollTotal.setBaporNilai(totalLain.getBaporNilai());
//        payrollTotal.setLainLainNilai(totalLain.getLainLainNilai());
//        payrollTotal.setZakatNilai(totalLain.getZakatNilai());
//        payrollTotal.setTotalCNilai(totalLain.getTotalCNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setPengobatan("");
//        payroll1.setKoperasi("");
//        payroll1.setDansos("");
//        payroll1.setSP("");
//        payroll1.setBazis("");
//        payroll1.setBapor("");
//        payroll1.setLainLain("");
//        payroll1.setZakat("");
//        payroll1.setTotalC("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setPengobatan("Biaya Pengobatan");
//        payroll2.setKoperasi("Koperasi");
//        payroll2.setDansos("Dansos");
//        payroll2.setSP("SP");
//        payroll2.setBazis("Bazis");
//        payroll2.setBapor("Bapor");
//        payroll2.setLainLain("Lain Lain");
//        payroll2.setZakat("Zakat");
//        payroll2.setTotalC("Jumlah");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalPenghasilanKaryawan(Payroll totalRekap,
//                                                                String bagian,
//                                                                String totalA,
//                                                                String totalB,
//                                                                String penghasilanBersih,
//                                                                String totalC,
//                                                                String penerimaBersih){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setTotalA(totalA);
//        payrollTotal.setTotalB(totalB);
//        payrollTotal.setGajiGolongan(penghasilanBersih);
//        payrollTotal.setTotalC(totalC);
//        payrollTotal.setTotalGajiBersih(penerimaBersih);
//
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setTotalBNilai(totalRekap.getTotalBNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTotalCNilai(totalRekap.getTotalCNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setTotalA("");
//        payroll1.setTotalB("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalC("");
//        payroll1.setTotalGajiBersih("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setTotalA("Jumlah Penghasilan Kotor");
//        payroll2.setTotalB("Jumlah Potongan Dinas");
//        payroll2.setGajiGolongan("Jumlah Penghasilan");
//        payroll2.setTotalC("Jumlah Potongan Lain-lain");
//        payroll2.setTotalGajiBersih("Jumlah Penerima Bersih");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalPendidikan(Payroll totalRekap,
//                                                       String bagian,
//                                                       String totalPeralihan,
//                                                       String totalUmk,
//                                                       String totalStruktural,
//                                                       String totalJabatanStruktural,
//                                                       String totalStrategis,
//                                                       String totalKompensasi,
//                                                       String totalTunjanganAirListrik,
//                                                       String totalTunjanganPph,
//                                                       String totalGajiGolongan,
//                                                       String totalPendidikan,
//                                                       String totalPendidikanBersih,
//                                                       String totalPphGaji,
//                                                       String totalA){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setKompensasi(totalKompensasi);
//        payrollTotal.setTunjanganAirListrik(totalTunjanganAirListrik);
//        payrollTotal.setTunjanganPph(totalTunjanganPph);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTotalPendidikan(totalPendidikan);
//        payrollTotal.setTotalGajiBersih(totalPendidikanBersih);
//        payrollTotal.setPphGaji(totalPphGaji);
//        payrollTotal.setTotalA(totalA);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setKompensasiNilai(totalRekap.getKompensasiNilai());
//        payrollTotal.setTunjanganAirListrikNilai(totalRekap.getTunjanganAirListrikNilai());
//        payrollTotal.setTunjanganPphNilai(totalRekap.getTunjanganPphNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTotalPendidikanNilai(totalRekap.getTotalPendidikanNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPph("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalGajiBersih("");
//        payroll1.setPphGaji("");
//        payroll1.setTotalA("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setKompensasi("T. Kompensasi");
//        payroll2.setTunjanganAirListrik("T. Listrik Air");
//        payroll2.setTunjanganPph("T. PPh");
//        payroll2.setGajiGolongan("Gaji Dasar");
//        payroll2.setTotalPendidikan("Pendidikan");
//        payroll2.setTotalGajiBersih("Biaya Pendidikan");
//        payroll2.setPphGaji("Pot. Pph");
//        payroll2.setTotalA("Final Pendidikan");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalRapel(Payroll totalRekap,
//                                                       String bagian,
//                                                       String totalUmkLama,
//                                                       String totalStrukturalLama,
//                                                       String totalJabatanStrukturalLama,
//                                                       String totalStrategisLama,
//                                                       String totalTunjanganAirListrikLama,
//                                                       String totalTunjanganPerumahanLama,
//                                                       String totalGajiGolonganLama,
//                                                       String totalUmkBaru,
//                                                       String totalStrukturalBaru,
//                                                       String totalJabatanStrukturalBaru,
//                                                       String totalStrategisBaru,
//                                                       String totalTunjanganAirListrikBaru,
//                                                       String totalTunjanganPerumahanBaru,
//                                                       String totalGajiGolonganBaru,
//                                                       String totalUmk,
//                                                       String totalStruktural,
//                                                       String totalJabatanStruktural,
//                                                       String totalStrategis,
//                                                       String totalTunjanganAirListrik,
//                                                       String totalTunjanganPerumahan,
//                                                       String totalGajiGolongan,
//                                                       String totalPendidikan,
//                                                       String totalThr,
//                                                       String totalInsentif,
//                                                       String totalJubileum,
//                                                       String totalLembur,
//                                                       String totalRapel,
//                                                  String totalRapelBulan,
//                                                  String totalRapelFinal,
//                                                  String totalPph,
//                                                  String totalPphPribadi,
//                                                  String totalTunjanganPph,
//                                                  String totalRapelBersih
//                                                  ){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//
//        // lama
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganStrategisLama(totalStrategisLama);
//        payrollTotal.setTunjanganAirListrikLama(totalTunjanganAirListrikLama);
//        payrollTotal.setTunjanganPerumahanLama(totalTunjanganPerumahanLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//
//        // baru
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganStrategisBaru(totalStrategisBaru);
//        payrollTotal.setTunjanganAirListrikBaru(totalTunjanganAirListrikBaru);
//        payrollTotal.setTunjanganPerumahanBaru(totalTunjanganPerumahanBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//
//        // selisish
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setTunjanganAirListrik(totalTunjanganAirListrik);
//        payrollTotal.setTunjanganPerumahan(totalTunjanganPerumahan);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//
//        payrollTotal.setTotalPendidikan(totalPendidikan);
//        payrollTotal.setTotalThr(totalThr);
//        payrollTotal.setTotalInsentif(totalInsentif);
//        payrollTotal.setTotalJubileum(totalJubileum);
//        payrollTotal.setTotalLembur(totalLembur);
//
//        payrollTotal.setTotalRapel(totalRapel);
//        payrollTotal.setTotalB(totalRapelBulan);
//        payrollTotal.setTotalA(totalRapelFinal);
//
//        // lama
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setTunjanganAirListrikLamaNilai(totalRekap.getTunjanganAirListrikLamaNilai());
//        payrollTotal.setTunjanganPerumahanLamaNilai(totalRekap.getTunjanganPerumahanLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//
//        // baru
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setTunjanganAirListrikBaruNilai(totalRekap.getTunjanganAirListrikBaruNilai());
//        payrollTotal.setTunjanganPerumahanBaruNilai(totalRekap.getTunjanganPerumahanBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//
//        // selisih
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setTunjanganAirListrikNilai(totalRekap.getTunjanganAirListrikNilai());
//        payrollTotal.setTunjanganPerumahanNilai(totalRekap.getTunjanganPerumahanNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//
//        payrollTotal.setTotalPendidikanNilai(totalRekap.getTotalPendidikanNilai());
//        payrollTotal.setTotalThrNilai(totalRekap.getTotalThrNilai());
//        payrollTotal.setTotalInsentifNilai(totalRekap.getTotalInsentifNilai());
//        payrollTotal.setTotalJubileumNilai(totalRekap.getTotalJubileumNilai());
//        payrollTotal.setTotalLemburNilai(totalRekap.getTotalLemburNilai());
//
//        payrollTotal.setTotalRapelNilai(totalRekap.getTotalRapelNilai());
//        payrollTotal.setTotalBNilai(totalRekap.getTotalBNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setPotPphNilai(totalRekap.getPotPphNilai());
//        payrollTotal.setTunjanganPphNilai(totalRekap.getTunjanganPphNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPerumahan("");
//        payroll1.setGajiGolongan("");
//
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalThr("");
//        payroll1.setTotalInsentif("");
//        payroll1.setTotalJubileum("");
//
//        payroll1.setTotalRapel("");
//        payroll1.setTotalB("");
//        payroll1.setTotalA("");
//
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganUmkLama("T. Umk ");
//        payroll2.setTunjanganStrukturalLama("T. Struktural Lama");
//        payroll2.setTunjanganJabatanStrukturalLama("T. Jab. Struktural Lama");
//        payroll2.setTunjanganStrategisLama("T. Strategis Lama");
//        payroll2.setTunjanganAirListrikLama("T. Listrik Air Lama");
//        payroll2.setTunjanganPerumahanLama("T. Perumahan Lama");
//        payroll2.setGajiGolonganLama("Gaji Dasar Lama");
//
//        payroll2.setTunjanganUmkBaru("T. Umk Baru");
//        payroll2.setTunjanganStrukturalBaru("T. Struktural Baru");
//        payroll2.setTunjanganJabatanStrukturalBaru("T. Jab. Struktural Baru");
//        payroll2.setTunjanganStrategisBaru("T. Strategis Baru");
//        payroll2.setTunjanganAirListrikBaru("T. Listrik Air Baru");
//        payroll2.setTunjanganPerumahanBaru("T. Perumahan Baru");
//        payroll2.setGajiGolonganBaru("Gaji Dasar Baru");
//
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setTunjanganAirListrik("T. Listrik Air");
//        payroll2.setTunjanganPerumahan("T. Perumahan");
//        payroll2.setGajiGolongan("Gaji Dasar");
//
//        payroll2.setTotalPendidikan("Pendidikan");
//        payroll2.setTotalThr("Thr");
//        payroll2.setTotalInsentif("Insentif");
//        payroll2.setTotalJubileum("Jubileum");
//        payroll2.setTotalLembur("Lembur");
//
//        payroll2.setTotalRapel("Rapel");
//        payroll2.setTotalB("Rapel x Bulan");
//        payroll2.setTotalA("Total Rapel");
//
//        payroll2.setPphGaji("Pph");
//        payroll2.setPotPph("Pph Pribadi");
//        payroll2.setTunjanganPph("Tunjangan Pph");
//        payroll2.setTotalGajiBersih("Rapel Bersih");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalRapelThr(Payroll totalRekap,
//                                                       String bagian,
//                                                       String totalUmkLama,
//                                                       String totalPeralihanLama,
//                                                       String totalStrukturalLama,
//                                                       String totalJabatanStrukturalLama,
//                                                       String totalStrategisLama,
//                                                       String totalGajiGolonganLama,
//                                                     String totalUmkBaru,
//                                                     String totalPeralihanBaru,
//                                                       String totalStrukturalBaru,
//                                                       String totalJabatanStrukturalBaru,
//                                                       String totalStrategisBaru,
//                                                       String totalGajiGolonganBaru,
//                                                     String totalUmk,
//                                                     String totalPeralihan,
//                                                       String totalStruktural,
//                                                       String totalJabatanStruktural,
//                                                       String totalStrategis,
//                                                       String totalGajiGolongan,
//                                                       String totalThr
//                                                       ){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganPeralihanLama(totalPeralihanLama);
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganStrategisLama(totalStrategisLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganPeralihanBaru(totalPeralihanBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganStrategisBaru(totalStrategisBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//
//        payrollTotal.setTotalThr(totalThr);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganPeralihanLamaNilai(totalRekap.getTunjanganPeralihanLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganPeralihanBaruNilai(totalRekap.getTunjanganPeralihanBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//
//        payrollTotal.setTotalThrNilai(totalRekap.getTotalThrNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setGajiGolongan("");
//
//        payroll1.setTotalThr("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganUmkLama("T. Umk Lama");
//        payroll2.setTunjanganPeralihanLama("T. Peralihan Lama");
//        payroll2.setTunjanganStrukturalLama("T. Struktural Lama");
//        payroll2.setTunjanganJabatanStrukturalLama("T. Jab. Struktural Lama");
//        payroll2.setTunjanganStrategisLama("T. Strategis Lama");
//        payroll2.setGajiGolonganLama("Gaji Dasar Lama");
//
//        payroll2.setTunjanganUmkBaru("T. Umk Baru");
//        payroll2.setTunjanganPeralihanBaru("T. Peralihan Baru");
//        payroll2.setTunjanganStrukturalBaru("T. Struktural Baru");
//        payroll2.setTunjanganJabatanStrukturalBaru("T. Jab. Struktural Baru");
//        payroll2.setTunjanganStrategisBaru("T. Strategis Baru");
//        payroll2.setGajiGolonganBaru("Gaji Dasar Baru");
//
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setGajiGolongan("Gaji Dasar");
//
//        payroll2.setTotalThr("Total Rekap Thr");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalRapelJubileum(Payroll totalRekap,
//                                                       String totalUmkLama,
//                                                       String totalStrukturalLama,
//                                                       String totalJabatanStrukturalLama,
//                                                       String totalPeralihanLama,
//                                                       String totalGajiGolonganLama,
//                                                     String totalUmkBaru,
//                                                       String totalStrukturalBaru,
//                                                       String totalJabatanStrukturalBaru,
//                                                       String totalPeralihanBaru,
//                                                       String totalGajiGolonganBaru,
//                                                     String totalUmk,
//                                                       String totalStruktural,
//                                                       String totalJabatanStruktural,
//                                                       String totalPeralihan,
//                                                       String totalGajiGolongan,
//                                                       String totalSelisihJubileum,
//                                                       String totalRapelJubileum
//                                                       ){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTanggalJubileum("");
//
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganPeralihanLama(totalPeralihanLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganPeralihanBaru(totalPeralihanBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//
//        payrollTotal.setTotalA(totalSelisihJubileum);
//        payrollTotal.setTotalJubileum(totalRapelJubileum);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganPeralihanLamaNilai(totalRekap.getTunjanganPeralihanLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganPeralihanBaruNilai(totalRekap.getTunjanganPeralihanBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setTotalJubileumNilai(totalRekap.getTotalJubileumNilai());
//
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalRapelPendidikan(Payroll totalRekap,
//                                                       String bagian,
//                                                            String totalUmkLama,
//                                                            String totalPeralihanLama,
//                                                       String totalStrukturalLama,
//                                                       String totalJabatanStrukturalLama,
//                                                       String totalStrategisLama,
//                                                       String totalGajiGolonganLama,
//                                                       String totalAirListrikLama,
//                                                            String totalUmkBaru,
//                                                            String totalPeralihanBaru,
//                                                       String totalStrukturalBaru,
//                                                       String totalJabatanStrukturalBaru,
//                                                       String totalStrategisBaru,
//                                                       String totalGajiGolonganBaru,
//                                                       String totalAirListrikBaru,
//                                                            String totalUmk,
//                                                            String totalPeralihan,
//                                                       String totalStruktural,
//                                                       String totalJabatanStruktural,
//                                                       String totalStrategis,
//                                                       String totalGajiGolongan,
//                                                       String totalAirListrik,
//                                                       String totalPendidikan
//                                                       ){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganPeralihanLama(totalPeralihanLama);
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganStrategisLama(totalStrategisLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//        payrollTotal.setTunjanganAirListrikLama(totalAirListrikLama);
//
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganPeralihanBaru(totalPeralihanBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganStrategisBaru(totalStrategisBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//        payrollTotal.setTunjanganAirListrikBaru(totalAirListrikBaru);
//
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganAirListrik(totalAirListrik);
//
//        payrollTotal.setTotalPendidikan(totalPendidikan);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganPeralihanLamaNilai(totalRekap.getTunjanganPeralihanLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//        payrollTotal.setTunjanganAirListrikLamaNilai(totalRekap.getTunjanganAirListrikLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganPeralihanBaruNilai(totalRekap.getTunjanganPeralihanBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//        payrollTotal.setTunjanganAirListrikBaruNilai(totalRekap.getTunjanganAirListrikBaruNilai());
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganAirListrikNilai(totalRekap.getTunjanganAirListrikNilai());
//
//        payrollTotal.setTotalPendidikanNilai(totalRekap.getTotalPendidikanNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setGajiGolongan("");
//
//        payroll1.setTotalPendidikan("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganUmkLama("T. Umk Lama");
//        payroll2.setTunjanganPeralihanLama("T. Peralihan Lama");
//        payroll2.setTunjanganStrukturalLama("T. Struktural Lama");
//        payroll2.setTunjanganJabatanStrukturalLama("T. Jab. Struktural Lama");
//        payroll2.setTunjanganStrategisLama("T. Strategis Lama");
//        payroll2.setGajiGolonganLama("Gaji Dasar Lama");
//        payroll2.setTunjanganAirListrikLama("T. Air Listrik Lama");
//
//        payroll2.setTunjanganUmkBaru("T. Umk Baru");
//        payroll2.setTunjanganPeralihanBaru("T. Peralihan Baru");
//        payroll2.setTunjanganStrukturalBaru("T. Struktural Baru");
//        payroll2.setTunjanganJabatanStrukturalBaru("T. Jab. Struktural Baru");
//        payroll2.setTunjanganStrategisBaru("T. Strategis Baru");
//        payroll2.setGajiGolonganBaru("Gaji Dasar Baru");
//        payroll2.setTunjanganAirListrikBaru("T. Air Listrik Baru");
//
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setGajiGolongan("Gaji Dasar");
//        payroll2.setTunjanganAirListrik("T. Air Listrik");
//
//        payroll2.setTotalPendidikan("Total Rekap Pendidikan");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalRapelInsentif(Payroll totalRekap,
//                                                       String bagian,
//                                                          String totalUmkLama,
//                                                       String totalStrukturalLama,
//                                                       String totalJabatanStrukturalLama,
//                                                       String totalStrategisLama,
//                                                       String totalGajiGolonganLama,
//                                                       String totalPeralihanLama,
//                                                            String totalUmkBaru,
//                                                       String totalStrukturalBaru,
//                                                       String totalJabatanStrukturalBaru,
//                                                       String totalStrategisBaru,
//                                                       String totalGajiGolonganBaru,
//                                                       String totalPeralihanBaru,
//                                                       String brutoLama,
//                                                       String brutoBaru,
//                                                       String potonganInsentifIndividuLama,
//                                                       String potonganInsentifIndividu,
//                                                       String totalInsentifDiterimaLama,
//                                                       String totalInsentifDiterimaBaru,
//                                                       String totalInsentifDiterima
//                                                       ){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganStrategisLama(totalStrategisLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//        payrollTotal.setTunjanganPeralihanLama(totalPeralihanLama);
//
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganStrategisBaru(totalStrategisBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//        payrollTotal.setTunjanganPeralihan(totalPeralihanBaru);
//
//        payrollTotal.setMasaKerja("");
//        payrollTotal.setPotonganInsentif("");
//        payrollTotal.setSmkStandart("");
//        payrollTotal.setSmkHuruf("");
//        payrollTotal.setSmkAngka("");
//
//        payrollTotal.setTotalA(brutoBaru);
//        payrollTotal.setBrutoInsentifLama(brutoLama);
//        payrollTotal.setPotonganInsentifIndividuLama(potonganInsentifIndividuLama);
//        payrollTotal.setPotonganInsentifIndividu(potonganInsentifIndividu);
//        payrollTotal.setInsentifDiterimaLama(totalInsentifDiterimaLama);
//        payrollTotal.setInsentifDiterima(totalInsentifDiterimaBaru);
//        payrollTotal.setTotalInsentif(totalInsentifDiterima);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//        payrollTotal.setTunjanganPeralihanLamaNilai(totalRekap.getTunjanganPeralihanLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setBrutoInsentifLamaNilai(totalRekap.getBrutoInsentifLamaNilai());
//        payrollTotal.setPotonganInsentifIndividuLamaNilai(totalRekap.getPotonganInsentifIndividuLamaNilai());
//        payrollTotal.setPotonganInsentifIndividuNilai(totalRekap.getPotonganInsentifIndividuNilai());
//        payrollTotal.setInsentifDiterimaLamaNilai(totalRekap.getInsentifDiterimaLamaNilai());
//        payrollTotal.setInsentifDiterimaNilai(totalRekap.getInsentifDiterimaNilai());
//        payrollTotal.setTotalInsentifNilai(totalRekap.getTotalInsentifNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganUmkBaru("");
//        payroll1.setTunjanganStrukturalBaru("");
//        payroll1.setTunjanganJabatanStrukturalBaru("");
//        payroll1.setTunjanganStrategisBaru("");
//        payroll1.setTunjanganPerumahanBaru("");
//        payroll1.setGajiGolonganBaru("");
//        payroll1.setTotalA("");
//        payroll1.setMasaKerja("");
//        payroll1.setPotonganInsentif("");
//        payroll1.setPotonganInsentifIndividu("");
//        payroll1.setPotonganInsentifIndividuLama("");
//        payroll1.setSmkStandart("");
//        payroll1.setSmkHuruf("");
//        payroll1.setSmkAngka("");
//        payroll1.setInsentifDiterimaLama("");
//        payroll1.setInsentifDiterima("");
//        payroll1.setTotalInsentif("");
//
//        payroll1.setTotalPendidikan("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setMasaKerja("MK");
//
//        payroll2.setTunjanganUmkLama("T. Umk Lama");
//        payroll2.setTunjanganStrukturalLama("T. Struktural Lama");
//        payroll2.setTunjanganJabatanStrukturalLama("T. Jab. Struktural Lama");
//        payroll2.setTunjanganStrategisLama("T. Strategis Lama");
//        payroll2.setGajiGolonganLama("Gaji Dasar Lama");
//        payroll2.setTunjanganPeralihanLama("T. Perlihan Lama Lama");
//
//        payroll2.setTunjanganUmkBaru("T. Umk Baru");
//        payroll2.setTunjanganStrukturalBaru("T. Struktural Baru");
//        payroll2.setTunjanganJabatanStrukturalBaru("T. Jab. Struktural Baru");
//        payroll2.setTunjanganStrategisBaru("T. Strategis Baru");
//        payroll2.setGajiGolonganBaru("Gaji Dasar Baru");
//        payroll2.setTunjanganPeralihan("T. Peralihan Baru");
//
//        payroll2.setTotalA("Bruto Baru");
//        payroll2.setBrutoInsentifLama("Bruto Lama");
//        payroll2.setPotonganInsentifIndividu("Pot. insentif individu Baru");
//        payroll2.setPotonganInsentifIndividuLama("Pot. insentif individu Lama");
//        payroll2.setInsentifDiterimaLama("Insentif Lama");
//        payroll2.setInsentifDiterima("Insentif Baru");
//        payroll2.setTotalInsentif("Total Rapel Insentif");
//        payroll2.setPotonganInsentif("Pot. Insentif");
//        payroll2.setSmkStandart("SMK Standart");
//        payroll2.setSmkHuruf("SMK Huruf");
//        payroll2.setSmkAngka("SMK Angka");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalRapelLembur(Payroll totalRekap,
//                                                       String bagian,
//                                                       String totalUmk,
//                                                       String totalPeralihan,
//                                                       String totalGajiGolongan,
//                                                       String totalBiayaLemburLama,
//                                                       String totalBiayaLemburBaru,
//                                                       String totalSelisihBiayaLemburBaru,
//                                                       String totalJumlahJam){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setStrJamLembur(totalJumlahJam);
//        payrollTotal.setStrBiayaLemburLama(totalBiayaLemburLama);
//        payrollTotal.setStrBiayaLemburBaru(totalBiayaLemburBaru);
//        payrollTotal.setStrselisihBiayaLemburBaru(totalSelisihBiayaLemburBaru);
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setJamLembur(totalRekap.getJamLembur());
//        payrollTotal.setBiayaLemburLama(totalRekap.getBiayaLemburLama());
//        payrollTotal.setBiayaLemburBaru(totalRekap.getBiayaLemburBaru());
//        payrollTotal.setSelisihBiayaLemburBaru(totalRekap.getSelisihBiayaLemburBaru());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganPerumahan("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setStrBiayaLemburLama("");
//        payroll1.setStrBiayaLemburBaru("");
//        payroll1.setStrJamLembur("");
//        payroll1.setStrselisihBiayaLemburBaru("");
//
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganUmk("T. Umk Baru");
//        payroll2.setGajiGolongan("Gaji Dasar Baru");
//        payroll2.setTunjanganPeralihan("T. Peralihan Baru");
//
//        payroll2.setStrBiayaLemburLama("Biaya Lembur Lama");
//        payroll2.setStrBiayaLemburBaru("Biaya Lembur Baru");
//        payroll2.setStrJamLembur("Jam Lembur");
//        payroll2.setStrselisihBiayaLemburBaru("Selisih Biaya Lembur");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalJasprod(Payroll totalRekap,
//                                                    String bagian,
//                                                    String totalGajiGolongan,
//                                                    String totalUmk,
//                                                    String totalStruktural,
//                                                    String totalJabatanStruktural,
//                                                    String totalPeralihan,
//                                                    String totalStrategis,
//                                                    String totalGajiBruto,
//                                                    String totalGajiXmasaKerja,
//                                                    String totalPersenSmk,
//                                                    String totalNilaiSmk,
//                                                    String totalPerhitungan,
//                                                    String totalGajiXfaktorNormal,
//                                                    String totalTambahan,
//                                                    String totalBruto,
//                                                    String totalPajak,
//                                                    String totalBersih,
//                                                    String totalKoperasi,
//                                                    String totalDansos,
//                                                    String totalLain){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setMasaKerja("");
//        payrollTotal.setFaktorKaliSmk("");
//        payrollTotal.setTotalA(totalGajiBruto);
//        payrollTotal.setGajiMasaKerja(totalGajiXmasaKerja);
//        payrollTotal.setPersenSmk(totalPersenSmk);
//        payrollTotal.setNilaiSmk(totalNilaiSmk);
//        payrollTotal.setPerhitungan(totalPerhitungan);
//        payrollTotal.setGajiXfaktorNormal(totalGajiXfaktorNormal);
//        payrollTotal.setTambahan(totalTambahan);
//        payrollTotal.setBrutoJasprod(totalBruto);
//        payrollTotal.setPphJasprod(totalPajak);
//        payrollTotal.setNettoJasprod(totalBersih);
//        payrollTotal.setKoperasi(totalKoperasi);
//        payrollTotal.setDansos(totalDansos);
//        payrollTotal.setLainLain(totalLain);
//
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setMasaKerja("");
//        payrollTotal.setFaktorKali("");
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setGajiMasaKerjaNilai(totalRekap.getGajiMasaKerjaNilai());
//        payrollTotal.setPersenSmkNilai(totalRekap.getPersenSmkNilai());
//        payrollTotal.setNilaiSmkNilai(totalRekap.getNilaiSmkNilai());
//        payrollTotal.setPerhitunganNilai(totalRekap.getPerhitunganNilai());
//        payrollTotal.setTambahanNilai(totalRekap.getTambahanNilai());
//        payrollTotal.setGajiXfaktorNormalNilai(totalRekap.getGajiXfaktorNormalNilai());
//        payrollTotal.setTotalTambahanNilai(totalRekap.getTambahanNilai());
//        payrollTotal.setBrutoJasprodNilai(totalRekap.getBrutoJasprodNilai());
//        payrollTotal.setPphJasprodNilai(totalRekap.getPphJasprodNilai());
//        payrollTotal.setNettoJasprodNilai(totalRekap.getNettoJasprodNilai());
//        payrollTotal.setKoperasiNilai(totalRekap.getKoperasiNilai());
//        payrollTotal.setDansosNilai(totalRekap.getDansosNilai());
//        payrollTotal.setLainLainNilai(totalRekap.getLainLainNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTotalA("");
//        payroll1.setMasaKerja("");
//        payroll1.setGajiMasaKerja("");
//        payroll1.setFaktorKali("");
//        payroll1.setPersenSmk("");
//        payroll1.setNilaiSmk("");
//        payroll1.setPerhitungan("");
//        payroll1.setGajiXfaktorNormal("");
//        payroll1.setTambahan("");
//        payroll1.setBrutoJasprod("");
//        payroll1.setPphJasprod("");
//        payroll1.setNettoJasprod("");
//        payroll1.setKoperasi("");
//        payroll1.setDansos("");
//        payroll1.setLainLain("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//
//        payroll2.setGajiGolongan("Gaji");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganStrategis("T. Strategis");
//
//        payroll2.setTotalA("Gaji Bruto");
//        payroll2.setMasaKerja("MK");
//
//        payroll2.setGajiMasaKerja("Gaji x Masa Kerja");
//        payroll2.setFaktorKali("Fakt");
//        payroll2.setPersenSmk("%");
//        payroll2.setNilaiSmk("SMK");
//        payroll2.setPerhitungan("Perhitungan");
//        payroll2.setGajiXfaktorNormal("Gaji x Faktor Normal");
//        payroll2.setTambahan("Tambahan");
//        payroll2.setBrutoJasprod("Bruto");
//        payroll2.setPphJasprod("Pajak");
//        payroll2.setNettoJasprod("Netto");
//        payroll2.setKoperasi("Pot. Koperasi");
//        payroll2.setDansos("Pot Taliasih");
//        payroll2.setLainLain("Pot. Lain");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalInsentif(Payroll totalRekap,
//                                                    String bagian,
//                                                    String totalGajiGolongan,
//                                                    String totalUmk,
//                                                    String totalStruktural,
//                                                    String totalJabatanStruktural,
//                                                    String totalPeralihan,
//                                                    String totalStrategis,
//                                                    String totalGajiBruto,
//                                                    String totalPotInsentivIndividu,
//                                                    String totalInsentifDiterima,
//                                                    String totalPajak,
//                                                    String totalPotLain,
//                                                    String totalBersih){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setTotalA(totalGajiBruto);
//        payrollTotal.setMasaKerja("");
//        payrollTotal.setPotonganInsentif("");
//        payrollTotal.setSmkStandart("");
//        payrollTotal.setSmkHuruf("");
//        payrollTotal.setSmkAngka("");
//        payrollTotal.setPotonganInsentifIndividu(totalPotInsentivIndividu);
//        payrollTotal.setInsentifDiterima(totalInsentifDiterima);
//        payrollTotal.setPphGaji(totalPajak);
//        payrollTotal.setPotPphLain(totalPotLain);
//        payrollTotal.setTotalInsentif(totalBersih);
//
//
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setPotonganInsentifIndividuNilai(totalRekap.getPotonganInsentifIndividuNilai());
//        payrollTotal.setInsentifDiterimaNilai(totalRekap.getInsentifDiterimaNilai());
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setPotPphLainNilai(totalRekap.getPotPphLainNilai());
//        payrollTotal.setTotalInsentifNilai(totalRekap.getTotalInsentifNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTotalA("");
//        payroll1.setMasaKerja("");
//        payroll1.setPotonganInsentif("");
//        payroll1.setSmkStandart("");
//        payroll1.setSmkHuruf("");
//        payroll1.setSmkAngka("");
//        payroll1.setPotonganInsentifIndividu("");
//        payroll1.setInsentifDiterima("");
//        payroll1.setPphGaji("");
//        payroll1.setPotPphLain("");
//        payroll1.setTotalInsentif("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//
//        payroll2.setGajiGolongan("Gaji");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganStrategis("T. Strategis");
//
//        payroll2.setTotalA("Gaji Bruto");
//        payroll2.setMasaKerja("MK");
//        payroll2.setPotonganInsentif("Pot Insentif");
//        payroll2.setSmkStandart("Smk Standart");
//        payroll2.setSmkHuruf("Smk Huruf");
//        payroll2.setSmkAngka("Smk Angka");
//        payroll2.setPotonganInsentifIndividu("Pot Insentif Individu");
//        payroll2.setInsentifDiterima("Insentif Diterima");
//        payroll2.setPphGaji("PPh");
//        payroll2.setPotPphLain("Pot Lain");
//        payroll2.setTotalInsentif("Netto");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> headerPayrollTotalThr(Payroll totalRekap,
//                                                String bagian,
//                                                String totalPeralihan,
//                                                String totalUmk,
//                                                String totalStruktural,
//                                                String totalJabatanStruktural,
//                                                String totalStrategis,
//                                                String totalTunjanganPph,
//                                                String totalGajiGolongan,
//                                                String totalThr,
//                                                String totalThrBersih,
//                                                String totalPphGaji,
//                                                String totalA){
//        Payroll payroll1 = new Payroll();
//        Payroll payroll2 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setTunjanganPph(totalTunjanganPph);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTotalThr(totalThr);
//        payrollTotal.setTotalGajiBersih(totalThrBersih);
//        payrollTotal.setPphGaji(totalPphGaji);
//        payrollTotal.setTotalA(totalA);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setTunjanganPphNilai(totalRekap.getTunjanganPphNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTotalThrNilai(totalRekap.getTotalThrNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTunjanganPph("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalThr("");
//        payroll1.setTotalGajiBersih("");
//        payroll1.setPphGaji("");
//        payroll1.setTotalA("");
//
//        payroll2.setPayrollId("");
//        payroll2.setNip("NIP");
//        payroll2.setNama(bagian);
//        payroll2.setStatusKeluarga("Status");
//        payroll2.setGolonganId("Gol.");
//        payroll2.setBulan("Bln.");
//
//        payroll2.setTunjanganPeralihan("T. Peralihan");
//        payroll2.setTunjanganUmk("T. Umk");
//        payroll2.setTunjanganStruktural("T. Struktural");
//        payroll2.setTunjanganJabatanStruktural("T. Jab. Struktural");
//        payroll2.setTunjanganStrategis("T. Strategis");
//        payroll2.setTunjanganPph("T. PPh");
//        payroll2.setGajiGolongan("Gaji Dasar");
//        payroll2.setTotalThr("THR");
//        payroll2.setTotalGajiBersih("Biaya Thr");
//        payroll2.setPphGaji("Pot. Pph");
//        payroll2.setTotalA("Final Thr");
//
//        payroll.add(payrollTotal);
//        payroll.add(payroll1);
//        payroll.add(payroll2);
//
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotal(String gajiGolongan1,
//                                       String gajiUmk1,
//                                       String tunjStruktural1,
//                                       String tunjPeralihan1,
//                                       String tunjJabStruktural1,
//                                       String tunjStrategis1,
//                                       String tunjKompensasi1,
//                                       String tunjTransport1,
//                                       String tunjListrikAir1,
//                                       String tunjPengobatan1,
//                                       String tunjLain1,
//                                       String tunjPerumahan1,
//                                       String lembur1,
//                                       String tunjPph1,
//                                       String gajiKotor1,
//                                       String gajiBersihString1,
//                                       Payroll subTotal,
//                                       String total, String tunjUmk, String tunjStruktural, String tunjPeralihan, String tunjJabatanStruktural,
//                                       String tunjStrategis,
//                                       String kompensasi,
//                                       String tunjTransport,
//                                       String tunjListrikAir,
//                                       String tunjPengobatan,
//                                       String tunjLain,
//                                       String tunjPerumahan,
//                                       String lembur,
//                                       String tunjPph,
//                                       String gajiKotor,
//                                       String gajiBersih,
//                                       Payroll totalPayroll){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setGolonganId("");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setGajiGolongan(gajiGolongan1);
//        payrollSubTotal.setTunjanganUmk(gajiUmk1);
//        payrollSubTotal.setTunjanganStruktural(tunjStruktural1);
//        payrollSubTotal.setTunjanganPeralihan(tunjPeralihan1);
//        payrollSubTotal.setTunjanganJabatanStruktural(tunjJabStruktural1);
//        payrollSubTotal.setTunjanganStrategis(tunjStrategis1);
//        payrollSubTotal.setKompensasi(tunjKompensasi1);
//        payrollSubTotal.setTunjanganTransport(tunjTransport1);
//        payrollSubTotal.setTunjanganAirListrik(tunjListrikAir1);
//        payrollSubTotal.setTunjanganPengobatan(tunjPengobatan1);
//        payrollSubTotal.setTunjanganLain(tunjLain1);
//        payrollSubTotal.setTunjanganPerumahan(tunjPerumahan1);
//        payrollSubTotal.setTunjanganLembur(lembur1);
//        payrollSubTotal.setTunjanganPph(tunjPph1);
//        payrollSubTotal.setTotalA(gajiKotor1);
//        payrollSubTotal.setTotalGajiBersih(gajiBersihString1);
//
//        payrollSubTotal.setGajiGolonganNilai(subTotal.getGajiGolonganNilai());
//        payrollSubTotal.setTunjanganUmkNilai(subTotal.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subTotal.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganPeralihanNilai(subTotal.getTunjanganPeralihanNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subTotal.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subTotal.getTunjanganStrategisNilai());
//        payrollSubTotal.setKompensasiNilai(subTotal.getKompensasiNilai());
//        payrollSubTotal.setTunjanganTransportNilai(subTotal.getTunjanganTransportNilai());
//        payrollSubTotal.setTunjanganAirListrikNilai(subTotal.getTunjanganAirListrikNilai());
//        payrollSubTotal.setTunjanganPengobatanNilai(subTotal.getPengobatanNilai());
//        payrollSubTotal.setTunjanganLainNilai(subTotal.getTunjanganLainNilai());
//        payrollSubTotal.setTunjanganPerumahanNilai(subTotal.getTunjanganPerumahanNilai());
//        payrollSubTotal.setTunjanganLemburNilai(subTotal.getTunjanganLemburNilai());
//        payrollSubTotal.setTunjanganPphNilai(subTotal.getTunjanganPphNilai());
//        payrollSubTotal.setTotalANilai(subTotal.getTotalANilai());
//        payrollSubTotal.setTotalGajiBersihNilai(subTotal.getTotalGajiBersihNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setGolonganId("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganTransport("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPengobatan("");
//        payroll1.setTunjanganLain("");
//        payroll1.setTunjanganPerumahan("");
//        payroll1.setTunjanganLembur("");
//        payroll1.setTunjanganPph("");
//        payroll1.setTotalA("");
//        payroll1.setTotalGajiBersih("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGajiGolongan(total);
//        payrollTotal.setTunjanganUmk(tunjUmk);
//        payrollTotal.setTunjanganStruktural(tunjStruktural);
//        payrollTotal.setTunjanganPeralihan(tunjPeralihan);
//        payrollTotal.setTunjanganJabatanStruktural(tunjJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(tunjStrategis);
//        payrollTotal.setKompensasi(kompensasi);
//        payrollTotal.setTunjanganTransport(tunjTransport);
//        payrollTotal.setTunjanganAirListrik(tunjListrikAir);
//        payrollTotal.setTunjanganPengobatan(tunjPengobatan);
//        payrollTotal.setTunjanganLain(tunjLain);
//        payrollTotal.setTunjanganPerumahan(tunjPerumahan);
//        payrollTotal.setTunjanganLembur(lembur);
//        payrollTotal.setTunjanganPph(tunjPph);
//        payrollTotal.setTotalA(gajiKotor);
//        payrollTotal.setTotalGajiBersih(gajiBersih);
//
//        payrollTotal.setGajiGolonganNilai(totalPayroll.getGajiGolonganNilai());
//        payrollTotal.setTunjanganUmkNilai(totalPayroll.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalPayroll.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalPayroll.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalPayroll.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalPayroll.getTunjanganStrategisNilai());
//        payrollTotal.setKompensasiNilai(totalPayroll.getKompensasiNilai());
//        payrollTotal.setTunjanganTransportNilai(totalPayroll.getTunjanganTransportNilai());
//        payrollTotal.setTunjanganAirListrikNilai(totalPayroll.getTunjanganAirListrikNilai());
//        payrollTotal.setTunjanganPengobatanNilai(totalPayroll.getPengobatanNilai());
//        payrollTotal.setTunjanganLainNilai(totalPayroll.getTunjanganLainNilai());
//        payrollTotal.setTunjanganPerumahanNilai(totalPayroll.getTunjanganPerumahanNilai());
//        payrollTotal.setTunjanganLemburNilai(totalPayroll.getTunjanganLemburNilai());
//        payrollTotal.setTunjanganPphNilai(totalPayroll.getTunjanganPphNilai());
//        payrollTotal.setTotalANilai(totalPayroll.getTotalANilai());
//        payrollTotal.setTotalGajiBersihNilai(totalPayroll.getTotalGajiBersihNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalPotonganDinas(String pphGaji1,
//                                                    String pphPengobatan1,
//                                                    String jumlahPph1,
//                                                    String iuranPensiun1,
//                                                    String bpjsJht1,
//                                                    String bpjsKesehatan1,
//                                                    String bpjsPensiun1,
//                                                    String umLainLain1,
//                                                    String kurIrpDanAset1,
//                                                    String jmlPotongan1,
//                                                    Payroll subTotal,
//                                                    String pphGaji,
//                                                    String pphPengobatan,
//                                                    String jumlahPph,
//                                                    String iuranPensiun,
//                                                    String bpjsJht,
//                                                    String bpjsKesehatan,
//                                                    String bpjsPensiun,
//                                                    String umLainLain,
//                                                    String kurIrpDanAset,
//                                                    String jmlPotongan,
//                                                    Payroll totalPayroll){
//        Payroll payroll1 = new Payroll();
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setPphGaji(pphGaji1);
//        payrollSubTotal.setPphPengobatan(pphPengobatan1);
//        payrollSubTotal.setTotalC(jumlahPph1); //Digunakan sementara unttuk menampung jumlah PPh
//        payrollSubTotal.setIuranPensiun(iuranPensiun1);
//        payrollSubTotal.setBpjsJht(bpjsJht1);
//        payrollSubTotal.setIuranBpjsKesehatan(bpjsKesehatan1);
//        payrollSubTotal.setBpjsPensiun(bpjsPensiun1);
//        payrollSubTotal.setUangMukaLainnya(umLainLain1);
//        payrollSubTotal.setKekuranganBpjsTk(kurIrpDanAset1); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payrollSubTotal.setTotalB(jmlPotongan1);
//
//        payrollSubTotal.setPphGajiNilai(subTotal.getPphGajiNilai());
//        payrollSubTotal.setPphPengobatanNilai(subTotal.getPphPengobatanNilai());
//        payrollSubTotal.setTotalCNilai(subTotal.getTotalCNilai());
//        payrollSubTotal.setIuranPensiunNilai(subTotal.getIuranPensiunNilai());
//        payrollSubTotal.setBpjsJhtNilai(subTotal.getBpjsJhtNilai());
//        payrollSubTotal.setIuranBpjsKesehatanNilai(subTotal.getIuranBpjsKesehatanNilai());
//        payrollSubTotal.setBpjsPensiunNilai(subTotal.getBpjsPensiunNilai());
//        payrollSubTotal.setUangMukaLainnyaNilai(subTotal.getUangMukaLainnyaNilai());
//        payrollSubTotal.setKekuranganBpjsTkNilai(subTotal.getKekuranganBpjsTkNilai()); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payrollSubTotal.setTotalBNilai(subTotal.getTotalBNilai());
//
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setPphGaji("");
//        payroll1.setPphPengobatan("");
//        payroll1.setTotalC(""); //Digunakan sementara unttuk menampung jumlah PPh
//        payroll1.setIuranPensiun("");
//        payroll1.setBpjsJht("");
//        payroll1.setIuranBpjsKesehatan("");
//        payroll1.setBpjsPensiun("");
//        payroll1.setUangMukaLainnya("");
//        payroll1.setKekuranganBpjsTk(""); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payroll1.setTotalB("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setPphGaji(pphGaji);
//        payrollTotal.setPphPengobatan(pphPengobatan);
//        payrollTotal.setTotalC(jumlahPph); //Digunakan sementara unttuk menampung jumlah PPh
//        payrollTotal.setIuranPensiun(iuranPensiun);
//        payrollTotal.setBpjsJht(bpjsJht);
//        payrollTotal.setIuranBpjsKesehatan(bpjsKesehatan);
//        payrollTotal.setBpjsPensiun(bpjsPensiun);
//        payrollTotal.setUangMukaLainnya(umLainLain);
//        payrollTotal.setKekuranganBpjsTk(kurIrpDanAset); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payrollTotal.setTotalB(jmlPotongan);
//
//        payrollTotal.setPphGajiNilai(totalPayroll.getPphGajiNilai());
//        payrollTotal.setPphPengobatanNilai(totalPayroll.getPphPengobatanNilai());
//        payrollTotal.setTotalCNilai(totalPayroll.getTotalCNilai());
//        payrollTotal.setIuranPensiunNilai(totalPayroll.getIuranPensiunNilai());
//        payrollTotal.setBpjsJhtNilai(totalPayroll.getBpjsJhtNilai());
//        payrollTotal.setIuranBpjsKesehatanNilai(totalPayroll.getIuranBpjsKesehatanNilai());
//        payrollTotal.setBpjsPensiunNilai(totalPayroll.getBpjsPensiunNilai());
//        payrollTotal.setUangMukaLainnyaNilai(totalPayroll.getUangMukaLainnyaNilai());
//        payrollTotal.setKekuranganBpjsTkNilai(totalPayroll.getKekuranganBpjsTkNilai()); //Digunakan Sementara untuk menampung nilai kurIrpDanAset
//        payrollTotal.setTotalBNilai(totalPayroll.getTotalBNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalPotonganLainLain(String pengobatan1,
//                                                       String koperasi1,
//                                                       String dansos1,
//                                                       String sp1,
//                                                       String bazis1,
//                                                       String bapor1,
//                                                       String lainLain1,
//                                                       String zakat1,
//                                                       String totalC1,
//                                                       Payroll subTotalLain,
//                                                       String pengobatan,
//                                                       String koperasi,
//                                                       String dansos,
//                                                       String sp,
//                                                       String bazis,
//                                                       String bapor,
//                                                       String lainLain,
//                                                       String zakat,
//                                                       String totalC,
//                                                       Payroll totalLain){
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        Payroll payroll1 = new Payroll();
//        Payroll payrollSubTotal = new Payroll();
//
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setPengobatan(pengobatan1);
//        payrollSubTotal.setKoperasi(koperasi1);
//        payrollSubTotal.setDansos(dansos1);
//        payrollSubTotal.setSP(sp1);
//        payrollSubTotal.setBazis(bazis1);
//        payrollSubTotal.setBapor(bapor1);
//        payrollSubTotal.setLainLain(lainLain1);
//        payrollSubTotal.setZakat(zakat1);
//        payrollSubTotal.setTotalC(totalC1);
//
//        payrollSubTotal.setPengobatanNilai(subTotalLain.getPengobatanNilai());
//        payrollSubTotal.setKoperasiNilai(subTotalLain.getKoperasiNilai());
//        payrollSubTotal.setDansosNilai(subTotalLain.getDansosNilai());
//        payrollSubTotal.setSPNilai(subTotalLain.getSPNilai());
//        payrollSubTotal.setBazisNilai(subTotalLain.getBazisNilai());
//        payrollSubTotal.setBaporNilai(subTotalLain.getBaporNilai());
//        payrollSubTotal.setLainLainNilai(subTotalLain.getLainLainNilai());
//        payrollSubTotal.setZakatNilai(subTotalLain.getZakatNilai());
//        payrollSubTotal.setTotalCNilai(subTotalLain.getTotalCNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setPengobatan("");
//        payroll1.setKoperasi("");
//        payroll1.setDansos("");
//        payroll1.setSP("");
//        payroll1.setBazis("");
//        payroll1.setBapor("");
//        payroll1.setLainLain("");
//        payroll1.setZakat("");
//        payroll1.setTotalC("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setPengobatan(pengobatan);
//        payrollTotal.setKoperasi(koperasi);
//        payrollTotal.setDansos(dansos);
//        payrollTotal.setSP(sp);
//        payrollTotal.setBazis(bazis);
//        payrollTotal.setBapor(bapor);
//        payrollTotal.setLainLain(lainLain);
//        payrollTotal.setZakat(zakat);
//        payrollTotal.setTotalC(totalC);
//
//        payrollTotal.setPengobatanNilai(totalLain.getPengobatanNilai());
//        payrollTotal.setKoperasiNilai(totalLain.getKoperasiNilai());
//        payrollTotal.setDansosNilai(totalLain.getDansosNilai());
//        payrollTotal.setSPNilai(totalLain.getSPNilai());
//        payrollTotal.setBazisNilai(totalLain.getBazisNilai());
//        payrollTotal.setBaporNilai(totalLain.getBaporNilai());
//        payrollTotal.setLainLainNilai(totalLain.getLainLainNilai());
//        payrollTotal.setZakatNilai(totalLain.getZakatNilai());
//        payrollTotal.setTotalCNilai(totalLain.getTotalCNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalPenghasilanKaryawan(String totalA1,
//                                                          String totalB1,
//                                                          String penghasilanBersih1,
//                                                          String totalC1,
//                                                          String penerimaBersih1,
//                                                          Payroll subRekap,
//                                                          String totalA,
//                                                          String totalB,
//                                                          String penghasilanBersih,
//                                                          String totalC,
//                                                          String penerimaBersih,
//                                                          Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setGolonganId("");
//        payrollSubTotal.setTotalA(totalA1);
//        payrollSubTotal.setTotalB(totalB1);
//        payrollSubTotal.setGajiGolongan(penghasilanBersih1);
//        payrollSubTotal.setTotalC(totalC1);
//        payrollSubTotal.setTotalGajiBersih(penerimaBersih1);
//
//        payrollSubTotal.setTotalANilai(subRekap.getTotalANilai());
//        payrollSubTotal.setTotalBNilai(subRekap.getTotalBNilai());
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//        payrollSubTotal.setTotalCNilai(subRekap.getTotalCNilai());
//        payrollSubTotal.setTotalGajiBersihNilai(subRekap.getTotalGajiBersihNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setTotalA("");
//        payroll1.setTotalB("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalC("");
//        payroll1.setTotalGajiBersih("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setTotalA(totalA);
//        payrollTotal.setTotalB(totalB);
//        payrollTotal.setGajiGolongan(penghasilanBersih);
//        payrollTotal.setTotalC(totalC);
//        payrollTotal.setTotalGajiBersih(penerimaBersih);
//
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setTotalBNilai(totalRekap.getTotalBNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTotalCNilai(totalRekap.getTotalCNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalPendidikan(String totalPeralihan1,
//                                                 String totalUmk1,
//                                                 String totalStruktural1,
//                                                 String totalJabatanStruktural1,
//                                                 String totalStrategis1,
//                                                 String totalKompensasi1,
//                                                 String totalTunjanganAirListrik1,
//                                                 String totalTunjanganPph1,
//                                                 String totalGajiGolongan1,
//                                                 String totalPendidikan1,
//                                                 String totalPendidikanBersih1,
//                                                 String totalPphGaji1,
//                                                 String totalA1,
//                                                 Payroll subRekap,
//                                                 String totalPeralihan,
//                                                 String totalUmk,
//                                                 String totalStruktural,
//                                                 String totalJabatanStruktural,
//                                                 String totalStrategis,
//                                                 String totalKompensasi,
//                                                 String totalTunjanganAirListrik,
//                                                 String totalTunjanganPph,
//                                                 String totalGajiGolongan,
//                                                 String totalPendidikan,
//                                                 String totalPendidikanBersih,
//                                                 String totalPphGaji,
//                                                 String totalA,
//                                                 Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setBulan("");
//        payrollSubTotal.setGolonganId("");
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1);
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setTunjanganStruktural(totalStruktural1);
//        payrollSubTotal.setTunjanganJabatanStruktural(totalJabatanStruktural1);
//        payrollSubTotal.setTunjanganStrategis(totalStrategis1);
//        payrollSubTotal.setKompensasi(totalKompensasi1);
//        payrollSubTotal.setTunjanganAirListrik(totalTunjanganAirListrik1);
//        payrollSubTotal.setTunjanganPph(totalTunjanganPph1);
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//        payrollSubTotal.setTotalPendidikan(totalPendidikan1);
//        payrollSubTotal.setTotalGajiBersih(totalPendidikanBersih1);
//        payrollSubTotal.setPphGaji(totalPphGaji1);
//        payrollSubTotal.setTotalA(totalA1);
//
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subRekap.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subRekap.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subRekap.getTunjanganStrategisNilai());
//        payrollSubTotal.setKompensasiNilai(subRekap.getKompensasiNilai());
//        payrollSubTotal.setTunjanganAirListrikNilai(subRekap.getTunjanganAirListrikNilai());
//        payrollSubTotal.setTunjanganPphNilai(subRekap.getTunjanganPphNilai());
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//        payrollSubTotal.setTotalPendidikanNilai(subRekap.getTotalPendidikanNilai());
//        payrollSubTotal.setTotalGajiBersihNilai(subRekap.getTotalGajiBersihNilai());
//        payrollSubTotal.setPphGajiNilai(subRekap.getPphGajiNilai());
//        payrollSubTotal.setTotalANilai(subRekap.getTotalANilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPph("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalGajiBersih("");
//        payroll1.setPphGaji("");
//        payroll1.setTotalA("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setKompensasi(totalKompensasi);
//        payrollTotal.setTunjanganAirListrik(totalTunjanganAirListrik);
//        payrollTotal.setTunjanganPph(totalTunjanganPph);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTotalPendidikan(totalPendidikan);
//        payrollTotal.setTotalGajiBersih(totalPendidikanBersih);
//        payrollTotal.setPphGaji(totalPphGaji);
//        payrollTotal.setTotalA(totalA);
//
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setKompensasiNilai(totalRekap.getKompensasiNilai());
//        payrollTotal.setTunjanganAirListrikNilai(totalRekap.getTunjanganAirListrikNilai());
//        payrollTotal.setTunjanganPphNilai(totalRekap.getTunjanganPphNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTotalPendidikanNilai(totalRekap.getTotalPendidikanNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalRapel(String totalUmk1Lama,
//                                                 String totalStruktural1Lama,
//                                                 String totalJabatanStruktural1Lama,
//                                                 String totalStrategis1Lama,
//                                                 String totalTunjanganAirListrik1Lama,
//                                                 String totalTunjanganPerumahan1Lama,
//                                                 String totalGajiGolongan1Lama,
//                                            String totalUmk1Baru,
//                                                 String totalStruktural1Baru,
//                                                 String totalJabatanStruktural1Baru,
//                                                 String totalStrategis1Baru,
//                                                 String totalTunjanganAirListrik1Baru,
//                                                 String totalTunjanganPerumahan1Baru,
//                                                 String totalGajiGolongan1Baru,
//                                            String totalUmk1,
//                                                 String totalStruktural1,
//                                                 String totalJabatanStruktural1,
//                                                 String totalStrategis1,
//                                                 String totalTunjanganAirListrik1,
//                                                 String totalTunjanganPerumahan1,
//                                                 String totalGajiGolongan1,
//                                                 String totalPendidikan1,
//                                                 String totalThr1,
//                                                 String totalInsentif1,
//                                                 String totalJubileum1,
//                                                 String totalLembur1,
//                                                 String totalRapel1,
//                                                 String totalRapelBulan1,
//                                                 String totalRapelFinal1,
//                                                 Payroll subRekap,
//                                                 String totalUmkLama,
//                                                 String totalStrukturalLama,
//                                                 String totalJabatanStrukturalLama,
//                                                 String totalStrategisLama,
//                                                 String totalTunjanganAirListrikLama,
//                                                 String totalTunjanganPerumahanLama,
//                                                 String totalGajiGolonganLama,
//                                            String totalUmkBaru,
//                                                 String totalStrukturalBaru,
//                                                 String totalJabatanStrukturalBaru,
//                                                 String totalStrategisBaru,
//                                                 String totalTunjanganAirListrikBaru,
//                                                 String totalTunjanganPerumahanBaru,
//                                                 String totalGajiGolonganBaru,
//                                            String totalUmk,
//                                                 String totalStruktural,
//                                                 String totalJabatanStruktural,
//                                                 String totalStrategis,
//                                                 String totalTunjanganAirListrik,
//                                                 String totalTunjanganPerumahan,
//                                                 String totalGajiGolongan,
//                                                 String totalPendidikan,
//                                                 String totalThr,
//                                                 String totalInsentif,
//                                                 String totalJubileum,
//                                                 String totalLembur,
//                                                 String totalRapel,
//                                                 String totalRapelBulan,
//                                                 String totalRapelFinal,
//                                            String totalPph,
//                                            String totalPphPribadi,
//                                            String totalTunjanganPph,
//                                            String totalRapelBersih,
//                                            Payroll totalRekap
//                                            ){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setBulan("");
//        payrollSubTotal.setGolonganId("");
//
//        payrollSubTotal.setTunjanganUmkLama(totalUmk1Lama);
//        payrollSubTotal.setTunjanganStrukturalLama(totalStruktural1Lama);
//        payrollSubTotal.setTunjanganJabatanStrukturalLama(totalJabatanStruktural1Lama);
//        payrollSubTotal.setTunjanganStrategisLama(totalStrategis1Lama);
//        payrollSubTotal.setTunjanganAirListrikLama(totalTunjanganAirListrik1Lama);
//        payrollSubTotal.setTunjanganPerumahanLama(totalTunjanganPerumahan1Lama);
//        payrollSubTotal.setGajiGolonganLama(totalGajiGolongan1Lama);
//
//        payrollSubTotal.setTunjanganUmkBaru(totalUmk1Baru);
//        payrollSubTotal.setTunjanganStrukturalBaru(totalStruktural1Baru);
//        payrollSubTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStruktural1Baru);
//        payrollSubTotal.setTunjanganStrategisBaru(totalStrategis1Baru);
//        payrollSubTotal.setTunjanganAirListrikBaru(totalTunjanganAirListrik1Baru);
//        payrollSubTotal.setTunjanganPerumahanBaru(totalTunjanganPerumahan1Baru);
//        payrollSubTotal.setGajiGolonganBaru(totalGajiGolongan1Baru);
//
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setTunjanganStruktural(totalStruktural1);
//        payrollSubTotal.setTunjanganJabatanStruktural(totalJabatanStruktural1);
//        payrollSubTotal.setTunjanganStrategis(totalStrategis1);
//        payrollSubTotal.setTunjanganAirListrik(totalTunjanganAirListrik1);
//        payrollSubTotal.setTunjanganPerumahan(totalTunjanganPerumahan1);
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//
//        payrollSubTotal.setTotalPendidikan(totalPendidikan1);
//        payrollSubTotal.setTotalThr(totalThr1);
//        payrollSubTotal.setTotalInsentif(totalInsentif1);
//        payrollSubTotal.setTotalJubileum(totalJubileum1);
//        payrollSubTotal.setTotalLembur(totalLembur1);
//
//        payrollSubTotal.setTotalRapel(totalRapel1);
//        payrollSubTotal.setTotalB(totalRapelBulan1);
//        payrollSubTotal.setTotalA(totalRapelFinal1);
//
//        payrollSubTotal.setPphGaji(totalRapelFinal1);
//        payrollSubTotal.setPotPph(totalPphPribadi);
//        payrollSubTotal.setTunjanganPph(totalTunjanganPph);
//        payrollSubTotal.setTotalGajiBersih(totalRapelBersih);
//
//        payrollSubTotal.setTunjanganUmkLamaNilai(subRekap.getTunjanganUmkLamaNilai());
//        payrollSubTotal.setTunjanganStrukturalLamaNilai(subRekap.getTunjanganStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalLamaNilai(subRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganStrategisLamaNilai(subRekap.getTunjanganStrategisLamaNilai());
//        payrollSubTotal.setTunjanganAirListrikLamaNilai(subRekap.getTunjanganAirListrikLamaNilai());
//        payrollSubTotal.setTunjanganPerumahanLamaNilai(subRekap.getTunjanganPerumahanLamaNilai());
//        payrollSubTotal.setGajiGolonganLamaNilai(subRekap.getGajiGolonganLamaNilai());
//
//        payrollSubTotal.setTunjanganUmkBaruNilai(subRekap.getTunjanganUmkBaruNilai());
//        payrollSubTotal.setTunjanganStrukturalBaruNilai(subRekap.getTunjanganStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalBaruNilai(subRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganStrategisBaruNilai(subRekap.getTunjanganStrategisBaruNilai());
//        payrollSubTotal.setTunjanganAirListrikBaruNilai(subRekap.getTunjanganAirListrikBaruNilai());
//        payrollSubTotal.setTunjanganPerumahanBaruNilai(subRekap.getTunjanganPerumahanBaruNilai());
//        payrollSubTotal.setGajiGolonganBaruNilai(subRekap.getGajiGolonganBaruNilai());
//
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subRekap.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subRekap.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subRekap.getTunjanganStrategisNilai());
//        payrollSubTotal.setTunjanganAirListrikNilai(subRekap.getTunjanganAirListrikNilai());
//        payrollSubTotal.setTunjanganPerumahanNilai(subRekap.getTunjanganPerumahanNilai());
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//
//        payrollSubTotal.setTotalPendidikanNilai(subRekap.getTotalPendidikanNilai());
//        payrollSubTotal.setTotalThrNilai(subRekap.getTotalThrNilai());
//        payrollSubTotal.setTotalInsentifNilai(subRekap.getTotalInsentifNilai());
//        payrollSubTotal.setTotalJubileumNilai(subRekap.getTotalJubileumNilai());
//        payrollSubTotal.setTotalLemburNilai(subRekap.getTotalLemburNilai());
//
//        payrollSubTotal.setTotalRapelNilai(subRekap.getTotalRapelNilai());
//        payrollSubTotal.setTotalBNilai(subRekap.getTotalBNilai());
//        payrollSubTotal.setTotalANilai(subRekap.getTotalANilai());
//
//        payrollSubTotal.setPphGajiNilai(subRekap.getPphGajiNilai());
//        payrollSubTotal.setPotPphNilai(subRekap.getPotPphNilai());
//        payrollSubTotal.setTunjanganPphNilai(subRekap.getTunjanganPphNilai());
//        payrollSubTotal.setTotalGajiBersihNilai(subRekap.getTotalGajiBersihNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPerumahan("");
//        payroll1.setTunjanganPph("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalGajiBersih("");
//        payroll1.setPphGaji("");
//        payroll1.setTotalA("");
//        payroll1.setTotalInsentif("");
//        payroll1.setTotalThr("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalJubileum("");
//        payroll1.setTotalB("");
//        payroll1.setTotalRapel("");
//        payroll1.setPphGaji("");
//        payroll1.setPotPph("");
//        payroll1.setTunjanganPph("");
//        payroll1.setTotalGajiBersih("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setTunjanganAirListrik(totalTunjanganAirListrik);
//        payrollTotal.setTunjanganPerumahan(totalTunjanganPerumahan);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//
//        payrollTotal.setTotalPendidikan(totalPendidikan);
//        payrollTotal.setTotalThr(totalThr);
//        payrollTotal.setTotalInsentif(totalInsentif);
//        payrollTotal.setTotalJubileum(totalJubileum);
//        payrollTotal.setTotalLembur(totalLembur);
//
//        payrollTotal.setTotalRapel(totalRapel);
//        payrollTotal.setTotalB(totalRapelBulan);
//        payrollTotal.setTotalA(totalRapelFinal);
//
//        payrollTotal.setPphGaji(totalPph);
//        payrollTotal.setPotPph(totalPphPribadi);
//        payrollTotal.setTunjanganPph(totalTunjanganPph);
//        payrollTotal.setTotalGajiBersih(totalRapelBersih);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setTunjanganAirListrikLamaNilai(totalRekap.getTunjanganAirListrikLamaNilai());
//        payrollTotal.setTunjanganPerumahanLamaNilai(totalRekap.getTunjanganPerumahanLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setTunjanganAirListrikBaruNilai(totalRekap.getTunjanganAirListrikBaruNilai());
//        payrollTotal.setTunjanganPerumahanBaruNilai(totalRekap.getTunjanganPerumahanBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setTunjanganAirListrikNilai(totalRekap.getTunjanganAirListrikNilai());
//        payrollTotal.setTunjanganPerumahanNilai(totalRekap.getTunjanganPerumahanNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//
//        payrollTotal.setTotalPendidikanNilai(totalRekap.getTotalPendidikanNilai());
//        payrollTotal.setTotalThrNilai(totalRekap.getTotalThrNilai());
//        payrollTotal.setTotalInsentifNilai(totalRekap.getTotalInsentifNilai());
//        payrollTotal.setTotalJubileumNilai(totalRekap.getTotalJubileumNilai());
//        payrollTotal.setTotalLemburNilai(totalRekap.getTotalLemburNilai());
//
//        payrollTotal.setTotalRapelNilai(totalRekap.getTotalRapelNilai());
//        payrollTotal.setTotalBNilai(totalRekap.getTotalBNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setPotPphNilai(totalRekap.getPotPphNilai());
//        payrollTotal.setTunjanganPphNilai(totalRekap.getTunjanganPphNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalRapelThr(String totalUmk1Lama,
//                                               String totalPeralihan1Lama,
//                                                 String totalStruktural1Lama,
//                                                 String totalJabatanStruktural1Lama,
//                                                 String totalStrategis1Lama,
//                                                 String totalGajiGolongan1Lama,
//                                               String totalUmk1Baru,
//                                               String totalPeralihan1Baru,
//                                                 String totalStruktural1Baru,
//                                                 String totalJabatanStruktural1Baru,
//                                                 String totalStrategis1Baru,
//                                                 String totalGajiGolongan1Baru,
//                                               String totalUmk1,
//                                               String totalPeralihan1,
//                                                 String totalStruktural1,
//                                                 String totalJabatanStruktural1,
//                                                 String totalStrategis1,
//                                                 String totalGajiGolongan1,
//                                                 String totalThr1,
//                                                 Payroll subRekap,
//                                                 String totalUmkLama,
//                                                 String totalPeralihanLama,
//                                                 String totalStrukturalLama,
//                                                 String totalJabatanStrukturalLama,
//                                                 String totalStrategisLama,
//                                                 String totalGajiGolonganLama,
//                                               String totalUmkBaru,
//                                               String totalPeralihanBaru,
//                                                 String totalStrukturalBaru,
//                                                 String totalJabatanStrukturalBaru,
//                                                 String totalStrategisBaru,
//                                                 String totalGajiGolonganBaru,
//                                               String totalUmk,
//                                               String totalPeralihan,
//                                                 String totalStruktural,
//                                                 String totalJabatanStruktural,
//                                                 String totalStrategis,
//                                                 String totalGajiGolongan,
//                                                 String totalThr,
//                                                 Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setBulan("");
//        payrollSubTotal.setGolonganId("");
//
//        payrollSubTotal.setTunjanganUmkLama(totalUmk1Lama);
//        payrollSubTotal.setTunjanganPeralihanLama(totalPeralihan1Lama);
//        payrollSubTotal.setTunjanganStrukturalLama(totalStruktural1Lama);
//        payrollSubTotal.setTunjanganJabatanStrukturalLama(totalJabatanStruktural1Lama);
//        payrollSubTotal.setTunjanganStrategisLama(totalStrategis1Lama);
//        payrollSubTotal.setGajiGolonganLama(totalGajiGolongan1Lama);
//
//        payrollSubTotal.setTunjanganUmkBaru(totalUmk1Baru);
//        payrollSubTotal.setTunjanganPeralihanBaru(totalPeralihan1Baru);
//        payrollSubTotal.setTunjanganStrukturalBaru(totalStruktural1Baru);
//        payrollSubTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStruktural1Baru);
//        payrollSubTotal.setTunjanganStrategisBaru(totalStrategis1Baru);
//        payrollSubTotal.setGajiGolonganBaru(totalGajiGolongan1Baru);
//
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1);
//        payrollSubTotal.setTunjanganStruktural(totalStruktural1);
//        payrollSubTotal.setTunjanganJabatanStruktural(totalJabatanStruktural1);
//        payrollSubTotal.setTunjanganStrategis(totalStrategis1);
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//
//        payrollSubTotal.setTotalThr(totalThr1);
//
//        payrollSubTotal.setTunjanganUmkLamaNilai(subRekap.getTunjanganUmkLamaNilai());
//        payrollSubTotal.setTunjanganPeralihanLamaNilai(subRekap.getTunjanganPeralihanLamaNilai());
//        payrollSubTotal.setTunjanganStrukturalLamaNilai(subRekap.getTunjanganStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalLamaNilai(subRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganStrategisLamaNilai(subRekap.getTunjanganStrategisLamaNilai());
//        payrollSubTotal.setGajiGolonganLamaNilai(subRekap.getGajiGolonganLamaNilai());
//
//        payrollSubTotal.setTunjanganUmkBaruNilai(subRekap.getTunjanganUmkBaruNilai());
//        payrollSubTotal.setTunjanganPeralihanBaruNilai(subRekap.getTunjanganPeralihanBaruNilai());
//        payrollSubTotal.setTunjanganStrukturalBaruNilai(subRekap.getTunjanganStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalBaruNilai(subRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganStrategisBaruNilai(subRekap.getTunjanganStrategisBaruNilai());
//        payrollSubTotal.setGajiGolonganBaruNilai(subRekap.getGajiGolonganBaruNilai());
//
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subRekap.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subRekap.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subRekap.getTunjanganStrategisNilai());
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//
//        payrollSubTotal.setTotalThrNilai(subRekap.getTotalThrNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPerumahan("");
//        payroll1.setTunjanganPph("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalGajiBersih("");
//        payroll1.setPphGaji("");
//        payroll1.setTotalA("");
//        payroll1.setTotalInsentif("");
//        payroll1.setTotalThr("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalJubileum("");
//        payroll1.setTotalB("");
//        payroll1.setTotalRapel("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganPeralihanLama(totalPeralihanLama);
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganStrategisLama(totalStrategisLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganPeralihanBaru(totalPeralihanBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganStrategisBaru(totalStrategisBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//
//        payrollTotal.setTotalThr(totalThr);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganPeralihanLamaNilai(totalRekap.getTunjanganPeralihanLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganPeralihanBaruNilai(totalRekap.getTunjanganPeralihanBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//
//        payrollTotal.setTotalThrNilai(totalRekap.getTotalThrNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalRapelPendidikan(String totalUmk1Lama,
//                                                 String totalPeralihan1Lama,
//                                                 String totalStruktural1Lama,
//                                                 String totalJabatanStruktural1Lama,
//                                                 String totalStrategis1Lama,
//                                                 String totalGajiGolongan1Lama,
//                                                 String totalAirListrik1Lama,
//                                                      String totalUmk1Baru,
//                                                      String totalPeralihan1Baru,
//                                                 String totalStruktural1Baru,
//                                                 String totalJabatanStruktural1Baru,
//                                                 String totalStrategis1Baru,
//                                                 String totalGajiGolongan1Baru,
//                                                 String totalAirListrik1Baru,
//                                                      String totalUmk1,
//                                                      String totalPeralihan1,
//                                                 String totalStruktural1,
//                                                 String totalJabatanStruktural1,
//                                                 String totalStrategis1,
//                                                 String totalGajiGolongan1,
//                                                 String totalAirListrik1,
//                                                 String totalPendidikan1,
//                                                 Payroll subRekap,
//                                                 String totalUmkLama,
//                                                 String totalPeralihanLama,
//                                                 String totalStrukturalLama,
//                                                 String totalJabatanStrukturalLama,
//                                                 String totalStrategisLama,
//                                                 String totalGajiGolonganLama,
//                                                 String totalAirListrikLama,
//                                                      String totalUmkBaru,
//                                                      String totalPeralihanBaru,
//                                                 String totalStrukturalBaru,
//                                                 String totalJabatanStrukturalBaru,
//                                                 String totalStrategisBaru,
//                                                 String totalGajiGolonganBaru,
//                                                 String totalAirListrikBaru,
//                                                      String totalUmk,
//                                                      String totalPeralihan,
//                                                 String totalStruktural,
//                                                 String totalJabatanStruktural,
//                                                 String totalStrategis,
//                                                 String totalGajiGolongan,
//                                                 String totalAirListrik,
//                                                 String totalPendidikan,
//                                                 Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setBulan("");
//        payrollSubTotal.setGolonganId("");
//
//        payrollSubTotal.setTunjanganPeralihanLama(totalPeralihan1Lama);
//        payrollSubTotal.setTunjanganUmkLama(totalUmk1Lama);
//        payrollSubTotal.setTunjanganStrukturalLama(totalStruktural1Lama);
//        payrollSubTotal.setTunjanganJabatanStrukturalLama(totalJabatanStruktural1Lama);
//        payrollSubTotal.setTunjanganStrategisLama(totalStrategis1Lama);
//        payrollSubTotal.setGajiGolonganLama(totalGajiGolongan1Lama);
//        payrollSubTotal.setTunjanganAirListrikLama(totalAirListrik1Lama);
//
//        payrollSubTotal.setTunjanganUmkBaru(totalUmk1Baru);
//        payrollSubTotal.setTunjanganPeralihanBaru(totalPeralihan1Baru);
//        payrollSubTotal.setTunjanganStrukturalBaru(totalStruktural1Baru);
//        payrollSubTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStruktural1Baru);
//        payrollSubTotal.setTunjanganStrategisBaru(totalStrategis1Baru);
//        payrollSubTotal.setGajiGolonganBaru(totalGajiGolongan1Baru);
//        payrollSubTotal.setTunjanganAirListrikBaru(totalAirListrik1Baru);
//
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1);
//        payrollSubTotal.setTunjanganStruktural(totalStruktural1);
//        payrollSubTotal.setTunjanganJabatanStruktural(totalJabatanStruktural1);
//        payrollSubTotal.setTunjanganStrategis(totalStrategis1);
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//        payrollSubTotal.setTunjanganAirListrik(totalAirListrik1);
//
//        payrollSubTotal.setTotalPendidikan(totalPendidikan1);
//
//        payrollSubTotal.setTunjanganUmkLamaNilai(subRekap.getTunjanganUmkLamaNilai());
//        payrollSubTotal.setTunjanganPeralihanLamaNilai(subRekap.getTunjanganPeralihanLamaNilai());
//        payrollSubTotal.setTunjanganStrukturalLamaNilai(subRekap.getTunjanganStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalLamaNilai(subRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganStrategisLamaNilai(subRekap.getTunjanganStrategisLamaNilai());
//        payrollSubTotal.setGajiGolonganLamaNilai(subRekap.getGajiGolonganLamaNilai());
//        payrollSubTotal.setTunjanganAirListrikLamaNilai(subRekap.getTunjanganAirListrikLamaNilai());
//
//        payrollSubTotal.setTunjanganUmkBaruNilai(subRekap.getTunjanganUmkBaruNilai());
//        payrollSubTotal.setTunjanganPeralihanBaruNilai(subRekap.getTunjanganPeralihanBaruNilai());
//        payrollSubTotal.setTunjanganStrukturalBaruNilai(subRekap.getTunjanganStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalBaruNilai(subRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganStrategisBaruNilai(subRekap.getTunjanganStrategisBaruNilai());
//        payrollSubTotal.setGajiGolonganBaruNilai(subRekap.getGajiGolonganBaruNilai());
//        payrollSubTotal.setTunjanganAirListrikBaruNilai(subRekap.getTunjanganAirListrikBaruNilai());
//
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subRekap.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subRekap.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subRekap.getTunjanganStrategisNilai());
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//        payrollSubTotal.setTunjanganAirListrikNilai(subRekap.getTunjanganAirListrikNilai());
//
//        payrollSubTotal.setTotalPendidikanNilai(subRekap.getTotalPendidikanNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPerumahan("");
//        payroll1.setTunjanganPph("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalGajiBersih("");
//        payroll1.setPphGaji("");
//        payroll1.setTotalA("");
//        payroll1.setTotalInsentif("");
//        payroll1.setTotalThr("");
//        payroll1.setTotalPendidikan("");
//        payroll1.setTotalJubileum("");
//        payroll1.setTotalB("");
//        payroll1.setTotalRapel("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganUmk(totalUmk);
//
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganStrategisLama(totalStrategisLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//        payrollTotal.setTunjanganAirListrikLama(totalAirListrikLama);
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganPeralihanLama(totalPeralihanLama);
//
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganPeralihanBaru(totalPeralihanBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganStrategisBaru(totalStrategisBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//        payrollTotal.setTunjanganAirListrikBaru(totalAirListrikBaru);
//
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganAirListrik(totalAirListrik);
//
//        payrollTotal.setTotalPendidikan(totalPendidikan);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganPeralihanLamaNilai(totalRekap.getTunjanganPeralihanLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//        payrollTotal.setTunjanganAirListrikLamaNilai(totalRekap.getTunjanganAirListrikLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganPeralihanBaruNilai(totalRekap.getTunjanganPeralihanBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//        payrollTotal.setTunjanganAirListrikBaruNilai(totalRekap.getTunjanganAirListrikBaruNilai());
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganAirListrikNilai(totalRekap.getTunjanganAirListrikNilai());
//
//        payrollTotal.setTotalPendidikanNilai(totalRekap.getTotalPendidikanNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalRapelInsentif(String totalUmk1Lama,
//                                                 String totalStruktural1Lama,
//                                                 String totalJabatanStruktural1Lama,
//                                                 String totalStrategis1Lama,
//                                                 String totalGajiGolongan1Lama,
//                                                 String totalPeralihan1Lama,
//                                                      String totalUmk1Baru,
//                                                 String totalStruktural1Baru,
//                                                 String totalJabatanStruktural1Baru,
//                                                 String totalStrategis1Baru,
//                                                 String totalGajiGolongan1Baru,
//                                                 String totalPeralihan1Baru,
//                                                    String grandTotalBrutoInsentifLama1,
//                                                    String grandTotalBrutoInsentifBaru1,
//                                                    String grandTotalInsentifIndividuLama1,
//                                                    String grandTotalInsentifIndividu1,
//                                                    String grandTotalInsentifDiterimaLama1,
//                                                    String grandTotalInsentifDiterimaBaru1,
//                                                    String grandTotalInsentifDiterimaSelisih1,
//                                                    Payroll subRekap,
//                                                    String totalUmkLama,
//                                                 String totalStrukturalLama,
//                                                 String totalJabatanStrukturalLama,
//                                                 String totalStrategisLama,
//                                                 String totalGajiGolonganLama,
//                                                 String totalPeralihanLama,
//                                                      String totalUmkBaru,
//                                                 String totalStrukturalBaru,
//                                                 String totalJabatanStrukturalBaru,
//                                                 String totalStrategisBaru,
//                                                 String totalGajiGolonganBaru,
//                                                 String totalPeralihanBaru,
//                                                    String grandTotalBrutoInsentifLama,
//                                                    String grandTotalBrutoInsentifBaru,
//                                                    String grandTotalInsentifIndividuLama,
//                                                    String grandTotalInsentifIndividu,
//                                                    String grandTotalInsentifDiterimaLama,
//                                                    String grandTotalInsentifDiterimaBaru,
//                                                    String grandTotalInsentifDiterimaSelisih,
//                                                 Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setMasaKerja("");
//        payrollSubTotal.setGolonganId("");
//        payrollSubTotal.setPotonganInsentif("");
//        payrollSubTotal.setPotonganInsentifIndividu("");
//        payrollSubTotal.setPotonganInsentifIndividuLama("");
//        payrollSubTotal.setSmkStandart("");
//        payrollSubTotal.setSmkHuruf("");
//        payrollSubTotal.setSmkAngka("");
//        payrollSubTotal.setInsentifDiterimaLama("");
//        payrollSubTotal.setInsentifDiterima("");
//        payrollSubTotal.setTotalInsentif("");
//
//        payrollSubTotal.setTunjanganUmkLama(totalUmk1Lama);
//        payrollSubTotal.setTunjanganStrukturalLama(totalStruktural1Lama);
//        payrollSubTotal.setTunjanganJabatanStrukturalLama(totalJabatanStruktural1Lama);
//        payrollSubTotal.setTunjanganStrategisLama(totalStrategis1Lama);
//        payrollSubTotal.setGajiGolonganLama(totalGajiGolongan1Lama);
//        payrollSubTotal.setTunjanganPeralihanLama(totalPeralihan1Lama);
//
//        payrollSubTotal.setTunjanganUmkBaru(totalUmk1Baru);
//        payrollSubTotal.setTunjanganStrukturalBaru(totalStruktural1Baru);
//        payrollSubTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStruktural1Baru);
//        payrollSubTotal.setTunjanganStrategisBaru(totalStrategis1Baru);
//        payrollSubTotal.setGajiGolonganBaru(totalGajiGolongan1Baru);
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1Baru);
//
//        payrollSubTotal.setBrutoInsentifLama(grandTotalBrutoInsentifLama1);
//        payrollSubTotal.setTotalA(grandTotalBrutoInsentifBaru1);
//        payrollSubTotal.setPotonganInsentifIndividuLama(grandTotalInsentifIndividuLama1);
//        payrollSubTotal.setPotonganInsentifIndividu(grandTotalInsentifIndividu1);
//        payrollSubTotal.setInsentifDiterimaLama(grandTotalInsentifDiterimaLama1);
//        payrollSubTotal.setInsentifDiterima(grandTotalInsentifDiterimaBaru1);
//        payrollSubTotal.setTotalInsentif(grandTotalInsentifDiterimaSelisih1);
//
//        payrollSubTotal.setTunjanganUmkLamaNilai(subRekap.getTunjanganUmkLamaNilai());
//        payrollSubTotal.setTunjanganStrukturalLamaNilai(subRekap.getTunjanganStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalLamaNilai(subRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollSubTotal.setTunjanganStrategisLamaNilai(subRekap.getTunjanganStrategisLamaNilai());
//        payrollSubTotal.setGajiGolonganLamaNilai(subRekap.getGajiGolonganLamaNilai());
//        payrollSubTotal.setTunjanganPeralihanLamaNilai(subRekap.getTunjanganPeralihanLamaNilai());
//
//        payrollSubTotal.setTunjanganUmkBaruNilai(subRekap.getTunjanganUmkBaruNilai());
//        payrollSubTotal.setTunjanganStrukturalBaruNilai(subRekap.getTunjanganStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalBaruNilai(subRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollSubTotal.setTunjanganStrategisBaruNilai(subRekap.getTunjanganStrategisBaruNilai());
//        payrollSubTotal.setGajiGolonganBaruNilai(subRekap.getGajiGolonganBaruNilai());
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//
//        payrollSubTotal.setBrutoInsentifLamaNilai(subRekap.getBrutoInsentifLamaNilai());
//        payrollSubTotal.setTotalANilai(subRekap.getTotalANilai());
//        payrollSubTotal.setPotonganInsentifIndividuLamaNilai(subRekap.getPotonganInsentifIndividuLamaNilai());
//        payrollSubTotal.setPotonganInsentifIndividuNilai(subRekap.getPotonganInsentifIndividuNilai());
//        payrollSubTotal.setInsentifDiterimaLamaNilai(subRekap.getInsentifDiterimaLamaNilai());
//        payrollSubTotal.setInsentifDiterimaNilai(subRekap.getInsentifDiterimaNilai());
//        payrollSubTotal.setTotalInsentifNilai(subRekap.getTotalInsentifNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganUmkBaru("");
//        payroll1.setTunjanganStrukturalBaru("");
//        payroll1.setTunjanganJabatanStrukturalBaru("");
//        payroll1.setTunjanganStrategisBaru("");
//        payroll1.setTunjanganPerumahanBaru("");
//        payroll1.setGajiGolonganBaru("");
//        payroll1.setTotalA("");
//        payroll1.setMasaKerja("");
//        payroll1.setPotonganInsentif("");
//        payroll1.setPotonganInsentifIndividu("");
//        payroll1.setSmkStandart("");
//        payroll1.setSmkHuruf("");
//        payroll1.setSmkAngka("");
//        payroll1.setInsentifDiterimaLama("");
//        payroll1.setInsentifDiterima("");
//        payroll1.setTotalInsentif("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setMasaKerja("");
//        payrollTotal.setPotonganInsentif("");
//        payrollTotal.setSmkStandart("");
//        payrollTotal.setSmkAngka("");
//        payrollTotal.setSmkHuruf("");
//
//        payrollTotal.setTunjanganUmkLama(totalUmkLama);
//        payrollTotal.setTunjanganStrukturalLama(totalStrukturalLama);
//        payrollTotal.setTunjanganJabatanStrukturalLama(totalJabatanStrukturalLama);
//        payrollTotal.setTunjanganStrategisLama(totalStrategisLama);
//        payrollTotal.setGajiGolonganLama(totalGajiGolonganLama);
//        payrollTotal.setTunjanganPeralihanLama(totalPeralihanLama);
//
//        payrollTotal.setTunjanganUmkBaru(totalUmkBaru);
//        payrollTotal.setTunjanganStrukturalBaru(totalStrukturalBaru);
//        payrollTotal.setTunjanganJabatanStrukturalBaru(totalJabatanStrukturalBaru);
//        payrollTotal.setTunjanganStrategisBaru(totalStrategisBaru);
//        payrollTotal.setGajiGolonganBaru(totalGajiGolonganBaru);
//        payrollTotal.setTunjanganPeralihan(totalPeralihanBaru);
//
//        payrollTotal.setBrutoInsentifLama(grandTotalBrutoInsentifLama);
//        payrollTotal.setTotalA(grandTotalBrutoInsentifBaru);
//        payrollTotal.setPotonganInsentifIndividuLama(grandTotalInsentifIndividuLama);
//        payrollTotal.setPotonganInsentifIndividu(grandTotalInsentifIndividu);
//        payrollTotal.setInsentifDiterimaLama(grandTotalInsentifDiterimaLama);
//        payrollTotal.setInsentifDiterima(grandTotalInsentifDiterimaBaru);
//        payrollTotal.setTotalInsentif(grandTotalInsentifDiterimaSelisih);
//
//        payrollTotal.setTunjanganUmkLamaNilai(totalRekap.getTunjanganUmkLamaNilai());
//        payrollTotal.setTunjanganStrukturalLamaNilai(totalRekap.getTunjanganStrukturalLamaNilai());
//        payrollTotal.setTunjanganJabatanStrukturalLamaNilai(totalRekap.getTunjanganJabatanStrukturalLamaNilai());
//        payrollTotal.setTunjanganStrategisLamaNilai(totalRekap.getTunjanganStrategisLamaNilai());
//        payrollTotal.setGajiGolonganLamaNilai(totalRekap.getGajiGolonganLamaNilai());
//        payrollTotal.setTunjanganPeralihanLamaNilai(totalRekap.getTunjanganPeralihanLamaNilai());
//
//        payrollTotal.setTunjanganUmkBaruNilai(totalRekap.getTunjanganUmkBaruNilai());
//        payrollTotal.setTunjanganStrukturalBaruNilai(totalRekap.getTunjanganStrukturalBaruNilai());
//        payrollTotal.setTunjanganJabatanStrukturalBaruNilai(totalRekap.getTunjanganJabatanStrukturalBaruNilai());
//        payrollTotal.setTunjanganStrategisBaruNilai(totalRekap.getTunjanganStrategisBaruNilai());
//        payrollTotal.setGajiGolonganBaruNilai(totalRekap.getGajiGolonganBaruNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//
//        payrollTotal.setBrutoInsentifLamaNilai(totalRekap.getBrutoInsentifLamaNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setPotonganInsentifIndividuLamaNilai(totalRekap.getPotonganInsentifIndividuLamaNilai());
//        payrollTotal.setPotonganInsentifIndividuNilai(totalRekap.getPotonganInsentifIndividuNilai());
//        payrollTotal.setInsentifDiterimaLamaNilai(totalRekap.getInsentifDiterimaLamaNilai());
//        payrollTotal.setInsentifDiterimaNilai(totalRekap.getInsentifDiterimaNilai());
//        payrollTotal.setTotalInsentifNilai(totalRekap.getTotalInsentifNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalRapelLembur(String totalUmk1,
//                                                 String totalGajiGolongan1,
//                                                 String totalPeralihan1,
//                                                 String totalJamLembur1,
//                                                 String totalBiayaLama1,
//                                                 String totalBiayaBaru1,
//                                                 String totalSelisihBiayaBaru1,
//                                                 Payroll subRekap,
//                                                  String totalUmk,
//                                                  String totalGajiGolongan,
//                                                  String totalPeralihan,
//                                                  String totalJamLembur,
//                                                  String totalBiayaLama,
//                                                  String totalBiayaBaru,
//                                                  String totalSelisihBiayaBaru,
//                                                 Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setBulan("");
//        payrollSubTotal.setGolonganId("");
//
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1);
//
//        payrollSubTotal.setStrJamLembur(totalJamLembur1);
//        payrollSubTotal.setStrBiayaLemburLama(totalBiayaLama1);
//        payrollSubTotal.setStrBiayaLemburBaru(totalBiayaBaru1);
//        payrollSubTotal.setStrselisihBiayaLemburBaru(totalSelisihBiayaBaru1);
//
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//
//        payrollSubTotal.setJamLembur(subRekap.getJamLembur());
//        payrollSubTotal.setBiayaLemburLama(subRekap.getBiayaLemburLama());
//        payrollSubTotal.setBiayaLemburBaru(subRekap.getBiayaLemburBaru());
//        payrollSubTotal.setSelisihBiayaLemburBaru(subRekap.getSelisihBiayaLemburBaru());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setKompensasi("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setGajiGolongan("");
//
//        payroll1.setStrJamLembur("");
//        payroll1.setStrBiayaLemburLama("");
//        payroll1.setStrBiayaLemburBaru("");
//        payroll1.setStrselisihBiayaLemburBaru("");
//
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//
//        payrollTotal.setStrJamLembur(totalJamLembur);
//        payrollTotal.setStrBiayaLemburLama(totalBiayaLama);
//        payrollTotal.setStrBiayaLemburBaru(totalBiayaBaru);
//        payrollTotal.setStrselisihBiayaLemburBaru(totalSelisihBiayaBaru);
//
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//
//        payrollTotal.setJamLembur(totalRekap.getJamLembur());
//        payrollTotal.setBiayaLemburLama(totalRekap.getBiayaLemburLama());
//        payrollTotal.setBiayaLemburBaru(totalRekap.getBiayaLemburBaru());
//        payrollTotal.setSelisihBiayaLemburBaru(totalRekap.getSelisihBiayaLemburBaru());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalJasprod( String totalGajiGolongan1,
//                                               String totalUmk1,
//                                               String totalStruktural1,
//                                               String totalJabatanStruktural1,
//                                               String totalPeralihan1,
//                                               String totalStrategis1,
//                                               String totalGajiBruto1,
//                                               String totalGajiXmasaKerja1,
//                                               String totalPersenSmk1,
//                                               String totalNilaiSmk1,
//                                               String totalPerhitungan1,
//                                               String totalGajiXfaktorNormal1,
//                                               String totalTambahan1,
//                                               String totalBruto1,
//                                               String totalPajak1,
//                                               String totalBersih1,
//                                               String totalKoperasi1,
//                                               String totalDansos1,
//                                               String totalLain1,
//
//                                               Payroll subRekap,
//
//                                               String totalGajiGolongan,
//                                               String totalUmk,
//                                               String totalStruktural,
//                                               String totalJabatanStruktural,
//                                               String totalPeralihan,
//                                               String totalStrategis,
//                                               String totalGajiBruto,
//                                               String totalGajiXmasaKerja,
//                                               String totalPersenSmk,
//                                               String totalNilaiSmk,
//                                               String totalPerhitungan,
//                                               String totalGajiXfaktorNormal,
//                                               String totalTambahan,
//                                               String totalBruto,
//                                               String totalPajak,
//                                               String totalBersih,
//                                               String totalKoperasi,
//                                               String totalDansos,
//                                               String totalLain,
//
//                                               Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setTunjanganStruktural(totalStruktural1);
//        payrollSubTotal.setTunjanganJabatanStruktural(totalJabatanStruktural1);
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1);
//        payrollSubTotal.setTunjanganStrategis(totalStrategis1);
//        payrollSubTotal.setMasaKerja("");
//        payrollSubTotal.setFaktorKaliSmk("");
//        payrollSubTotal.setTotalA(totalGajiBruto1);
//        payrollSubTotal.setGajiMasaKerja(totalGajiXmasaKerja1);
//        payrollSubTotal.setPersenSmk(totalPersenSmk1);
//        payrollSubTotal.setNilaiSmk(totalNilaiSmk1);
//        payrollSubTotal.setPerhitungan(totalPerhitungan1);
//        payrollSubTotal.setGajiXfaktorNormal(totalGajiXfaktorNormal1);
//        payrollSubTotal.setTambahan(totalTambahan1);
//        payrollSubTotal.setBrutoJasprod(totalBruto1);
//        payrollSubTotal.setPphJasprod(totalPajak1);
//        payrollSubTotal.setNettoJasprod(totalBersih1);
//        payrollSubTotal.setKoperasi(totalKoperasi1);
//        payrollSubTotal.setDansos(totalDansos1);
//        payrollSubTotal.setLainLain(totalLain1);
//
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subRekap.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subRekap.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subRekap.getTunjanganStrategisNilai());
//        payrollSubTotal.setMasaKerja("");
//        payrollSubTotal.setFaktorKali("");
//        payrollSubTotal.setTotalANilai(subRekap.getTotalANilai());
//        payrollSubTotal.setGajiMasaKerjaNilai(subRekap.getGajiMasaKerjaNilai());
//        payrollSubTotal.setPersenSmkNilai(subRekap.getPersenSmkNilai());
//        payrollSubTotal.setNilaiSmkNilai(subRekap.getNilaiSmkNilai());
//        payrollSubTotal.setPerhitunganNilai(subRekap.getPerhitunganNilai());
//        payrollSubTotal.setGajiXfaktorNormalNilai(subRekap.getGajiXfaktorNormalNilai());
//        payrollSubTotal.setTotalTambahanNilai(subRekap.getTambahanNilai());
//        payrollSubTotal.setTambahanNilai(subRekap.getTambahanNilai());
//        payrollSubTotal.setBrutoJasprodNilai(subRekap.getBrutoJasprodNilai());
//        payrollSubTotal.setPphJasprodNilai(subRekap.getPphJasprodNilai());
//        payrollSubTotal.setNettoJasprodNilai(subRekap.getNettoJasprodNilai());
//        payrollSubTotal.setKoperasiNilai(subRekap.getKoperasiNilai());
//        payrollSubTotal.setDansosNilai(subRekap.getDansosNilai());
//        payrollSubTotal.setLainLainNilai(subRekap.getLainLainNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTotalA("");
//        payroll1.setMasaKerja("");
//        payroll1.setGajiMasaKerja("");
//        payroll1.setFaktorKali("");
//        payroll1.setPersenSmk("");
//        payroll1.setNilaiSmk("");
//        payroll1.setPerhitungan("");
//        payroll1.setGajiXfaktorNormal("");
//        payroll1.setTambahan("");
//        payroll1.setBrutoJasprod("");
//        payroll1.setPphJasprod("");
//        payroll1.setNettoJasprod("");
//        payroll1.setKoperasi("");
//        payroll1.setDansos("");
//        payroll1.setLainLain("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setTotalA(totalGajiBruto);
//        payrollTotal.setGajiMasaKerja(totalGajiXmasaKerja);
//        payrollTotal.setPersenSmk(totalPersenSmk);
//        payrollTotal.setNilaiSmk(totalNilaiSmk);
//        payrollTotal.setPerhitungan(totalPerhitungan);
//        payrollTotal.setGajiXfaktorNormal(totalGajiXfaktorNormal);
//        payrollTotal.setTambahan(totalTambahan);
//        payrollTotal.setBrutoJasprod(totalBruto);
//        payrollTotal.setPphJasprod(totalPajak);
//        payrollTotal.setNettoJasprod(totalBersih);
//        payrollTotal.setKoperasi(totalKoperasi);
//        payrollTotal.setDansos(totalDansos);
//        payrollTotal.setLainLain(totalLain);
//
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setGajiMasaKerjaNilai(totalRekap.getGajiMasaKerjaNilai());
//        payrollTotal.setMasaKerja("");
//        payrollTotal.setFaktorKali("");
//        payrollTotal.setPersenSmkNilai(totalRekap.getPersenSmkNilai());
//        payrollTotal.setNilaiSmkNilai(totalRekap.getNilaiSmkNilai());
//        payrollTotal.setPerhitunganNilai(totalRekap.getPerhitunganNilai());
//
//        payrollTotal.setGajiXfaktorNormalNilai(totalRekap.getGajiXfaktorNormalNilai());
//        payrollTotal.setTambahanNilai(totalRekap.getTambahanNilai());
//        payrollTotal.setBrutoJasprodNilai(totalRekap.getBrutoJasprodNilai());
//        payrollTotal.setPphJasprodNilai(totalRekap.getPphJasprodNilai());
//        payrollTotal.setNettoJasprodNilai(totalRekap.getNettoJasprodNilai());
//        payrollTotal.setKoperasiNilai(totalRekap.getKoperasiNilai());
//        payrollTotal.setDansosNilai(totalRekap.getDansosNilai());
//        payrollTotal.setLainLainNilai(totalRekap.getLainLainNilai());
//
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalInsentif( String totalGajiGolongan1,
//                                               String totalUmk1,
//                                               String totalStruktural1,
//                                               String totalJabatanStruktural1,
//                                               String totalPeralihan1,
//                                               String totalStrategis1,
//                                               String totalGajiBruto1,
//                                               String totalPotInsentifIndividu1,
//                                               String totalInsentifDiterima1,
//                                               String totalPph1,
//                                               String totalPphLain1,
//                                               String totalBersih1,
//
//                                               Payroll subRekap,
//
//                                               String totalGajiGolongan,
//                                               String totalUmk,
//                                               String totalStruktural,
//                                               String totalJabatanStruktural,
//                                               String totalPeralihan,
//                                               String totalStrategis,
//                                               String totalGajiBruto,
//                                               String totalPotInsentifIndividu,
//                                               String totalInsentifDiterima,
//                                               String totalPph,
//                                               String totalPphLain,
//                                               String totalBersih,
//
//                                               Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setTunjanganStruktural(totalStruktural1);
//        payrollSubTotal.setTunjanganJabatanStruktural(totalJabatanStruktural1);
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1);
//        payrollSubTotal.setTunjanganStrategis(totalStrategis1);
//        payrollSubTotal.setTotalA(totalGajiBruto1);
//        payrollSubTotal.setMasaKerja("");
//        payrollSubTotal.setPotonganInsentif("");
//        payrollSubTotal.setSmkStandart("");
//        payrollSubTotal.setSmkHuruf("");
//        payrollSubTotal.setSmkAngka("");
//        payrollSubTotal.setPotonganInsentifIndividu(totalPotInsentifIndividu1);
//        payrollSubTotal.setInsentifDiterima(totalInsentifDiterima1);
//        payrollSubTotal.setPphGaji(totalPph1);
//        payrollSubTotal.setPotPphLain(totalPphLain1);
//        payrollSubTotal.setTotalInsentif(totalBersih1);
//
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subRekap.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subRekap.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subRekap.getTunjanganStrategisNilai());
//        payrollSubTotal.setTotalANilai(subRekap.getTotalANilai());
//        payrollSubTotal.setPotonganInsentifIndividuNilai(subRekap.getPotonganInsentifIndividuNilai());
//        payrollSubTotal.setInsentifDiterimaNilai(subRekap.getInsentifDiterimaNilai());
//        payrollSubTotal.setPphGajiNilai(subRekap.getPphGajiNilai());
//        payrollSubTotal.setPotPphLainNilai(subRekap.getPotPphLainNilai());
//        payrollSubTotal.setTotalInsentifNilai(subRekap.getTotalInsentifNilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//
//        payroll1.setGajiGolongan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTotalA("");
//        payroll1.setMasaKerja("");
//        payroll1.setPotonganInsentif("");
//        payroll1.setSmkStandart("");
//        payroll1.setSmkHuruf("");
//        payroll1.setSmkAngka("");
//        payroll1.setPotonganInsentifIndividu("");
//        payroll1.setInsentifDiterima("");
//        payroll1.setPphGaji("");
//        payroll1.setPotPphLain("");
//        payroll1.setTotalInsentif("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total");
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setTotalA(totalGajiBruto);
//        payrollTotal.setMasaKerja("");
//        payrollTotal.setPotonganInsentif("");
//        payrollTotal.setSmkStandart("");
//        payrollTotal.setSmkHuruf("");
//        payrollTotal.setSmkAngka("");
//        payrollTotal.setPotonganInsentifIndividu(totalPotInsentifIndividu);
//        payrollTotal.setInsentifDiterima(totalInsentifDiterima);
//        payrollTotal.setPphGaji(totalPph);
//        payrollTotal.setPotPphLain(totalPphLain);
//        payrollTotal.setTotalInsentif(totalBersih);
//
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//        payrollTotal.setPotonganInsentifIndividuNilai(totalRekap.getPotonganInsentifIndividuNilai());
//        payrollTotal.setInsentifDiterimaNilai(totalRekap.getInsentifDiterimaNilai());
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setPotPphLainNilai(totalRekap.getPotPphLainNilai());
//        payrollTotal.setTotalInsentifNilai(totalRekap.getTotalInsentifNilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }
//
//    private List<Payroll> payrollTotalThr(String totalPeralihan1,
//                                          String totalUmk1,
//                                          String totalStruktural1,
//                                          String totalJabatanStruktural1,
//                                          String totalStrategis1,
//                                          String totalTunjanganPph1,
//                                          String totalGajiGolongan1,
//                                          String totalThr1,
//                                          String totalThrBersih1,
//                                          String totalPphGaji1,
//                                          String totalA1,
//                                          Payroll subRekap,
//                                          String totalPeralihan,
//                                          String totalUmk,
//                                          String totalStruktural,
//                                          String totalJabatanStruktural,
//                                          String totalStrategis,
//                                          String totalTunjanganPph,
//                                          String totalGajiGolongan,
//                                          String totalThr,
//                                          String totalThrBersih,
//                                          String totalPphGaji,
//                                          String totalA,
//                                          Payroll totalRekap){
//        Payroll payrollSubTotal = new Payroll();
//        Payroll payroll1 = new Payroll();
//        Payroll payrollTotal = new Payroll();
//
//        List<Payroll> payroll = new ArrayList<>();
//
//        payrollSubTotal.setPayrollId("");
//        payrollSubTotal.setNip("");
//        payrollSubTotal.setNama("Total");
//        payrollSubTotal.setStatusKeluarga("");
//        payrollSubTotal.setBulan("");
//        payrollSubTotal.setGolonganId("");
//        payrollSubTotal.setTunjanganPeralihan(totalPeralihan1);
//        payrollSubTotal.setTunjanganUmk(totalUmk1);
//        payrollSubTotal.setTunjanganStruktural(totalStruktural1);
//        payrollSubTotal.setTunjanganJabatanStruktural(totalJabatanStruktural1);
//        payrollSubTotal.setTunjanganStrategis(totalStrategis1);
//        payrollSubTotal.setTunjanganPph(totalTunjanganPph1);
//        payrollSubTotal.setGajiGolongan(totalGajiGolongan1);
//        payrollSubTotal.setTotalThr(totalThr1);
//        payrollSubTotal.setTotalGajiBersih(totalThrBersih1);
//        payrollSubTotal.setPphGaji(totalPphGaji1);
//        payrollSubTotal.setTotalA(totalA1);
//
//        payrollSubTotal.setTunjanganPeralihanNilai(subRekap.getTunjanganPeralihanNilai());
//        payrollSubTotal.setTunjanganUmkNilai(subRekap.getTunjanganUmkNilai());
//        payrollSubTotal.setTunjanganStrukturalNilai(subRekap.getTunjanganStrukturalNilai());
//        payrollSubTotal.setTunjanganJabatanStrukturalNilai(subRekap.getTunjanganJabatanStrukturalNilai());
//        payrollSubTotal.setTunjanganStrategisNilai(subRekap.getTunjanganStrategisNilai());
//        payrollSubTotal.setTunjanganPphNilai(subRekap.getTunjanganPphNilai());
//        payrollSubTotal.setGajiGolonganNilai(subRekap.getGajiGolonganNilai());
//        payrollSubTotal.setTotalThrNilai(subRekap.getTotalThrNilai());
//        payrollSubTotal.setTotalGajiBersihNilai(subRekap.getTotalGajiBersihNilai());
//        payrollSubTotal.setPphGajiNilai(subRekap.getPphGajiNilai());
//        payrollSubTotal.setTotalANilai(subRekap.getTotalANilai());
//
//        payroll1.setPayrollId("");
//        payroll1.setNip("");
//        payroll1.setNama("");
//        payroll1.setStatusKeluarga("");
//        payroll1.setGolonganId("");
//        payroll1.setBulan("");
//        payroll1.setTunjanganUmk("");
//        payroll1.setTunjanganStruktural("");
//        payroll1.setTunjanganJabatanStruktural("");
//        payroll1.setTunjanganStrategis("");
//        payroll1.setTunjanganPeralihan("");
//        payroll1.setTunjanganAirListrik("");
//        payroll1.setTunjanganPph("");
//        payroll1.setGajiGolongan("");
//        payroll1.setTotalThr("");
//        payroll1.setTotalGajiBersih("");
//        payroll1.setPphGaji("");
//        payroll1.setTotalA("");
//
//        payrollTotal.setPayrollId("");
//        payrollTotal.setNip("");
//        payrollTotal.setNama("Total Keseluruhan");
//        payrollTotal.setStatusKeluarga("");
//        payrollTotal.setGolonganId("");
//        payrollTotal.setBulan("");
//        payrollTotal.setTunjanganPeralihan(totalPeralihan);
//        payrollTotal.setTunjanganUmk(totalUmk);
//        payrollTotal.setTunjanganStruktural(totalStruktural);
//        payrollTotal.setTunjanganJabatanStruktural(totalJabatanStruktural);
//        payrollTotal.setTunjanganStrategis(totalStrategis);
//        payrollTotal.setTunjanganPph(totalTunjanganPph);
//        payrollTotal.setGajiGolongan(totalGajiGolongan);
//        payrollTotal.setTotalThr(totalThr);
//        payrollTotal.setTotalGajiBersih(totalThrBersih);
//        payrollTotal.setPphGaji(totalPphGaji);
//        payrollTotal.setTotalA(totalA);
//
//        payrollTotal.setTunjanganPeralihanNilai(totalRekap.getTunjanganPeralihanNilai());
//        payrollTotal.setTunjanganUmkNilai(totalRekap.getTunjanganUmkNilai());
//        payrollTotal.setTunjanganStrukturalNilai(totalRekap.getTunjanganStrukturalNilai());
//        payrollTotal.setTunjanganJabatanStrukturalNilai(totalRekap.getTunjanganJabatanStrukturalNilai());
//        payrollTotal.setTunjanganStrategisNilai(totalRekap.getTunjanganStrategisNilai());
//        payrollTotal.setTunjanganPphNilai(totalRekap.getTunjanganPphNilai());
//        payrollTotal.setGajiGolonganNilai(totalRekap.getGajiGolonganNilai());
//        payrollTotal.setTotalThrNilai(totalRekap.getTotalThrNilai());
//        payrollTotal.setTotalGajiBersihNilai(totalRekap.getTotalGajiBersihNilai());
//        payrollTotal.setPphGajiNilai(totalRekap.getPphGajiNilai());
//        payrollTotal.setTotalANilai(totalRekap.getTotalANilai());
//
//        payroll.add(payrollSubTotal);
//        payroll.add(payroll1);
//        payroll.add(payrollTotal);
//        return payroll;
//    }

//    private List<StrukturJabatan> strukturJabatanList = new ArrayList();
//    private List <StrukturJabatan> getPerBagianSys(String branchId, String statusPegawai) throws GeneralBOException {
//        List<ImStrukturJabatanEntity> imStrukturJabatanEntities  = strukturJabatanDao.getPerBagianBranchDao(branchId);
//        List<StrukturJabatan> strukturJabatans  = new ArrayList<>();
//        List<String>listBagian = new ArrayList<>();
//        if(imStrukturJabatanEntities.size() > 0){
//            strukturJabatanList.clear();
//            for(ImStrukturJabatanEntity imStrukturJabatanEntity : imStrukturJabatanEntities){
//                if(!imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("4")){
//                    StrukturJabatan itemComboStrukturJabatan = new StrukturJabatan();
//
//                    itemComboStrukturJabatan.setStrukturJabatanId(imStrukturJabatanEntity.getStrukturJabatanId());
//                    itemComboStrukturJabatan.setParentId(imStrukturJabatanEntity.getParentId());
//                    itemComboStrukturJabatan.setBranchId(imStrukturJabatanEntity.getBranchId());
//                    itemComboStrukturJabatan.setPositionId(imStrukturJabatanEntity.getPositionId());
//                    itemComboStrukturJabatan.setPositionName(imStrukturJabatanEntity.getPositionName());
//                    itemComboStrukturJabatan.setPositionKelompokId(imStrukturJabatanEntity.getKelompokId());
//                    itemComboStrukturJabatan.setNip(imStrukturJabatanEntity.getNip());
//                    itemComboStrukturJabatan.setName(imStrukturJabatanEntity.getNamaPegawai());
//                    itemComboStrukturJabatan.setStatusPegawai(imStrukturJabatanEntity.getStatusPegawai());
//
//                    getListStruktur(imStrukturJabatanEntity.getStrukturJabatanId());
//
//                    String bagian[] = itemComboStrukturJabatan.getPositionName().split(" ");
//                    String bagian1 = "Bagian ";
//
//                    for(int a = 0 ; a < bagian.length; a++){
//                        if(bagian[a].equalsIgnoreCase("Bagian")){
//                            for(int b = a ; b < bagian.length - 1; b++){
//                                bagian1 += " " + bagian[b + 1];
//                            }
//                            if (("Bagian  Pemeriksa Non Ops").equalsIgnoreCase(bagian1)||("Bagian  Pemeriksa Operasional").equalsIgnoreCase(bagian1)){
//                                bagian1="Bagian  SPI";
//                            }else if (("Bagian  Agronomi").equalsIgnoreCase(bagian1)||("Bagian  Sosial Ekonomi").equalsIgnoreCase(bagian1)){
//                                bagian1="Bagian  Tanaman";
//                            }else if (("Bagian  Risk Management dan GCG").equalsIgnoreCase(bagian1)){
//                                bagian1="Bagian  Sekretaris Perusahaan";
//                            }
//                            break;
//                        }else if(bagian[a].equalsIgnoreCase("General")){
//                            bagian1 = "Bagian  Akuntansi";
//                            break;
//                        }
//                    }
//
//                    boolean bagianAda = false;
//                    for(String s: listBagian){
//                        if(s.equalsIgnoreCase(bagian1)){
//                            bagianAda = true;
//                            break;
//                        }
//                    }
//                    if(bagianAda == false){
//                        listBagian.add(bagian1);
//                    }
//
//                    itemComboStrukturJabatan.setBagian(bagian1);
//                    strukturJabatans.add(itemComboStrukturJabatan);
//
//                    boolean ada = false;
//                    for(StrukturJabatan strukturJabatan: strukturJabatanList){
//                        for(StrukturJabatan strukturJabatan1 : strukturJabatans){
//                            if(strukturJabatan.getNip().equalsIgnoreCase(strukturJabatan1.getNip())){
//                                ada = true;
//                                break;
//                            }
//                        }
//                        if(ada == false){
//                            strukturJabatan.setBagian(bagian1);
//                            strukturJabatans.add(strukturJabatan);
//                        }
//                        ada = false;
//                    }
//                }
//            }
//        }
//
//        List<StrukturJabatan> strukturJabatanList = getPerBagianSisa();
//        strukturJabatans.addAll(strukturJabatanList);
//
//        List<StrukturJabatan> hasilStruktur = new ArrayList<>();
//        if(listBagian.size() > 0){
//            for(String lb: listBagian){
//                if(strukturJabatans.size() > 0){
//                    for(StrukturJabatan strukturJabatan: strukturJabatans){
//                        if(lb.equalsIgnoreCase(strukturJabatan.getBagian())){
//                            if(strukturJabatan.getStatusPegawai() != null && strukturJabatan.getStatusPegawai().equalsIgnoreCase(statusPegawai)){
//                                hasilStruktur.add(strukturJabatan);
//                            }
//                        }
//                    }
//                }
//            }
//        }
//
//        hasilStruktur.addAll(getPerBagianDireksiSys(branchId));
//        return hasilStruktur;
//    }
//
//    private List <StrukturJabatan> getPerBagianDireksiSys(String branchId) throws GeneralBOException {
//        List<ImStrukturJabatanEntity> imStrukturJabatanEntities  = strukturJabatanDao.getPerBagianDireksiDao(branchId);
//        List<StrukturJabatan> strukturJabatans  = new ArrayList<>();
//        if(imStrukturJabatanEntities.size() > 0){
//            for(ImStrukturJabatanEntity imStrukturJabatanEntity : imStrukturJabatanEntities){
//
//                StrukturJabatan itemComboStrukturJabatan = new StrukturJabatan();
//
//                itemComboStrukturJabatan.setStrukturJabatanId(imStrukturJabatanEntity.getStrukturJabatanId());
//                itemComboStrukturJabatan.setParentId(imStrukturJabatanEntity.getParentId());
//                itemComboStrukturJabatan.setBranchId(imStrukturJabatanEntity.getBranchId());
//                itemComboStrukturJabatan.setPositionId(imStrukturJabatanEntity.getPositionId());
//                itemComboStrukturJabatan.setPositionName(imStrukturJabatanEntity.getPositionName());
//                itemComboStrukturJabatan.setPositionKelompokId(imStrukturJabatanEntity.getKelompokId());
//                itemComboStrukturJabatan.setNip(imStrukturJabatanEntity.getNip());
//                itemComboStrukturJabatan.setName(imStrukturJabatanEntity.getNamaPegawai());
//                itemComboStrukturJabatan.setBagian("Direksi");
//
//                strukturJabatans.add(itemComboStrukturJabatan);
//
//            }
//        }
//
//        return strukturJabatans;
//    }
//
//    public List <StrukturJabatan> getPerBagianSisa() throws GeneralBOException {
//        List<ImStrukturJabatanEntity> imStrukturJabatanEntities  = strukturJabatanDao.getAllStrukturJabatan();
//        List<StrukturJabatan> strukturJabatans  = new ArrayList<>();
//        if(imStrukturJabatanEntities.size() > 0){
//            for (ImStrukturJabatanEntity imStrukturJabatanEntity:imStrukturJabatanEntities){
//                StrukturJabatan strukturJabatan = new StrukturJabatan();
//                strukturJabatan.setNip(imStrukturJabatanEntity.getNip());
//                strukturJabatan.setStrukturJabatanId(imStrukturJabatanEntity.getStrukturJabatanId());
//                strukturJabatan.setBranchId(imStrukturJabatanEntity.getBranchId());
//                strukturJabatan.setPositionId(imStrukturJabatanEntity.getPositionId());
//                strukturJabatan.setPositionName(imStrukturJabatanEntity.getPositionName());
//                strukturJabatan.setName(imStrukturJabatanEntity.getNamaPegawai());
//                strukturJabatan.setStatusPegawai(imStrukturJabatanEntity.getStatusPegawai());
//                if (imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("11")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("127")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("164")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("166")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("170")){
//                    strukturJabatan.setBagian("Bagian  Sekretaris Perusahaan");
//                    strukturJabatans.add(strukturJabatan);
//                }else if (imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("5")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("137")){
//                    strukturJabatan.setBagian("Bagian  Tanaman");
//                    strukturJabatans.add(strukturJabatan);
//                }else if (imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("6")){
//                    strukturJabatan.setBagian("Bagian  Teknik");
//                    strukturJabatans.add(strukturJabatan);
//                }else if (imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("7")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("36")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("172")){
//                    strukturJabatan.setBagian("Bagian  Riset dan Pengembangan");
//                    strukturJabatans.add(strukturJabatan);
//                }else if (imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("8")){
//                    strukturJabatan.setBagian("Bagian  Keuangan");
//                    strukturJabatans.add(strukturJabatan);
//                }else if (imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("9")){
//                    strukturJabatan.setBagian("Bagian  SDM");
//                    strukturJabatans.add(strukturJabatan);
//                }else if (imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("10")||imStrukturJabatanEntity.getPositionId().equalsIgnoreCase("168")){
//                    strukturJabatan.setBagian("Bagian  SPI");
//                    strukturJabatans.add(strukturJabatan);
//                }
//            }
//        }
//        return strukturJabatans;
//    }
//
//    private String getListStruktur(String id){
//        List<ImStrukturJabatanEntity> imStrukturJabatanEntities = null;
//        String hasil = "";
//        imStrukturJabatanEntities = strukturJabatanDao.getIdStrukturJabatan(id);
//        if(imStrukturJabatanEntities.size() > 0){
//            for(ImStrukturJabatanEntity imStrukturJabatanEntity : imStrukturJabatanEntities){
//                StrukturJabatan strukturJabatan1 = new StrukturJabatan();
//                strukturJabatan1.setNip(imStrukturJabatanEntity.getNip());
//                strukturJabatan1.setPositionName(imStrukturJabatanEntity.getPositionName());
//                strukturJabatan1.setBagian(imStrukturJabatanEntity.getPositionName());
//                strukturJabatan1.setStatusPegawai(imStrukturJabatanEntity.getStatusPegawai());
//
//                hasil = imStrukturJabatanEntity.getStrukturJabatanId();
//                strukturJabatanList.add(strukturJabatan1);
//                if(imStrukturJabatanEntity.getKelompokId().equalsIgnoreCase("KL02") || imStrukturJabatanEntity.getKelompokId().equalsIgnoreCase("KL03") ||
//                        imStrukturJabatanEntity.getKelompokId().equalsIgnoreCase("KL04") || imStrukturJabatanEntity.getKelompokId().equalsIgnoreCase("KL05") ||
//                        imStrukturJabatanEntity.getKelompokId().equalsIgnoreCase("KL06") || imStrukturJabatanEntity.getKelompokId().equalsIgnoreCase("KL07")){
//                    strukturJabatanList.add(strukturJabatan1);
//                }
//                getListStruktur(getListStruktur(hasil));
//            }
//        }
//        return hasil;
//    }

    //uncomment by ferdi, 01 des 2020
    // kalkulasi PPH tahun untuk kalkulasi seluruh PPH selama 1 tahun termasuk PPH gaji dan PPH Pengobatan
//    private PayrollPph kalkulasiPphTahun(String nip, String bulan, String tahun, String branch, BigDecimal pphGajiBulan, BigDecimal pphGajiObat, BigDecimal gajiKotor,
//                                         BigDecimal iuranPensiun, BigDecimal iuranBpjsTk, BigDecimal iuranBpjsPensiun, String statusKeluarga, int jumlahAnak, String gender,
//                                         BigDecimal asumsiThr, BigDecimal asumsiPendidikan, BigDecimal asumsiJasprod, BigDecimal realisasiThr, BigDecimal realisasiPendidikan,
//                                         BigDecimal realisasiJasprod, BigDecimal biayaPengobatan, BigDecimal pakaianDinas, BigDecimal jkmJkk, String flagThrP, String flagPendidikanP,
//                                         String flagJasprodP, BigDecimal lembur, String flagEdit, String flagPphPengobatan){
//
//        BigDecimal totalGaji= new BigDecimal(0);
//        BigDecimal totalTunjanganPengobatan= new BigDecimal(0);
//        BigDecimal totalBiayaObat= new BigDecimal(0);
//        BigDecimal totalPph = new BigDecimal(0);
//        BigDecimal totalPphObat = new BigDecimal(0);
//        BigDecimal totalThr = new BigDecimal(0);
//        BigDecimal totalPendidikan = new BigDecimal(0);
//        BigDecimal totalRapel = new BigDecimal(0);
//        BigDecimal totalJasprod = new BigDecimal(0);
//        BigDecimal totalInsentif = new BigDecimal(0);
//        BigDecimal bajuDinas = new BigDecimal(0);
//        BigDecimal pphGajiAsumsi = new BigDecimal(0);
//        BigDecimal gajiKotorAsumsi = new BigDecimal(0);
//        BigDecimal realisasiInsentif = new BigDecimal(0);
//        BigDecimal realisasiPphInsentif = new BigDecimal(0);
//        int jumlahSisaBulan = 13 - Integer.parseInt(bulan);
//        int jumlahSisaBulanGajiAsumsi = 0;
//        int jumlahKaliPph = 1;
//
//        String flagThr = "N";
//        String flagPendidikan = "N";
//        String flagRapel = "N";
//        String flagJasprod = "N";
//        String flagInsentif = "N";
//
//        // charnyah
//        if(nip.equalsIgnoreCase("93-0201")){
//            int a = 0;
//        }
//
//        // Rini
//        if(nip.equalsIgnoreCase("95-0234")){
//            int a = 0;
//        }
//
//        //nur zainab
//        if (nip.equalsIgnoreCase("91-0138")){
//            int a = 0;
//        }
//
//        //gina marisa
//        if (nip.equalsIgnoreCase("19-0669")){
//            int a = 0;
//        }
//        //sukamto
//        if (nip.equalsIgnoreCase("91-0417")){
//            int a = 0;
//        }
//        if(tahun.equalsIgnoreCase("2019")){
//            List<ItPayrollInsentifEntity> itPayrollInsentifEntity = payrollInsentifDao.getInsentifByNip(nip);
//            if(itPayrollInsentifEntity.size() > 0){
//                for(ItPayrollInsentifEntity insentifEntity: itPayrollInsentifEntity){
//                    realisasiInsentif = realisasiInsentif.add(insentifEntity.getJumlahInsentif());
//                    realisasiPphInsentif = realisasiPphInsentif.add(insentifEntity.getJumlahPph());
//                }
//            }
//        }
//
//        if(nip.equalsIgnoreCase("15-0425")){
//            int a = 0;
//        }
//
//
//        // gaji kotor Asumsi jika ada lembur
//        if(lembur.compareTo(BigDecimal.valueOf(0)) > 0){
//            gajiKotor = gajiKotor.subtract(lembur);
//        }
//        // gaji kotor Asumsi jika ada Pengobatan
//        if(biayaPengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
//            gajiKotor = gajiKotor.subtract(biayaPengobatan).subtract(pphGajiObat);
//        }
//
//        gajiKotorAsumsi = gajiKotor.multiply(BigDecimal.valueOf(jumlahSisaBulan));
//        // gaji kotor Asumsi jika ada lembur
//        if(lembur.compareTo(BigDecimal.valueOf(0)) > 0){
//            gajiKotorAsumsi = gajiKotorAsumsi.add(lembur);
//        }
//
//        // gaji kotor Asumsi jika ada Pengobatan
//        // tidak dipakai karena sudah dipisah antara pph pengobatan dan pph gaji
////        if(biayaPengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
////            gajiKotorAsumsi = gajiKotorAsumsi.add(biayaPengobatan);
////        }
//
//        String strBulan = "";
//
//        if(flagEdit.equalsIgnoreCase("N")){
//            for(int i = 1 ; i <= Integer.parseInt(bulan); i++){
//                if(i == 1){
//                    strBulan = "IN (";
//                }
//                if(i < 10){
//                    strBulan = strBulan + "'0" + i + "'";
//                }else{
//                    strBulan = strBulan + "'" + i + "'";
//                }
//                if(i < Integer.parseInt(bulan)){
//                    strBulan = strBulan + ", ";
//                }else{
//                    strBulan = strBulan + ")";
//                }
//            }
//        }else{
//            strBulan = strBulan + "NOT IN ('"+ bulan + "') ";
//            String strWhere = " NOT IN ('14') ";
//            List<ItPayrollEntity> payrollEntityList = payrollDao.getJumlahKotor(nip, strWhere, tahun, branch);
//            if(payrollEntityList.size() > 0){
//                for(ItPayrollEntity itPayrollEntity: payrollEntityList){
//                    if(itPayrollEntity.getFlagPendidikan().equalsIgnoreCase("Y")){
//                        flagPendidikan = "Y";
//                        totalPendidikan = itPayrollEntity.getTotalPendidikan();
//                        //totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                    }
//
//                    if(itPayrollEntity.getFlagThr().equalsIgnoreCase("Y")){
//                        flagThr = "Y";
//                        totalThr = itPayrollEntity.getTotalThr();
//                        //totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                    }
//
//                    if(itPayrollEntity.getFlagRapel().equalsIgnoreCase("Y")){
//                        flagRapel = "Y";
//                        totalRapel = itPayrollEntity.getTotalRapel();
//                        //totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                    }
//
//                    if(itPayrollEntity.getFlagInsentif().equalsIgnoreCase("Y")){
//                        flagInsentif = "Y";
//                        totalInsentif = itPayrollEntity.getTotalInsentif();
//                        //totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                    }
//                }
//            }
//        }
//
//        BigDecimal gajiKotorA = gajiKotor
//                //.subtract(totalThr)
//                //.subtract(totalPendidikan)
//                .subtract(totalJasprod)
//                .subtract(lembur);
//        gajiKotorA = gajiKotorA.multiply(BigDecimal.valueOf(12));
//        gajiKotorA = gajiKotorA.add(jkmJkk);
//        List<ItPayrollEntity> payrollEntityList = payrollDao.getJumlahKotor(nip, strBulan, tahun, branch);
//        //totalThr = totalThr.add(asumsiThr);
//        if(totalPendidikan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            totalPendidikan = asumsiPendidikan;
//        }
//
//        if(totalThr.compareTo(BigDecimal.valueOf(0)) <= 0){
//            totalThr = asumsiThr;
//        }
//
//        totalJasprod = asumsiJasprod;
//        if(payrollEntityList.size() > 0){
//            int jumlahId = payrollEntityList.size();
//            int i = 0;
//            for(ItPayrollEntity itPayrollEntity: payrollEntityList){
//                totalGaji = totalGaji.add(itPayrollEntity.getTotalA()).add(itPayrollEntity.getTunjanganBajuDinas());
//                totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                totalPphObat = totalPphObat.add(itPayrollEntity.getPphPengobatan());
//                totalTunjanganPengobatan = totalTunjanganPengobatan.add(itPayrollEntity.getTunjanganPengobatan());
//                totalBiayaObat = totalBiayaObat.add(itPayrollEntity.getPengobatan());
//                if(itPayrollEntity.getFlagThr().equalsIgnoreCase("Y")){
//                    flagThr = "Y";
//                    totalThr = itPayrollEntity.getTotalThr();
//                    jumlahSisaBulanGajiAsumsi++;
//                }else{
//                    if(flagThr.equalsIgnoreCase("N")){
//                        totalThr = asumsiThr;
//                    }
//                }
//
//                if(itPayrollEntity.getFlagPendidikan().equalsIgnoreCase("Y")){
//                    flagPendidikan = "Y";
//                    totalPendidikan = itPayrollEntity.getTotalPendidikan();
//                    jumlahSisaBulanGajiAsumsi++;
//                }else{
//                    if(flagPendidikan.equalsIgnoreCase("N")){
//                        totalPendidikan = asumsiPendidikan;
//                    }
//                }
//
//                if(itPayrollEntity.getFlagRapel().equalsIgnoreCase("Y")){
//                    flagRapel = "Y";
//                    totalRapel = itPayrollEntity.getTotalRapel();
//                }
//
//                if(itPayrollEntity.getFlagJasprod().equalsIgnoreCase("Y")){
//                    flagJasprod = "Y";
//                    totalJasprod = itPayrollEntity.getTotalJasProd();
//                    jumlahSisaBulanGajiAsumsi++;
//                }else{
//                    if(flagJasprod.equalsIgnoreCase("N")){
//                        totalJasprod = asumsiJasprod;
//                    }
//                }
//
//                if(itPayrollEntity.getFlagInsentif().equalsIgnoreCase("Y")){
//                    flagInsentif = "Y";
//                    totalInsentif = itPayrollEntity.getTotalInsentif();
//                    //jumlahSisaBulanGajiAsumsi++;
//                }
//
//            }
//
//        }
//
//        //jumlahKali digunakan jikaada thr, pendidikan atau jasprod, maka pembagi akan menjadi lebih besar sesuai dengan flag tersebut, dan penambah akan juga lebih besar sesuiai dengan jumlah tersebut
//        int jumlahKali = 0;
//        int thrPendidikanJasprod = 0;
//        if(flagJasprodP.equalsIgnoreCase("Y")){
//            jumlahKali++;
//            thrPendidikanJasprod++;
//        }
//
//        if(flagThrP.equalsIgnoreCase("Y")){
//            jumlahKali++;
//            thrPendidikanJasprod++;
//        }
//
//        if(flagPendidikanP.equalsIgnoreCase("Y")){
//            jumlahKali++;
//            thrPendidikanJasprod++;
//        }
//
//        // total Gaji selama 1 tahun dan tunjangan Obat
//        BigDecimal totalGajiTahunNObat = new BigDecimal(0);
//        totalGajiTahunNObat = totalGaji.add(gajiKotorAsumsi)
//                .add(totalThr)
//                .add(totalPendidikan)
//                .add(totalRapel)
//                .add(totalJasprod)
//                .add(totalInsentif)
//                .add(realisasiThr)
//                .add(realisasiJasprod)
//                .add(realisasiPendidikan)
//                .add(realisasiInsentif)
//                .add(pakaianDinas)
//                .add(jkmJkk);
//
//        // model Payroll pph untuk return
//        PayrollPph returnPayrollPph = new PayrollPph();
//
//        // total Gaji selama 1 tahun tanpa tunjangan Obat
//        BigDecimal totalGajiTahun = new BigDecimal(0);
//        totalGajiTahun = totalGajiTahunNObat.subtract(totalTunjanganPengobatan);
//
//        // jumlah biaya jabatan dengan tunjangan pengobatan
//        BigDecimal pphGajiBiayaJabatanNObat = new BigDecimal(0);
//        pphGajiBiayaJabatanNObat = getBiayaJabatan(totalGajiTahunNObat).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        // jumlah biaya jabatan tanpa tunjangan pengobatan
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//        pphGajiBiayaJabatan = getBiayaJabatan(totalGajiTahun).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        BigDecimal pphGajiTotalBiayaPensiun = BigDecimal.valueOf(0);
//        BigDecimal pphGajiDanaPensiun = iuranPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsTk = iuranBpjsTk.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsPensiun = iuranBpjsPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiPtkp = BigDecimal.valueOf(0);
//
//        pphGajiPtkp = getPtkp(statusKeluarga, jumlahAnak, gender);
//
//        pphGajiTotalBiayaPensiun = pphGajiDanaPensiun.add(pphGajiBpjsTk).add(pphGajiBpjsPensiun);
//
//        // jumlah pphGajiB dengan tunjangan pengobatan
//        BigDecimal pphGajiBNObat = hitungPphGajiB(pphGajiBiayaJabatanNObat, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        // jumlah pphGajiB tanpa tunjangan pengobatan
//        BigDecimal pphGajiB = hitungPphGajiB(pphGajiBiayaJabatan, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        // jumlah pkp dengan tunjangan pengobatan
//        // dikomen karena tidak terpakai
////        BigDecimal pphGajiPkpNObat = totalGajiTahunNObat.subtract(pphGajiBNObat).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//        // jumlah pkp tanpa tunjangan pengobatan
//        BigDecimal pphGajiPkp = totalGajiTahun.subtract(pphGajiB).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//        //mencari pph obat, jika ada pengobatan pada bulan yang diproses
//        if(biayaPengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
//            if(flagPphPengobatan.equalsIgnoreCase("Y")){
//                pphGajiObat = calculatePphPengobatan(biayaPengobatan, pphGajiPkp);
//            }
//
//            totalGajiTahunNObat = totalGajiTahunNObat.add(pphGajiObat);
////            totalPphObat = totalPphObat.add(pphGajiObat);
//            totalTunjanganPengobatan = totalTunjanganPengobatan.add(biayaPengobatan).add(pphGajiObat);
//            totalBiayaObat = totalBiayaObat.add(biayaPengobatan);
//        }
//
//        BigDecimal pphGaji = new BigDecimal(0);
//        // jumlah Hutang pajak dengan Tunjangan Pengobatan
//        //dicoment karena tidak terpakai
////        BigDecimal hutangPajakNObat = hitungHutangPajak(pphGajiPkpNObat);
//
//        // jumlah Hutang pajak tanpa Tunjangan Pengobatan
//        BigDecimal hutangPajak = hitungHutangPajak(pphGajiPkp);
//
//        // hutang pph dengan obat dikurangi dengan hutang pph tanpa obat, maka hasilnya adalah hutang pph pengobatan yang akan dibebankan untuk perusahaan
//        //BigDecimal hutangPajakPengobatanPerusahaan = hutangPajakNObat.subtract(hutangPajak);
//
//        BigDecimal hutangPajakPengobatanPerusahaan = BigDecimal.valueOf(0);
//        //dipindah dari pph gaji pkp + obat menjadi pph gaji pkp
//        hutangPajakPengobatanPerusahaan = calculatePphPengobatan(totalBiayaObat, pphGajiPkp);
//
//        // tunjangan PPH (biaya pengobatan + PPH Pengobatan)
//        returnPayrollPph.setHutangPphPengobatanNilai(hutangPajakPengobatanPerusahaan);
//
//        // kurang pph pengobatan (yg dibayar perusahaan)
//        BigDecimal kurangPphPengobatan = hutangPajakPengobatanPerusahaan.subtract(totalPphObat);
//        if (flagPphPengobatan.equalsIgnoreCase("N")){
//            if (kurangPphPengobatan.compareTo(BigDecimal.valueOf(0)) < 0){
////                pphGajiObat=BigDecimal.ZERO;
//                kurangPphPengobatan = BigDecimal.valueOf(0);
//                totalPphObat = hutangPajakPengobatanPerusahaan;
//            }
//        }else{
//            if (kurangPphPengobatan.compareTo(BigDecimal.valueOf(0)) < 0){
//                pphGajiObat = hutangPajakPengobatanPerusahaan.add(kurangPphPengobatan);
//                kurangPphPengobatan = BigDecimal.valueOf(0);
//                totalPphObat = hutangPajakPengobatanPerusahaan;
//            }
//        }
//
//        //AKIRA
//        //untuk menghitung obat jika dicicil
//        if (("Y").equalsIgnoreCase(flagPphPengobatan)){
//            if(kurangPphPengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
//                pphGajiObat = kurangPphPengobatan;
//                kurangPphPengobatan = BigDecimal.valueOf(0);
//                totalPphObat = hutangPajakPengobatanPerusahaan;
//            }
//        }else {
//            if (pphGajiObat.compareTo(BigDecimal.ZERO)<0){
//                pphGajiObat = BigDecimal.ZERO;
//                kurangPphPengobatan = BigDecimal.ZERO;
//            }
//            if (kurangPphPengobatan.compareTo(BigDecimal.ONE)>0){
//                kurangPphPengobatan = BigDecimal.valueOf(0);
//                totalPphObat = hutangPajakPengobatanPerusahaan;
//            }else if (pphGajiObat.compareTo(kurangPphPengobatan)>0){
////                pphGajiObat = kurangPphPengobatan;
//                kurangPphPengobatan = BigDecimal.valueOf(0);
//                totalPphObat = hutangPajakPengobatanPerusahaan;
//            }else{
//                totalPphObat = totalPphObat.add(pphGajiObat);
//                kurangPphPengobatan = hutangPajakPengobatanPerusahaan.subtract(totalPphObat);
//            }
//        }
//
//        returnPayrollPph.setJumlahPengobatanNilai(totalBiayaObat);
//        returnPayrollPph.setJumlahPphPengobatanNilai(totalPphObat);
//        returnPayrollPph.setKurangPphPengobatanNilai(kurangPphPengobatan);
//
//        returnPayrollPph.setPphPengobatanNilai(pphGajiObat);
//        returnPayrollPph.setTunjanganPengobatanNilai(biayaPengobatan.add(pphGajiObat));
//
//        BigDecimal pphTanpaThrPendJasp = kalkulasiPphTanpaThrPendJasp(gajiKotorA, pphGajiTotalBiayaPensiun, pphGajiPtkp);
//        BigDecimal selisihPphBulan = new BigDecimal(0);
//
//        selisihPphBulan = pphGajiBulan.subtract(pphTanpaThrPendJasp);
//        if(Integer.parseInt(bulan) >= 8 && jumlahSisaBulanGajiAsumsi <= 3){
//            pphGajiAsumsi = pphTanpaThrPendJasp.multiply(BigDecimal.valueOf((jumlahSisaBulan)));
//        }else{
//            pphGajiAsumsi = pphTanpaThrPendJasp.multiply(BigDecimal.valueOf(jumlahSisaBulan)).add(selisihPphBulan);
//            //selisihPphBulan = selisihPphBulan.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//        }
//
//        if(bulan.equalsIgnoreCase("01")){
//            pphGajiBulan = pphTanpaThrPendJasp.add(selisihPphBulan);
//        }
//
//        // Total pph tahun tanpa pph obat
//        BigDecimal totalPphTahun = new BigDecimal(0);
//        totalPphTahun = totalPph
//                .add(pphGajiAsumsi)
//                .add(realisasiPphInsentif);
//
//        // Total pph tahun dengan pph obat
//        BigDecimal totalPphTahunNObat = new BigDecimal(0);
//        totalPphTahunNObat = totalPph
//                .add(totalPphObat)
//                .add(pphGajiAsumsi)
//                .add(realisasiPphInsentif);
//
//        if(totalPphTahun.compareTo(hutangPajak) > 0){
//            BigDecimal selisih = new BigDecimal(0);
//            selisih = totalPphTahun.subtract(hutangPajak);
//
//            selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//            pphGajiBulan = pphGajiBulan.subtract(selisih);
//        }else{
//            BigDecimal selisih = new BigDecimal(0);
//            selisih = hutangPajak.subtract(totalPphTahun);
//
//            selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//
//            if(jumlahKali > 0){
//
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }else{
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }
//        }
//
//        if(pphGajiBulan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGajiBulan = BigDecimal.valueOf(0);
//        }
//
//        returnPayrollPph.setPphGajiNilai(pphGajiBulan);
//
//        return returnPayrollPph;
//    }
//
//    private BigDecimal kalkulasiPphTahunTanpaPayroll(String nip, String bulan, String tahun, String branch, BigDecimal pphGajiBulan, BigDecimal iuranPensiun, BigDecimal iuranBpjsTk,
//                                                     BigDecimal iuranBpjsPensiun, String statusKeluarga, int jumlahAnak, String gender, BigDecimal asumsiThr, BigDecimal asumsiPendidikan,
//                                                     BigDecimal asumsiJasprod, BigDecimal realisasiThr, BigDecimal realisasiPendidikan, BigDecimal realisasiJasprod,
//                                                     BigDecimal realisasiInsentifBulan, BigDecimal tunjanganPengobatan, BigDecimal pakaianDinas, String flagThrP, String flagPendidikanP,
//                                                     String flagJasprodP, BigDecimal lembur){
//
//        // citra kusuma
//        if(nip.equalsIgnoreCase("15-0425")){
//            int a = 0;
//        }
//        // nur zaenab
//        if(nip.equalsIgnoreCase("91-0138")){
//            int a = 0;
//        }
//
//        // charnyah handari
//        if(nip.equalsIgnoreCase("93-0201")){
//            int a = 0;
//        }
//
//        BigDecimal jkmJkk= new BigDecimal(0);
//        BigDecimal totalGaji= new BigDecimal(0);
//        BigDecimal totalPph = new BigDecimal(0);
//        BigDecimal bajuDinas = new BigDecimal(0);
//        BigDecimal pphGajiAsumsi = new BigDecimal(0);
//        BigDecimal gajiKotorAsumsi = new BigDecimal(0);
//        int jumlahSisaBulan = 13 - Integer.parseInt(bulan);
//
//        BigDecimal gaji = new BigDecimal(0);
//        BigDecimal umk = new BigDecimal(0);
//        BigDecimal struktural = new BigDecimal(0);
//        BigDecimal peralihan = new BigDecimal(0);
//        BigDecimal jabStruktual = new BigDecimal(0);
//        BigDecimal strategis = new BigDecimal(0);
//        BigDecimal kompensasi = new BigDecimal(0);
//        BigDecimal transport = new BigDecimal(0);
//        BigDecimal listrik = new BigDecimal(0);
//        BigDecimal perumahan = new BigDecimal(0);
//        BigDecimal tunjPph = new BigDecimal(0);
//        BigDecimal tunjLain = new BigDecimal(0);
//        BigDecimal pphPengobatan = new BigDecimal(0);
//
//        // Pendidikan
//        BigDecimal asumsiDanRealisasiPendidikan = asumsiPendidikan;
//        if(realisasiPendidikan.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiPendidikan = new BigDecimal(0);
//        }
//
//        // thr
//        BigDecimal asumsiDanRealisasiTHR = asumsiThr;
//        if(realisasiThr.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiTHR  = new BigDecimal(0);
//        }
//
//        // jasprod
//        BigDecimal asumsiDanRealisasiJasprod = asumsiJasprod;
//        if(realisasiJasprod.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiJasprod = new BigDecimal(0);
//        }
//
//        // insentif
//        BigDecimal asumsiDanRealisasiInsentif = new BigDecimal(0);
//        if(realisasiInsentifBulan.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiInsentif = new BigDecimal(0);
//        }
//
//        // Jubileum
//        BigDecimal asumsiDanRealisasiJubileum = new BigDecimal(0);
//
//        // Rapel
//        BigDecimal asumsiDanRealisasiRapel = new BigDecimal(0);
//
//
//        BigDecimal totalKotor = new BigDecimal(0);
//
//        List<ItPayrollEntity> itPayrollEntityy = null;
//        itPayrollEntityy = payrollDao.getLastPayroll(nip);
//        if(itPayrollEntityy.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1: itPayrollEntityy){
//                gaji = itPayrollEntity1.getGajiGolongan();
//                umk = itPayrollEntity1.getTunjanganUmk();
//                struktural = itPayrollEntity1.getTunjanganStruktural();
//                peralihan = itPayrollEntity1.getTunjanganPeralihan();
//                jabStruktual = itPayrollEntity1.getTunjanganJabatanStruktural();
//                strategis = itPayrollEntity1.getTunjanganStrategis();
//                kompensasi = itPayrollEntity1.getKompensasi();
//                transport = itPayrollEntity1.getTunjanganTransport();
//                listrik = itPayrollEntity1.getTunjanganAirListrik();
//                perumahan = itPayrollEntity1.getTunjanganPerumahan();
//                tunjPph = itPayrollEntity1.getTunjanganPph();
//                tunjLain = itPayrollEntity1.getTunjanganLain();
//
//                List<ItPayrollPphEntity> asumsiPph = payrollPphDao.getDataView(itPayrollEntity1.getPayrollId());
//                asumsiPph = payrollPphDao.getDataView(itPayrollEntity1.getPayrollId());
//                for(ItPayrollPphEntity payrollPphEntity: asumsiPph){
//                    jkmJkk = payrollPphEntity.getIuranJkmJkk();
//                }
//            }
//
//        }
//
//        totalKotor = jumlahGajiKotor(gaji, umk, struktural,peralihan, jabStruktual, strategis, kompensasi, transport, listrik, BigDecimal.valueOf(0), perumahan,
//                tunjPph, tunjLain, BigDecimal.valueOf(0));
//        String flagThr = "N";
//        String flagPendidikan = "N";
//        String flagJasprod = "N";
//
//        String strBulan = "";
//
//        for(int i = 1 ; i <= Integer.parseInt(bulan); i++){
//            if(i == 1){
//                strBulan = "IN (";
//            }
//            if(i < 10){
//                strBulan = strBulan + "'0" + i + "'";
//            }else{
//                strBulan = strBulan + "'" + i + "'";
//            }
//            if(i < Integer.parseInt(bulan)){
//                strBulan = strBulan + ", ";
//            }else{
//                strBulan = strBulan + ")";
//            }
//        }
//
//        BigDecimal gajiKotorA = totalKotor;
//        gajiKotorA = gajiKotorA.multiply(BigDecimal.valueOf(12));
//        gajiKotorA = gajiKotorA.add(jkmJkk);
//        List<ItPayrollEntity> payrollEntityList = payrollDao.getJumlahKotor(nip, strBulan, tahun, branch);
//
//        bajuDinas = new BigDecimal(0);
//        int jumlahBulan = jumlahSisaBulan;
//        if(payrollEntityList.size() > 0){
//            int jumlahId = payrollEntityList.size();
//            int i = 0;
//            for(ItPayrollEntity itPayrollEntity: payrollEntityList){
//
//                totalGaji = totalGaji.add(itPayrollEntity.getTotalA()).add(itPayrollEntity.getTunjanganBajuDinas());
//                totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                pphPengobatan = pphPengobatan.add(itPayrollEntity.getPphPengobatan());
//                // thr
//                if(itPayrollEntity.getFlagThr().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiTHR = itPayrollEntity.getTotalThr();
//                }
//
//                // pendidikan
//                if(itPayrollEntity.getFlagPendidikan().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiPendidikan = itPayrollEntity.getTotalPendidikan();
//                }
//
//                // jasprod
//                if(itPayrollEntity.getFlagJasprod().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiJasprod = itPayrollEntity.getTotalJasProd();
//                }
//
//                // insentif
//                if(itPayrollEntity.getFlagInsentif().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiInsentif = itPayrollEntity.getTotalInsentif();
//                }
//
//                // Jubileum
//                if(itPayrollEntity.getFlagJubileum().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiJubileum = itPayrollEntity.getTotalJubileum();
//                    totalPph = totalPph.add(itPayrollEntity.getPphJubileum());
//                }
//
//                // Rapel
//                if(itPayrollEntity.getFlagRapel().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiRapel = itPayrollEntity.getTotalRapel();
//                }
//
//                if(itPayrollEntity.getBulan().equalsIgnoreCase(bulan) && itPayrollEntity.getFlagPayroll().equalsIgnoreCase("Y")){
//                    jumlahBulan--;
//                }
//            }
//        }
//
//
//        gajiKotorAsumsi = totalKotor.multiply(BigDecimal.valueOf(jumlahBulan));
//        gajiKotorAsumsi = gajiKotorAsumsi.add(jkmJkk);
//
//
//        int jumlahKali = 0;
//
//        gajiKotorAsumsi = gajiKotorAsumsi.add(bajuDinas);
//        BigDecimal realisasiInsentif = new BigDecimal(0);
//
//        // insentif Awal (import di januari 2019)
//        BigDecimal realisasiPphInsentif = new BigDecimal(0);
//        if(tahun.equalsIgnoreCase("2019")){
//            List<ItPayrollInsentifEntity> itPayrollInsentifEntity = payrollInsentifDao.getInsentifByNip(nip);
//            if(itPayrollInsentifEntity.size() > 0){
//                for(ItPayrollInsentifEntity insentifEntity: itPayrollInsentifEntity){
//                    realisasiInsentif = realisasiInsentif.add(insentifEntity.getJumlahInsentif());
//                    realisasiPphInsentif = realisasiPphInsentif.add(insentifEntity.getJumlahPph());
//                }
//            }
//        }
//
//        BigDecimal totalGajiTahun = new BigDecimal(0);
//        totalGajiTahun = totalGaji.add(gajiKotorAsumsi)
//                .add(asumsiDanRealisasiTHR)
//                .add(asumsiDanRealisasiPendidikan)
//                .add(asumsiDanRealisasiJasprod)
//                .add(asumsiDanRealisasiInsentif)
//                //.add(asumsiDanRealisasiJubileum)
//                //.add(asumsiDanRealisasiRapel)
//                .add(realisasiThr)
//                .add(realisasiJasprod)
//                .add(realisasiInsentifBulan)
//                .add(realisasiPendidikan)
//                .add(realisasiInsentif);
//
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//        pphGajiBiayaJabatan = getBiayaJabatan(totalGajiTahun).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        BigDecimal pphGajiTotalBiayaPensiun = BigDecimal.valueOf(0);
//        BigDecimal pphGajiDanaPensiun = iuranPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsTk = iuranBpjsTk.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsPensiun = iuranBpjsPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiPtkp = BigDecimal.valueOf(0);
//
//        pphGajiPtkp = getPtkp(statusKeluarga, jumlahAnak, gender);
//
//        pphGajiTotalBiayaPensiun = pphGajiDanaPensiun.add(pphGajiBpjsTk).add(pphGajiBpjsPensiun);
//
//        BigDecimal pphGajiB = hitungPphGajiB(pphGajiBiayaJabatan, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        BigDecimal pphGajiPkp = totalGajiTahun.subtract(pphGajiB).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//
//        BigDecimal pphGaji = new BigDecimal(0);
//        BigDecimal hutangPajak = hitungHutangPajak(pphGajiPkp);
//
//        BigDecimal pphTanpaThrPendJasp = kalkulasiPphTanpaThrPendJasp(gajiKotorA, pphGajiTotalBiayaPensiun, pphGajiPtkp);
//        BigDecimal selisihPphBulan = new BigDecimal(0);
//
//        pphGajiAsumsi = pphTanpaThrPendJasp.multiply(BigDecimal.valueOf(jumlahBulan));
//
//        if(bulan.equalsIgnoreCase("01")){
//            pphGajiBulan = pphTanpaThrPendJasp.add(selisihPphBulan);
//        }
//        BigDecimal totalPphTahun = new BigDecimal(0);
//        totalPphTahun = totalPph
//                .add(pphGajiAsumsi)
//                .add(pphPengobatan)
//                .add(realisasiPphInsentif);
//
//        BigDecimal selisih = new BigDecimal(0);
//        if(totalPphTahun.compareTo(hutangPajak) > 0){
//            selisih = totalPphTahun.subtract(hutangPajak);
//
//            selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//            pphGajiBulan = pphGajiBulan.subtract(selisih);
//        }else{
//            selisih = new BigDecimal(0);
//            selisih = hutangPajak.subtract(totalPphTahun);
//            if(flagJasprodP.equalsIgnoreCase("Y")){
//                selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan + 2), 2, RoundingMode.HALF_UP);
//                selisih = selisih.multiply(BigDecimal.valueOf(3.5));
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }else{
//                selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }
//        }
//
//        if(pphGajiBulan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGajiBulan = BigDecimal.valueOf(0);
//        }
//
//        return pphGajiBulan;
//    }
//
//    private BigDecimal kalkulasiPphTahunTanpaPayrollRapel(String nip, String bulan, String tahun, String branch, BigDecimal pphGajiBulan, BigDecimal iuranPensiun, BigDecimal iuranBpjsTk,
//                                                     BigDecimal iuranBpjsPensiun, String statusKeluarga, int jumlahAnak, String gender, BigDecimal asumsiThr, BigDecimal asumsiPendidikan,
//                                                     BigDecimal asumsiJasprod, BigDecimal realisasiThr, BigDecimal realisasiPendidikan, BigDecimal realisasiJasprod,
//                                                     BigDecimal realisasiInsentifBulan, BigDecimal tunjanganPengobatan, BigDecimal pakaianDinas, String flagThrP, String flagPendidikanP,
//                                                     String flagJasprodP, BigDecimal rapel){
//
//        // halimi
//        if(nip.equalsIgnoreCase("93-0384")){
//            int a = 0;
//        }
//        BigDecimal jkmJkk= new BigDecimal(0);
//        BigDecimal totalGaji= new BigDecimal(0);
//        BigDecimal totalPph = new BigDecimal(0);
//        BigDecimal bajuDinas = new BigDecimal(0);
//        BigDecimal pphGajiAsumsi = new BigDecimal(0);
//        BigDecimal gajiKotorAsumsi = new BigDecimal(0);
//        int jumlahSisaBulan = 13 - Integer.parseInt(bulan);
//
//        BigDecimal gaji = new BigDecimal(0);
//        BigDecimal umk = new BigDecimal(0);
//        BigDecimal struktural = new BigDecimal(0);
//        BigDecimal peralihan = new BigDecimal(0);
//        BigDecimal jabStruktual = new BigDecimal(0);
//        BigDecimal strategis = new BigDecimal(0);
//        BigDecimal kompensasi = new BigDecimal(0);
//        BigDecimal transport = new BigDecimal(0);
//        BigDecimal listrik = new BigDecimal(0);
//        BigDecimal perumahan = new BigDecimal(0);
//        BigDecimal tunjPph = new BigDecimal(0);
//        BigDecimal tunjLain = new BigDecimal(0);
//        BigDecimal pphPengobatan = new BigDecimal(0);
//
//        // Pendidikan
//        BigDecimal asumsiDanRealisasiPendidikan = asumsiPendidikan;
//        if(realisasiPendidikan.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiPendidikan = new BigDecimal(0);
//        }
//
//        // thr
//        BigDecimal asumsiDanRealisasiTHR = asumsiThr;
//        if(realisasiThr.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiTHR  = new BigDecimal(0);
//        }
//
//        // jasprod
//        BigDecimal asumsiDanRealisasiJasprod = asumsiJasprod;
//        if(realisasiJasprod.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiJasprod = new BigDecimal(0);
//        }
//
//        // insentif
//        BigDecimal asumsiDanRealisasiInsentif = new BigDecimal(0);
//        if(realisasiInsentifBulan.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiInsentif = new BigDecimal(0);
//        }
//
//        // Jubileum
//        BigDecimal asumsiDanRealisasiJubileum = new BigDecimal(0);
//
//        // Rapel
//        BigDecimal asumsiDanRealisasiRapel = new BigDecimal(0);
//
//
//        BigDecimal totalKotor = new BigDecimal(0);
//
//        List<ItPayrollEntity> itPayrollEntityy = null;
//        itPayrollEntityy = payrollDao.getLastPayroll(nip);
//        if(itPayrollEntityy.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1: itPayrollEntityy){
//                gaji = itPayrollEntity1.getGajiGolongan();
//                umk = itPayrollEntity1.getTunjanganUmk();
//                struktural = itPayrollEntity1.getTunjanganStruktural();
//                peralihan = itPayrollEntity1.getTunjanganPeralihan();
//                jabStruktual = itPayrollEntity1.getTunjanganJabatanStruktural();
//                strategis = itPayrollEntity1.getTunjanganStrategis();
//                kompensasi = itPayrollEntity1.getKompensasi();
//                transport = itPayrollEntity1.getTunjanganTransport();
//                listrik = itPayrollEntity1.getTunjanganAirListrik();
//                perumahan = itPayrollEntity1.getTunjanganPerumahan();
//                tunjPph = itPayrollEntity1.getTunjanganPph();
//                tunjLain = itPayrollEntity1.getTunjanganLain();
//
//                List<ItPayrollPphEntity> asumsiPph = payrollPphDao.getDataView(itPayrollEntity1.getPayrollId());
//                asumsiPph = payrollPphDao.getDataView(itPayrollEntity1.getPayrollId());
//                for(ItPayrollPphEntity payrollPphEntity: asumsiPph){
//                    jkmJkk = payrollPphEntity.getIuranJkmJkk();
//                }
//            }
//
//        }
//
//        totalKotor = jumlahGajiKotor(gaji, umk, struktural,peralihan, jabStruktual, strategis, kompensasi, transport, listrik, BigDecimal.valueOf(0), perumahan,
//                tunjPph, tunjLain, BigDecimal.valueOf(0));
//        String flagThr = "N";
//        String flagPendidikan = "N";
//        String flagJasprod = "N";
//
//        String strBulan = "";
//
//        for(int i = 1 ; i <= Integer.parseInt(bulan); i++){
//            if(i == 1){
//                strBulan = "IN (";
//            }
//            if(i < 10){
//                strBulan = strBulan + "'0" + i + "'";
//            }else{
//                strBulan = strBulan + "'" + i + "'";
//            }
//            if(i < Integer.parseInt(bulan)){
//                strBulan = strBulan + ", ";
//            }else{
//                strBulan = strBulan + ")";
//            }
//        }
//
//        BigDecimal gajiKotorA = totalKotor;
//        gajiKotorA = gajiKotorA.multiply(BigDecimal.valueOf(12));
//        gajiKotorA = gajiKotorA.add(jkmJkk);
//        List<ItPayrollEntity> payrollEntityList = payrollDao.getJumlahKotor(nip, strBulan, tahun, branch);
//
//        bajuDinas = new BigDecimal(0);
//        int jumlahBulan = jumlahSisaBulan;
//        if(payrollEntityList.size() > 0){
//            int jumlahId = payrollEntityList.size();
//            int i = 0;
//            for(ItPayrollEntity itPayrollEntity: payrollEntityList){
//
//                totalGaji = totalGaji.add(itPayrollEntity.getTotalA()).add(itPayrollEntity.getTunjanganBajuDinas());
//                totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                pphPengobatan = pphPengobatan.add(itPayrollEntity.getPphPengobatan());
//                // thr
//                    if(itPayrollEntity.getFlagThr().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiTHR = itPayrollEntity.getTotalThr();
//                }
//
//                // pendidikan
//                if(itPayrollEntity.getFlagPendidikan().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiPendidikan = itPayrollEntity.getTotalPendidikan();
//                }
//
//                // jasprod
//                if(itPayrollEntity.getFlagJasprod().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiJasprod = itPayrollEntity.getTotalJasProd();
//                }
//
//                // insentif
//                if(itPayrollEntity.getFlagInsentif().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiInsentif = itPayrollEntity.getTotalInsentif();
//                }
//
//                // Jubileum
//                if(itPayrollEntity.getFlagJubileum().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiJubileum = itPayrollEntity.getTotalJubileum();
//                    totalPph = totalPph.add(itPayrollEntity.getPphJubileum());
//                }
//
//                // Rapel
//                if(itPayrollEntity.getFlagRapel().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiRapel = itPayrollEntity.getTotalRapel();
//                }
//
//                if(itPayrollEntity.getBulan().equalsIgnoreCase(bulan) && itPayrollEntity.getFlagPayroll().equalsIgnoreCase("Y")){
//                    jumlahBulan--;
//                }
//            }
//        }
//
//
//        gajiKotorAsumsi = totalKotor.multiply(BigDecimal.valueOf(jumlahBulan));
//        gajiKotorAsumsi = gajiKotorAsumsi.add(jkmJkk);
//
//
//        int jumlahKali = 0;
//
//        gajiKotorAsumsi = gajiKotorAsumsi.add(bajuDinas);
//        BigDecimal realisasiInsentif = new BigDecimal(0);
//
//        // insentif Awal (import di januari 2019)
//        BigDecimal realisasiPphInsentif = new BigDecimal(0);
//        List<ItPayrollInsentifEntity> itPayrollInsentifEntity = payrollInsentifDao.getInsentifByNip(nip);
//        if(itPayrollInsentifEntity.size() > 0){
//            for(ItPayrollInsentifEntity insentifEntity: itPayrollInsentifEntity){
//                realisasiInsentif = realisasiInsentif.add(insentifEntity.getJumlahInsentif());
//                realisasiPphInsentif = realisasiPphInsentif.add(insentifEntity.getJumlahPph());
//            }
//        }
//
//        BigDecimal totalGajiTahun = new BigDecimal(0);
//        totalGajiTahun = totalGaji.add(gajiKotorAsumsi)
//                .add(asumsiDanRealisasiTHR)
//                .add(asumsiDanRealisasiPendidikan)
//                .add(asumsiDanRealisasiJasprod)
//                .add(asumsiDanRealisasiInsentif)
//                //.add(asumsiDanRealisasiJubileum)
//                .add(rapel)
//                .add(realisasiThr)
//                .add(realisasiJasprod)
//                .add(realisasiInsentifBulan)
//                .add(realisasiPendidikan)
//                .add(realisasiInsentif);
//
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//        pphGajiBiayaJabatan = getBiayaJabatan(totalGajiTahun).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        BigDecimal pphGajiTotalBiayaPensiun = BigDecimal.valueOf(0);
//        BigDecimal pphGajiDanaPensiun = iuranPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsTk = iuranBpjsTk.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsPensiun = iuranBpjsPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiPtkp = BigDecimal.valueOf(0);
//
//        pphGajiPtkp = getPtkp(statusKeluarga, jumlahAnak, gender);
//
//        pphGajiTotalBiayaPensiun = pphGajiDanaPensiun.add(pphGajiBpjsTk).add(pphGajiBpjsPensiun);
//
//        BigDecimal pphGajiB = hitungPphGajiB(pphGajiBiayaJabatan, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        BigDecimal pphGajiPkp = totalGajiTahun.subtract(pphGajiB).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//
//        BigDecimal pphGaji = new BigDecimal(0);
//        BigDecimal hutangPajak = hitungHutangPajak(pphGajiPkp);
//
//        BigDecimal pphTanpaThrPendJasp = kalkulasiPphTanpaThrPendJasp(gajiKotorA, pphGajiTotalBiayaPensiun, pphGajiPtkp);
//        BigDecimal selisihPphBulan = new BigDecimal(0);
//
//        pphGajiAsumsi = pphTanpaThrPendJasp.multiply(BigDecimal.valueOf(jumlahBulan)).add(pphGajiBulan);
//
//        if(bulan.equalsIgnoreCase("01")){
//            pphGajiBulan = pphTanpaThrPendJasp.add(selisihPphBulan);
//        }
//        BigDecimal totalPphTahun = new BigDecimal(0);
//        totalPphTahun = totalPph
//                .add(pphGajiAsumsi)
//                .add(pphPengobatan)
//                .add(realisasiPphInsentif);
//
//        BigDecimal selisih = new BigDecimal(0);
//        if(totalPphTahun.compareTo(hutangPajak) > 0){
//            selisih = totalPphTahun.subtract(hutangPajak);
//
//            selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//            pphGajiBulan = pphGajiBulan.subtract(selisih);
//        }else{
//            selisih = new BigDecimal(0);
//            selisih = hutangPajak.subtract(totalPphTahun);
//            if(flagJasprodP.equalsIgnoreCase("Y")){
//                selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan + 2), 2, RoundingMode.HALF_UP);
//                selisih = selisih.multiply(BigDecimal.valueOf(3.5));
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }else{
//                selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }
//        }
//
//        if(pphGajiBulan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGajiBulan = BigDecimal.valueOf(0);
//        }
//
//        return pphGajiBulan;
//    }
//
//    private BigDecimal kalkulasiPphTahunKabidTanpaBulan(String nip, String bulan, String tahun, String branch, BigDecimal pphGajiBulan, BigDecimal iuranPensiun, BigDecimal iuranBpjsTk,
//                                                     BigDecimal iuranBpjsPensiun, String statusKeluarga, int jumlahAnak, String gender,
//                                                     BigDecimal asumsiJasprod, BigDecimal realisasiJasprod,
//                                                     BigDecimal realisasiInsentifBulan,
//                                                     String flagJasprodP, BigDecimal rapelInsentif, BigDecimal rapelJubileum){
//
//        BigDecimal jkmJkk= new BigDecimal(0);
//        BigDecimal totalGaji= new BigDecimal(0);
//        BigDecimal totalPph = new BigDecimal(0);
//        pphGajiBulan = new BigDecimal(0);
//
//        // jasprod
//        BigDecimal asumsiDanRealisasiJasprod = asumsiJasprod;
//        if(realisasiJasprod.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiJasprod = new BigDecimal(0);
//        }
//
//        // insentif
//        BigDecimal asumsiDanRealisasiInsentif = new BigDecimal(0);
//        if(realisasiInsentifBulan.compareTo(BigDecimal.valueOf(0)) > 0){
//            asumsiDanRealisasiInsentif = new BigDecimal(0);
//        }
//
//        // Jubileum
//        BigDecimal asumsiDanRealisasiJubileum = new BigDecimal(0);
//
//        BigDecimal totalKotor = new BigDecimal(0);
//
//        String flagJasprod = "N";
//
//        String strBulan = "";
//
//        for(int i = 1 ; i <= Integer.parseInt(bulan); i++){
//            if(i == 1){
//                strBulan = "IN (";
//            }
//            if(i < 10){
//                strBulan = strBulan + "'0" + i + "'";
//            }else{
//                strBulan = strBulan + "'" + i + "'";
//            }
//            if(i < Integer.parseInt(bulan)){
//                strBulan = strBulan + ", ";
//            }else{
//                strBulan = strBulan + ")";
//            }
//        }
//
//        BigDecimal gajiKotorA = totalKotor;
//        gajiKotorA = gajiKotorA.multiply(BigDecimal.valueOf(12));
//        gajiKotorA = gajiKotorA.add(jkmJkk);
//        List<ItPayrollEntity> payrollEntityList = payrollDao.getJumlahKotorKabidTanpaPayroll(nip, strBulan, tahun, branch);
//
//
//        if(payrollEntityList.size() > 0){
//            int jumlahId = payrollEntityList.size();
//            int i = 0;
//            for(ItPayrollEntity itPayrollEntity: payrollEntityList){
//
//                totalGaji = totalGaji.add(itPayrollEntity.getTotalA()).add(itPayrollEntity.getTunjanganBajuDinas());
//                totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//
//                // jasprod
//                if(itPayrollEntity.getFlagJasprod().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiJasprod = itPayrollEntity.getTotalJasProd();
//                }
//
//                // insentif
//                if(itPayrollEntity.getFlagInsentif().equalsIgnoreCase("Y")){
//                    asumsiDanRealisasiInsentif = itPayrollEntity.getTotalInsentif();
//                }
//
//                // Jubileum
//                if(itPayrollEntity.getFlagJubileum().equalsIgnoreCase("Y")){
//                    if(itPayrollEntity.getTotalJubileum() != null){
//                        asumsiDanRealisasiJubileum = itPayrollEntity.getTotalJubileum();
//                    }else{
//                        asumsiDanRealisasiJubileum = BigDecimal.valueOf(0);
//                    }
//                    totalPph = totalPph.add(itPayrollEntity.getPphJubileum());
//                }
//
//            }
//        }
//
//
//        // insentif Awal (import di januari 2019)
//        BigDecimal realisasiInsentif = new BigDecimal(0);
//        BigDecimal realisasiPphInsentif = new BigDecimal(0);
//        List<ItPayrollInsentifEntity> itPayrollInsentifEntity = payrollInsentifDao.getInsentifByNip(nip);
//        if(itPayrollInsentifEntity.size() > 0){
//            for(ItPayrollInsentifEntity insentifEntity: itPayrollInsentifEntity){
//                realisasiInsentif = realisasiInsentif.add(insentifEntity.getJumlahInsentif());
//                realisasiPphInsentif = realisasiPphInsentif.add(insentifEntity.getJumlahPph());
//            }
//        }
//
//        BigDecimal totalGajiTahun = new BigDecimal(0);
//        totalGajiTahun = totalGaji
//                .add(asumsiDanRealisasiJasprod)
//                .add(asumsiDanRealisasiInsentif)
//                .add(asumsiDanRealisasiJubileum)
//                .add(realisasiJasprod)
//                .add(realisasiInsentifBulan)
//                .add(rapelInsentif)
//                .add(rapelJubileum)
//                .add(realisasiInsentif);
//
//        BigDecimal hutangPajak = hitungHutangPajak(totalGajiTahun);
//
//        BigDecimal totalPphTahun = new BigDecimal(0);
//        totalPphTahun =
//                totalPph
//                .add(realisasiPphInsentif);
//
//        BigDecimal selisih = new BigDecimal(0);
//        if(totalPphTahun.compareTo(hutangPajak) > 0){
//            //selisih = totalPphTahun.subtract(hutangPajak);
//            pphGajiBulan = BigDecimal.valueOf(0);
//        }else{
//            selisih = new BigDecimal(0);
//            selisih = hutangPajak.subtract(totalPphTahun);
//            if(flagJasprodP.equalsIgnoreCase("Y")){
//                selisih = selisih.multiply(BigDecimal.valueOf(3.5));
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }else{
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }
//        }
//
//        if(pphGajiBulan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGajiBulan = BigDecimal.valueOf(0);
//        }
//
//        return pphGajiBulan;
//    }
//
//    //berfungsi untuk menghitung tunjangan - tunjangan untuk proses perhitungan pph
//    public BigDecimal hitungTunjLainsimRs(BigDecimal sankhus, BigDecimal tunjJabatan
//            ,BigDecimal tunjStruktural, BigDecimal tunjFungsional,BigDecimal tunjPeralihan,BigDecimal tunjLain,BigDecimal tunjTambahan,BigDecimal pemondokan
//            ,BigDecimal komunikasi, BigDecimal totalRlab, BigDecimal lembur, BigDecimal tunjPensiun,BigDecimal tunjBpjsTk, BigDecimal tunjBpjsKs){
//
//
//        BigDecimal bonus = new BigDecimal(0);
//        bonus = bonus.add(sankhus).add(tunjJabatan).add(tunjStruktural).add(tunjFungsional).add(tunjPeralihan).add(tunjLain).add(tunjTambahan).add(pemondokan).add(komunikasi) //Komponen A
//                .add(totalRlab)
//                .add(lembur).add(tunjPensiun).add(tunjBpjsTk).add(tunjBpjsKs);
//        return bonus;
//    }
//
//    //mengitung nilai bruto Sebulan untuk proses perhitungan pph
//    public BigDecimal hitungBrutoSebulanSimRs(BigDecimal gaji, BigDecimal tunjPph, BigDecimal tunjLain, BigDecimal bonus){
//        BigDecimal brutoSebulan = new BigDecimal(0);
//        brutoSebulan = brutoSebulan.add(gaji).add(tunjPph).add(tunjLain).add(bonus);
//        return brutoSebulan;
//    }
//
//    //mengambil nilai ptkp dari database
//    public BigDecimal getPtkpPegawaiSimRs(String statusKeluarga, Integer jumAnak){
//        BigDecimal nilaiPtkp = new BigDecimal(0);
//        List<ImPayrollPtkpEntity> ptkpEntityList = new ArrayList<>();
//        try{
//            ptkpEntityList = payrollPtkpDao.getDataPtkp(statusKeluarga, jumAnak);
//            if (ptkpEntityList.size()>0){
//                for (ImPayrollPtkpEntity ptkpLoop: ptkpEntityList){
//                    nilaiPtkp = ptkpLoop.getNilai();
//                }
//            }
//        }catch(GeneralBOException e){
//
//        }
//        return nilaiPtkp;
//    }
//    //perhitungan netto sebulan untuk proses perhitungan pph
//    public BigDecimal hitungNettoSebulanSimRs(BigDecimal bruto, BigDecimal iuranPegawai, BigDecimal biayaJabatan){
//        BigDecimal nettoSebulan = new BigDecimal(0);
//        nettoSebulan = bruto.subtract(biayaJabatan).subtract(iuranPegawai);
//
//        return nettoSebulan;
//    }
//
//    //perhitungan PKP setahun untuk proses perhitungan pph
//    public BigDecimal hitungPkpSetahunSimRs(BigDecimal netto, BigDecimal ptkp, BigDecimal bonus){
//        BigDecimal pkpSetahun = new BigDecimal(0);
//        BigDecimal nettoSetahun = (netto.subtract(bonus)).multiply(BigDecimal.valueOf(12)).add(bonus);
//        pkpSetahun = nettoSetahun.subtract(ptkp);
//        return pkpSetahun.setScale(3, BigDecimal.ROUND_HALF_UP);
//    }
//
//    //perhitungan pph setahun untuk proses perhitungan pph
//    private BigDecimal hitungHutangPajakSimRs(BigDecimal pkp){
//        BigDecimal hutangPajakSetahun = new BigDecimal(0) ;
//
//        if(pkp.compareTo(BigDecimal.valueOf(50000000)) <= 0){
//            hutangPajakSetahun = BigDecimal.valueOf(0.05).multiply(pkp);
//        }else if(pkp.compareTo(BigDecimal.valueOf(50000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(250000000)) <= 0){
//            hutangPajakSetahun = BigDecimal.valueOf(2500000).add((BigDecimal.valueOf(0.15).multiply(pkp.subtract(BigDecimal.valueOf(50000000))))) ;
//        }else if(pkp.compareTo(BigDecimal.valueOf(250000000)) > 0 && pkp.compareTo(BigDecimal.valueOf(500000000)) <= 0){
//            hutangPajakSetahun = BigDecimal.valueOf(32500000).add((BigDecimal.valueOf(0.25).multiply((pkp.subtract(BigDecimal.valueOf(250000000))))));
//        }else{
//            hutangPajakSetahun = BigDecimal.valueOf(95000000).add(BigDecimal.valueOf(0.3).multiply(pkp.subtract(BigDecimal.valueOf(500000000))));
//        }
//
//        return hutangPajakSetahun.setScale(2, BigDecimal.ROUND_HALF_UP);
//    }
//
//    public PayrollPph kalkulasiGrossUpPphSimRs(String nip, String bulan, String tahun, String branch, BigDecimal gaji, BigDecimal sankhus, BigDecimal tunjJabatan,
//                                               BigDecimal tunjStruktural, BigDecimal tunjFungsional,BigDecimal tunjPeralihan, BigDecimal TotaltunjLain, BigDecimal tunjTambahan,BigDecimal pemondokan, BigDecimal komunikasi,
//                                               BigDecimal totalRlab, BigDecimal lembur, BigDecimal tunjPensiun,BigDecimal tunjBpjsTk, BigDecimal tunjBpjsKs, BigDecimal bonus,
//                                               BigDecimal iuranPensiun, BigDecimal iuranBpjsTk, BigDecimal iuranBpjsKs, String statusKeluarga, Integer jumAnak,String npwp){
//        BigDecimal pphGaji = new BigDecimal(0);
//        BigDecimal tunjPph = new BigDecimal(0);
//        BigDecimal tunjLain = new BigDecimal(0);
//        BigDecimal bruto = new BigDecimal(0);
//        BigDecimal netto = new BigDecimal(0);
//        BigDecimal ptkp = new BigDecimal(0);
//        BigDecimal pkp = new BigDecimal(0);
//        BigDecimal pphTerhutangSetahun = new BigDecimal(0);
//        Integer selisih;
//
//        ImCompany company = companyDao.getCompanyInfo("Y");
//
//        PayrollPph payrollPph = new PayrollPph();
//        String pphId ="";
//
//
//        tunjLain = hitungTunjLainsimRs(sankhus,tunjJabatan,tunjStruktural,tunjFungsional,tunjPeralihan,TotaltunjLain,tunjTambahan
//                ,pemondokan,komunikasi,totalRlab,lembur,tunjPensiun,tunjBpjsTk,tunjBpjsKs);
//        //mengambil ptkp pegawai dari database
//        ptkp = getPtkpPegawaiSimRs(statusKeluarga,jumAnak);
//        BigDecimal biayaJabatan = company.getBiayaJabatan();
//        BigDecimal reduce = biayaJabatan.add(ptkp);
//        BigDecimal iuranPegawai = iuranBpjsKs.add(iuranBpjsTk).add(iuranPensiun);
//
//        do {
//            //menghiitung bruto
//            bruto = hitungBrutoSebulanSimRs(gaji,tunjPph,tunjLain,bonus);
//            //menghitung netto
//            if ((CommonUtil.percentage(bruto, BigDecimal.valueOf(5))).compareTo(company.getBiayaJabatan())<1){
//                biayaJabatan = CommonUtil.percentage(bruto, BigDecimal.valueOf(5));
//            }
//            netto = hitungNettoSebulanSimRs(bruto,iuranPegawai, biayaJabatan);
//            //menghitung pkp
//            pkp = hitungPkpSetahunSimRs(netto,ptkp, bonus);
//            //menghitung pph setahun
//            pphTerhutangSetahun = hitungPajakSetahunSimRs(pkp,npwp);
//            //pph setahun / 12 untuk mendapat pph perbulan
//            pphGaji = pphTerhutangSetahun.divide(BigDecimal.valueOf(12),2, BigDecimal.ROUND_HALF_UP);
//
//            //perhitungan selisih antara tunjPph dan pph gaji, jika selisih = 0 looping berhenti
//            selisih = pphGaji.subtract(tunjPph).intValue();
//            tunjPph = pphGaji;
//        } while (selisih != 0);
//        //set pph yang didapat ke model pph payroll
//        try{
//            pphId = payrollPphDao.getNextPayrollPphId(bulan, tahun);
//        }catch(GeneralBOException e){
//
//        }
//
//        pphGaji = pphGaji.setScale(0, RoundingMode.HALF_UP); //Also tried with RoundingMode.UP
//
//        payrollPph.setPphId(pphId);
//        payrollPph.setPkp(CommonUtil.numbericFormat(pkp,"###,###"));
//        payrollPph.setPkpNilai(pkp);
//        int valuePph = pphGaji.compareTo(BigDecimal.valueOf(0));
//        if (valuePph > 0){
//            payrollPph.setPphGaji(CommonUtil.numbericFormat(pphGaji,"###,###"));
//            payrollPph.setPphGajiNilai(pphGaji);
//        }else{
//            payrollPph.setPphGaji(CommonUtil.numbericFormat(BigDecimal.valueOf(0),"###,###"));
//            payrollPph.setPphGajiNilai(BigDecimal.valueOf(0));
//        }
//
//        payrollPph.setBruto(CommonUtil.numbericFormat(bruto,"###,###"));
//        payrollPph.setBrutoNilai(bruto);
//        payrollPph.setReduce(CommonUtil.numbericFormat(reduce,"###,###"));
//        payrollPph.setReduceNilai(reduce);
//        payrollPph.setNip(nip);
//        payrollPph.setBulan(bulan);
//        payrollPph.setTahun(tahun);
//        payrollPph.setPtkp(CommonUtil.numbericFormat(ptkp,"###,###"));
//        payrollPph.setPtkpNilai(ptkp);
//        payrollPph.setNetto(CommonUtil.numbericFormat(netto,"###,###"));
//        payrollPph.setNettoNilai(netto);
//        payrollPph.setBiayaJabatan(CommonUtil.numbericFormat(biayaJabatan,"###,###"));
//        payrollPph.setBiayaJabatanNilai(biayaJabatan);
//        payrollPph.setHutangPph(CommonUtil.numbericFormat(pphTerhutangSetahun,"###,###"));
//        payrollPph.setHutangPphNilai(pphTerhutangSetahun);
//        payrollPph.setTunjanganPphBulan(CommonUtil.numbericFormat(tunjPph,"###,###"));
//        payrollPph.setTunjanganPphNilaiBulan(tunjPph);
//
//        payrollPph.setGaji(CommonUtil.numbericFormat(gaji,"###,###"));
//        payrollPph.setGajiNilai(gaji);
//        payrollPph.setSankhus(CommonUtil.numbericFormat(sankhus,"###,###"));
//        payrollPph.setSankhusNilai(sankhus);
//        payrollPph.setTunjanganJabatanStruktural(CommonUtil.numbericFormat(tunjJabatan,"###,###"));
//        payrollPph.setTunjanganJabatanStrukturalNilai(tunjJabatan);
//        payrollPph.setTunjanganStruktural(CommonUtil.numbericFormat(tunjStruktural,"###,###"));
//        payrollPph.setTunjanganStrukturalNilai(tunjStruktural);
//        payrollPph.setTunjanganStrategis(CommonUtil.numbericFormat(tunjFungsional,"###,###"));
//        payrollPph.setTunjanganStrategisNilai(tunjFungsional);
//        payrollPph.setTunjanganPeralihan(CommonUtil.numbericFormat(tunjPeralihan,"###,###"));
//        payrollPph.setTunjanganPeralihanNilai(tunjPeralihan);
//        payrollPph.setTotalTunjanganLain(CommonUtil.numbericFormat(tunjLain,"###,###"));
//        payrollPph.setTotalTunjanganLainNilai(tunjLain);
//        payrollPph.setTunjanganTambahan(CommonUtil.numbericFormat(tunjTambahan,"###,###"));
//        payrollPph.setTunjanganTambahanNilai(tunjTambahan);
//        payrollPph.setPemondokan(CommonUtil.numbericFormat(pemondokan,"###,###"));
//        payrollPph.setPemondokanNilai(pemondokan);
//        payrollPph.setKomunikasi(CommonUtil.numbericFormat(komunikasi,"###,###"));
//        payrollPph.setKomunikasiNilai(komunikasi);
//        payrollPph.setTotalRlab(CommonUtil.numbericFormat(totalRlab,"###,###"));
//        payrollPph.setTotalRlabNilai(totalRlab);
//        payrollPph.setIuranPegawai(CommonUtil.numbericFormat(iuranPegawai,"###,###"));
//        payrollPph.setIuranPegawaiNilai(iuranPegawai);
//        payrollPph.setTunjanganLembur(CommonUtil.numbericFormat(lembur,"###,###"));
//        payrollPph.setTunjanganLemburNilai(lembur);
//        payrollPph.setTunjanganPensiun(CommonUtil.numbericFormat(tunjPensiun,"###,###"));
//        payrollPph.setTunjanganPensiunNilai(tunjPensiun);
//        payrollPph.setBpjsTk(CommonUtil.numbericFormat(tunjBpjsTk,"###,###"));
//        payrollPph.setBpjsTkNilai(tunjBpjsTk);
//        payrollPph.setBpjsKs(CommonUtil.numbericFormat(tunjBpjsKs,"###,###"));
//        payrollPph.setBpjsKsNilai(tunjBpjsKs);
//        payrollPph.setBonus(CommonUtil.numbericFormat(bonus,"###,###"));
//        payrollPph.setBonusNilai(bonus);
//
//        return payrollPph;
//    }
//
//    public PayrollPph pph21SimRs(BigDecimal gaji, BigDecimal sankhus, BigDecimal tunjJabatan,
//                                 BigDecimal tunjStruktural, BigDecimal tunjFungsional,BigDecimal tunjPeralihan, BigDecimal TotaltunjLain, BigDecimal tunjTambahan,BigDecimal pemondokan, BigDecimal komunikasi,
//                                 BigDecimal totalRlab, BigDecimal lembur, BigDecimal tunjPensiun,BigDecimal tunjBpjsTk, BigDecimal tunjBpjsKs, BigDecimal bonus,
//                                 BigDecimal iuranPensiun, BigDecimal iuranBpjsTk, BigDecimal iuranBpjsKs, String statusKeluarga, Integer jumAnak,BigDecimal bruto11Bulan,BigDecimal tunjPPh11Bulan,
//                                 BigDecimal tunjPphBonus,BigDecimal ptt11Bulan,BigDecimal iuranPegawai11Bulan,BigDecimal pttBulan12,BigDecimal pph11Bulan,BigDecimal pphBonus,String npwp){
//
//        PayrollPph result = new PayrollPph();
//        ImCompany company = companyDao.getCompanyInfo("Y");
//
//        BigDecimal pphSeharusnya ,pphGaji,tunjPph = BigDecimal.ZERO;
//        Integer selisih ;
//
//        BigDecimal iuranPegawai = iuranBpjsKs.add(iuranBpjsTk).add(iuranPensiun);
//        BigDecimal tunjLain = hitungTunjLainsimRs(sankhus,tunjJabatan,tunjStruktural,tunjFungsional,tunjPeralihan,TotaltunjLain,tunjTambahan
//                ,pemondokan,komunikasi,totalRlab,lembur,tunjPensiun,tunjBpjsTk,tunjBpjsKs);
//        BigDecimal brutoBulan12 = gaji.add(tunjLain);
//
//        BigDecimal totalPenghasilanBruto = bruto11Bulan.add(brutoBulan12);
//        BigDecimal totalTunjPPhSelainBulan12 = tunjPPh11Bulan.add(tunjPphBonus);
//        BigDecimal totalBonus = bonus.add(ptt11Bulan).add(pttBulan12);
//
//        BigDecimal totalBruto = totalPenghasilanBruto.add(totalTunjPPhSelainBulan12).add(totalBonus);
//
//        BigDecimal totalIuran = iuranPegawai11Bulan.add(iuranPegawai);
//        BigDecimal biayaJabatan;
//
//        BigDecimal nettoSetahun ;
//
//        BigDecimal ptkp = getPtkpPegawaiSimRs(statusKeluarga,jumAnak);
//        BigDecimal pkp ;
//
//        do {
//            //menghiitung bruto
//            BigDecimal totalBrutoLoop =totalBruto.add(tunjPph);
//
//            // menghitung reduce
//            if ((CommonUtil.percentage(totalBrutoLoop, BigDecimal.valueOf(5))).compareTo(company.getBiayaJabatan().multiply(new BigDecimal(12)))<1){
//                biayaJabatan = CommonUtil.percentage(totalBrutoLoop, BigDecimal.valueOf(5));
//            }else{
//                biayaJabatan = company.getBiayaJabatan().multiply(new BigDecimal(12));
//            }
//            BigDecimal reduce = totalIuran.add(biayaJabatan);
//
//            //menghitung netto
//            nettoSetahun = totalBrutoLoop.subtract(reduce);
//            //menghitung pkp
//            pkp = nettoSetahun.subtract(ptkp);
//            //menghitung pph setahun
//            pphSeharusnya = hitungPajakSetahunSimRs(pkp,npwp);
//
//            //pph setahun / 12 untuk mendapat pph perbulan
//            pphGaji = pphSeharusnya.subtract(pph11Bulan).subtract(pphBonus);
//
//            //perhitungan selisih antara tunjPph dan pph gaji, jika selisih = 0 looping berhenti
//            selisih = pphGaji.subtract(tunjPph).intValue();
//            tunjPph = pphGaji;
//        } while (selisih > 0);
//
//        result.setHutangPphNilai(pphSeharusnya);
//        result.setPphGajiNilai(pphGaji);
//
//        return result;
//    }
//
//    private PayrollPph kalkulasiPphTahunKabid(String nip, String bulan, String tahun, String branch, BigDecimal pphGajiBulan, BigDecimal pphPengobatan, BigDecimal gajiKotor,
//                                              BigDecimal iuranPensiun, BigDecimal iuranBpjsTk, BigDecimal iuranBpjsPensiun, String statusKeluarga, int jumlahAnak, String gender,
//                                              BigDecimal asumsiThr, BigDecimal asumsiPendidikan, BigDecimal realisasiThr, BigDecimal realisasiPendidikan,
//                                              BigDecimal biayaPengobatan, BigDecimal pakaianDinas, BigDecimal jkmJkk, String flagThrP, String flagPendidikanP,
//                                              String flagJasprodP, BigDecimal lembur, String flagEdit, String flagPphPengobatan){
//
//        // halimi
//        if(nip.equalsIgnoreCase("93-0384")){
//            int a = 0;
//        }
//        BigDecimal totalGaji= new BigDecimal(0);
//        BigDecimal totalPph = new BigDecimal(0);
//        BigDecimal totalPphRapel = new BigDecimal(0);
//        BigDecimal totalPphRapelPribadi = new BigDecimal(0);
//        BigDecimal totalPphObat = new BigDecimal(0);
//        BigDecimal totalTunjanganPengobatan = new BigDecimal(0);
//        BigDecimal totalThr = new BigDecimal(0);
//        BigDecimal totalRapel = new BigDecimal(0);
//        BigDecimal totalBiayaObat = new BigDecimal(0);
//        BigDecimal totalInsentif = new BigDecimal(0);
//        BigDecimal totalPendidikan = new BigDecimal(0);
//        BigDecimal bajuDinas = new BigDecimal(0);
//        BigDecimal pphGajiAsumsi = new BigDecimal(0);
//        BigDecimal gajiKotorAsumsi = new BigDecimal(0);
//        int jumlahSisaBulan = 13 - Integer.parseInt(bulan);
//        int jumlahSisaBulanGajiAsumsi = 0;
//        int jumlahKaliPph = 0;
//
//        BigDecimal gajiTanpaPph = new BigDecimal(0);
//        gajiTanpaPph = gajiKotor.subtract(pphGajiBulan);
//
//        String flagThr = "N";
//        String flagRapel = "N";
//        String flagPendidikan = "N";
//        String flagJasprod = "N";
//        String flagInsentif = "N";
//
//        // gaji kotor Asumsi jika ada Pengobatan
//        if(biayaPengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
//            gajiTanpaPph = gajiTanpaPph.subtract(biayaPengobatan).subtract(pphPengobatan);
//        }
//        gajiKotorAsumsi = gajiTanpaPph.multiply(BigDecimal.valueOf(jumlahSisaBulan));
//        // gaji kotor Asumsi jika ada Pengobatan
//        // tidak dipakai karena pph pengobatan sudah dipisah dengan pph gaji
//        /*if(biayaPengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
//            gajiKotorAsumsi = gajiKotorAsumsi.add(biayaPengobatan);
//        }*/
//
//        String strBulan = "";
//
//        if(flagEdit.equalsIgnoreCase("N")){
//            for(int i = 1 ; i <= Integer.parseInt(bulan); i++){
//                if(i == 1){
//                    strBulan = "IN (";
//                }
//                if(i < 10){
//                    strBulan = strBulan + "'0" + i + "'";
//                }else{
//                    strBulan = strBulan + "'" + i + "'";
//                }
//                if(i < Integer.parseInt(bulan)){
//                    strBulan = strBulan + ", ";
//                }else{
//                    strBulan = strBulan + ")";
//                }
//            }
//        }else{
//            strBulan = strBulan + "NOT IN ('"+ bulan + "') and flag_jubileum = 'N' and flag_insentif = 'N' ";
//            String strWhere = " NOT IN ('13') and payroll.flag_payroll = 'N' ";
//            List<ItPayrollEntity> payrollEntityList = payrollDao.getJumlahKotor(nip, strWhere, tahun, branch);
//            if(payrollEntityList.size() > 0){
//                for(ItPayrollEntity itPayrollEntity: payrollEntityList){
//                    // sementara kalkulasi pph hanya gaji tanpa bonus
//                    if(itPayrollEntity.getFlagPendidikan().equalsIgnoreCase("Y")){
//                        flagPendidikan = "Y";
//                        totalPendidikan = itPayrollEntity.getTotalPendidikan();
//                        //totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                    }
//
//                    if(itPayrollEntity.getFlagThr().equalsIgnoreCase("Y")){
//                        flagThr = "Y";
//                        totalThr = itPayrollEntity.getTotalThr();
//                    }
//
//                    if(itPayrollEntity.getFlagRapel().equalsIgnoreCase("Y")){
//                        flagRapel = "Y";
//                        totalRapel = itPayrollEntity.getTotalRapelBulan()
//                                .add(itPayrollEntity.getTotalRapelThr())
//                                .add(itPayrollEntity.getTotalRapelPendidikan())
//                                .add(itPayrollEntity.getTunjanganPph());
//                        totalPphRapel = itPayrollEntity.getPphGajiRapel();
//                        totalPphRapelPribadi = itPayrollEntity.getPphGajiRapelPribadi();
//                    }
//
//                    if(itPayrollEntity.getFlagInsentif().equalsIgnoreCase("Y")){
//                        flagInsentif = "Y";
//                        totalInsentif = itPayrollEntity.getTotalInsentif();
//                        //totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                    }
//                }
//            }
//        }
//
//        BigDecimal gajiKotorA = gajiTanpaPph;
//
//        gajiKotorA = gajiKotorA.multiply(BigDecimal.valueOf(12));
//        gajiKotorA = gajiKotorA.add(jkmJkk);
//        List<ItPayrollEntity> payrollEntityList = payrollDao.getJumlahKotor(nip, strBulan, tahun, branch);
//
//        if(totalPendidikan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            totalPendidikan = asumsiPendidikan;
//        }
//        if(totalThr.compareTo(BigDecimal.valueOf(0)) <= 0){
//            totalThr = asumsiThr;
//        }
//        bajuDinas = new BigDecimal(0);
//        if(payrollEntityList.size() > 0){
//            int jumlahId = payrollEntityList.size();
//            int i = 0;
//            for(ItPayrollEntity itPayrollEntity: payrollEntityList){
//                totalGaji = totalGaji.add(itPayrollEntity.getTotalA()).add(itPayrollEntity.getTunjanganBajuDinas());
////                totalPphObat = totalPphObat.add(itPayrollEntity.getPphPengobatan());
////                totalTunjanganPengobatan = totalTunjanganPengobatan.add(itPayrollEntity.getTunjanganPengobatan());
////                totalBiayaObat = totalBiayaObat.add(itPayrollEntity.getPengobatan());
//
//                if(itPayrollEntity.getFlagInsentif().equalsIgnoreCase("N") && itPayrollEntity.getFlagJasprod().equalsIgnoreCase("N")
//                        && itPayrollEntity.getFlagRapel().equalsIgnoreCase("N")){
//                    totalPph = totalPph.add(itPayrollEntity.getPphGaji());
//                }
//
//                if(itPayrollEntity.getFlagThr().equalsIgnoreCase("Y")){
//                    flagThr = "Y";
//                    totalThr = itPayrollEntity.getTotalThr();
//                    jumlahSisaBulanGajiAsumsi++;
//                }else{
//                    if(flagThr.equalsIgnoreCase("N")){
//                        totalThr = asumsiThr;
//                    }
//                }
//
//                if(itPayrollEntity.getFlagRapel().equalsIgnoreCase("Y")){
//                    flagRapel = "Y";
//                    totalRapel = itPayrollEntity.getTotalRapelBulan()
//                            .add(itPayrollEntity.getTotalRapelThr())
//                            .add(itPayrollEntity.getTotalRapelPendidikan())
//                            .add(itPayrollEntity.getTunjanganPph());
//                    totalPphRapel = itPayrollEntity.getPphGajiRapel();
//                    totalPphRapelPribadi = itPayrollEntity.getPphGajiRapelPribadi();
//                }
//
//                if(itPayrollEntity.getFlagPendidikan().equalsIgnoreCase("Y")){
//                    flagPendidikan = "Y";
//                    totalPendidikan = itPayrollEntity.getTotalPendidikan();
//                    jumlahSisaBulanGajiAsumsi++;
//                }else{
//                    if(flagPendidikan.equalsIgnoreCase("N")){
//                        totalPendidikan = asumsiPendidikan;
//                    }
//                }
//
//            }
//        }
//
//        // mengambil nilai insentif lama (januari)
//        BigDecimal realisasiInsentif =  new BigDecimal(0);
//        BigDecimal realisasiPphInsentif =  new BigDecimal(0);
//        if(tahun.equalsIgnoreCase("2019")){
//            List<ItPayrollInsentifEntity> itPayrollInsentifEntity = payrollInsentifDao.getInsentifByNip(nip);
//            if(itPayrollInsentifEntity.size() > 0){
//                for(ItPayrollInsentifEntity insentifEntity: itPayrollInsentifEntity){
//                    realisasiInsentif = realisasiInsentif.add(insentifEntity.getJumlahInsentif());
//                    realisasiPphInsentif = realisasiPphInsentif.add(insentifEntity.getJumlahPph());
//                }
//            }
//        }
//
//        // kalkulasi hanya pph gaji gross up, tanpa bonus
////        BigDecimal totalGajiTahunNObat = new BigDecimal(0);
//        /*totalGajiTahunNObat = totalGaji
//                .add(gajiKotorAsumsi)
//                .add(totalThr)
//                .add(totalRapel)
//                .add(totalPendidikan)
//                .add(realisasiThr)
//                .add(pakaianDinas)
//                .add(jkmJkk);*/
//
//        //mencari pph obat, jika ada pengobatan pada bulan yang diproses
////        BigDecimal tmpPphObat = new BigDecimal(0);
////        if(biayaPengobatan.compareTo(BigDecimal.valueOf(0)) > 0){
////            if(flagPphPengobatan.equalsIgnoreCase("Y")){
////                pphPengobatan = calculatePphPengobatan(biayaPengobatan, totalGajiTahunNObat);
////            }
////
////            tmpPphObat = totalPphObat;
////            totalGajiTahunNObat = totalGajiTahunNObat.add(pphPengobatan);
////            totalPphObat = totalPphObat.add(pphPengobatan);
////            totalTunjanganPengobatan = totalTunjanganPengobatan.add(biayaPengobatan).add(pphPengobatan);
////            totalBiayaObat = totalBiayaObat.add(biayaPengobatan);
////        }
//
//        //total gaji dikurangi tunjangan pph yang telah dibayar dibulan sebelumnya
//        totalPph = totalPph.add(totalPphRapel);
////        totalGajiTahunNObat = totalGajiTahunNObat.subtract(totalPph);
//
//        // kalkulasi pph gaji gross up, tanpa T. Pengobatan
//        BigDecimal totalGajiTahun = new BigDecimal(0);
////        totalGajiTahun = totalGajiTahunNObat.subtract(totalTunjanganPengobatan);
//
//        // degan tunjangan pengobatan
////        BigDecimal pphGajiBiayaJabatanNObat = new BigDecimal(0);
////        pphGajiBiayaJabatanNObat = getBiayaJabatan(totalGajiTahunNObat).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        // tanpa tunjangan pengobatan
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//        pphGajiBiayaJabatan = getBiayaJabatan(totalGajiTahun).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        BigDecimal pphGajiTotalBiayaPensiun = BigDecimal.valueOf(0);
//        BigDecimal pphGajiDanaPensiun = iuranPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsTk = iuranBpjsTk.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiBpjsPensiun = iuranBpjsPensiun.multiply(BigDecimal.valueOf(12));
//        BigDecimal pphGajiPtkp = BigDecimal.valueOf(0);
//
//        pphGajiPtkp = getPtkp(statusKeluarga, jumlahAnak, gender);
//
//        pphGajiTotalBiayaPensiun = pphGajiDanaPensiun.add(pphGajiBpjsTk).add(pphGajiBpjsPensiun);
//
//        // dengan tunjangan pengobatan
////        BigDecimal pphGajiBNObat = hitungPphGajiB(pphGajiBiayaJabatanNObat, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        // tanpa tunjangan pengobatan
//        BigDecimal pphGajiB = hitungPphGajiB(pphGajiBiayaJabatan, pphGajiTotalBiayaPensiun, pphGajiPtkp) ;//Jumlah seluruh Pengurang Dari PPh Gaji
//
//        // dengan tunjangan pengobatan
////        BigDecimal pphGajiPkpNObat = totalGajiTahunNObat.subtract(pphGajiBNObat).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//        // Tanpa tunjangan pengobatan
//        BigDecimal pphGajiPkp = totalGajiTahun.subtract(pphGajiB).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//        // Khusus Kabid keatas mendapatkan Tunjangan Pph
//        // dengan tunjangan pengobatan
////        BigDecimal tunjanganPphTahunNObat = hitungTunjanganPph(pphGajiPkpNObat);
//        /*if(tunjanganPphTahunNObat.compareTo(BigDecimal.valueOf(0)) <= 0){
//            tunjanganPphTahunNObat = BigDecimal.valueOf(0);
//        }*/
//
//        // tanpa tunjangan pengobatan
//        BigDecimal tunjanganPphTahun = hitungTunjanganPph(pphGajiPkp);
//        if(tunjanganPphTahun.compareTo(BigDecimal.valueOf(0)) <= 0){
//            tunjanganPphTahun = BigDecimal.valueOf(0);
//        }
//
//        BigDecimal pphGaji = new BigDecimal(0);
//
//        BigDecimal pphTanpaThrPendJasp = kalkulasiPphKabidTanpaThrPend(gajiKotorA, pphGajiTotalBiayaPensiun, pphGajiPtkp);
//        BigDecimal selisihPphBulan = new BigDecimal(0);
//
//        selisihPphBulan = pphGajiBulan.subtract(pphTanpaThrPendJasp);
//        if(Integer.parseInt(bulan) >= 8 && jumlahSisaBulanGajiAsumsi <= 3){
//            pphGajiAsumsi = pphTanpaThrPendJasp.multiply(BigDecimal.valueOf((jumlahSisaBulan)));
//        }else{
//            pphGajiAsumsi = pphTanpaThrPendJasp.multiply(BigDecimal.valueOf(jumlahSisaBulan)).add(selisihPphBulan);
//            selisihPphBulan = selisihPphBulan.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//        }
//
//        if(bulan.equalsIgnoreCase("01")){
//            pphGajiBulan = pphTanpaThrPendJasp.add(selisihPphBulan);
//        }
//
//        // kalkulasi hanya pph gaji tanpa bonus
//        // dengan tunjangan pengobatan
////        BigDecimal totalPphTahunNObat = new BigDecimal(0);
//        /*totalPphTahunNObat = totalPph
//                .add(totalPphObat)
//                .add(pphGajiAsumsi);*/
//
//        // tanpa tunjangan pengobatan
//        BigDecimal totalPphTahun = new BigDecimal(0);
//        totalPphTahun = totalPph
//                .add(pphGajiAsumsi);
//
//
//        // tanpa tunjangan pengobatan
//        if(totalPphTahun.compareTo(tunjanganPphTahun) > 0){
//            BigDecimal selisih = new BigDecimal(0);
//            selisih = totalPphTahun.subtract(tunjanganPphTahun);
//            selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan + jumlahKaliPph), 2, RoundingMode.HALF_UP);
//            pphGajiBulan = pphGajiBulan.subtract(selisih);
//        }else{
//            BigDecimal selisih = new BigDecimal(0);
//            selisih = tunjanganPphTahun.subtract(totalPphTahun);
//
//            //selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan + jumlahKaliPph), 2, RoundingMode.HALF_UP);
//            selisih = selisih.divide(BigDecimal.valueOf(jumlahSisaBulan), 2, RoundingMode.HALF_UP);
//
//            if(jumlahKaliPph > 0){
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }else{
//                pphGajiBulan = pphGajiBulan.add(selisih);
//            }
//        }
//
//        if(pphGajiBulan.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGajiBulan = BigDecimal.valueOf(0);
//        }
//
//        PayrollPph returnPayrollPph = new PayrollPph();
//        BigDecimal hutangPajakPengobatanPerusahaan = BigDecimal.valueOf(0);
////        hutangPajakPengobatanPerusahaan = calculatePphPengobatan(totalBiayaObat, pphGajiPkpNObat.add(pphPengobatan));
//
//        // tunjangan PPH (biaya pengobatan + PPH Pengobatan)
//        returnPayrollPph.setHutangPphPengobatanNilai(hutangPajakPengobatanPerusahaan);
//
//        // kurang pph pengobatan (yg dibayar perusahaan)
//        //totalPphObat = totalPphObat.subtract(pphPengobatan);
//        BigDecimal kurangPphPengobatan = hutangPajakPengobatanPerusahaan.subtract(totalPphObat);
//        if(kurangPphPengobatan.compareTo(BigDecimal.valueOf(0)) < 0){
////            pphPengobatan = hutangPajakPengobatanPerusahaan.subtract(tmpPphObat);
//            kurangPphPengobatan = BigDecimal.valueOf(0);
//            totalPphObat = hutangPajakPengobatanPerusahaan;
//        }
//
//        returnPayrollPph.setJumlahPengobatanNilai(totalBiayaObat);
////        returnPayrollPph.setJumlahPphPengobatanNilai(tmpPphObat);
//        returnPayrollPph.setKurangPphPengobatanNilai(kurangPphPengobatan);
//
//        returnPayrollPph.setPphPengobatanNilai(pphPengobatan);
//        returnPayrollPph.setTunjanganPengobatanNilai(biayaPengobatan.add(pphPengobatan));
//
//        returnPayrollPph.setPphGajiNilai(pphGajiBulan);
//        return returnPayrollPph;
//    }
//
//    BigDecimal kalkulasiPphTanpaThrPendJasp(BigDecimal pphGajiBruto, BigDecimal biayaPensiun, BigDecimal ptkp){
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//
//        pphGajiBiayaJabatan = getBiayaJabatan(pphGajiBruto).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        BigDecimal reduce = pphGajiBiayaJabatan.add(biayaPensiun).add(ptkp);
//        BigDecimal pphGajiPkp = pphGajiBruto.subtract(reduce).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//        BigDecimal hutangPajak = hitungHutangPajak(pphGajiPkp);
//        BigDecimal pphGaji = hutangPajak.divide(BigDecimal.valueOf(12), 2, RoundingMode.HALF_UP) ;
//
//        if(pphGaji.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGaji = BigDecimal.valueOf(0);
//        }
//
//        return pphGaji;
//    }
//
//    BigDecimal kalkulasiPphKabidTanpaThrPend(BigDecimal pphGajiBruto, BigDecimal biayaPensiun, BigDecimal ptkp){
//        BigDecimal pphGajiBiayaJabatan = new BigDecimal(0);
//
//        pphGajiBiayaJabatan = getBiayaJabatan(pphGajiBruto).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//        BigDecimal reduce = pphGajiBiayaJabatan.add(biayaPensiun).add(ptkp);
//        BigDecimal pphGajiPkp = pphGajiBruto.subtract(reduce).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//
//        BigDecimal tunjanganPphTahun = hitungTunjanganPph(pphGajiPkp);
//        BigDecimal pphGaji = tunjanganPphTahun.divide(BigDecimal.valueOf(12), 2, RoundingMode.HALF_UP) ;
//
//        if(pphGaji.compareTo(BigDecimal.valueOf(0)) <= 0){
//            pphGaji = BigDecimal.valueOf(0);
//        }
//
//        return pphGaji;
//    }
//
//    @Override
//    public List<PayrollJubileum> searchJubileumSys(Payroll payroll) throws GeneralBOException {
//
//        List <PayrollJubileum> payrollJubileumList = new ArrayList<>();
//        List<ImBiodataEntity> imBiodataEntities = biodataDao.getDataBiodata("", "", payroll.getBranchId(), "", "", "Y");
//
//        if(imBiodataEntities.size() > 0){
//            for(ImBiodataEntity biodata: imBiodataEntities){
//                PayrollJubileum payrollJubileum = payrollJubileum("12", payroll.getTahun(), biodata.getNip(),
//                        payroll.getBranchId(), BigDecimal.valueOf(0), BigDecimal.valueOf(0), BigDecimal.valueOf(0), BigDecimal.valueOf(0),
//                        BigDecimal.valueOf(0), "Y");
//
//                if(payrollJubileum.getTanggalJubileum() != null){
//                    PayrollJubileum payrollJubileum1 = new PayrollJubileum();
//                    payrollJubileum1.setNip(biodata.getNip());
//                    payrollJubileum1.setTipePegawai("TP03");
//                    PayrollJubileum payrollJubileum2 = searchJubileumMasaKerjaDetailSys(payrollJubileum1);
//
//                    payrollJubileum.setNama(biodata.getNamaPegawai());
//                    payrollJubileum.setMasaKerja(payrollJubileum2.getMasaKerja());
//                    String[] tanggalJubileum = payrollJubileum.getTanggalJubileum().split("-");
//                    if(tanggalJubileum[2].equalsIgnoreCase(payroll.getTahun())){
//                        payrollJubileumList.add(payrollJubileum);
//                    }
//                }
//            }
//        }
//
//        return payrollJubileumList;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<PayrollPensiun> searchPensiunSys(Payroll payroll) throws GeneralBOException {
//        List <PayrollPensiun> payrollPensiunList = new ArrayList<>();
//        List <ImBiodataEntity> listBiodataCopy = new ArrayList<>();
//
//        /*List<ImBiodataEntity> imBiodataEntities = biodataDao.getDataBiodataPensiun(payroll.getTahun(), payroll.getBranchId(),"Y","");
//
//        if(imBiodataEntities.size() > 0){
//            for(ImBiodataEntity biodata: imBiodataEntities){
//
//                if(cekPensiun("12", payroll.getTahun(), biodata.getTanggalPensiun())){
//                    PayrollPensiun payrollPensiun = new PayrollPensiun();
//
//                    payrollPensiun.setNip(biodata.getNip());
//                    payrollPensiun.setNama(biodata.getNamaPegawai());
//                    payrollPensiun.setStTanggalAktif(CommonUtil.convertDateToString(biodata.getTanggalAktif()));
//
//                    if(biodata.getTanggalPensiun() != null){
//                        payrollPensiun.setStTanggalPensiun(pembulatanTanggalPensiun(biodata.getNip(), payroll.getTahun()));
//                    }else{
//                        payrollPensiun.setStTanggalPensiun("-");
//                    }
//
//                    payrollPensiun.setStMasaKerja(calculateMasaKerja(biodata.getTanggalAktif()));
//
//                    payrollPensiunList.add(payrollPensiun);
//                }
//            }
//        }*/
//
//        List<ImBiodataEntity> imBiodataEntities = biodataDao.getDataBiodata("", "", payroll.getBranchId(), "", "", "Y");
//        if(imBiodataEntities.size() > 0){
//            for(ImBiodataEntity imBiodataEntity: imBiodataEntities){
//                String strTglPensiun = "";
//                if(imBiodataEntity.getDanaPensiun() != null && !imBiodataEntity.getDanaPensiun().equalsIgnoreCase("")){
//                    if(!imBiodataEntity.getGolongan().equalsIgnoreCase("") && imBiodataEntity.getGolongan() != null){
//                        strTglPensiun = kalkulasiTanggalPensiun(imBiodataEntity.getDanaPensiun(), imBiodataEntity.getGolongan(), imBiodataEntity.getTanggalLahir());
//                        String [] splitPensiun = strTglPensiun.split("-");
//                        if(splitPensiun[2].equalsIgnoreCase(payroll.getTahun())){
//                            imBiodataEntity.setTanggalPensiun(CommonUtil.convertStringToDate(strTglPensiun));
//                            listBiodataCopy.add(imBiodataEntity);
//                        }
//                    }
//                }
//
//            }
//        }
//
//        if(listBiodataCopy.size() > 0){
//            for(ImBiodataEntity biodata: listBiodataCopy){
//
//                if(cekPensiun("12", payroll.getTahun(), biodata.getTanggalPensiun())){
//                    PayrollPensiun payrollPensiun = new PayrollPensiun();
//
//                    payrollPensiun.setNip(biodata.getNip());
//                    payrollPensiun.setNama(biodata.getNamaPegawai());
//                    payrollPensiun.setStTanggalAktif(CommonUtil.convertDateToString(biodata.getTanggalAktif()));
//
//                    if(biodata.getTanggalPensiun() != null){
//                        payrollPensiun.setStTanggalPensiun(pembulatanTanggalPensiun(biodata.getNip(), payroll.getTahun()));
//                    }else{
//                        payrollPensiun.setStTanggalPensiun("-");
//                    }
//
//                    payrollPensiun.setStMasaKerja(calculateMasaKerja(biodata.getTanggalAktif()));
//
//                    payrollPensiunList.add(payrollPensiun);
//                }
//            }
//        }
//
//        return payrollPensiunList;
//    }
//
//    int index = 1;
//    private int cekJumlahAnak(String nip, String branchId){
//        index++;
//        ImBiodataEntity biodataEntity = biodataDao.getById("nip", nip);
//        int jumlahAnak = 0;
//
//        try {
//            if (biodataEntity.getJumlahAnak()!=null){
//                jumlahAnak = biodataEntity.getJumlahAnak().intValue();
//            }
//            int anak = 0 ;
//            List<ImKeluargaEntity> keluargaEntities = new ArrayList<>();
//            keluargaEntities = keluargaDao.getListKeluargaById("", biodataEntity.getNip());
//            if(keluargaEntities.size() > 0){
//                for(ImKeluargaEntity keluargaEntity: keluargaEntities){
//                    if(!"I".equalsIgnoreCase(keluargaEntity.getStatusKeluarga()) && !"S".equalsIgnoreCase(keluargaEntity.getStatusKeluarga())){
//                        if(keluargaEntity.getTanggalLahir() != null){
//                            if(calculateAge(keluargaEntity.getTanggalLahir()) < 25){
//                                anak++;
//                            }
//                        }
//                    }
//                }
//            }
//            jumlahAnak = anak;
//
//            if(jumlahAnak > 3){
//                jumlahAnak = 3;
//            }
//        }catch (Exception e){
//            String status = "ERROR : Saat Pengecekan jumlah anak pada NIP : "+nip;
//            throw new GeneralBOException(status);
//        }
//
//        return jumlahAnak;
//    }
//


    //uncomment by ferdi, 01 des 2020
    //digunakan untuk mengcek bulan aktif pada tahun ini (Apakah di tahun ini user pensiun, jika pensiun dihitung hanya bulan aktif saja)
//    private int cekBulanAktifPensiun(String nip, String tahun){
//        int hasil = 12;
//        ImBiodataEntity imPegawai = biodataDao.getById("nip", nip);
//
//        Date dateTglPensiun;
//        String strTglPensiun;
//
//        //mashudi
//        /*if(nip.equalsIgnoreCase("90-0130")){
//            int a = 0;
//            a++;
//        }*/
//        String tglPensiun = kalkulasiTanggalPensiun(imPegawai.getDanaPensiun(),imPegawai.getGolongan(), imPegawai.getTanggalLahir());
//
//        Timestamp tglPensiunTimeStamp = new Timestamp(CommonUtil.convertStringToDate(tglPensiun).getTime());
//        DateTime tanggalPensiun = new DateTime(tglPensiunTimeStamp.getTime());
//
//        //ditambahakan 1 bulan
//        tanggalPensiun = tanggalPensiun.plusMonths(1);
//        //set tanggal 1
//        tanggalPensiun = tanggalPensiun.withDayOfMonth(1);
//        dateTglPensiun = tanggalPensiun.toDate();
//        strTglPensiun = CommonUtil.convertDateToString(dateTglPensiun);
//
//        String []splitTgl = strTglPensiun.split("-");
//        if(splitTgl[2].equalsIgnoreCase(tahun)){
//            hasil = Integer.parseInt(splitTgl[1]);
//            hasil--;
//        }
//
//        return hasil;
//    }
//
//    //cek Bulan Aktif masuk, karena thr dapat dari thr ke thr
//    private int cekBulanThr(String nip, Date tanggal){
//        int hasil = 0;
//        ImBiodataEntity imPegawai = biodataDao.getById("nip", nip);
//        DateTime tanggalAktif = new DateTime(imPegawai.getTanggalMasuk());
//        DateTime tanggalProses = new DateTime(tanggal);
//
//
//        int jumlahBlnTetap = 0 ;
//
//        jumlahBlnTetap = Integer.valueOf(Months.monthsBetween(tanggalAktif, tanggalProses).getMonths());
//
//        hasil = jumlahBlnTetap + 2;
//        if(jumlahBlnTetap > 12){
//            hasil = 12;
//        }
//
//        return hasil;
//    }
//    /*private int cekBulanThp(String tanggalAkhir){
//        int jumlahBlnTetap = 0 ;
//        ImBiodataEntity imPegawai = biodataDao.getById("nip", nip, "Y");
//        Date tglAwal = CommonUtil.convertStringToDate(tanggalAwal);
//        Date tglAkhir = CommonUtil.convertStringToDate(tanggalAkhir);
//        DateTime tanggalAwalAktif = new DateTime(tglAwal);
//        DateTime tanggalAkhirAktif = new DateTime(tglAkhir);
//
//        jumlahBlnTetap = Integer.valueOf(Months.monthsBetween(tanggalAwalAktif, tanggalAkhirAktif).getMonths());
//        if (jumlahBlnTetap>0){
//            if (jumlahBlnTetap>12){
//                jumlahBlnTetap = 12;
//            }else{
//                jumlahBlnTetap +=1;
//            }
//        }
//        return jumlahBlnTetap;
//    }*/
//
//    private int hitungBulanInsentif(String tglAwal, String tglAkhir){
//        int jumlahBlnTetap = 0 ;
//        String[]tglawalArr = tglAwal.split("-");
//        String[]tglakhirArr = tglAkhir.split("-");
//        Date tanggalAwal = CommonUtil.convertStringToDate(tglAwal);
//        Date tanggalAkhir = CommonUtil.convertStringToDate(tglAkhir);
//        DateTime tanggalProses = new DateTime(tanggalAkhir);
//        DateTime tanggalAktif = new DateTime(tanggalAwal);
//
//        jumlahBlnTetap = Months.monthsBetween(tanggalAktif, tanggalProses).getMonths();
//        if (jumlahBlnTetap>0&& tglawalArr[1].equalsIgnoreCase("01")){
//            jumlahBlnTetap = jumlahBlnTetap +1;
//        }
//
//        return jumlahBlnTetap;
//    }
//    private int cekBulanPayrollSimRs(String nip ,String bulan, String tahun){
//        int jumlahBlnTetap = 0 ;
//        String[]tahunAkhir = new String[2];
//
//        //inisialisasi tgl awal tahun
//        String strTgl="";
//        Date tgl = new Date();
//        DateTime tanggalProses = new DateTime();
//        DateTime tanggalAktif = new DateTime();
//
//
//        ImBiodataEntity imPegawai = biodataDao.getById("nip", nip);
//        strTgl= "01-"+bulan+"-"+tahun;
//        tgl = CommonUtil.convertStringToDate(strTgl);
//        if (imPegawai.getTipePegawai().equalsIgnoreCase("TP01")){
//            tanggalAktif = new DateTime(imPegawai.getTanggalAktif());
//        }
//        if (imPegawai.getTipePegawai().equalsIgnoreCase("TP03")){
//            tanggalAktif = new DateTime(imPegawai.getTanggalMasuk());
//        }
//        tanggalProses = new DateTime(tgl);
//
//        jumlahBlnTetap = Integer.valueOf(Months.monthsBetween(tanggalAktif, tanggalProses).getMonths());
//        if (jumlahBlnTetap>0){
//            jumlahBlnTetap = jumlahBlnTetap +2;
//        }
//        return jumlahBlnTetap;
//    }
//
//    //digunakan untuk mengcek bulan aktif pada tahun ini (Apakah di tahun ini user pensiun, jika pensiun dihitung hanya bulan aktif saja)
//    private String pembulatanTanggalPensiun(String nip, String tahun){
//        int hasil = 12;
//        ImBiodataEntity imPegawai = biodataDao.getById("nip", nip);
//
//        Date dateTglPensiun;
//        String strTglPensiun;
//        Timestamp tglPensiunTimeStamp = new Timestamp(imPegawai.getTanggalPensiun().getTime());
//        DateTime tanggalPensiun = new DateTime(tglPensiunTimeStamp.getTime());
//
//        //ditambahakan 1 bulan
//        tanggalPensiun = tanggalPensiun.plusMonths(1);
//        //set tanggal 1
//        tanggalPensiun = tanggalPensiun.withDayOfMonth(1);
//        dateTglPensiun = tanggalPensiun.toDate();
//        strTglPensiun = CommonUtil.convertDateToString(dateTglPensiun);
//
//        return strTglPensiun;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<Payroll> searchReportTransferPendidikanSys(String bulan1, String tahun1, String unit) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportTransferPendidikanSys(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String namaBank = "";
//            int x = 0;
//            BigDecimal totalGajiBersih = new BigDecimal(0);
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//
//                if (!namaBank.equalsIgnoreCase(itPayrollEntity.getNamaBank()) && x > 0) {
//                    payroll = new Payroll();
//                    payroll.setNip("");
//                    payroll.setNama("Jumlah Bank " + namaBank);
//                    payroll.setNamaBank("");
//                    payroll.setCabangBank("");
//                    payroll.setNoRek("Total ");
//
//                    payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//                    payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//                    totalGajiBersih = new BigDecimal(0);
//
//                    payrollList.add(payroll);
//                    payroll = new Payroll();
//                }
//
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setNamaBank(itPayrollEntity.getNamaBank());
//                payroll.setCabangBank(itPayrollEntity.getCabangBank());
//                payroll.setNoRek(itPayrollEntity.getNoRek());
//
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//
//                totalGajiBersih = totalGajiBersih.add(itPayrollEntity.getGajiBersih());
//
//                namaBank = itPayrollEntity.getNamaBank();
//                payrollList.add(payroll);
//                x++;
//            }
//            Payroll payroll = new Payroll();
//            payroll.setNip("");
//            payroll.setNama("Jumlah Bank " + namaBank);
//            payroll.setNamaBank("");
//            payroll.setCabangBank("");
//            payroll.setNoRek("Total ");
//
//            payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//            payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//            totalGajiBersih = new BigDecimal(0);
//
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportTransferThrSys(String bulan1, String tahun1, String unit) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportTransferThrSys(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String namaBank = "";
//            int x = 0;
//            BigDecimal totalGajiBersih = new BigDecimal(0);
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//
//                if (!namaBank.equalsIgnoreCase(itPayrollEntity.getNamaBank()) && x > 0) {
//                    payroll = new Payroll();
//                    payroll.setNip("");
//                    payroll.setNama("Jumlah Bank " + namaBank);
//                    payroll.setNamaBank("");
//                    payroll.setCabangBank("");
//                    payroll.setNoRek("Total ");
//
//                    payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//                    payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//                    totalGajiBersih = new BigDecimal(0);
//
//                    payrollList.add(payroll);
//                    payroll = new Payroll();
//                }
//
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setNamaBank(itPayrollEntity.getNamaBank());
//                payroll.setCabangBank(itPayrollEntity.getCabangBank());
//                payroll.setNoRek(itPayrollEntity.getNoRek());
//
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//
//                totalGajiBersih = totalGajiBersih.add(itPayrollEntity.getGajiBersih());
//
//                namaBank = itPayrollEntity.getNamaBank();
//                payrollList.add(payroll);
//                x++;
//            }
//            Payroll payroll = new Payroll();
//            payroll.setNip("");
//            payroll.setNama("Jumlah Bank " + namaBank);
//            payroll.setNamaBank("");
//            payroll.setCabangBank("");
//            payroll.setNoRek("Total ");
//
//            payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//            payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//            totalGajiBersih = new BigDecimal(0);
//
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }
//
//    @Override
//    public List<Payroll> searchReportTransferJasprodSys(String bulan1, String tahun1, String unit) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//
//        List<ImPositionBagianEntity> finalPosisiBagian = new ArrayList<>();
//
//        List<ItPayrollEntity> itPayrollEntities = new ArrayList<>();
//        itPayrollEntities = payrollDao.searchReportTransferJasprodSys(bulan1, tahun1, unit);
//        int i = 1;
//        if(itPayrollEntities.size() > 0) {
//            String namaBank = "";
//            int x = 0;
//            BigDecimal totalGajiBersih = new BigDecimal(0);
//
//            for (ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                Payroll payroll = new Payroll();
//
//                if (!namaBank.equalsIgnoreCase(itPayrollEntity.getNamaBank()) && x > 0) {
//                    payroll = new Payroll();
//                    payroll.setNip("");
//                    payroll.setNama("Jumlah Bank " + namaBank);
//                    payroll.setNamaBank("");
//                    payroll.setCabangBank("");
//                    payroll.setNoRek("Total ");
//
//                    payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//                    payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//                    totalGajiBersih = new BigDecimal(0);
//
//                    payrollList.add(payroll);
//                    payroll = new Payroll();
//                }
//
//                payroll.setNip(itPayrollEntity.getNip());
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setNamaBank(itPayrollEntity.getNamaBank());
//                payroll.setCabangBank(itPayrollEntity.getCabangBank());
//                payroll.setNoRek(itPayrollEntity.getNoRek());
//
//                payroll.setTotalGajiBersih(CommonUtil.numbericFormat(itPayrollEntity.getGajiBersih(), "###,###"));
//                payroll.setTotalGajiBersihNilai(itPayrollEntity.getGajiBersih());
//
//                totalGajiBersih = totalGajiBersih.add(itPayrollEntity.getGajiBersih());
//
//                namaBank = itPayrollEntity.getNamaBank();
//                payrollList.add(payroll);
//                x++;
//            }
//            Payroll payroll = new Payroll();
//            payroll.setNip("");
//            payroll.setNama("Jumlah Bank " + namaBank);
//            payroll.setNamaBank("");
//            payroll.setCabangBank("");
//            payroll.setNoRek("Total ");
//
//            payroll.setTotalGajiBersih(CommonUtil.numbericFormat(totalGajiBersih, "###,###"));
//            payroll.setTotalGajiBersihNilai(totalGajiBersih);
//
//            totalGajiBersih = new BigDecimal(0);
//
//            payrollList.add(payroll);
//        }
//
//        return payrollList;
//    }
//
//    String kalkulasiTanggalPensiun(String dapen, String strGolongan, Date tanggalLahir){
//        logger.info("[payrollImpl.kalkulasiTanggalPensiun] start process >>>");
//        int golongan = 0;
//        DateTimeFormatter fmt = DateTimeFormat.forPattern("dd-MM-yyyy");
//        String hasil = "";
//
//        try{
//            if(tanggalLahir != null){
//                if(strGolongan != null && !strGolongan.equalsIgnoreCase("")
//                        && dapen != null && !dapen.equalsIgnoreCase("")){
//                    String []splitGolongan = strGolongan.split("");
//                    //golongan = Integer.parseInt(splitGolongan[1] + splitGolongan[2]);
//                    golongan = Integer.parseInt(strGolongan.substring(1));
//                    logger.info("[payrollImpl.kalkulasiTanggalPensiun] start process >>> str golongan - " + strGolongan + " golongan : " + golongan);
//                    //Dapen Nusindo
//                    if(dapen.equalsIgnoreCase("DP03")){
//                        if(golongan >= 1 && golongan <= 8){
//                            //55 tahun
//                            Timestamp tglLahirTimeStamp = new Timestamp(tanggalLahir.getTime());
//                            DateTime tanggalPensiun = new DateTime(tglLahirTimeStamp.getTime());
//
//                            tanggalPensiun = tanggalPensiun.plusYears(55);
//
//                            hasil= fmt.print(tanggalPensiun);
//                        }else if(golongan >= 9 && golongan <= 16){
//                            //56 tahun
//                            Timestamp tglLahirTimeStamp = new Timestamp(tanggalLahir.getTime());
//                            DateTime tanggalPensiun = new DateTime(tglLahirTimeStamp.getTime());
//
//                            tanggalPensiun = tanggalPensiun.plusYears(56);
//                            hasil= fmt.print(tanggalPensiun);
//                        }
//                    }
//                    //Dapen RNI
//                    else if(dapen.equalsIgnoreCase("DP02")){
//                        //56 tahun
//                        Timestamp tglLahirTimeStamp = new Timestamp(tanggalLahir.getTime());
//                        DateTime tanggalPensiun = new DateTime(tglLahirTimeStamp.getTime());
//
//                        tanggalPensiun = tanggalPensiun.plusYears(56);
//                        hasil= fmt.print(tanggalPensiun);
//                    }
//                    //Dapen DPLK
//                    else{
//                        //56 tahun
//                        Timestamp tglLahirTimeStamp = new Timestamp(tanggalLahir.getTime());
//                        DateTime tanggalPensiun = new DateTime(tglLahirTimeStamp.getTime());
//
//                        tanggalPensiun = tanggalPensiun.plusYears(55);
//                        hasil= fmt.print(tanggalPensiun);
//                    }
//                }else{
//                    //55 tahun
//                    Timestamp tglLahirTimeStamp = new Timestamp(tanggalLahir.getTime());
//                    DateTime tanggalPensiun = new DateTime(tglLahirTimeStamp.getTime());
//
//                    tanggalPensiun = tanggalPensiun.plusYears(55);
//                    hasil= fmt.print(tanggalPensiun);
//                }
//            }
//        }catch (Exception E){
//            logger.error("[PayrollBoImpl.kalkulasiTanggalPensiun] Error, " + E.getMessage());
//        }
//
//        logger.info("[payrollImpl.kalkulasiTanggalPensiun] End process >>>");
//        return hasil;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public void reprosesPayroll(String payrollId, String nip, String branchId, String bulan, String tahun) throws GeneralBOException {
//        String strWhere = " AND pegawai.nip = '"+nip+"'";
//        List<ItPayrollEntity> itPayroll = payrollDao.getDataEdit(branchId, strWhere);
//        ImBranches branch = new ImBranches();
//
//        List<ImBranches> branchesList = branchDao.getListBranchById(branchId);
//        for (ImBranches imBranches:branchesList){
//            branch.setPeriodeGajiAktif(imBranches.getPeriodeGajiAktif());
//            branch.setLemburGajiAwal(imBranches.getLemburGajiAwal());
//            branch.setLemburGajiAkhir(imBranches.getLemburGajiAkhir());
//        }
//        Payroll payroll = new Payroll();
//        PayrollPph payrollPph = new PayrollPph();
//
//        int bulanBefore = Integer.valueOf(bulan);
//        String strBulanBefore = "";
//        int tahunBefore = Integer.valueOf(tahun);
//
//        bulanBefore -= 1 ;
//        if(bulanBefore == 0){
//            tahunBefore -= 1 ;
//            bulanBefore = 12 ;
//        }
//        if(bulanBefore < 10){
//            strBulanBefore = "0"+bulanBefore;
//        }else{
//            strBulanBefore = ""+ bulanBefore;
//        }
//
//        if(itPayroll.size() > 0){
//            for(ItPayrollEntity payrollEntity: itPayroll){
//                String dateSekarang = new SimpleDateFormat("dd-MM-yyyy").format(Calendar.getInstance().getTime());
//                DateTime tglAktif = new DateTime(payrollEntity.getTanggalAktif());
//                DateTime tglSekarang = new DateTime();
//
//                payroll.setKelompokId(payrollEntity.getKelompokId());
//                payroll.setNpwp(payrollEntity.getNpwp());
//                payroll.setStatusPegawai(payrollEntity.getStatusPegawai());
//                payroll.setTipePegawai(payrollEntity.getTipePegawai());
//                payroll.setTipePegawaiName(payrollEntity.getTipePegawaiName());
//                payroll.setStrukturGaji(payrollEntity.getStrukturGaji());
//                if(payrollEntity.getTanggalAktif() != null){
//                    payroll.setStTanggalAktif(CommonUtil.convertDateToString(payrollEntity.getTanggalAktif()));
//                    payroll.setTanggalAktif(payrollEntity.getTanggalAktif());
//                }else{
//                    payroll.setStTanggalAktif("");
//                }
//                payroll.setStTanggalAktifSekarang(dateSekarang);
//
//                payroll.setPositionId(payrollEntity.getPositionId());
//                payroll.setPositionName(payrollEntity.getPositionName());
//                payroll.setDepartmentId(payrollEntity.getDepartmentId());
//                payroll.setDepartmentName(payrollEntity.getDepartmentName());
//                payroll.setBranchId(payrollEntity.getBranchId());
//                payroll.setBranchName(payrollEntity.getBranchName());
//                payroll.setGolonganId(payrollEntity.getGolonganId());
//                payroll.setGolonganName(payrollEntity.getGolonganName());
//                payroll.setPoint(payrollEntity.getPoint());
//                payroll.setStatusKeluarga(payrollEntity.getStatusKeluarga());
//                payroll.setMultifikator(payrollEntity.getMultifikator());
//
//                // cek apakah anak > 25 tahun
//                payrollEntity.setJumlahAnak(cekJumlahAnak(payrollEntity.getNip(), payrollEntity.getBranchId()));
//                payroll.setJumlahAnak(payrollEntity.getJumlahAnak());
//                payroll.setGender(payrollEntity.getGender());
//                payroll.setDanaPensiunName(payrollEntity.getDanaPensiunName());
//                payroll.setFlagPjs(payrollEntity.getFlagPjs());
//                payroll.setFlagPromosiOn(cekPromosi(payrollEntity.getNip()));
//
//                BigDecimal tunjPph = new BigDecimal(0);
//                BigDecimal jumlahGajiKotor = new BigDecimal(0);
//
//                BigDecimal tunjPeralihan = new BigDecimal(0);
//                BigDecimal tunjKompensasi = new BigDecimal(0);
//                BigDecimal tunjTrasnport = new BigDecimal(0);
//                BigDecimal pphPengobatan = new BigDecimal(0);
//                BigDecimal uangMukaLain = new BigDecimal(0);
//                BigDecimal tunjPendidikan = new BigDecimal(0);
//                BigDecimal kurangBpjs = new BigDecimal(0);
//                BigDecimal tunjLain = new BigDecimal(0);
//                BigDecimal pengobatan = new BigDecimal(0);
//                BigDecimal koperasi = new BigDecimal(0);
//                BigDecimal dansos = new BigDecimal(0);
//                BigDecimal sp = new BigDecimal(0);
//                BigDecimal bazis = new BigDecimal(0);
//                BigDecimal bapor = new BigDecimal(0);
//                BigDecimal lainLain = new BigDecimal(0);
//                BigDecimal zakat = new BigDecimal(0);
//
//                BigDecimal gaji = new BigDecimal(0);
//                BigDecimal tunjUmk = new BigDecimal(0);
//                BigDecimal gajiPensiun = new BigDecimal(0);
//                BigDecimal gajiBpjs = new BigDecimal(0);
//
//                BigDecimal tunjStruktural = new BigDecimal(0);
//                BigDecimal tunjJabatanStruktural = new BigDecimal(0);
//                BigDecimal tunjStrategis = new BigDecimal(0);
//                BigDecimal tunjAirListrik = new BigDecimal(0);
//                BigDecimal tunjPengobatan = new BigDecimal(0);
//                BigDecimal tunjPerumahan = new BigDecimal(0);
//                BigDecimal tunjLembur = new BigDecimal(0);
//
//                BigDecimal iuranPensiun = new BigDecimal(0);
//                BigDecimal iuranBpjsTk = new BigDecimal(0);
//                BigDecimal iuranBpjsPensiun = new BigDecimal(0);
//                BigDecimal iuranBpjsKesehatan = new BigDecimal(0);
//
//                PayrollRapel payrollRapel = new PayrollRapel();
//                payrollRapel.setTotalRapelNilai(BigDecimal.valueOf(0));
//                payrollRapel.setTotalRapelFinalNilai(BigDecimal.valueOf(0));
//                PayrollThr payrollThr = new PayrollThr();
//                payrollThr.setTotalThrNilai(BigDecimal.valueOf(0));
//                payrollThr.setTotalThrNilaiBersih(BigDecimal.valueOf(0));
//                PayrollPendidikan payrollPendidikan = new PayrollPendidikan();
//                payrollPendidikan.setTotalPendidikanNilai(BigDecimal.valueOf(0));
//                PayrollJasprod payrollJasprod = new PayrollJasprod();
//                PayrollInsentif payrollInsentif  = new PayrollInsentif();
//                payrollJasprod.setJasprodNilai(BigDecimal.valueOf(0));
//                payrollJasprod.setJasprodNilaiFinal(BigDecimal.valueOf(0));
//                payrollInsentif.setJumlahInsentif(BigDecimal.valueOf(0));
//                payrollInsentif.setInsentifyangDiterimaNilai(BigDecimal.valueOf(0));
//                PayrollPensiun payrollPensiun = new PayrollPensiun();
//                payrollPensiun.setPphPensiunNilai(BigDecimal.valueOf(0));
//                payrollPensiun.setJumlahBiayaPensiunNilai(BigDecimal.valueOf(0));
//                BigDecimal totalJubileum = new BigDecimal(0);
//                BigDecimal besarJubileum = new BigDecimal(0);
//                BigDecimal nettoJubileum = new BigDecimal(0);
//                BigDecimal pphGajiPakaianDinas = new BigDecimal(0);
//                BigDecimal totalKaliJubileum = new BigDecimal(0); //Total Kali digunakan untuk perkalian berapa kali lipat jubileum di kalikan, param di im company
//
//                // Flag Payroll
//                tunjLembur = getTunjanganLembur(payrollEntity.getNip(), payrollEntity.getBranchId(), tahunBefore + "-" + bulanBefore + "-"+branch.getLemburGajiAwal(),
//                        tahun + "-" + bulan + "-"+branch.getLemburGajiAkhir());
//
//                if (!payrollEntity.getTipePegawai().equalsIgnoreCase("TP03")) {
//                    //Jika Kelompok komisaris dan kelompok direksi
//                    if (payrollEntity.getKelompokId().equalsIgnoreCase("KL00") || payrollEntity.getKelompokId().equalsIgnoreCase("KL01")) {
//                        gaji = payrollEntity.getBiodataGaji();
//                        tunjTrasnport = (gaji.multiply(BigDecimal.valueOf(20))).divide(BigDecimal.valueOf(100), 2, BigDecimal.ROUND_HALF_UP);
//                        if(payrollEntity.getKelompokId().equalsIgnoreCase("KL01")){
//                            tunjAirListrik = getTunjanganAirListrik(payrollEntity.getGolonganId());
//                            tunjPerumahan = getTunjanganPerumahan(payrollEntity.getGolonganId(), payrollEntity.getKelompokId());
//                        }
//                    } else {
//                        gaji = getGaji(payrollEntity.getGolonganId(), payrollEntity.getPoint(), "2019");
//
//                        //Jika Karyawan PJS gaji Tunjangan Struktural hanya mendapatkan 80%
//                        if (payrollEntity.getFlagPjs() != null) {
//                            if (payrollEntity.getFlagPjs().equalsIgnoreCase("Y")) {
//                                tunjStrategis = getTunjanganStrategis(payrollEntity.getPositionId());
//                                tunjStrategis = tunjStrategis.multiply(BigDecimal.valueOf(80)).divide(BigDecimal.valueOf(100));
//                                tunjJabatanStruktural = getTunjanganJabatanStruktural(payrollEntity.getPositionId(), payrollEntity.getBranchId());
//                                tunjJabatanStruktural = tunjJabatanStruktural.multiply(BigDecimal.valueOf(80)).divide(BigDecimal.valueOf(100));
//                            } else {
//                                tunjStrategis = getTunjanganStrategis(payrollEntity.getPositionId());
//                                tunjJabatanStruktural = getTunjanganJabatanStruktural(payrollEntity.getPositionId(), payrollEntity.getBranchId());
//                            }
//                        } else {
//                            tunjStrategis = getTunjanganStrategis(payrollEntity.getPositionId());
//                            tunjJabatanStruktural = getTunjanganJabatanStruktural(payrollEntity.getPositionId(), payrollEntity.getBranchId());
//                        }
//
//                        tunjUmk = getTunjanganUmk(payrollEntity.getBranchId(), payrollEntity.getGolonganId(), "2019");
//                        tunjStruktural = getTunjanganStruktural(payrollEntity.getGolonganId(), payrollEntity.getKelompokId(), payrollEntity.getPositionId(), "2019");
//                        tunjAirListrik = getTunjanganAirListrik(payrollEntity.getGolonganId());
//
//                        tunjPerumahan = getTunjanganPerumahan(payrollEntity.getGolonganId(), payrollEntity.getKelompokId());
//                    }
//                } else {
//                    gaji = payrollEntity.getBiodataGaji();
//                }
//
//                String[] splitGajiPensiun = getGajiPensiun(payrollEntity.getBranchId(), gaji, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak()).split("-");
//                if (payrollEntity.getDanaPensiun() != null) {
//                    // untuk Dapen RNI mengambil data dari payroll skala gaji RNI
//                    //untuk dapen selain RNI
//                    if (payrollEntity.getDanaPensiun().equalsIgnoreCase("DP02")) {//Dapen RNI
//                        //format ada 2 split(faktorKeluarga - gaji pensiun)
//                        gajiPensiun = getGajiPensiunRni(payrollEntity.getGolonganDapen(), payrollEntity.getStatusKeluarga(), payrollEntity.getBranchId(),
//                                payrollEntity.getJumlahAnak());
//                        gajiBpjs = gajiPensiun;
//                        if (!splitGajiPensiun[0].equals("")) {
//                            payroll.setFaktorKeluargaId(splitGajiPensiun[0]); //setIdKeluarga
//                        }
//                    } else {
//                        gajiPensiun = getGajiPensiun2(payrollEntity.getGolonganId(), payrollEntity.getPoint(), payrollEntity.getGolonganDapenNusindo(),
//                                payrollEntity.getPointLebih());
//                        if("KL01".equalsIgnoreCase(payrollEntity.getKelompokId())){
//                            BigDecimal tmpGaji = new BigDecimal(0);
//                            BigDecimal tmpUmk = new BigDecimal(0);
//
//                            tmpGaji = getGaji(payrollEntity.getGolonganId(), payrollEntity.getPoint(), "2019");
//                            tmpUmk = getTunjanganUmk(payrollEntity.getBranchId(), payrollEntity.getGolonganId(), "2019");
//                            gajiBpjs = tmpGaji.add(tmpUmk);
//                        }else{
//                            gajiBpjs = gaji.add(tunjUmk);
//                        }
//                    }
//                    if(gajiBpjs.compareTo(payrollEntity.getUmr()) < 0){
//                        gajiBpjs = payrollEntity.getUmr();
//                    }
//
//                    iuranPensiun = getIuranPensiun(payrollEntity.getBranchId(), payrollEntity.getDanaPensiun(), gajiPensiun, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak());
//                    if(!"KL00".equals(payrollEntity.getKelompokId())){
//                        if(!"18-0010".equals(payrollEntity.getNip())){
//                            iuranBpjsTk = getBpjs(payrollEntity.getTipePegawai(), payrollEntity.getDanaPensiun(), gajiBpjs, gajiPensiun, "jht");
//                            iuranBpjsPensiun = getBpjs(payrollEntity.getTipePegawai(), payrollEntity.getDanaPensiun(), gajiBpjs, gajiPensiun, "pensiun");
//                            iuranBpjsKesehatan = getBpjs(payrollEntity.getTipePegawai(), payrollEntity.getDanaPensiun(), gajiBpjs, gajiPensiun, "kesehatan");
//                        }
//                    }
//                } else {
//                    if(payrollEntity.getTipePegawai().equalsIgnoreCase("TP03")){
//                        gajiBpjs = payrollEntity.getBiodataGaji();
//                        if(gajiBpjs.compareTo(payrollEntity.getUmr()) < 0){
//                            gajiBpjs = payrollEntity.getUmr();
//                        }
//                        iuranBpjsTk = getBpjs(payrollEntity.getTipePegawai(), payrollEntity.getDanaPensiun(), gajiBpjs, gajiPensiun, "jht");
//                        iuranBpjsPensiun = getBpjs(payrollEntity.getTipePegawai(), payrollEntity.getDanaPensiun(), gajiBpjs, gajiPensiun, "pensiun");
//                        iuranBpjsKesehatan = getBpjs(payrollEntity.getTipePegawai(), payrollEntity.getDanaPensiun(), gajiBpjs, gajiPensiun, "kesehatan");
//                    }
//                    gajiPensiun = BigDecimal.valueOf(0);
//                }
//
//                //Jika tunjangan Pesangon sudah diambil, maka sudak tidak mendapatkan gaji pensiun
//                List<ItPayrollEntity> payrollPensiunList = null;
//                payrollPensiunList = payrollDao.cekPensiun(payrollEntity.getNip());
//                if (payrollPensiunList.size() > 0) {
//                    gajiPensiun = BigDecimal.valueOf(0);
//                }
//
//                //nilai default Y untuk centang listrik air dan perumahan
//                payroll.setCentangListrikAir("Y");
//                payroll.setCentangPerumahan("Y");
//
//                //mengambil Nilai Dari bln sebelumnya jika ada
//                List<ItPayrollEntity> itPayrollEntity = null;
//                itPayrollEntity = payrollDao.getLastPayroll(payrollEntity.getNip(), strBulanBefore, tahunBefore + "");
//                if (itPayrollEntity.size() > 0) {
//                    for (ItPayrollEntity itPayrollEntity1 : itPayrollEntity) {
//                        tunjPeralihan = itPayrollEntity1.getTunjanganPeralihan(); //Tunj. Peralihan
//                        tunjKompensasi = itPayrollEntity1.getKompensasi(); //Kompensasi
//                        uangMukaLain = itPayrollEntity1.getUangMukaLainnya(); //Uang Muka Lain
//                        kurangBpjs = itPayrollEntity1.getKekuranganBpjsTk(); //Kekurangan BPJS
//                        if(!itPayrollEntity1.getBranchId().equalsIgnoreCase("KD01")){
//                            //pengobatan = itPayrollEntity1.getPengobatan();
//                        }
//                            /*if (itPayrollEntity1.getBranchId().equalsIgnoreCase("KD01")) {
//                                if (payrollEntity.getKelompokId() != null) {
//                                    if (!payrollEntity.getKelompokId().equalsIgnoreCase("KL00")) {
//                                    }
//                                }
//                            }*/
//                        tunjTrasnport = itPayrollEntity1.getTunjanganTransport(); //Tunjangan Transport hanya Kandir
//                        payroll.setCentangListrikAir(itPayrollEntity1.getCentangListrikAir());
//                        payroll.setCentangPerumahan(itPayrollEntity1.getCentangPerumahan());
//                        if (itPayrollEntity1.getCentangListrikAir().equalsIgnoreCase("N")) {
//                            tunjAirListrik = BigDecimal.valueOf(0);
//                        }
//                        if (itPayrollEntity1.getCentangPerumahan().equalsIgnoreCase("N")) {
//                            tunjPerumahan = BigDecimal.valueOf(0);
//                        }
//
//                        tunjLain = itPayrollEntity1.getTunjanganLain(); //Tunjangan Lain
//                        koperasi = itPayrollEntity1.getKoperasi(); //Koperasi
//                        dansos = itPayrollEntity1.getDansos(); //dansos
//                        sp = itPayrollEntity1.getSP(); //sp
//                        bazis = itPayrollEntity1.getBazis(); //bazis
//                        bapor = itPayrollEntity1.getBapor(); //bapor
//                        lainLain = itPayrollEntity1.getLainLain(); //lainLain
//                    }
//                }
//
//                payroll.setFlagListrikAirOn(true);
//                payroll.setFlagPerumahanOn(true);
//                payrollRapel.setFlagRapel("N");
//                payrollPendidikan.setFlagPendidikan("N");
//                payrollJasprod.setFlagJasprod("N");
//                payrollInsentif.setFlagInsentif("N");
//                payrollThr.setFlagThr("N");
//                payrollThr.setFlagThr("N");
//
//                BigDecimal jumlahB = new BigDecimal(0);
//                BigDecimal jumlahC = new BigDecimal(0);
//                BigDecimal totalTambahan = new BigDecimal(0);
//                BigDecimal gajiBersih = new BigDecimal(0);
//
//                //Asumsi digunakan untuk pemerataan pajak tahun
//                PayrollThr payrollAsumsiThr = getAsumsiThr(payrollEntity.getNip(), gaji, tunjUmk, tunjStruktural, tunjJabatanStruktural, tunjStrategis, tunjPph, tunjPeralihan,
//                        bulan, tahun, branchId);
//                PayrollPendidikan payrollAsumsiPendidikan = getAsumsiPendidikan(payrollEntity.getNip(), gaji, tunjUmk, tunjStruktural, tunjJabatanStruktural,
//                        tunjStrategis, tunjKompensasi, tunjAirListrik, tunjPph, tunjPeralihan, bulan, tahun, branchId);
//                BigDecimal nilaiAsumsiJasprod = getAsumsiJasprod(payrollEntity.getNip(), bulan, tahun, branchId);
//
//
//                //PPHGAJISYS
//                pphGajiPakaianDinas = getPakaianDinas(payrollEntity.getBranchId(), payrollEntity.getGender(), bulan);
//                /*payrollPph = payrollPphGaji(payrollEntity.getNip(), payrollEntity.getBranchId(), bulan, tahun, payrollEntity.getGolonganId(),
//                        payrollEntity.getTanggalAktif(), payrollEntity.getPoint() + "", payrollEntity.getTunjanganPengobatan(), payrollEntity.getGender(),
//                        payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(), payrollEntity.getTipePegawai(), payrollEntity.getStatusPegawai(), gaji, tunjUmk,
//                        tunjStruktural, tunjPeralihan, tunjJabatanStruktural, tunjStrategis, tunjKompensasi, tunjTrasnport, tunjAirListrik, tunjPerumahan, tunjPph,
//                        tunjLembur, tunjLain, payrollThr.getTotalThrNilai(), payrollPendidikan.getTotalPendidikanBersihNilai(), payrollJasprod.getJasprodNilaiFinal(),
//                        payrollRapel.getTotalRapelFinalNilai(), payrollPensiun.getJumlahBiayaPensiunNilai(), totalKaliJubileum, iuranPensiun, iuranBpjsTk, iuranBpjsPensiun,
//                        pphGajiPakaianDinas, bulan, tahun, payrollEntity.getKelompokId());*/
//
//                //Tunjangan Pengobatan dan PPH Pengobatan
//                List<MedicalRecord> medicalRecordList = new ArrayList<>();
//                if(payrollEntity.getBranchId().equalsIgnoreCase("KD01")){
//                    medicalRecordList = getMedicalRecord(payrollEntity.getNip(),bulan,tahun);
//                    if(medicalRecordList.size() > 0){
//                        for(MedicalRecord medicalRecord: medicalRecordList){
//                            pengobatan = pengobatan.add(BigDecimal.valueOf(Double.parseDouble(medicalRecord.getJumlahBiaya())));
//                        }
//                        //listOfResultMedical.addAll(medicalRecordList);
//                    }
//                }
//
//                pphPengobatan = calculatePphPengobatan(pengobatan, payrollPph.getPkpNilai());
//                tunjPengobatan = pengobatan.add(pphPengobatan);
//
//                //Tunjangan PPH khusus jabatan kabid dan jabatan diatas kabid
//                if (payrollEntity.getKelompokId() != null) {
//                    if (payrollEntity.getKelompokId().equalsIgnoreCase("KL03") || payrollEntity.getKelompokId().equalsIgnoreCase("KL02") ||
//                            payrollEntity.getKelompokId().equalsIgnoreCase("KL01") || payrollEntity.getKelompokId().equalsIgnoreCase("KL00")) {
//                        tunjPph = payrollPph.getTunjanganPphNilaiBulan();
//                    }
//                }
//                jumlahGajiKotor = jumlahGajiKotor(gaji, tunjUmk, tunjStruktural, tunjPeralihan, tunjJabatanStruktural, tunjStrategis, tunjKompensasi, tunjTrasnport, tunjAirListrik,
//                        tunjPengobatan, tunjPerumahan, tunjPph, tunjLain, tunjLembur);
//
//                //digunakan untuk kalkulasi pph dalam 1 tahun
//                BigDecimal realisasiPphGaji = tunjPph ;
//                if(payrollEntity.getKelompokId().equalsIgnoreCase("KL03") || payrollEntity.getKelompokId().equalsIgnoreCase("KL02") ||
//                        payrollEntity.getKelompokId().equalsIgnoreCase("KL01") || payrollEntity.getKelompokId().equalsIgnoreCase("KL00")){
//                    //Direksi Dan Komisaris tidak mendapatkan tunjangan pendidikan
//                    if(payrollEntity.getKelompokId().equalsIgnoreCase("KL01") || payrollEntity.getKelompokId().equalsIgnoreCase("KL00")){
//                        payrollAsumsiPendidikan.setTotalPendidikan("0");
//                        payrollAsumsiPendidikan.setTotalPendidikanNilai(BigDecimal.valueOf(0));
//                    }
//
//                    //komisaris tidak disetahunkan
//                    if(!"KL00".equals(payrollEntity.getKelompokId())){
//                        //digunakan untuk jabatan kabid ke atas
//                        PayrollPph payrollPph1 = kalkulasiPphTahunKabid(payrollEntity.getNip(), bulan, tahun, payrollEntity.getBranchId(), payrollPph.getPphGajiNilai(),
//                                BigDecimal.valueOf(0), jumlahGajiKotor, iuranPensiun, iuranBpjsTk, iuranBpjsPensiun, payrollEntity.getStatusKeluarga(),
//                                payrollEntity.getJumlahAnak(), payrollEntity.getGender(), payrollAsumsiThr.getTotalThrNilai(), payrollAsumsiPendidikan.getTotalPendidikanNilai(),
//                                payrollPph.getThrNilai(), payrollPph.getPendidikanNilai(), tunjPengobatan, pphGajiPakaianDinas, payrollPph.getIuranJkmJkkNilai(),
//                                "N", "N", "N", tunjLembur, "Y", "Y");
//                    }
//
//                }else{
//                    //digunakan untuk jabatan dibawah kabid
//                    //AKIRA
//                    //PKWT tidak mendapatkan tunjangan pendidikan
//                    if(payrollEntity.getKelompokId().equalsIgnoreCase("KL08")){
//                        payrollAsumsiPendidikan.setTotalPendidikan("0");
//                        payrollAsumsiPendidikan.setTotalPendidikanNilai(BigDecimal.valueOf(0));
//                    }
//                    realisasiPphGaji = kalkulasiPphTahun(payrollEntity.getNip(), bulan, tahun, payrollEntity.getBranchId(), payrollPph.getPphGajiNilai(),
//                            // pph Obat
//                            BigDecimal.valueOf(0),
//                            jumlahGajiKotor, iuranPensiun, iuranBpjsTk, iuranBpjsPensiun, payrollEntity.getStatusKeluarga(), payrollEntity.getJumlahAnak(),
//                            payrollEntity.getGender(), payrollAsumsiThr.getTotalThrNilai(), payrollAsumsiPendidikan.getTotalPendidikanNilai(), nilaiAsumsiJasprod,
//                            payrollPph.getThrNilai(), payrollPph.getPendidikanNilai(), payrollPph.getJasprodNilai(), tunjPengobatan,
//                            pphGajiPakaianDinas, payrollPph.getIuranJkmJkkNilai(), "N", "N", "N",
//                            tunjLembur, "Y", "Y").getPphGajiNilai();
//                }
//
//                //Tunjangan PPH khusus jabatan kabid dan jabatan diatas kabid, khusus komisaris tidak disetahunkan
//                if (payrollEntity.getKelompokId() != null) {
//                    if (payrollEntity.getKelompokId().equalsIgnoreCase("KL03") || payrollEntity.getKelompokId().equalsIgnoreCase("KL02") ||
//                            payrollEntity.getKelompokId().equalsIgnoreCase("KL01")) {
//                        BigDecimal tunjPphTahun = new BigDecimal(0);
//                        BigDecimal brutoAddTpph = new BigDecimal(0);
//                        BigDecimal pphAkhir = new BigDecimal(0);
//
//                        jumlahGajiKotor = jumlahGajiKotor(gaji, tunjUmk, tunjStruktural, tunjPeralihan, tunjJabatanStruktural, tunjStrategis, tunjKompensasi, tunjTrasnport, tunjAirListrik,
//                                tunjPengobatan, tunjPerumahan, realisasiPphGaji, tunjLain, tunjLembur);
//                        tunjPph = realisasiPphGaji;
//
//                        tunjPphTahun = realisasiPphGaji.multiply(BigDecimal.valueOf(12));
//                        //hapus bruto yang tersimpan dulu, kemudian tambahkan tunjangan pph baru
//                        brutoAddTpph = payrollPph.getBrutoNilai().subtract(payrollPph.getTunjanganPphNilaiTahun());
//                        brutoAddTpph = brutoAddTpph.add(tunjPphTahun);
//
//                        payrollPph.setTunjanganPphNilaiTahun(tunjPphTahun);
//                        payrollPph.setTunjanganPphTahun(CommonUtil.numbericFormat(tunjPphTahun, "###,###"));
//
//                        payrollPph.setBrutoNilai(brutoAddTpph);
//                        payrollPph.setBruto(CommonUtil.numbericFormat(brutoAddTpph, "###,###"));
//
//                        BigDecimal pphGajiBiayaJabatan = getBiayaJabatan(brutoAddTpph).setScale(2, BigDecimal.ROUND_HALF_UP);
//
//                        BigDecimal reduce = pphGajiBiayaJabatan.add(payrollPph.getIuranPensiunNilai()).add(payrollPph.getPtkpNilai());
//                        BigDecimal pphGajiPkp = brutoAddTpph.subtract(reduce).setScale(2, BigDecimal.ROUND_HALF_UP); //PPH GAJI PKP(Penghasilan Kena Pajak)
//                        payrollPph.setPkpNilai(pphGajiPkp);
//                        payrollPph.setPkp(CommonUtil.numbericFormat(pphGajiPkp, "###,###"));
//
//                        BigDecimal hutangPajak = hitungHutangPajak(pphGajiPkp);
//                        BigDecimal pphGaji = hutangPajak.divide(BigDecimal.valueOf(12), 2, RoundingMode.HALF_UP) ;
//                        payrollPph.setHutangPphNilai(hutangPajak);
//                        payrollPph.setHutangPph(CommonUtil.numbericFormat(hutangPajak, "###,###"));
//
//                    }
//                    if (payrollEntity.getKelompokId().equalsIgnoreCase("KL00")){
//                        jumlahGajiKotor = jumlahGajiKotor(gaji, tunjUmk, tunjStruktural, tunjPeralihan, tunjJabatanStruktural, tunjStrategis, tunjKompensasi, tunjTrasnport, tunjAirListrik,
//                                tunjPengobatan, tunjPerumahan, realisasiPphGaji, tunjLain, tunjLembur);
//                    }
//                }
//
//                payrollPph.setPphGajiNilai(realisasiPphGaji);
//                payrollPph.setPphGaji(CommonUtil.numbericFormat(realisasiPphGaji, "###,###"));
//
//                payroll.setFlagZakat("N");
//
//                jumlahB = hitungTotalB(payrollPph.getPphGajiNilai(), pphPengobatan, iuranPensiun, iuranBpjsTk, iuranBpjsPensiun, iuranBpjsKesehatan,
//                        uangMukaLain, kurangBpjs);
//                jumlahC = hitungTotalC(pengobatan, koperasi, dansos, sp, bazis, bapor, zakat, lainLain);
//
//                if(payrollPendidikan.getTotalPendidikanBersihNilai() == null){
//                    payrollPendidikan.setTotalPendidikanBersihNilai(BigDecimal.valueOf(0));
//                }
//                totalTambahan = payrollRapel.getTotalRapelFinalNilai().add(payrollThr.getTotalThrNilai()).add(payrollPendidikan.getTotalPendidikanBersihNilai())
//                        .add(payrollJasprod.getJasprodNilaiFinal()).add(totalKaliJubileum).add(payrollPensiun.getJumlahBiayaPensiunNilai());
//                gajiBersih = jumlahGajiKotor.subtract(jumlahB).subtract(jumlahC).add(totalTambahan);
//                int a = 0;
//            }
//        }
//
//    }
//
//    @Override
//    public BigDecimal reloadBiayaLembur(AbsensiPegawai absensiPegawai) throws GeneralBOException {
//        List<AbsensiPegawaiEntity> absensiPegawaiEntityList = null;
//        BigDecimal jumlahLembur = new BigDecimal(0);
//
//        absensiPegawaiEntityList = absensiPegawaiDao.getDataLembur(absensiPegawai.getNip(), absensiPegawai.getBranchId(),
//                absensiPegawai.getTanggal(), absensiPegawai.getTanggalAkhir());
//        if(absensiPegawaiEntityList.size() > 0){
//            for(AbsensiPegawaiEntity absensiPegawai1: absensiPegawaiEntityList){
//                jumlahLembur = jumlahLembur.add(BigDecimal.valueOf(absensiPegawai1.getBiayaLembur()));
//            }
//        }
//        return jumlahLembur;
//    }
//
//    // Detail Pph Tahun
//    @Override
//    public List<Payroll> getDetailPphTahun(String tahun, String nip) throws GeneralBOException {
//        List<Payroll> payrollEntityList = payrollDao.getPphDetail(tahun, nip);
//        List<Payroll> dataHasil = new ArrayList<>();
//
//        if(payrollEntityList.size() > 0){
//            for(Payroll payrollLoop: payrollEntityList){
//                Payroll newPayroll = new Payroll();
//                newPayroll.setNip(payrollLoop.getNip());
//                newPayroll.setBulan(payrollLoop.getBulan());
//                newPayroll.setTahun(payrollLoop.getTahun());
//
//                BigDecimal pphGaji = payrollLoop.getPphGajiNilai().add(payrollLoop.getPphPengobatanNilai());
//                if(payrollLoop.getFlagPayroll().equalsIgnoreCase("Y")){
//                    newPayroll.setTipe("Bulan " + CommonUtil.convertNumberToStringBulan(payrollLoop.getBulan()));
//                    newPayroll.setTotalANilai(payrollLoop.getTotalANilai());
//                    newPayroll.setTotalA(CommonUtil.numbericFormat(payrollLoop.getTotalANilai(), "###,###"));
//                }else if(payrollLoop.getFlagRapel().equalsIgnoreCase("Y")){
//                    newPayroll.setTipe("Rapel");
//                    newPayroll.setTotalANilai(payrollLoop.getTotalRapelNilai());
//                    newPayroll.setTotalA(CommonUtil.numbericFormat(payrollLoop.getTotalRapelNilai(), "###,###"));
//                }else if(payrollLoop.getFlagThr().equalsIgnoreCase("Y")){
//                    newPayroll.setTipe("THR");
//                    newPayroll.setTotalANilai(payrollLoop.getTotalThrNilai());
//                    newPayroll.setTotalA(CommonUtil.numbericFormat(payrollLoop.getTotalThrNilai(), "###,###"));
//                }else if(payrollLoop.getFlagPendidikan().equalsIgnoreCase("Y")){
//                    newPayroll.setTipe("Pendidikan");
//                    newPayroll.setTotalANilai(payrollLoop.getTotalPendidikanNilai());
//                    newPayroll.setTotalA(CommonUtil.numbericFormat(payrollLoop.getTotalPendidikanNilai(), "###,###"));
//                }else if(payrollLoop.getFlagInsentif().equalsIgnoreCase("Y")){
//                    newPayroll.setTipe("Insentif");
//                    newPayroll.setTotalANilai(payrollLoop.getTotalInsentifNilai());
//                    newPayroll.setTotalA(CommonUtil.numbericFormat(payrollLoop.getTotalInsentifNilai(), "###,###"));
//                }else if(payrollLoop.getFlagJasprod().equalsIgnoreCase("Y")){
//                    newPayroll.setTipe("Jasprod");
//                    newPayroll.setTotalANilai(payrollLoop.getTotalJasProdNilai());
//                    newPayroll.setTotalA(CommonUtil.numbericFormat(payrollLoop.getTotalJasProdNilai(), "###,###"));
//                }else if(payrollLoop.getFlagJubileum().equalsIgnoreCase("Y")){
//                    newPayroll.setTipe("Jubileum");
//                    newPayroll.setTotalANilai(payrollLoop.getTotalJubileumNilai());
//                    newPayroll.setTotalA(CommonUtil.numbericFormat(payrollLoop.getTotalJubileumNilai(), "###,###"));
//                    pphGaji = payrollLoop.getPotPphNilai().add(payrollLoop.getPphPengobatanNilai());
//                }
//
//                newPayroll.setPphGajiNilai(pphGaji);
//                newPayroll.setPphGaji(CommonUtil.numbericFormat(pphGaji, "###,###"));
//
//                dataHasil.add(newPayroll);
//            }
//        }
//
//        return dataHasil;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<PayrollRapelDetail> loadRapelDetail(String rapelId) throws GeneralBOException {
//        List<ItPayrollRapelDetailEntity> payrollRapelDetails = new ArrayList<>();
//        List<PayrollRapelDetail> hasil = new ArrayList<>();
//
//        payrollRapelDetails = payrollRapelDetailDao.getRapelDetail(rapelId);
//        if(payrollRapelDetails.size() > 0){
//            for(ItPayrollRapelDetailEntity detailLoop: payrollRapelDetails){
//                PayrollRapelDetail rapelDetail = new PayrollRapelDetail();
//
//                rapelDetail.setRapelId(rapelId);
//                rapelDetail.setRapelBulan(detailLoop.getBulan());
//                rapelDetail.setRapelTahun(detailLoop.getTahun());
//                rapelDetail.setNip(detailLoop.getNip());
//                rapelDetail.setGolonganId(detailLoop.getGolonganId());
//                rapelDetail.setPoint(detailLoop.getPoint());
//                rapelDetail.setPointLebih(detailLoop.getPointLebih());
//                rapelDetail.setGolonganIdLama(detailLoop.getGolonganIdLama());
//                rapelDetail.setPointLama(detailLoop.getPointLama());
//                rapelDetail.setPointLebihLama(detailLoop.getPointLebihLama());
//
//                rapelDetail.setGajiGolonganBaru(CommonUtil.numbericFormat(detailLoop.getGajiGolonganBaruNilai(), "###,###"));
//                rapelDetail.setGajiGolonganLama(CommonUtil.numbericFormat(detailLoop.getGajiGolonganLamaNilai(), "###,###"));
//                rapelDetail.setGajiGolongan(CommonUtil.numbericFormat(detailLoop.getGajiGolonganNilai(), "###,###"));
//
//                rapelDetail.setUmkBaru(CommonUtil.numbericFormat(detailLoop.getUmkBaruNilai(), "###,###"));
//                rapelDetail.setUmkLama(CommonUtil.numbericFormat(detailLoop.getUmkLamaNilai(), "###,###"));
//                rapelDetail.setUmk(CommonUtil.numbericFormat(detailLoop.getUmkNilai(), "###,###"));
//
//                rapelDetail.setStrategisBaru(CommonUtil.numbericFormat(detailLoop.getStrategisBaruNilai(), "###,###"));
//                rapelDetail.setStrategisLama(CommonUtil.numbericFormat(detailLoop.getStrategisLamaNilai(), "###,###"));
//                rapelDetail.setStrategis(CommonUtil.numbericFormat(detailLoop.getStrategisNilai(), "###,###"));
//
//                rapelDetail.setStrukturalBaru(CommonUtil.numbericFormat(detailLoop.getStrukturalBaruNilai(), "###,###"));
//                rapelDetail.setStrukturalLama(CommonUtil.numbericFormat(detailLoop.getStrukturalLamaNilai(), "###,###"));
//                rapelDetail.setStruktural(CommonUtil.numbericFormat(detailLoop.getStrukturalNilai(), "###,###"));
//
//                rapelDetail.setJabStrukturalBaru(CommonUtil.numbericFormat(detailLoop.getJabStrukturalBaruNilai(), "###,###"));
//                rapelDetail.setJabStrukturalLama(CommonUtil.numbericFormat(detailLoop.getJabStrukturalLamaNilai(), "###,###"));
//                rapelDetail.setJabStruktural(CommonUtil.numbericFormat(detailLoop.getJabStrukturalNilai(), "###,###"));
//
//                rapelDetail.setAirListrikBaru(CommonUtil.numbericFormat(detailLoop.getAirListrikBaruNilai(), "###,###"));
//                rapelDetail.setAirListrikLama(CommonUtil.numbericFormat(detailLoop.getAirListrikLamaNilai(), "###,###"));
//                rapelDetail.setAirListrik(CommonUtil.numbericFormat(detailLoop.getAirListrikNilai(), "###,###"));
//
//                rapelDetail.setPerumahanBaru(CommonUtil.numbericFormat(detailLoop.getPerumahanBaruNilai(), "###,###"));
//                rapelDetail.setPerumahanLama(CommonUtil.numbericFormat(detailLoop.getPerumahanLamaNilai(), "###,###"));
//                rapelDetail.setPerumahan(CommonUtil.numbericFormat(detailLoop.getPerumahanNilai(), "###,###"));
//
//                hasil.add(rapelDetail);
//            }
//        }
//
//        return hasil;
//    }
//
//    @Override
//    public PayrollRapel rapelJumlahBulan(String bulan, String tahun, String unit) throws GeneralBOException {
//        PayrollRapel payrollRapel = new PayrollRapel();
//        payrollRapel = payrollRapelDao.getJumlahBulan(bulan, tahun, unit);
//
//        return payrollRapel;
//    }
//
//    @Override
//    public List<PayrollRapelDetail> printReportPayrollRapelDetailSys(String bulan, String tahun, String nip) throws GeneralBOException {
//        List<PayrollRapelDetail>payrollRapelDetails = new ArrayList<>();
//        List<ItPayrollRapelDetailEntity>itPayrollRapelDetailEntities= new ArrayList<>();
//        PayrollRapelDetail payrollRapel = new PayrollRapelDetail();
//
//        itPayrollRapelDetailEntities = payrollRapelDetailDao.getRapelDetail(bulan, tahun, nip);
//        if(itPayrollRapelDetailEntities.size() > 0){
//            for(ItPayrollRapelDetailEntity rapelDetailLoop : itPayrollRapelDetailEntities){
//                payrollRapel.setGajiGolonganBaruNilai(rapelDetailLoop.getGajiGolonganBaruNilai());
//                payrollRapel.setGajiGolonganLamaNilai(rapelDetailLoop.getGajiGolonganLamaNilai());
//                payrollRapel.setGajiGolonganNilai(rapelDetailLoop.getGajiGolonganNilai());
//
//                payrollRapel.setUmkBaruNilai(rapelDetailLoop.getUmkBaruNilai());
//                payrollRapel.setUmkLamaNilai(rapelDetailLoop.getUmkLamaNilai());
//                payrollRapel.setUmkNilai(rapelDetailLoop.getUmkNilai());
//
//                payrollRapel.setPeralihanBaruNilai(rapelDetailLoop.getPeralihanBaruNilai());
//                payrollRapel.setPeralihanLamaNilai(rapelDetailLoop.getPeralihanLamaNilai());
//                payrollRapel.setPeralihanNilai(rapelDetailLoop.getPeralihanNilai());
//
//                payrollRapel.setStrategisBaruNilai(rapelDetailLoop.getStrategisBaruNilai());
//                payrollRapel.setStrategisLamaNilai(rapelDetailLoop.getStrategisLamaNilai());
//                payrollRapel.setStrategisNilai(rapelDetailLoop.getStrategisNilai());
//
//                payrollRapel.setStrukturalBaruNilai(rapelDetailLoop.getStrukturalBaruNilai());
//                payrollRapel.setStrukturalLamaNilai(rapelDetailLoop.getStrukturalLamaNilai());
//                payrollRapel.setStrukturalNilai(rapelDetailLoop.getStrukturalNilai());
//
//                payrollRapel.setJabStrukturalBaruNilai(rapelDetailLoop.getJabStrukturalBaruNilai());
//                payrollRapel.setJabStrukturalLamaNilai(rapelDetailLoop.getJabStrukturalLamaNilai());
//                payrollRapel.setJabStrukturalNilai(rapelDetailLoop.getJabStrukturalNilai());
//
//                payrollRapel.setAirListrikBaruNilai(rapelDetailLoop.getAirListrikBaruNilai());
//                payrollRapel.setAirListrikLamaNilai(rapelDetailLoop.getAirListrikLamaNilai());
//                payrollRapel.setAirListrikNilai(rapelDetailLoop.getAirListrikNilai());
//
//                payrollRapel.setPerumahanBaruNilai(rapelDetailLoop.getPerumahanBaruNilai());
//                payrollRapel.setPerumahanLamaNilai(rapelDetailLoop.getPerumahanLamaNilai());
//                payrollRapel.setPerumahanNilai(rapelDetailLoop.getPerumahanNilai());
//            }
//            payrollRapelDetails.add(payrollRapel);
//        }
//
//        return payrollRapelDetails;
//    }


    //uncomment by ferdi, 01 des 2020
//    // DWR. untuk addPayroll.jsp mengambil kalkulasi pph pengobatan selama 1 tahun
//    @Override
//    public PayrollPph getDetailEditPphPengobatanSys(String tahun, String nip) throws GeneralBOException {
//        PayrollPph payrollPphPengobatan = new PayrollPph();
//
//        // Jumlah Pengobatan Selama 1 Tahun
//        List<PayrollPph> pphPengobatanLoop = payrollDao.getJumlahPengobatan(tahun, nip);
//        for(PayrollPph pengobatanLoop: pphPengobatanLoop){
//            payrollPphPengobatan.setNip(nip);
//            payrollPphPengobatan.setJumlahPengobatanNilai(pengobatanLoop.getJumlahPengobatanNilai());
//            payrollPphPengobatan.setJumlahPengobatan(CommonUtil.numbericFormat(pengobatanLoop.getJumlahPengobatanNilai(), "###,###"));
//            payrollPphPengobatan.setJumlahPphPengobatanNilai(pengobatanLoop.getJumlahPphPengobatanNilai());
//            payrollPphPengobatan.setJumlahPphPengobatan(CommonUtil.numbericFormat(pengobatanLoop.getJumlahPphPengobatanNilai(), "###,###"));
//        }
//
//        return payrollPphPengobatan;
//    }



    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<PayrollPendapatanPphDTO> searchReportPendapatanPph(String tahun, String unit) throws GeneralBOException {
//        final List<PayrollPendapatanPphDTO> payrollList = new ArrayList<PayrollPendapatanPphDTO>();
//        BigDecimal jumlahGaji = BigDecimal.ZERO;
//        BigDecimal jumlahPphGaji = BigDecimal.ZERO;
//        BigDecimal jumlahTunjObat = BigDecimal.ZERO;
//        BigDecimal jumlahPphObat = BigDecimal.ZERO;
//        BigDecimal jumlahLbr = BigDecimal.ZERO;
//
//        final List<ItPayrollEntity> itPayrollEntities = (List<ItPayrollEntity>)this.payrollDao.searchReportTarikanPendapatanPPH(tahun, unit);
//        if (itPayrollEntities.size() > 0) {
//            String nip = "";
//            PayrollPendapatanPphDTO payroll = new PayrollPendapatanPphDTO();
//            int i = 1;
//            for (final ItPayrollEntity itPayrollEntity : itPayrollEntities) {
//                if (!nip.equalsIgnoreCase(itPayrollEntity.getNip())) {
//                    if (i != 1) {
//                        List<ItPayrollEntity> listPayrollPendidikan = new ArrayList<ItPayrollEntity>();
//                        List<ItPayrollEntity> listPayrollThr = new ArrayList<ItPayrollEntity>();
//                        List<ItPayrollEntity> listPayrollJasprod = new ArrayList<ItPayrollEntity>();
//                        List<ItPayrollEntity> listPayrollJubilium = new ArrayList<ItPayrollEntity>();
//                        List<ItPayrollEntity> listPayrollRapel = new ArrayList<ItPayrollEntity>();
//                        List<ItPayrollInsentifEntity> listPayrollInsentif = new ArrayList<ItPayrollInsentifEntity>();
//                        List<ItPayrollRapelEntity> payrollRapelEntityList = new ArrayList<ItPayrollRapelEntity>();
//                        List<ItPayrollJubileumEntity> jubileumEntityList = new ArrayList<ItPayrollJubileumEntity>();
//                        try {
//                            listPayrollPendidikan = (List<ItPayrollEntity>)this.payrollDao.getDataViewTanpaBulan(payroll.getNip(), unit, tahun, "PD");
//                            listPayrollThr = (List<ItPayrollEntity>)this.payrollDao.getDataViewTanpaBulan(payroll.getNip(), unit, tahun, "T");
//                            listPayrollJasprod = (List<ItPayrollEntity>)this.payrollDao.getDataViewTanpaBulan(payroll.getNip(), unit, tahun, "JP");
//                            listPayrollJubilium = (List<ItPayrollEntity>)this.payrollDao.getDataViewTanpaBulan(payroll.getNip(), unit, tahun, "JB");
//                            listPayrollRapel = (List<ItPayrollEntity>)this.payrollDao.getDataViewTanpaBulan(payroll.getNip(), unit, tahun, "R");
//                            listPayrollInsentif = (List<ItPayrollInsentifEntity>)this.payrollInsentifDao.getInsentifByNipAndTahun(payroll.getNip(), tahun);
//                        }
//                        catch (HibernateException e) {
//                            PayrollBoImpl.logger.error((Object)("[CutiPegawaiBoImpl.saveEdit] Error, " + e.getMessage()));
//                            throw new GeneralBOException("Found problem when searching data alat by Kode alat, please inform to your admin...," + e.getMessage());
//                        }
//                        for (final ItPayrollEntity payrollEntity : listPayrollPendidikan) {
//                            payroll.setPdpDidik(payrollEntity.getTotalPendidikan());
//                            payroll.setPphDidik(payrollEntity.getPphGaji());
//                        }
//                        for (final ItPayrollEntity payrollEntity : listPayrollThr) {
//                            payroll.setPdpThr(payrollEntity.getTotalThr());
//                            payroll.setPphThr(payrollEntity.getPphGaji());
//                        }
//                        for (final ItPayrollEntity payrollEntity : listPayrollJasprod) {
//                            payroll.setPdpBonus(payrollEntity.getTotalJasProd());
//                            payroll.setPphBonus(payrollEntity.getPphGaji());
//                        }
//                        BigDecimal insentif = payroll.getPdpBonus();
//                        BigDecimal pphInsentif = payroll.getPphBonus();
//                        for (ItPayrollInsentifEntity insentifEntity: listPayrollInsentif) {
//                            insentif= insentif.add(insentifEntity.getJumlahInsentif());
//                            pphInsentif= pphInsentif.add(insentifEntity.getJumlahPph());
//                        }
//                        payroll.setPdpBonus(insentif);
//                        payroll.setPphBonus(pphInsentif);
//                        for (final ItPayrollEntity payrollEntity : listPayrollJubilium) {
//                            try {
//                                jubileumEntityList = (List<ItPayrollJubileumEntity>)this.payrollJubileumDao.getJubileum(payrollEntity.getPayrollId());
//                            }
//                            catch (HibernateException e2) {
//                                PayrollBoImpl.logger.error((Object)("[CutiPegawaiBoImpl.saveEdit] Error, " + e2.getMessage()));
//                                throw new GeneralBOException("Found problem when searching data alat by Kode alat, please inform to your admin...," + e2.getMessage());
//                            }
//                            for (final ItPayrollJubileumEntity jubileumEntity : jubileumEntityList) {
//                                payroll.setPdpJubel(jubileumEntity.getGrandTotal());
//                                payroll.setPphLain(jubileumEntity.getPphJubileum());
//                            }
//                        }
//                        for (final ItPayrollEntity payrollEntity : listPayrollRapel) {
//                            try {
//                                payrollRapelEntityList = (List<ItPayrollRapelEntity>)this.payrollRapelDao.getRapel(payrollEntity.getPayrollId());
//                            }
//                            catch (HibernateException e2) {
//                                PayrollBoImpl.logger.error((Object)("[CutiPegawaiBoImpl.saveEdit] Error, " + e2.getMessage()));
//                                throw new GeneralBOException("Found problem when searching data alat by Kode alat, please inform to your admin...," + e2.getMessage());
//                            }
//                            for (final ItPayrollRapelEntity payrollRapelEntity : payrollRapelEntityList) {
//                                payroll.setPdpRapel(payrollRapelEntity.getTotalRapelFinal());
//                                payroll.setPphRapel(payrollRapelEntity.getPphRapel());
//                            }
//                        }
//
//                        jumlahGaji = jumlahGaji.add(payroll.getPdpDidik()).add(payroll.getPdpThr()).add(payroll.getPdpBonus()).add(payroll.getPdpRapel()).add(payroll.getPdpJubel());
//                        jumlahPphGaji = jumlahPphGaji.add(payroll.getPphDidik()).add(payroll.getPphThr()).add(payroll.getPphBonus()).add(payroll.getPphRapel()).add(payroll.getPphLain());
//                        final BigDecimal jumlahPdpLbrObat = jumlahGaji.add(jumlahTunjObat);
//                        payroll.setJumlahPdpLbrObt(jumlahPdpLbrObat);
//                        payroll.setJumlahGaji(jumlahGaji);
//                        payroll.setJumlahPphGaji(jumlahPphGaji);
//                        payroll.setJumlahObt(jumlahTunjObat);
//                        payroll.setJumlahPphObt(jumlahPphObat);
//                        payroll.setJumlahlbr(jumlahLbr);
//                        payrollList.add(payroll);
//                    }
//                    payroll = this.generateZeroPayrollPendapatan();
//                    ImBiodataEntity biodataEntity;
//                    try {
//                        biodataEntity = (ImBiodataEntity)this.biodataDao.getById("nip", itPayrollEntity.getNip());
//                    }
//                    catch (HibernateException e3) {
//                        PayrollBoImpl.logger.error((Object)("[PayrollBoImpl.searchReportPendapatanPph] Error, " + e3.getMessage()));
//                        throw new GeneralBOException("Found problem when searching data alat by Kode alat, please inform to your admin...," + e3.getMessage());
//                    }
//                    payroll.setNip(biodataEntity.getNip());
//                    payroll.setNama(biodataEntity.getNamaPegawai());
//
//                    ItPayrollPphEntity payrollPphEntityJkmJkk = new ItPayrollPphEntity();
//                    payrollPphEntityJkmJkk = payrollPphDao.getIuranJkmJkk(itPayrollEntity.getNip(),tahun);
//                    payroll.setKasPer(payrollPphEntityJkmJkk.getIuranJkmJkk().add(payrollPphEntityJkmJkk.getIuranBpjsKesehatan()));
//                    payroll.setPakaianDinas(payrollPphEntityJkmJkk.getPakaianDinas());
//
//                    nip = itPayrollEntity.getNip();
//                    jumlahGaji = BigDecimal.ZERO;
//                    jumlahPphGaji = BigDecimal.ZERO;
//                    jumlahTunjObat = BigDecimal.ZERO;
//                    jumlahPphObat = BigDecimal.ZERO;
//                    jumlahLbr = BigDecimal.ZERO;
//                    ++i;
//                }
//                final String bulan = itPayrollEntity.getBulan();
//                switch (bulan) {
//                    case "01": {
//                        payroll.setPdp01(itPayrollEntity.getTotalA());
//                        payroll.setPph01(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt01(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt01(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr01(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "02": {
//                        payroll.setPdp02(itPayrollEntity.getTotalA());
//                        payroll.setPph02(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt02(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt02(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr02(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "03": {
//                        payroll.setPdp03(itPayrollEntity.getTotalA());
//                        payroll.setPph03(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt03(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt03(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr03(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "04": {
//                        payroll.setPdp04(itPayrollEntity.getTotalA());
//                        payroll.setPph04(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt04(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt04(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr04(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "05": {
//                        payroll.setPdp05(itPayrollEntity.getTotalA());
//                        payroll.setPph05(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt05(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt05(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr05(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "06": {
//                        payroll.setPdp06(itPayrollEntity.getTotalA());
//                        payroll.setPph06(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt06(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt06(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr06(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "07": {
//                        payroll.setPdp07(itPayrollEntity.getTotalA());
//                        payroll.setPph07(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt07(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt07(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr07(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "08": {
//                        payroll.setPdp08(itPayrollEntity.getTotalA());
//                        payroll.setPph08(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt08(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt08(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr08(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "09": {
//                        payroll.setPdp09(itPayrollEntity.getTotalA());
//                        payroll.setPph09(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt09(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt09(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr09(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "10": {
//                        payroll.setPdp10(itPayrollEntity.getTotalA());
//                        payroll.setPph10(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt10(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt10(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr10(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "11": {
//                        payroll.setPdp11(itPayrollEntity.getTotalA());
//                        payroll.setPph11(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt11(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt11(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr11(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                    case "12": {
//                        payroll.setPdp12(itPayrollEntity.getTotalA());
//                        payroll.setPph12(itPayrollEntity.getPphGaji());
//                        payroll.setPphObt12(itPayrollEntity.getPphPengobatan());
//                        payroll.setTunObt12(itPayrollEntity.getTunjanganPengobatan());
//                        payroll.setLbr12(itPayrollEntity.getTunjanganLembur());
//                        jumlahGaji = jumlahGaji.add(itPayrollEntity.getTotalA());
//                        jumlahPphGaji = jumlahPphGaji.add(itPayrollEntity.getPphGaji());
//                        jumlahTunjObat = jumlahTunjObat.add(itPayrollEntity.getTunjanganPengobatan());
//                        jumlahPphObat = jumlahPphObat.add(itPayrollEntity.getPphPengobatan());
//                        jumlahLbr = jumlahLbr.add(itPayrollEntity.getTunjanganLembur());
//                        continue;
//                    }
//                }
//            }
//
//            jumlahGaji = jumlahGaji.add(payroll.getPdpDidik()).add(payroll.getPdpThr()).add(payroll.getPdpBonus()).add(payroll.getPdpRapel()).add(payroll.getPdpJubel());
//            jumlahPphGaji = jumlahPphGaji.add(payroll.getPphDidik()).add(payroll.getPphThr()).add(payroll.getPphBonus()).add(payroll.getPphRapel()).add(payroll.getPphLain());
//            final BigDecimal jumlahPdpLbrObat = jumlahGaji.add(jumlahTunjObat);
//            payroll.setJumlahPdpLbrObt(jumlahPdpLbrObat);
//            payroll.setJumlahGaji(jumlahGaji);
//            payroll.setJumlahPphGaji(jumlahPphGaji);
//            payroll.setJumlahObt(jumlahTunjObat);
//            payroll.setJumlahPphObt(jumlahPphObat);
//            payroll.setJumlahlbr(jumlahLbr);
//            payrollList.add(payroll);
//        }
//        return payrollList;
//    }

//uncomment by ferdi, 01 des 2020
//    @Override
//    public void saveEditPayrollPphSessionDataUsingPayrollId(Payroll payroll) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//
//        Payroll payrollPerson = (Payroll) session.getAttribute("listDataPayrollPerson");
//
//        if(payrollPerson != null){
//            if(payroll.getPayrollId().equalsIgnoreCase(payrollPerson.getPayrollId())){
//
//                payrollPerson.setPphGaji(CommonUtil.numbericFormat(payroll.getPphGajiNilai(), "###,###")); //Pph Gaji
//                payroll.setPphGajiNilai(payroll.getPphGajiNilai()); //Pph Gaji Nilai
//
//                BigDecimal jumlahB = hitungTotalB(payroll.getPphGajiNilai(), payrollPerson.getPphPengobatanNilai(), payrollPerson.getIuranPensiunNilai(),
//                        payrollPerson.getIuranBpjsTkNilai(), payrollPerson.getIuranBpjsPensiunNilai(), payrollPerson.getIuranBpjsKesehatanNilai(),payrollPerson.getUangMukaLainnyaNilai(),
//                        payrollPerson.getKekuranganBpjsTkNilai());
//
//                payrollPerson.setTotalBNilai(jumlahB);
//                payrollPerson.setTotalB(CommonUtil.numbericFormat(jumlahB, "###,###"));
//
//                BigDecimal totalTambahan = payrollPerson.getTotalRapelNilai().add(payrollPerson.getTotalThrNilai()).add(payrollPerson.getTotalPendidikanNilai())
//                        .add(payrollPerson.getTotalJasProdNilai()).add(payrollPerson.getTotalInsentifNilai());
//                BigDecimal gajiBersih = totalTambahan.subtract(jumlahB);
//
//                payrollPerson.setTotalTambahanNilai(totalTambahan);
//                payrollPerson.setTotalTambahan(CommonUtil.numbericFormat(totalTambahan, "###,###"));
//                payrollPerson.setTotalGajiBersihNilai(gajiBersih);
//                payrollPerson.setTotalGajiBersih(CommonUtil.numbericFormat(gajiBersih, "###,###"));
//            }
//            session.removeAttribute("listDataPayrollPerson");
//            session.setAttribute("listDataPayrollPerson", payrollPerson);
//        }
//    }
//    @Override
//    public void saveEditDataTambahanD(Payroll payroll) throws GeneralBOException {
//        HttpSession session = ServletActionContext.getRequest().getSession();
//
//        ItPayrollEntity itPayrollEntity = payrollDao.getById("payrollId", payroll.getPayrollId(), "Y");
//        ItPayrollPphEntity itPayrollPphEntity = new ItPayrollPphEntity();
//
//        if(itPayrollEntity.getPayrollId() != null){
//            List<ItPayrollPphEntity> itPayrollPphEntities = payrollPphDao.getDataView(payroll.getPayrollId());
//            if(itPayrollPphEntities != null){
//                for(ItPayrollPphEntity itPayrollPphEntity1: itPayrollPphEntities){
//                    itPayrollPphEntity = itPayrollPphEntity1;
//                }
//            }
//
//
//            itPayrollPphEntity.setPphGaji(payroll.getPphGajiNilai());
//            itPayrollPphEntity.setAction(payroll.getAction());
//            itPayrollPphEntity.setLastUpdateWho(payroll.getLastUpdateWho());
//            itPayrollPphEntity.setLastUpdate(payroll.getLastUpdate());
//
//            try {
//                payrollPphDao.updateAndSave(itPayrollPphEntity);
//            } catch (HibernateException e) {
//                logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//            }
//
//            itPayrollEntity.setPphGaji(payroll.getPphGajiNilai()); //Pph Gaji
//
//            BigDecimal jumlahB = hitungTotalB(payroll.getPphGajiNilai(), itPayrollEntity.getPphPengobatan(), itPayrollEntity.getIuranPensiun(),
//                    itPayrollEntity.getIuranBpjsTk(), itPayrollEntity.getIuranBpjsPensiun(), itPayrollEntity.getIuranBpjsKesehatan(), itPayrollEntity.getUangMukaLainnya(),
//                    itPayrollEntity.getKekuranganBpjsTk());
//
//            itPayrollEntity.setTotalB(jumlahB);
//
//            BigDecimal gajiBersih = itPayrollEntity.getTotalD().subtract(jumlahB);
//            itPayrollEntity.setGajiBersih(gajiBersih);
//        }
//
//        itPayrollEntity.setAction(payroll.getAction());
//        itPayrollEntity.setLastUpdateWho(payroll.getLastUpdateWho());
//        itPayrollEntity.setLastUpdate(payroll.getLastUpdate());
//
//        try {
//            payrollDao.updateAndSave(itPayrollEntity);
//        } catch (HibernateException e) {
//            logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//        }
//
//        //set in itpayrollinsentifentity
//        List<ItPayrollInsentifEntity> payrollInsentifEntityList = new ArrayList<>();
//        try {
//            payrollInsentifEntityList=payrollInsentifDao.getInsentif(itPayrollEntity.getPayrollId());
//        } catch (HibernateException e) {
//            logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//        }
//        if (payrollInsentifEntityList.size()!=0){
//            for(ItPayrollInsentifEntity data : payrollInsentifEntityList){
//                data.setJumlahPph(payroll.getPphGajiNilai());
//                try {
//                    payrollInsentifDao.updateAndSave(data);
//                } catch (HibernateException e) {
//                    logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//                }
//            }
//        }
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public void savePttDetail(List<Ptt> pttList,String payrollId,String nip,String bulan,String tahun) throws GeneralBOException {
//        // get all ptt for Flag N
//        List<ItPayrollPttEntity> payrollPttEntityList = new ArrayList<>();
//        String userLogin = CommonUtil.userLogin();
//        Timestamp updateTime = new Timestamp(Calendar.getInstance().getTimeInMillis());
//        try {
//            payrollPttEntityList = payrollPttDao.getDataPtt(payrollId);
//        } catch (HibernateException e) {
//            logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//        }
//
//        //delete all ptt
//        for(ItPayrollPttEntity payrollPttEntity : payrollPttEntityList){
//            payrollPttEntity.setLastUpdate(updateTime);
//            payrollPttEntity.setLastUpdateWho(userLogin);
//            payrollPttEntity.setFlag("N");
//            payrollPttEntity.setAction("D");
//            try {
//                payrollPttDao.updateAndSave(payrollPttEntity);
//            } catch (HibernateException e) {
//                logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//            }
//        }
//
//        //add new ptt
//        if (pttList!=null){
//            for (Ptt ptt : pttList ){
//                String pttId="";
//                try {
//                    pttId = payrollPttDao.getNextId();
//                } catch (HibernateException e) {
//                    logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//                }
//
//                ItPayrollPttEntity payrollPttEntity = new ItPayrollPttEntity();
//                payrollPttEntity.setPayrollId(payrollId);
//                payrollPttEntity.setPayrollPttId(pttId);
//                payrollPttEntity.setIdPtt(ptt.getTipePttId());
//                payrollPttEntity.setNilai(ptt.getNilaiPtt());
//                payrollPttEntity.setNip(nip);
//                payrollPttEntity.setBulan(bulan);
//                payrollPttEntity.setTahun(tahun);
//                payrollPttEntity.setCreatedDate(updateTime);
//                payrollPttEntity.setCreatedWho(userLogin);
//                payrollPttEntity.setLastUpdate(updateTime);
//                payrollPttEntity.setLastUpdateWho(userLogin);
//                payrollPttEntity.setFlag("Y");
//                payrollPttEntity.setAction("C");
//                try {
//                    payrollPttDao.addAndSave(payrollPttEntity);
//                } catch (HibernateException e) {
//                    logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//                }
//            }
//        }
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<Ptt> getTotalLainLainSetahun(String nip, String tahun) throws GeneralBOException {
//        List<ItPayrollPttEntity> payrollPttEntityList = new ArrayList<>();
//        List<ItPayrollEntity> payrollEntityList = new ArrayList<>();
//        List<Ptt> listResult = new ArrayList<>();
//        try {
//            payrollPttEntityList = payrollPttDao.getDataPttByNipAndTahun(nip,tahun);
//            payrollEntityList = payrollDao.getDetailPendapatanTidakTeratur(nip,tahun);
//        } catch (HibernateException e) {
//            logger.error("[payrollBoimpl.getTotalLainLainSetahun] Error, " + e.getMessage());
//        }
//        BigDecimal jumlah = new BigDecimal(0);
//        for (ItPayrollPttEntity payrollPttEntity : payrollPttEntityList){
//            Ptt ptt = new Ptt();
//            ptt.setPayrollPttId(payrollPttEntity.getPayrollPttId());
//            ptt.setTipePttId(payrollPttEntity.getIdPtt());
//            ptt.setNilaiPtt(payrollPttEntity.getNilai());
//            ptt.setNip(payrollPttEntity.getNip());
//            ptt.setTahun(payrollPttEntity.getTahun());
//            ptt.setBulan(CommonUtil.convertNumberToStringBulan(payrollPttEntity.getBulan()));
//            ptt.setNilai(CommonUtil.numbericFormat(payrollPttEntity.getNilai(),"###,###"));
//            ptt.setTipePttName(CommonUtil.convertTipePtt(payrollPttEntity.getIdPtt()));
//            jumlah = jumlah.add(payrollPttEntity.getNilai());
//            ptt.setJumlahPtt(jumlah);
//            ptt.setStJumlahPtt(CommonUtil.numbericFormat(jumlah,"###,###"));
//            listResult.add(ptt);
//        }
//
//        for (ItPayrollEntity payrollEntity : payrollEntityList){
//            Ptt ptt = new Ptt();
//            ptt.setNip(payrollEntity.getNip());
//            ptt.setBulan(CommonUtil.convertNumberToStringBulan(payrollEntity.getBulan()));
//            ptt.setNilaiPtt(payrollEntity.getTambahanLain());
//            ptt.setNilai(CommonUtil.numbericFormat(payrollEntity.getTambahanLain(),"###,###"));
//            jumlah = jumlah.add(payrollEntity.getTambahanLain());
//            ptt.setJumlahPtt(jumlah);
//            ptt.setStJumlahPtt(CommonUtil.numbericFormat(jumlah,"###,###"));
//
//            String tipePttName = "";
//
//            if (("Y").equalsIgnoreCase(payrollEntity.getFlagCutiPanjang())){
//                tipePttName = "Cuti Panjang";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagCutiTahunan())){
//                tipePttName = "Cuti Tahunan";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagJasprod())){
//                tipePttName = "Jasa Operasional";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagThr())){
//                tipePttName = "THR";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagInsentif())){
//                tipePttName = "Insentif";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagJubileum())){
//                tipePttName = "PMP";
//            }
//            ptt.setTipePttName(tipePttName);
//
//            listResult.add(ptt);
//        }
//        return listResult;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public List<PayrollModalDTO> getTotalPPh11Bulan(String nip, String tahun) throws GeneralBOException {
//        List<ItPayrollEntity> payrollEntityList = new ArrayList<>();
//        List<PayrollModalDTO> listResult = new ArrayList<>();
//        try {
//            payrollEntityList = payrollDao.getDetailPPh11Bulan(nip,tahun);
//        } catch (HibernateException e) {
//            logger.error("[payrollBoimpl.getTotalLainLainSetahun] Error, " + e.getMessage());
//        }
//        BigDecimal jumlah = BigDecimal.ZERO;
//        for (ItPayrollEntity payrollEntity : payrollEntityList){
//            PayrollModalDTO data = new PayrollModalDTO();
//            data.setBulan(CommonUtil.convertNumberToStringBulan(payrollEntity.getBulan()));
//            data.setNilai(payrollEntity.getPphGaji());
//            data.setStNilai(CommonUtil.numbericFormat(payrollEntity.getPphGaji(),"###,###"));
//            jumlah = jumlah.add(payrollEntity.getPphGaji());
//            data.setJumlahNilai(jumlah);
//            data.setStJumlahNilai(CommonUtil.numbericFormat(jumlah,"###,###"));
//            String jenisPayroll = "";
//            if (("Y").equalsIgnoreCase(payrollEntity.getFlagPayroll())){
//                jenisPayroll="Payroll";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagCutiTahunan())){
//                jenisPayroll="Cuti Tahunan";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagCutiPanjang())){
//                jenisPayroll="Cuti Panjang";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagThr())){
//                jenisPayroll="THR";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagJasprod())){
//                jenisPayroll="Jasopr";
//            }else if (("Y").equalsIgnoreCase(payrollEntity.getFlagInsentif())){
//                jenisPayroll="Insentif";
//            }
//            data.setJenisPayroll(jenisPayroll);
//            listResult.add(data);
//        }
//        return listResult;
//    }

    //uncomment by ferdi, 01 des 2020
//    @Override
//    public PayrollModalDTO searchDetailPPhSeharusnya(String nip, String tahun, String totalA, String totalRlab, String tunjDapen, String tunjBpjsKs, String tunjBpjsTk, String iuranDapen, String iuranBpjsKs, String iuranBpjsTk, String statusKelurga, String jumlahAnak) throws GeneralBOException {
//        PayrollModalDTO result = new PayrollModalDTO();
//        ImBiodataEntity biodataEntity = biodataDao.getById("nip",nip);
//        BigDecimal pphSeharusnya ,pphGaji,tunjPph = BigDecimal.ZERO;
//        Integer selisih ;
//        BigDecimal totalANilai = new BigDecimal(totalA.replace(".",""));
//        BigDecimal totalRlabNilai = new BigDecimal(totalRlab.replace(".",""));
//        BigDecimal iuranDapenNilai = new BigDecimal(iuranDapen.replace(".",""));
//        BigDecimal iuranBpjsKsNilai = new BigDecimal(iuranBpjsKs.replace(".",""));
//        BigDecimal iuranBpjsTkNilai = new BigDecimal(iuranBpjsTk.replace(".",""));
//        BigDecimal tunjDapenNilai = new BigDecimal(tunjDapen.replace(".",""));
//        BigDecimal tunjBpjsKsNilai = new BigDecimal(tunjBpjsKs.replace(".",""));
//        BigDecimal tunjBpjsTkNilai = new BigDecimal(tunjBpjsTk.replace(".",""));
//        BigDecimal iuranPegawai = iuranDapenNilai.add(iuranBpjsKsNilai.add(iuranBpjsTkNilai));
//        BigDecimal tunjLain = totalRlabNilai.add(tunjDapenNilai).add(tunjBpjsTkNilai).add(tunjBpjsKsNilai);
//
//        BigDecimal brutoBulan12 = totalANilai.add(tunjLain);
//
//        BigDecimal bruto11Bulan = payrollDao.getBruto11Bulan(tahun,nip);
//        BigDecimal tunjPPh11Bulan = payrollDao.getTunjanganPPhGaji11Bulan(tahun,nip);
//        BigDecimal tunjPphBonus = payrollDao.getTunjanganPPhGajiBonusSetahun(tahun,nip);
//        BigDecimal pph11Bulan = payrollDao.getPPhGaji11Bulan(tahun,nip);
//        BigDecimal pphBonus = payrollDao.getPPhGajiBonusSetahun(tahun,nip);
//        BigDecimal pendLainLain11Bulan = payrollDao.getTotalBonusSetahun(tahun,nip);
//        BigDecimal pendLainLainBulan12 = new BigDecimal(0);
//        BigDecimal iuranPegawai11Bulan = payrollDao.getIuran11Bulan(tahun,nip);
//        BigDecimal totalLain = payrollDao.totalLain(tahun, nip);
//        BigDecimal totalLain11Bulan = totalLain.add(pendLainLain11Bulan);
//
//        BigDecimal totalPenghasilanBruto = bruto11Bulan.add(brutoBulan12);
//        BigDecimal totalTunjPPhSelainBulan12 = tunjPPh11Bulan.add(tunjPphBonus);
//        BigDecimal totalBonus = totalLain11Bulan.add(pendLainLainBulan12);
//
//        BigDecimal totalBruto = totalPenghasilanBruto.add(totalTunjPPhSelainBulan12).add(totalBonus);
//
//        BigDecimal totalIuran = iuranPegawai11Bulan.add(iuranPegawai);
//        BigDecimal biayaJabatan;
//
//        BigDecimal nettoSetahun ;
//
//        BigDecimal ptkp = getPtkpPegawaiSimRs(statusKelurga, Integer.valueOf(jumlahAnak));
//        BigDecimal pkp ;
//
//        BigDecimal finalTotalBruto;
//        BigDecimal finalBijab;
//        do {
//            //menghiitung bruto
//            BigDecimal totalBrutoLoop =totalBruto.add(tunjPph);
//
//            // menghitung reduce
//            if ((CommonUtil.percentage(totalBrutoLoop, BigDecimal.valueOf(5))).compareTo(BigDecimal.valueOf(6000000))<1){
//                biayaJabatan = CommonUtil.percentage(totalBrutoLoop, BigDecimal.valueOf(5));
//            }else{
//                biayaJabatan = new BigDecimal(6000000);
//            }
//            BigDecimal reduce = totalIuran.add(biayaJabatan);
//
//            //menghitung netto
//            nettoSetahun = totalBrutoLoop.subtract(reduce);
//            //menghitung pkp
//            pkp = nettoSetahun.subtract(ptkp);
//            //menghitung pph setahun
//            pphSeharusnya = hitungPajakSetahunSimRs(pkp,biodataEntity.getNpwp());
//
//            //pph setahun / 12 untuk mendapat pph perbulan
//            pphGaji = pphSeharusnya.subtract(pph11Bulan).subtract(pphBonus);
//
//            //perhitungan selisih antara tunjPph dan pph gaji, jika selisih = 0 looping berhenti
//            selisih = pphGaji.subtract(tunjPph).intValue();
//            tunjPph = pphGaji;
//            finalTotalBruto = totalBrutoLoop;
//            finalBijab = biayaJabatan;
//        } while (selisih > 0);
//
//        result.setTotPendBruto(totalPenghasilanBruto);
//        result.setTotTunjPPh(totalTunjPPhSelainBulan12.add(tunjPph));
//        result.setTotPendTidakTeratur(totalBonus);
//        result.setTotBrut(finalTotalBruto);
//        result.setTotIuran(totalIuran);
//        result.setTotBijab(finalBijab);
//        result.setTotReduce(totalIuran.add(finalBijab));
//        result.setNetSetahun(nettoSetahun);
//        result.setPtkp(ptkp);
//        result.setPkp(pkp);
//
//        result.setStTotPendBruto(CommonUtil.numbericFormat(totalPenghasilanBruto,"###,###"));
//        result.setStTotTunjPPh(CommonUtil.numbericFormat(totalTunjPPhSelainBulan12.add(tunjPph),"###,###"));
//        result.setStTotPendTidakTeratur(CommonUtil.numbericFormat(totalBonus,"###,###"));
//        result.setStTotBrut(CommonUtil.numbericFormat(finalTotalBruto,"###,###"));
//        result.setStTotIuran(CommonUtil.numbericFormat(totalIuran,"###,###"));
//        result.setStTotBijab(CommonUtil.numbericFormat(finalBijab,"###,###"));
//        result.setStTotReduce(CommonUtil.numbericFormat(totalIuran.add(finalBijab),"###,###"));
//        result.setStNetSetahun(CommonUtil.numbericFormat(nettoSetahun,"###,###"));
//        result.setStPtkp(CommonUtil.numbericFormat(ptkp,"###,###"));
//        result.setStPkp(CommonUtil.numbericFormat(pkp,"###,###"));
//
//        result.setPphSeharusnya(pphSeharusnya);
//        result.setStPphSeharusnya(CommonUtil.numbericFormat(pphSeharusnya,"###,###"));
//
//        return result;
//    }

//uncomment by ferdi, 01 des 2020
//    @Override
//    public List<Ptt> getPayrollPttByPayrollId(String payrollId) throws GeneralBOException {
//        List<ItPayrollPttEntity> payrollPttEntityList = new ArrayList<>();
//        List<Ptt> listOfResult = new ArrayList<>();
//        try {
//            payrollPttEntityList = payrollPttDao.getDataPtt(payrollId);
//        } catch (HibernateException e) {
//            logger.error("[payrollBoimpl.saveEditDataTambahanD] Error, " + e.getMessage());
//        }
//
//        for(ItPayrollPttEntity payrollPttEntity : payrollPttEntityList){
//            Ptt newData = new Ptt();
//            newData.setTipePttId(payrollPttEntity.getIdPtt());
//            newData.setTipePttName(CommonUtil.convertTipePtt(payrollPttEntity.getIdPtt()));
//            newData.setNilaiPtt(payrollPttEntity.getNilai());
//            newData.setNilai(CommonUtil.numbericFormat(newData.getNilaiPtt(),"###,###"));
//
//            listOfResult.add(newData);
//        }
//        return listOfResult;
//    }

//    @Override
//    public String cekApproveSys(Payroll bean) throws GeneralBOException {
//        String hasil = "";
//        List<ItPayrollEntity> itApprove = null;
//        int tahun = Integer.parseInt(bean.getTahun());
//        int bulan = Integer.parseInt(bean.getBulan());
//        String strBulan = "";
//        bulan -= 1 ;
//
//        if(bulan < 1){
//            tahun -= 1;
//        }
//
//        if(bulan < 10){
//            strBulan = 0 + "" + bulan;
//        }else{
//            strBulan = bulan + "";
//        }
//        itApprove = payrollDao.cekApprove(bean.getBranchId(), strBulan, tahun + "");
//        if(itApprove.size() > 0){
//            for(ItPayrollEntity itPayrollEntity: itApprove){
//                hasil = itPayrollEntity.getBulan() + "-" + itPayrollEntity.getTahun();
//            }
//        }
//
//        return hasil;
//    }

//    @Override
//    public List<Payroll> getDaftarGajiKaryawan(String bulan, String tahun, String branch,String tipe) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        if ("GK".equalsIgnoreCase(tipe)){
//            payrollList = payrollDao.getDaftarGajiKaryawan(bulan,tahun,branch);
//        }else if ("RK".equalsIgnoreCase(tipe)){
//            payrollList = payrollDao.getRekapGajiKaryawan(bulan,tahun,branch);
//        }
//
//        for (Payroll payroll : payrollList){
//            payroll.setTotalANilai(payroll.getGajiGolonganNilai().add(payroll.getTunjanganUmkNilai()).add(payroll.getTunjanganJabatanStrukturalNilai()).add(payroll.getTunjanganStrukturalNilai()).add(payroll.getTunjanganStrategisNilai()).add(payroll.getTunjanganPeralihanNilai()).add(payroll.getTunjanganLainNilai()).add(payroll.getTunjanganLemburNilai()));
//            payroll.setTotalBNilai(payroll.getTunjanganRumahNilai().add(payroll.getTunjanganListrikNilai()).add(payroll.getTunjanganAirNilai().add(payroll.getTunjanganBBMNilai().add(payroll.getTunjanganPphNilai().add(payroll.getTunjanganDapenNilai().add(payroll.getTunjanganBpjsTkNilai().add(payroll.getTunjanganBpjsKsNilai().add(payroll.getTunjanganSosialLainNilai()))))))));
//            payroll.setTotalPendapatan(payroll.getTotalANilai().add(payroll.getTotalBNilai()));
//            payroll.setTotalCNilai(payroll.getPphGajiNilai().add(payroll.getIuranYpksNilai().add(payroll.getIuranDapenPegNilai().add(payroll.getIuranDapenPershNilai().add(payroll.getIuranBpjsTkPersNilai().add(payroll.getIuranBpjsTkKaryNilai().add(payroll.getIuranBpjsKsPersNilai().add(payroll.getIuranBpjsKsKaryNilai().add(payroll.getTotalPotonganLainNilai())))))))));
//            payroll.setTotalGajiBersihNilai(payroll.getTotalPendapatan().subtract(payroll.getTotalCNilai()));
//        }
//        return payrollList;
//    }

//    @Override
//    public List<Payroll> getDaftarIuranDapen(String bulan, String tahun, String branch,String tipe) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList<>();
//        if ("PIDPLK".equalsIgnoreCase(tipe)){
//            payrollList = payrollDao.getPotonganIuranDapen(bulan,tahun,branch,"DP01");
//        }else if ("PIDPB".equalsIgnoreCase(tipe)){
//            payrollList = payrollDao.getPotonganIuranDapen(bulan,tahun,branch,"DP02");
//        }
//        return payrollList;
//    }

//    // digunakan oleh addPayroll.jsp untuk mengecek apakah tunjangan insentif dibulan dan tahun yang dipih sudah pernah dibayarkan atau belum
//    @Override
//    public String cekTunjanganInsentif(int bulanMulai, int bulanSampai, int tahun, String branchId) throws GeneralBOException {
//        String hasil = "-";
//        List<Payroll> payrollEntityList = new ArrayList<>();
//        payrollEntityList = payrollDao.cekTunjanganInsentif(bulanMulai, tahun, branchId);
//
//        if(payrollEntityList.size() > 0){
//            hasil = "Maaf Bulan yang telah dipilih untuk insentif, sudah pernah dibayarkan";
//        }
//
//        return hasil;
//    }

//    private int calculateAge(Date tglLahir){
//        DateTime tglSekarang = new DateTime();
//        DateTime tanggalLahir = new DateTime(tglLahir);
//
//        BigInteger jumlahThnTetap = BigInteger.valueOf(0);
//        BigInteger jumlahBlnTetap = BigInteger.valueOf(0);
//        BigInteger jumlahHariTetap = BigInteger.valueOf(0);
//
//
//        jumlahThnTetap = BigInteger.valueOf(Years.yearsBetween(tanggalLahir, tglSekarang).getYears());
//        jumlahBlnTetap = BigInteger.valueOf(Months.monthsBetween(tanggalLahir, tglSekarang).getMonths());
//        jumlahBlnTetap = jumlahBlnTetap.mod(BigInteger.valueOf(12));
//        jumlahHariTetap= BigInteger.valueOf(Days.daysBetween(tanggalLahir, tglSekarang).getDays());
//        jumlahHariTetap= jumlahHariTetap.mod(BigInteger.valueOf(30));
//
//        String hasil = jumlahThnTetap + " Tahun, " + jumlahBlnTetap + " Bulan, " + jumlahHariTetap + " Hari.";
//
//        return jumlahThnTetap.intValue() ;
//    }
//
//    private String calculateMasaKerja(Date tglLahir){
//        DateTime tglSekarang = new DateTime();
//        DateTime tanggalLahir = new DateTime(tglLahir);
//
//        BigInteger jumlahThnTetap = BigInteger.valueOf(0);
//        BigInteger jumlahBlnTetap = BigInteger.valueOf(0);
//        BigInteger jumlahHariTetap = BigInteger.valueOf(0);
//
//
//        jumlahThnTetap = BigInteger.valueOf(Years.yearsBetween(tanggalLahir, tglSekarang).getYears());
//        jumlahBlnTetap = BigInteger.valueOf(Months.monthsBetween(tanggalLahir, tglSekarang).getMonths());
//        jumlahBlnTetap = jumlahBlnTetap.mod(BigInteger.valueOf(12));
//        jumlahHariTetap= BigInteger.valueOf(Days.daysBetween(tanggalLahir, tglSekarang).getDays());
//        jumlahHariTetap= jumlahHariTetap.mod(BigInteger.valueOf(30));
//
//        String hasil = jumlahThnTetap + " Tahun, " + jumlahBlnTetap + " Bulan, " + jumlahHariTetap + " Hari.";
//
//        return hasil ;
//    }
//
//    @Override
//    public String cekAvailableSys(Payroll bean) throws GeneralBOException {
//        List<ItPayrollEntity> itPayrollEntity = null;
//
//        String isPayroll = "N";
//        itPayrollEntity = payrollDao.getDataView(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getTipe());
//
//        if(itPayrollEntity.size() > 0){
//            isPayroll = "Y";
//        }
//        return isPayroll;
//    }
//
//    public String cekBeforePayrollSys(Payroll bean) throws GeneralBOException {
//        List<ItPayrollEntity> itPayrollEntity = null;
//        String isPayroll = "N";
//        itPayrollEntity = payrollDao.getDataViewBefore(bean.getBranchId());
//        if(itPayrollEntity.size() > 0){
//            for(ItPayrollEntity itPayrollEntity1: itPayrollEntity){
//                int bulan = Integer.parseInt(itPayrollEntity1.getBulan());
//                int tahun = Integer.parseInt(itPayrollEntity1.getTahun());
//                if(Integer.parseInt(bean.getBulan()) < bulan && Integer.parseInt(bean.getTahun()) < tahun){
//                    isPayroll = "Y";
//                }
//            }
//        }
//        return isPayroll;
//    }

//    @Override
//    public List<Payroll> getCsvPajak(Payroll bean) throws GeneralBOException {
//        List<Payroll> payrollList = new ArrayList();
//        List<ItPayrollEntity> itPayrollEntities = null;
//
//        itPayrollEntities = payrollDao.getDataView(bean.getBranchId(), bean.getBulan(), bean.getTahun(), bean.getTipe());
//
//        if(itPayrollEntities.size() > 0){
//            for(ItPayrollEntity itPayrollEntity : itPayrollEntities){
//                Payroll payroll = new Payroll();
//                payroll.setBulan(itPayrollEntity.getBulan());
//                payroll.setTahun(itPayrollEntity.getTahun());
//                payroll.setPembetulan("0");
//                if(itPayrollEntity.getNip() != null && !"".equalsIgnoreCase(itPayrollEntity.getNip())){
//                    payroll.setNpwp(itPayrollEntity.getImBiodataEntity().getNpwp());
//                }else{
//                    payroll.setNpwp(itPayrollEntity.getImBiodataEntity().getNpwp());
//                }
//                payroll.setNama(itPayrollEntity.getNama());
//                payroll.setKodePajak("21-100-01");
//                if(bean.getTipe().equalsIgnoreCase("T")){
//                    payroll.setTotalANilai(itPayrollEntity.getTotalThr());
//                }else if(bean.getTipe().equalsIgnoreCase("IN")){
//                    payroll.setTotalANilai(itPayrollEntity.getTotalInsentif());
//                }else if(bean.getTipe().equalsIgnoreCase("JP")){
//                    payroll.setTotalANilai(itPayrollEntity.getTotalJasProd());
//                }else{
//                    payroll.setTotalANilai(itPayrollEntity.getTotalA());
//                }
//
//                BigDecimal pph = itPayrollEntity.getPphGaji().add(itPayrollEntity.getPphPengobatan());
//                payroll.setPphGajiNilai(pph);
//                payroll.setKodeNegara("");
//                payrollList.add(payroll);
//            }
//        }
//        return payrollList;
//    }


//    @Override
//    public List<PayrollEsptDTO> searchReportEsptSys(String tahun, String unit) throws GeneralBOException {
//        List<PayrollEsptDTO> listOfResult = new ArrayList<>();
//        try {
//            List<PayrollEsptDTO> itPayrollEntities = payrollDao.searchReportEspt(tahun, unit);
//            if (itPayrollEntities.size() > 0) {
//                for (PayrollEsptDTO data : itPayrollEntities) {
//                    ImBiodataEntity biodataEntity = biodataDao.getById("nip",data.getNip());
//                    data.setTahunPajak(tahun);
//                    //jumlah2 jumlah tunj pph + tunj pph bonus
//                    data.setJumlah2(data.getJumlah2().add(payrollDao.getTunjanganPPhGajiBonusSetahun(tahun,data.getNip())));
//                    //jumlah4 belum tau
//                    data.setJumlah4(BigDecimal.ZERO);
//                    //jumlah5 belum tau
//                    data.setJumlah5(BigDecimal.ZERO);
//                    //jumlah6 belum tau
//                    data.setJumlah6(BigDecimal.ZERO);
//                    //bonus
//                    data.setJumlah7(payrollDao.getTotalBonusSetahun(tahun,data.getNip()));
//                    //bruto
//                    data.setJumlah8(data.getJumlah1().add(data.getJumlah2()).add(data.getJumlah3()).add(data.getJumlah4()).add(data.getJumlah5()).add(data.getJumlah6()).add(data.getJumlah7()));
//                    //bijab
//                    if ((CommonUtil.percentage(data.getJumlah8(), BigDecimal.valueOf(5))).compareTo(BigDecimal.valueOf(6000000))<1){
//                        data.setJumlah9(CommonUtil.percentage(data.getJumlah8(), BigDecimal.valueOf(5)));
//                    }else{
//                        data.setJumlah9(new BigDecimal(6000000));
//                    }
//                    //reduce
//                    data.setJumlah11(data.getJumlah9().add(data.getJumlah10()));
//                    //netto
//                    data.setJumlah12(data.getJumlah8().subtract(data.getJumlah11()));
//                    //jumlah 13 belum tau implementasinya
//                    data.setJumlah13(BigDecimal.ZERO);
//                    //jumlah 14 netto sesungguhnya
//                    data.setJumlah14(data.getJumlah12().add(data.getJumlah13()));
//                    //ptkp
//                    data.setJumlah15(getPtkp(data.getStatusPtkp(),Integer.parseInt(data.getJumlahTanggungan()),data.getJenisKelamin()));
//                    //pkp
//                    if (data.getJumlah14().compareTo(data.getJumlah15())<=0){
//                        data.setJumlah16(BigDecimal.ZERO);
//                    }else{
//                        data.setJumlah16(data.getJumlah14().subtract(data.getJumlah15()));
//                    }
//                    //pajak setahun
//                    data.setJumlah17(hitungPajakSetahunSimRs(data.getJumlah16(),biodataEntity.getNpwp()));
//                    //jumlah 18 belum tau implementasinya
//                    data.setJumlah18(BigDecimal.ZERO);
//                    // pajak setahun aslinya
//                    data.setJumlah19(data.getJumlah19().subtract(data.getJumlah18()));
//                    //pajak yang telah dipotong / dilunasi
//                    data.setJumlah20(payrollDao.getPPhGaji12Bulan(tahun,data.getNip()).add(payrollDao.getPPhGajiBonusSetahun(tahun,data.getNip())));
//                    //selisih
//                    data.setSelisih21(data.getJumlah20().subtract(data.getJumlah19()));
//                    //kurang bayar
//                    if (data.getSelisih21().compareTo(BigDecimal.ZERO)<0){
//                        data.setKurangBayar21(BigDecimal.ZERO);
//                    }else{
//                        data.setKurangBayar21(data.getSelisih21().subtract(data.getJumlah20()));
//                    }
//                    listOfResult.add(data);
//                }
//            }
//        }catch (HibernateException e) {
//            PayrollBoImpl.logger.error((Object)("[PayrollBoImpl.searchReportEsptSys] Error, " + e.getMessage()));
//            throw new GeneralBOException("Found problem , please inform to your admin...," + e.getMessage());
//        }
//        return listOfResult;
//    }




    @Override
    public void saveDelete(Payroll bean) throws GeneralBOException {

    }

    @Override
    public void saveEdit(Payroll bean) throws GeneralBOException {

    }

    @Override
    public Payroll saveAdd(Payroll bean) throws GeneralBOException {
        return null;
    }

    @Override
    public List<Payroll> getByCriteria(Payroll searchBean) throws GeneralBOException {
        return null;
    }

    @Override
    public List<Payroll> getAll() throws GeneralBOException {
        return null;
    }

    @Override
    public Long saveErrorMessage(String message, String moduleMethod) throws GeneralBOException {

        Long result = GenerateBoLog.generateBoLog(payrollDao, message, moduleMethod);

        return result;
    }
}
