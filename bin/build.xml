<?xml version="1.0" encoding="UTF-8"?>
<project name="neurix" default="usage" basedir="../">

    <!-- General properties -->
    <property environment="env"/>
    <property name="app.name" value="simrs"/>
    <property name="package.name" value="simrs"/>
    <property name="app.version" value="1.0"/>
    <property name="src.home" value="${basedir}/src"/>
    <property name="build" value="${basedir}/build"/>
    <property name="build.home" value="${build}/${app.name}"/>
    <property name="dist.home" value="${basedir}/dist"/>
    <property name="lib.home" value="${basedir}/lib"/>
    <property name="resources.home" value="${basedir}\resources"/>
    <property name="web.home" value="${basedir}/web"/>
    <property name="classes" value="${build.home}/WEB-INF/classes"/>
    <property name="tomcat.home.webapps" value="${env.CATALINA_HOME}/webapps"/>

    <!--<property name="tomcat.home.webapps" value="C:\tomcat\webapps"/>-->
    <!--<property name="tomcat.home.webapps" value="/opt/tomcat/webapps"/>-->

    <!-- Default Classpath for all targets -->
    <path id="classpath_default">
        <pathelement path="${classes}"/>

        <fileset dir="${lib.home}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- TARGET: USAGE , target will be executed -->
    <target name="usage">
        <echo message="TARGETS"/>
        <echo message="======="/>
        <echo message="clean"/>
        <echo message="prepare"/>
        <echo message="compile"/>
        <echo message="createWARfile"/>
        <echo message="deploy"/>
        <echo message="undeploy"/>
        <echo message="copyJSPnTransaction"/>
    </target>

    <!-- TARGET: CLEAN, to clean folder /build and /dist -->
    <target name="clean"
            description="Delete old build and dist directories">

        <delete dir="${build.home}"/>
        <delete dir="${dist.home}"/>

    </target>

    <!-- TARGET: PREPARE, to prepare and create folder as needed for project  -->
    <target name="prepare"
            depends="clean"
            description="Create build directories.">

        <!-- Create build directories as needed -->
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.home}/WEB-INF"/>
        <mkdir dir="${build.home}/WEB-INF/classes"/>
        <mkdir dir="${build.home}/WEB-INF/lib"/>
        <mkdir dir="${build.home}/WEB-INF/tld"/>
        <mkdir dir="${build.home}/WEB-INF/dtd"/>

        <!-- Create pages directories -->
        <mkdir dir="${build.home}/pages"/>

        <!-- Create dist directories -->
        <mkdir dir="${dist.home}"/>

        <!-- Copy libraries (.jar) -->
        <copy todir="${build.home}/WEB-INF/lib">
            <fileset dir="${lib.home}">
                <exclude name="j2ee.jar"/>
            </fileset>
        </copy>

        <!-- Copy Files: web content (jsp, images, and script) -->
        <copy todir="${build.home}/pages">
            <fileset dir="${web.home}/pages"/>
        </copy>

        <!-- Copy Files: web.xml,dwr.xml -->
        <copy file="${web.home}/WEB-INF/web.xml" todir="${build.home}/WEB-INF"/>
        <copy file="${resources.home}/commonconfig/dwr.xml" todir="${build.home}/WEB-INF"/>
        <copy todir="${build.home}/WEB-INF">
            <fileset dir="${web.home}/WEB-INF">
                <exclude name="${web.home}/WEB-INF/tld/**"/>
                <exclude name="${web.home}/WEB-INF/dtd/**"/>
            </fileset>
        </copy>

        <!-- Copy file index.jsp -->
        <copy file="${web.home}/index.jsp" todir="${build.home}"/>
        <copy file="${web.home}/accessDenied.jsp" todir="${build.home}"/>
        <copy file="${web.home}/loginFormUser.jsp" todir="${build.home}"/>
        <copy file="${web.home}/logoutFormUser.jsp" todir="${build.home}"/>
        <copy file="${web.home}/404.jsp" todir="${build.home}"/>
        <copy file="${web.home}/welcome.jsp" todir="${build.home}"/>
        <copy file="${web.home}/pages/mainMenu.jsp" todir="${build.home}/pages"/>

    </target>

    <!-- Compiler Flags -->
    <property name="compile.debug" value="true"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize" value="true"/>

    <!-- TARGET: COMPILE, to compile to java class -->
    <target name="compile"
            depends="prepare"
            description="Compile Java sources">

        <echo message="==================================================================="/>
        <echo message="Compiling Java source code to"/>
        <echo message="     ${classes}"/>
        <echo message="==================================================================="/>

        <!-- compile java to classes and store to folder /WEB-INF/classes -->
        <javac
                srcdir="${src.home}"
                destdir="${classes}"
                debug="${compile.debug}"
                deprecation="${compile.deprecation}"
                optimize="${compile.optimize}">
            <classpath refid="classpath_default"/>
        </javac>
    </target>

    <!-- TARGET: CREATE WAR FILE -->
    <target name="createWARfile"
            depends="compile"
            description="Create WAR file">

        <echo message="==================================================================="/>
        <echo message="Create Web Archive (WAR) in ${dist.home}"/>
        <echo message="==================================================================="/>

        <!--for ivelin project, validation struts not in validation.xml, but in each action class-->
        <!--<taskdef name="for" classname="net.sf.antcontrib.logic.ForTask" onerror="ignore"/>-->
        <!--<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>-->

        <!--&lt;!&ndash; get list of file in struts resource folder then copy file .propeties and .xml to correct struts action folder &ndash;&gt;-->
        <!--<for param="folder">-->
            <!--<path>-->
                <!--<dirset dir="${resources.home}">-->
                    <!--<exclude name="sshconfig"/>-->
                    <!--<exclude name="commonconfig"/>-->
                <!--</dirset>-->
            <!--</path>-->
            <!--<sequential>-->
                <!--<if>-->
                    <!--<not>-->
                        <!--<equals arg1="@{folder}" arg2="${resources.home}"/>-->
                    <!--</not>-->
                    <!--<then>-->

                        <!--<propertyregex property="folder.name"-->
                                       <!--override="yes"-->
                                       <!--input="@{folder}"-->
                                       <!--regexp="[A-Za-z]+\:\\[[\w]*\\]*\\resources\\([.]*)"-->
                                       <!--replace="\1"/>-->

                        <!--<var name="action.folder" unset="true"/>-->
                        <!--<available-->
                                <!--file="${basedir}\build\${app.name}\WEB-INF\classes\${package.name}\${folder.name}\action"-->
                                <!--type="dir" property="action.folder"/>-->

                        <!--<if>-->
                            <!--<isset property="action.folder"/>-->
                            <!--<then>-->
                                <!--<copy todir="${classes}/${package.name}/${folder.name}/action">-->
                                    <!--<fileset dir="@{folder}"/>-->
                                <!--</copy>-->
                            <!--</then>-->
                        <!--</if>-->

                    <!--</then>-->
                <!--</if>-->
            <!--</sequential>-->
        <!--</for>-->

        <!-- copy file .properties and .xml to correct folder (ex: struts.xml, log4j.properties ) -->
        <copy todir="${classes}">
            <fileset dir="${resources.home}/commonconfig">
                <exclude name="dwr.xml"/>
            </fileset>
        </copy>

        <!-- create folder struts-spring-hibernate config -->
        <mkdir dir="${classes}/sshconfig"/>

        <!-- copy file .xml struts-spring-hibernate folder -->
        <copy todir="${classes}/sshconfig">
            <fileset dir="${resources.home}/sshconfig"/>
        </copy>

        <!-- create file war -->
        <!-- for develompment, comment this, uncomment if integration test or production test -->
        <!--<jar jarfile="${dist.home}/${app.name}.war" basedir="${build.home}" index="true" compress="true"/>-->

    </target>

    <!-- TARGET: DEPLOY -->
    <target name="deploy"
            depends="createWARfile"
            description="Copy WAR file to app server webapps directory.">

        <echo message=""/>
        <echo message="==================================================================="/>
        <echo message="Deleting WAR file in webapps directory."/>
        <echo message="==================================================================="/>

        <!--<delete dir="${tomcat.home.webapps}/${app.name}.war"/>-->
        <delete dir="${tomcat.home.webapps}/${app.name}"/>

        <!--for develompment, comment this, uncomment if integration test or production test -->
        <!--<echo message=""/>-->
        <!--<echo message="==================================================================="/>-->
        <!--<echo message="Copying WAR file to app server webapps directory."/>-->
        <!--<echo message="==================================================================="/>-->
        <!--<copy file="${dist.home}/${app.name}.war" todir="${tomcat.home.webapps}"/>-->

        <!--for develompment only -->
        <echo message=""/>
        <echo message="==================================================================="/>
        <echo message="Copying web app files to app server webapps directory."/>
        <echo message="==================================================================="/>
        <copy todir="${tomcat.home.webapps}/${app.name}">
            <fileset dir="${build.home}"/>
        </copy>

    </target>

    <target name="copyJSPnTransaction"
            description="copy jsp files and model xml(s) to tomcat webapps">

        <!-- copy file .jsp to tomcat webapps -->
        <copy todir="${tomcat.home.webapps}/${app.name}/pages">
            <fileset dir="${web.home}/pages"/>
        </copy>

        <!-- copy file hibernate,struts, and spring *.xml -->
        <copy todir="${tomcat.home.webapps}/${app.name}/WEB-INF/classes/sshconfig">
            <fileset dir="${resources.home}/sshconfig"/>
        </copy>

        <!-- copy file .properties and .xml to support the setting framework -->
        <copy todir="${tomcat.home.webapps}/${app.name}/WEB-INF/classes">
            <fileset dir="${resources.home}/commonconfig">
                <exclude name="dwr.xml"/>
            </fileset>
        </copy>

        <copy file="${web.home}/index.jsp" todir="${tomcat.home.webapps}/${app.name}"/>
        <copy file="${web.home}/accessDenied.jsp" todir="${tomcat.home.webapps}/${app.name}"/>
        <copy file="${web.home}/loginFormUser.jsp" todir="${tomcat.home.webapps}/${app.name}"/>
        <copy file="${web.home}/logoutFormUser.jsp" todir="${tomcat.home.webapps}/${app.name}"/>
        <copy file="${web.home}/404.jsp" todir="${tomcat.home.webapps}/${app.name}"/>
        <copy file="${web.home}/welcome.jsp" todir="${tomcat.home.webapps}/${app.name}"/>
        <copy file="${web.home}/pages/mainMenu.jsp" todir="${build.home}/pages"/>

    </target>

    <target name="copyReport"
            description="copy jrxml and jasper files to tomcat webapps">

        <!-- copy file report (.jrxml) to tomcat webapps -->
        <copy todir="${tomcat.home.webapps}/${app.name}/pages/report">
            <fileset dir="${web.home}/pages/report"/>
        </copy>

    </target>

    <target name="undeploy"
            description="Remove WAR file from app server webapps directory.">
        <echo message="==================================================================="/>
        <echo message="Undeploying WAR file from app server webapps directory."/>
        <echo message="==================================================================="/>

        <delete dir="${tomcat.home.webapps}/${app.name}.war"/>
        <delete dir="${tomcat.home.webapps}/${app.name}"/>
    </target>

    <target name="create-jar-common"
            description="Create JAR file common">
        <tstamp>
            <format property="timestamp.isoformat" pattern="yyyy-mm-dd'T'HH:mm:ss" locale="en"/>
        </tstamp>

        <manifest file="${dist.home}/MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Built-On" value="${timestamp.isoformat}"/>
        </manifest>

        <jar destfile="${basedir}/target/jar-produce/struts2-jasperreports-plugin-2.3.16.3u.jar" index="true" manifest="${dist.home}/MANIFEST.MF">
            <fileset dir="${basedir}/target/jar-source"/>
        </jar>
    </target>
</project>